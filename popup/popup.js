var wS = (t, e) => () => (e || t((e = { exports: {} }).exports, e), e.exports);
var Qj = wS((In, Hn) => {
  (function () {
    const e = document.createElement("link").relList;
    if (e && e.supports && e.supports("modulepreload")) return;
    for (const i of document.querySelectorAll('link[rel="modulepreload"]'))
      r(i);
    new MutationObserver((i) => {
      for (const o of i)
        if (o.type === "childList")
          for (const s of o.addedNodes)
            s.tagName === "LINK" && s.rel === "modulepreload" && r(s);
    }).observe(document, { childList: !0, subtree: !0 });
    function n(i) {
      const o = {};
      return (
        i.integrity && (o.integrity = i.integrity),
        i.referrerPolicy && (o.referrerPolicy = i.referrerPolicy),
        i.crossOrigin === "use-credentials"
          ? (o.credentials = "include")
          : i.crossOrigin === "anonymous"
          ? (o.credentials = "omit")
          : (o.credentials = "same-origin"),
        o
      );
    }
    function r(i) {
      if (i.ep) return;
      i.ep = !0;
      const o = n(i);
      fetch(i.href, o);
    }
  })();
  var yo =
    typeof globalThis < "u"
      ? globalThis
      : typeof window < "u"
      ? window
      : typeof global < "u"
      ? global
      : typeof self < "u"
      ? self
      : {};
  function Bf(t) {
    return t &&
      t.__esModule &&
      Object.prototype.hasOwnProperty.call(t, "default")
      ? t.default
      : t;
  }
  var Db = { exports: {} };
  (function (t, e) {
    (function (n, r) {
      r(t);
    })(
      typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : yo,
      function (n) {
        var r, i;
        if (
          !(
            (i = (r = globalThis.chrome) == null ? void 0 : r.runtime) !=
              null && i.id
          )
        )
          throw new Error(
            "This script should only be loaded in a browser extension."
          );
        if (
          typeof globalThis.browser > "u" ||
          Object.getPrototypeOf(globalThis.browser) !== Object.prototype
        ) {
          const o = "The message port closed before a response was received.",
            s = (a) => {
              const l = {
                alarms: {
                  clear: { minArgs: 0, maxArgs: 1 },
                  clearAll: { minArgs: 0, maxArgs: 0 },
                  get: { minArgs: 0, maxArgs: 1 },
                  getAll: { minArgs: 0, maxArgs: 0 },
                },
                bookmarks: {
                  create: { minArgs: 1, maxArgs: 1 },
                  get: { minArgs: 1, maxArgs: 1 },
                  getChildren: { minArgs: 1, maxArgs: 1 },
                  getRecent: { minArgs: 1, maxArgs: 1 },
                  getSubTree: { minArgs: 1, maxArgs: 1 },
                  getTree: { minArgs: 0, maxArgs: 0 },
                  move: { minArgs: 2, maxArgs: 2 },
                  remove: { minArgs: 1, maxArgs: 1 },
                  removeTree: { minArgs: 1, maxArgs: 1 },
                  search: { minArgs: 1, maxArgs: 1 },
                  update: { minArgs: 2, maxArgs: 2 },
                },
                browserAction: {
                  disable: { minArgs: 0, maxArgs: 1, fallbackToNoCallback: !0 },
                  enable: { minArgs: 0, maxArgs: 1, fallbackToNoCallback: !0 },
                  getBadgeBackgroundColor: { minArgs: 1, maxArgs: 1 },
                  getBadgeText: { minArgs: 1, maxArgs: 1 },
                  getPopup: { minArgs: 1, maxArgs: 1 },
                  getTitle: { minArgs: 1, maxArgs: 1 },
                  openPopup: { minArgs: 0, maxArgs: 0 },
                  setBadgeBackgroundColor: {
                    minArgs: 1,
                    maxArgs: 1,
                    fallbackToNoCallback: !0,
                  },
                  setBadgeText: {
                    minArgs: 1,
                    maxArgs: 1,
                    fallbackToNoCallback: !0,
                  },
                  setIcon: { minArgs: 1, maxArgs: 1 },
                  setPopup: {
                    minArgs: 1,
                    maxArgs: 1,
                    fallbackToNoCallback: !0,
                  },
                  setTitle: {
                    minArgs: 1,
                    maxArgs: 1,
                    fallbackToNoCallback: !0,
                  },
                },
                browsingData: {
                  remove: { minArgs: 2, maxArgs: 2 },
                  removeCache: { minArgs: 1, maxArgs: 1 },
                  removeCookies: { minArgs: 1, maxArgs: 1 },
                  removeDownloads: { minArgs: 1, maxArgs: 1 },
                  removeFormData: { minArgs: 1, maxArgs: 1 },
                  removeHistory: { minArgs: 1, maxArgs: 1 },
                  removeLocalStorage: { minArgs: 1, maxArgs: 1 },
                  removePasswords: { minArgs: 1, maxArgs: 1 },
                  removePluginData: { minArgs: 1, maxArgs: 1 },
                  settings: { minArgs: 0, maxArgs: 0 },
                },
                commands: { getAll: { minArgs: 0, maxArgs: 0 } },
                contextMenus: {
                  remove: { minArgs: 1, maxArgs: 1 },
                  removeAll: { minArgs: 0, maxArgs: 0 },
                  update: { minArgs: 2, maxArgs: 2 },
                },
                cookies: {
                  get: { minArgs: 1, maxArgs: 1 },
                  getAll: { minArgs: 1, maxArgs: 1 },
                  getAllCookieStores: { minArgs: 0, maxArgs: 0 },
                  remove: { minArgs: 1, maxArgs: 1 },
                  set: { minArgs: 1, maxArgs: 1 },
                },
                devtools: {
                  inspectedWindow: {
                    eval: { minArgs: 1, maxArgs: 2, singleCallbackArg: !1 },
                  },
                  panels: {
                    create: { minArgs: 3, maxArgs: 3, singleCallbackArg: !0 },
                    elements: { createSidebarPane: { minArgs: 1, maxArgs: 1 } },
                  },
                },
                downloads: {
                  cancel: { minArgs: 1, maxArgs: 1 },
                  download: { minArgs: 1, maxArgs: 1 },
                  erase: { minArgs: 1, maxArgs: 1 },
                  getFileIcon: { minArgs: 1, maxArgs: 2 },
                  open: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                  pause: { minArgs: 1, maxArgs: 1 },
                  removeFile: { minArgs: 1, maxArgs: 1 },
                  resume: { minArgs: 1, maxArgs: 1 },
                  search: { minArgs: 1, maxArgs: 1 },
                  show: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                },
                extension: {
                  isAllowedFileSchemeAccess: { minArgs: 0, maxArgs: 0 },
                  isAllowedIncognitoAccess: { minArgs: 0, maxArgs: 0 },
                },
                history: {
                  addUrl: { minArgs: 1, maxArgs: 1 },
                  deleteAll: { minArgs: 0, maxArgs: 0 },
                  deleteRange: { minArgs: 1, maxArgs: 1 },
                  deleteUrl: { minArgs: 1, maxArgs: 1 },
                  getVisits: { minArgs: 1, maxArgs: 1 },
                  search: { minArgs: 1, maxArgs: 1 },
                },
                i18n: {
                  detectLanguage: { minArgs: 1, maxArgs: 1 },
                  getAcceptLanguages: { minArgs: 0, maxArgs: 0 },
                },
                identity: { launchWebAuthFlow: { minArgs: 1, maxArgs: 1 } },
                idle: { queryState: { minArgs: 1, maxArgs: 1 } },
                management: {
                  get: { minArgs: 1, maxArgs: 1 },
                  getAll: { minArgs: 0, maxArgs: 0 },
                  getSelf: { minArgs: 0, maxArgs: 0 },
                  setEnabled: { minArgs: 2, maxArgs: 2 },
                  uninstallSelf: { minArgs: 0, maxArgs: 1 },
                },
                notifications: {
                  clear: { minArgs: 1, maxArgs: 1 },
                  create: { minArgs: 1, maxArgs: 2 },
                  getAll: { minArgs: 0, maxArgs: 0 },
                  getPermissionLevel: { minArgs: 0, maxArgs: 0 },
                  update: { minArgs: 2, maxArgs: 2 },
                },
                pageAction: {
                  getPopup: { minArgs: 1, maxArgs: 1 },
                  getTitle: { minArgs: 1, maxArgs: 1 },
                  hide: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                  setIcon: { minArgs: 1, maxArgs: 1 },
                  setPopup: {
                    minArgs: 1,
                    maxArgs: 1,
                    fallbackToNoCallback: !0,
                  },
                  setTitle: {
                    minArgs: 1,
                    maxArgs: 1,
                    fallbackToNoCallback: !0,
                  },
                  show: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                },
                permissions: {
                  contains: { minArgs: 1, maxArgs: 1 },
                  getAll: { minArgs: 0, maxArgs: 0 },
                  remove: { minArgs: 1, maxArgs: 1 },
                  request: { minArgs: 1, maxArgs: 1 },
                },
                runtime: {
                  getBackgroundPage: { minArgs: 0, maxArgs: 0 },
                  getPlatformInfo: { minArgs: 0, maxArgs: 0 },
                  openOptionsPage: { minArgs: 0, maxArgs: 0 },
                  requestUpdateCheck: { minArgs: 0, maxArgs: 0 },
                  sendMessage: { minArgs: 1, maxArgs: 3 },
                  sendNativeMessage: { minArgs: 2, maxArgs: 2 },
                  setUninstallURL: { minArgs: 1, maxArgs: 1 },
                },
                sessions: {
                  getDevices: { minArgs: 0, maxArgs: 1 },
                  getRecentlyClosed: { minArgs: 0, maxArgs: 1 },
                  restore: { minArgs: 0, maxArgs: 1 },
                },
                storage: {
                  local: {
                    clear: { minArgs: 0, maxArgs: 0 },
                    get: { minArgs: 0, maxArgs: 1 },
                    getBytesInUse: { minArgs: 0, maxArgs: 1 },
                    remove: { minArgs: 1, maxArgs: 1 },
                    set: { minArgs: 1, maxArgs: 1 },
                  },
                  managed: {
                    get: { minArgs: 0, maxArgs: 1 },
                    getBytesInUse: { minArgs: 0, maxArgs: 1 },
                  },
                  sync: {
                    clear: { minArgs: 0, maxArgs: 0 },
                    get: { minArgs: 0, maxArgs: 1 },
                    getBytesInUse: { minArgs: 0, maxArgs: 1 },
                    remove: { minArgs: 1, maxArgs: 1 },
                    set: { minArgs: 1, maxArgs: 1 },
                  },
                },
                tabs: {
                  captureVisibleTab: { minArgs: 0, maxArgs: 2 },
                  create: { minArgs: 1, maxArgs: 1 },
                  detectLanguage: { minArgs: 0, maxArgs: 1 },
                  discard: { minArgs: 0, maxArgs: 1 },
                  duplicate: { minArgs: 1, maxArgs: 1 },
                  executeScript: { minArgs: 1, maxArgs: 2 },
                  get: { minArgs: 1, maxArgs: 1 },
                  getCurrent: { minArgs: 0, maxArgs: 0 },
                  getZoom: { minArgs: 0, maxArgs: 1 },
                  getZoomSettings: { minArgs: 0, maxArgs: 1 },
                  goBack: { minArgs: 0, maxArgs: 1 },
                  goForward: { minArgs: 0, maxArgs: 1 },
                  highlight: { minArgs: 1, maxArgs: 1 },
                  insertCSS: { minArgs: 1, maxArgs: 2 },
                  move: { minArgs: 2, maxArgs: 2 },
                  query: { minArgs: 1, maxArgs: 1 },
                  reload: { minArgs: 0, maxArgs: 2 },
                  remove: { minArgs: 1, maxArgs: 1 },
                  removeCSS: { minArgs: 1, maxArgs: 2 },
                  sendMessage: { minArgs: 2, maxArgs: 3 },
                  setZoom: { minArgs: 1, maxArgs: 2 },
                  setZoomSettings: { minArgs: 1, maxArgs: 2 },
                  update: { minArgs: 1, maxArgs: 2 },
                },
                topSites: { get: { minArgs: 0, maxArgs: 0 } },
                webNavigation: {
                  getAllFrames: { minArgs: 1, maxArgs: 1 },
                  getFrame: { minArgs: 1, maxArgs: 1 },
                },
                webRequest: {
                  handlerBehaviorChanged: { minArgs: 0, maxArgs: 0 },
                },
                windows: {
                  create: { minArgs: 0, maxArgs: 1 },
                  get: { minArgs: 1, maxArgs: 2 },
                  getAll: { minArgs: 0, maxArgs: 1 },
                  getCurrent: { minArgs: 0, maxArgs: 1 },
                  getLastFocused: { minArgs: 0, maxArgs: 1 },
                  remove: { minArgs: 1, maxArgs: 1 },
                  update: { minArgs: 2, maxArgs: 2 },
                },
              };
              if (Object.keys(l).length === 0)
                throw new Error(
                  "api-metadata.json has not been included in browser-polyfill"
                );
              class c extends WeakMap {
                constructor(y, T = void 0) {
                  super(T), (this.createItem = y);
                }
                get(y) {
                  return (
                    this.has(y) || this.set(y, this.createItem(y)), super.get(y)
                  );
                }
              }
              const u = (v) =>
                  v && typeof v == "object" && typeof v.then == "function",
                d =
                  (v, y) =>
                  (...T) => {
                    a.runtime.lastError
                      ? v.reject(new Error(a.runtime.lastError.message))
                      : y.singleCallbackArg ||
                        (T.length <= 1 && y.singleCallbackArg !== !1)
                      ? v.resolve(T[0])
                      : v.resolve(T);
                  },
                h = (v) => (v == 1 ? "argument" : "arguments"),
                g = (v, y) =>
                  function (A, ...I) {
                    if (I.length < y.minArgs)
                      throw new Error(
                        `Expected at least ${y.minArgs} ${h(
                          y.minArgs
                        )} for ${v}(), got ${I.length}`
                      );
                    if (I.length > y.maxArgs)
                      throw new Error(
                        `Expected at most ${y.maxArgs} ${h(
                          y.maxArgs
                        )} for ${v}(), got ${I.length}`
                      );
                    return new Promise((L, j) => {
                      if (y.fallbackToNoCallback)
                        try {
                          A[v](...I, d({ resolve: L, reject: j }, y));
                        } catch (k) {
                          console.warn(
                            `${v} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,
                            k
                          ),
                            A[v](...I),
                            (y.fallbackToNoCallback = !1),
                            (y.noCallback = !0),
                            L();
                        }
                      else
                        y.noCallback
                          ? (A[v](...I), L())
                          : A[v](...I, d({ resolve: L, reject: j }, y));
                    });
                  },
                f = (v, y, T) =>
                  new Proxy(y, {
                    apply(A, I, L) {
                      return T.call(I, v, ...L);
                    },
                  });
              let p = Function.call.bind(Object.prototype.hasOwnProperty);
              const b = (v, y = {}, T = {}) => {
                  let A = Object.create(null),
                    I = {
                      has(j, k) {
                        return k in v || k in A;
                      },
                      get(j, k, O) {
                        if (k in A) return A[k];
                        if (!(k in v)) return;
                        let D = v[k];
                        if (typeof D == "function")
                          if (typeof y[k] == "function") D = f(v, v[k], y[k]);
                          else if (p(T, k)) {
                            let Y = g(k, T[k]);
                            D = f(v, v[k], Y);
                          } else D = D.bind(v);
                        else if (
                          typeof D == "object" &&
                          D !== null &&
                          (p(y, k) || p(T, k))
                        )
                          D = b(D, y[k], T[k]);
                        else if (p(T, "*")) D = b(D, y[k], T["*"]);
                        else
                          return (
                            Object.defineProperty(A, k, {
                              configurable: !0,
                              enumerable: !0,
                              get() {
                                return v[k];
                              },
                              set(Y) {
                                v[k] = Y;
                              },
                            }),
                            D
                          );
                        return (A[k] = D), D;
                      },
                      set(j, k, O, D) {
                        return k in A ? (A[k] = O) : (v[k] = O), !0;
                      },
                      defineProperty(j, k, O) {
                        return Reflect.defineProperty(A, k, O);
                      },
                      deleteProperty(j, k) {
                        return Reflect.deleteProperty(A, k);
                      },
                    },
                    L = Object.create(v);
                  return new Proxy(L, I);
                },
                m = (v) => ({
                  addListener(y, T, ...A) {
                    y.addListener(v.get(T), ...A);
                  },
                  hasListener(y, T) {
                    return y.hasListener(v.get(T));
                  },
                  removeListener(y, T) {
                    y.removeListener(v.get(T));
                  },
                }),
                _ = new c((v) =>
                  typeof v != "function"
                    ? v
                    : function (T) {
                        const A = b(
                          T,
                          {},
                          { getContent: { minArgs: 0, maxArgs: 0 } }
                        );
                        v(A);
                      }
                ),
                R = new c((v) =>
                  typeof v != "function"
                    ? v
                    : function (T, A, I) {
                        let L = !1,
                          j,
                          k = new Promise((se) => {
                            j = function (de) {
                              (L = !0), se(de);
                            };
                          }),
                          O;
                        try {
                          O = v(T, A, j);
                        } catch (se) {
                          O = Promise.reject(se);
                        }
                        const D = O !== !0 && u(O);
                        if (O !== !0 && !D && !L) return !1;
                        const Y = (se) => {
                          se.then(
                            (de) => {
                              I(de);
                            },
                            (de) => {
                              let fe;
                              de &&
                              (de instanceof Error ||
                                typeof de.message == "string")
                                ? (fe = de.message)
                                : (fe = "An unexpected error occurred"),
                                I({
                                  __mozWebExtensionPolyfillReject__: !0,
                                  message: fe,
                                });
                            }
                          ).catch((de) => {
                            console.error(
                              "Failed to send onMessage rejected reply",
                              de
                            );
                          });
                        };
                        return Y(D ? O : k), !0;
                      }
                ),
                S = ({ reject: v, resolve: y }, T) => {
                  a.runtime.lastError
                    ? a.runtime.lastError.message === o
                      ? y()
                      : v(new Error(a.runtime.lastError.message))
                    : T && T.__mozWebExtensionPolyfillReject__
                    ? v(new Error(T.message))
                    : y(T);
                },
                x = (v, y, T, ...A) => {
                  if (A.length < y.minArgs)
                    throw new Error(
                      `Expected at least ${y.minArgs} ${h(
                        y.minArgs
                      )} for ${v}(), got ${A.length}`
                    );
                  if (A.length > y.maxArgs)
                    throw new Error(
                      `Expected at most ${y.maxArgs} ${h(
                        y.maxArgs
                      )} for ${v}(), got ${A.length}`
                    );
                  return new Promise((I, L) => {
                    const j = S.bind(null, { resolve: I, reject: L });
                    A.push(j), T.sendMessage(...A);
                  });
                },
                E = {
                  devtools: { network: { onRequestFinished: m(_) } },
                  runtime: {
                    onMessage: m(R),
                    onMessageExternal: m(R),
                    sendMessage: x.bind(null, "sendMessage", {
                      minArgs: 1,
                      maxArgs: 3,
                    }),
                  },
                  tabs: {
                    sendMessage: x.bind(null, "sendMessage", {
                      minArgs: 2,
                      maxArgs: 3,
                    }),
                  },
                },
                w = {
                  clear: { minArgs: 1, maxArgs: 1 },
                  get: { minArgs: 1, maxArgs: 1 },
                  set: { minArgs: 1, maxArgs: 1 },
                };
              return (
                (l.privacy = {
                  network: { "*": w },
                  services: { "*": w },
                  websites: { "*": w },
                }),
                b(a, E, l)
              );
            };
          n.exports = s(chrome);
        } else n.exports = globalThis.browser;
      }
    );
  })(Db);
  var SS = Db.exports;
  const wt = Bf(SS);
  /**
   * @vue/shared v3.4.15
   * (c) 2018-present Yuxi (Evan) You and Vue contributors
   * @license MIT
   **/ function Nf(t, e) {
    const n = new Set(t.split(","));
    return e ? (r) => n.has(r.toLowerCase()) : (r) => n.has(r);
  }
  const Nt = {},
    _s = [],
    tr = () => {},
    ES = () => !1,
    _u = (t) =>
      t.charCodeAt(0) === 111 &&
      t.charCodeAt(1) === 110 &&
      (t.charCodeAt(2) > 122 || t.charCodeAt(2) < 97),
    Hf = (t) => t.startsWith("onUpdate:"),
    sn = Object.assign,
    Wf = (t, e) => {
      const n = t.indexOf(e);
      n > -1 && t.splice(n, 1);
    },
    RS = Object.prototype.hasOwnProperty,
    ct = (t, e) => RS.call(t, e),
    Je = Array.isArray,
    ws = (t) => wu(t) === "[object Map]",
    zb = (t) => wu(t) === "[object Set]",
    nt = (t) => typeof t == "function",
    Jt = (t) => typeof t == "string",
    Ks = (t) => typeof t == "symbol",
    zt = (t) => t !== null && typeof t == "object",
    Fb = (t) => (zt(t) || nt(t)) && nt(t.then) && nt(t.catch),
    Bb = Object.prototype.toString,
    wu = (t) => Bb.call(t),
    TS = (t) => wu(t).slice(8, -1),
    Nb = (t) => wu(t) === "[object Object]",
    jf = (t) =>
      Jt(t) && t !== "NaN" && t[0] !== "-" && "" + parseInt(t, 10) === t,
    kc = Nf(
      ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
    ),
    Su = (t) => {
      const e = Object.create(null);
      return (n) => e[n] || (e[n] = t(n));
    },
    PS = /-(\w)/g,
    Fr = Su((t) => t.replace(PS, (e, n) => (n ? n.toUpperCase() : ""))),
    AS = /\B([A-Z])/g,
    Ys = Su((t) => t.replace(AS, "-$1").toLowerCase()),
    Eu = Su((t) => t.charAt(0).toUpperCase() + t.slice(1)),
    kd = Su((t) => (t ? `on${Eu(t)}` : "")),
    ji = (t, e) => !Object.is(t, e),
    Id = (t, e) => {
      for (let n = 0; n < t.length; n++) t[n](e);
    },
    Hc = (t, e, n) => {
      Object.defineProperty(t, e, {
        configurable: !0,
        enumerable: !1,
        value: n,
      });
    },
    kS = (t) => {
      const e = parseFloat(t);
      return isNaN(e) ? t : e;
    },
    IS = (t) => {
      const e = Jt(t) ? Number(t) : NaN;
      return isNaN(e) ? t : e;
    };
  let Bp;
  const Hb = () =>
    Bp ||
    (Bp =
      typeof globalThis < "u"
        ? globalThis
        : typeof self < "u"
        ? self
        : typeof window < "u"
        ? window
        : typeof global < "u"
        ? global
        : {});
  function Ru(t) {
    if (Je(t)) {
      const e = {};
      for (let n = 0; n < t.length; n++) {
        const r = t[n],
          i = Jt(r) ? $S(r) : Ru(r);
        if (i) for (const o in i) e[o] = i[o];
      }
      return e;
    } else if (Jt(t) || zt(t)) return t;
  }
  const OS = /;(?![^(]*\))/g,
    MS = /:([^]+)/,
    LS = /\/\*[^]*?\*\//g;
  function $S(t) {
    const e = {};
    return (
      t
        .replace(LS, "")
        .split(OS)
        .forEach((n) => {
          if (n) {
            const r = n.split(MS);
            r.length > 1 && (e[r[0].trim()] = r[1].trim());
          }
        }),
      e
    );
  }
  function Uf(t) {
    let e = "";
    if (Jt(t)) e = t;
    else if (Je(t))
      for (let n = 0; n < t.length; n++) {
        const r = Uf(t[n]);
        r && (e += r + " ");
      }
    else if (zt(t)) for (const n in t) t[n] && (e += n + " ");
    return e.trim();
  }
  const DS =
      "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",
    zS = Nf(DS);
  function Wb(t) {
    return !!t || t === "";
  }
  const be = (t) =>
      Jt(t)
        ? t
        : t == null
        ? ""
        : Je(t) || (zt(t) && (t.toString === Bb || !nt(t.toString)))
        ? JSON.stringify(t, jb, 2)
        : String(t),
    jb = (t, e) =>
      e && e.__v_isRef
        ? jb(t, e.value)
        : ws(e)
        ? {
            [`Map(${e.size})`]: [...e.entries()].reduce(
              (n, [r, i], o) => ((n[Od(r, o) + " =>"] = i), n),
              {}
            ),
          }
        : zb(e)
        ? { [`Set(${e.size})`]: [...e.values()].map((n) => Od(n)) }
        : Ks(e)
        ? Od(e)
        : zt(e) && !Je(e) && !Nb(e)
        ? String(e)
        : e,
    Od = (t, e = "") => {
      var n;
      return Ks(t) ? `Symbol(${(n = t.description) != null ? n : e})` : t;
    };
  /**
   * @vue/reactivity v3.4.15
   * (c) 2018-present Yuxi (Evan) You and Vue contributors
   * @license MIT
   **/ let Gn;
  class Ub {
    constructor(e = !1) {
      (this.detached = e),
        (this._active = !0),
        (this.effects = []),
        (this.cleanups = []),
        (this.parent = Gn),
        !e &&
          Gn &&
          (this.index = (Gn.scopes || (Gn.scopes = [])).push(this) - 1);
    }
    get active() {
      return this._active;
    }
    run(e) {
      if (this._active) {
        const n = Gn;
        try {
          return (Gn = this), e();
        } finally {
          Gn = n;
        }
      }
    }
    on() {
      Gn = this;
    }
    off() {
      Gn = this.parent;
    }
    stop(e) {
      if (this._active) {
        let n, r;
        for (n = 0, r = this.effects.length; n < r; n++) this.effects[n].stop();
        for (n = 0, r = this.cleanups.length; n < r; n++) this.cleanups[n]();
        if (this.scopes)
          for (n = 0, r = this.scopes.length; n < r; n++)
            this.scopes[n].stop(!0);
        if (!this.detached && this.parent && !e) {
          const i = this.parent.scopes.pop();
          i &&
            i !== this &&
            ((this.parent.scopes[this.index] = i), (i.index = this.index));
        }
        (this.parent = void 0), (this._active = !1);
      }
    }
  }
  function Vb(t) {
    return new Ub(t);
  }
  function FS(t, e = Gn) {
    e && e.active && e.effects.push(t);
  }
  function Gb() {
    return Gn;
  }
  function BS(t) {
    Gn && Gn.cleanups.push(t);
  }
  let Io;
  class Vf {
    constructor(e, n, r, i) {
      (this.fn = e),
        (this.trigger = n),
        (this.scheduler = r),
        (this.active = !0),
        (this.deps = []),
        (this._dirtyLevel = 2),
        (this._trackId = 0),
        (this._runnings = 0),
        (this._shouldSchedule = !1),
        (this._depsLength = 0),
        FS(this, i);
    }
    get dirty() {
      if (this._dirtyLevel === 1) {
        Bo();
        for (let e = 0; e < this._depsLength; e++) {
          const n = this.deps[e];
          if (n.computed && (NS(n.computed), this._dirtyLevel >= 2)) break;
        }
        this._dirtyLevel < 2 && (this._dirtyLevel = 0), No();
      }
      return this._dirtyLevel >= 2;
    }
    set dirty(e) {
      this._dirtyLevel = e ? 2 : 0;
    }
    run() {
      if (((this._dirtyLevel = 0), !this.active)) return this.fn();
      let e = Bi,
        n = Io;
      try {
        return (Bi = !0), (Io = this), this._runnings++, Np(this), this.fn();
      } finally {
        Hp(this), this._runnings--, (Io = n), (Bi = e);
      }
    }
    stop() {
      var e;
      this.active &&
        (Np(this),
        Hp(this),
        (e = this.onStop) == null || e.call(this),
        (this.active = !1));
    }
  }
  function NS(t) {
    return t.value;
  }
  function Np(t) {
    t._trackId++, (t._depsLength = 0);
  }
  function Hp(t) {
    if (t.deps && t.deps.length > t._depsLength) {
      for (let e = t._depsLength; e < t.deps.length; e++) Xb(t.deps[e], t);
      t.deps.length = t._depsLength;
    }
  }
  function Xb(t, e) {
    const n = t.get(e);
    n !== void 0 &&
      e._trackId !== n &&
      (t.delete(e), t.size === 0 && t.cleanup());
  }
  let Bi = !0,
    $h = 0;
  const Kb = [];
  function Bo() {
    Kb.push(Bi), (Bi = !1);
  }
  function No() {
    const t = Kb.pop();
    Bi = t === void 0 ? !0 : t;
  }
  function Gf() {
    $h++;
  }
  function Xf() {
    for ($h--; !$h && Dh.length; ) Dh.shift()();
  }
  function Yb(t, e, n) {
    if (e.get(t) !== t._trackId) {
      e.set(t, t._trackId);
      const r = t.deps[t._depsLength];
      r !== e
        ? (r && Xb(r, t), (t.deps[t._depsLength++] = e))
        : t._depsLength++;
    }
  }
  const Dh = [];
  function qb(t, e, n) {
    Gf();
    for (const r of t.keys())
      if (r._dirtyLevel < e && t.get(r) === r._trackId) {
        const i = r._dirtyLevel;
        (r._dirtyLevel = e), i === 0 && ((r._shouldSchedule = !0), r.trigger());
      }
    Zb(t), Xf();
  }
  function Zb(t) {
    for (const e of t.keys())
      e.scheduler &&
        e._shouldSchedule &&
        (!e._runnings || e.allowRecurse) &&
        t.get(e) === e._trackId &&
        ((e._shouldSchedule = !1), Dh.push(e.scheduler));
  }
  const Jb = (t, e) => {
      const n = new Map();
      return (n.cleanup = t), (n.computed = e), n;
    },
    Wc = new WeakMap(),
    Oo = Symbol(""),
    zh = Symbol("");
  function Wn(t, e, n) {
    if (Bi && Io) {
      let r = Wc.get(t);
      r || Wc.set(t, (r = new Map()));
      let i = r.get(n);
      i || r.set(n, (i = Jb(() => r.delete(n)))), Yb(Io, i);
    }
  }
  function qr(t, e, n, r, i, o) {
    const s = Wc.get(t);
    if (!s) return;
    let a = [];
    if (e === "clear") a = [...s.values()];
    else if (n === "length" && Je(t)) {
      const l = Number(r);
      s.forEach((c, u) => {
        (u === "length" || (!Ks(u) && u >= l)) && a.push(c);
      });
    } else
      switch ((n !== void 0 && a.push(s.get(n)), e)) {
        case "add":
          Je(t)
            ? jf(n) && a.push(s.get("length"))
            : (a.push(s.get(Oo)), ws(t) && a.push(s.get(zh)));
          break;
        case "delete":
          Je(t) || (a.push(s.get(Oo)), ws(t) && a.push(s.get(zh)));
          break;
        case "set":
          ws(t) && a.push(s.get(Oo));
          break;
      }
    Gf();
    for (const l of a) l && qb(l, 2);
    Xf();
  }
  function HS(t, e) {
    var n;
    return (n = Wc.get(t)) == null ? void 0 : n.get(e);
  }
  const WS = Nf("__proto__,__v_isRef,__isVue"),
    Qb = new Set(
      Object.getOwnPropertyNames(Symbol)
        .filter((t) => t !== "arguments" && t !== "caller")
        .map((t) => Symbol[t])
        .filter(Ks)
    ),
    Wp = jS();
  function jS() {
    const t = {};
    return (
      ["includes", "indexOf", "lastIndexOf"].forEach((e) => {
        t[e] = function (...n) {
          const r = De(this);
          for (let o = 0, s = this.length; o < s; o++) Wn(r, "get", o + "");
          const i = r[e](...n);
          return i === -1 || i === !1 ? r[e](...n.map(De)) : i;
        };
      }),
      ["push", "pop", "shift", "unshift", "splice"].forEach((e) => {
        t[e] = function (...n) {
          Bo(), Gf();
          const r = De(this)[e].apply(this, n);
          return Xf(), No(), r;
        };
      }),
      t
    );
  }
  function US(t) {
    const e = De(this);
    return Wn(e, "has", t), e.hasOwnProperty(t);
  }
  class e1 {
    constructor(e = !1, n = !1) {
      (this._isReadonly = e), (this._shallow = n);
    }
    get(e, n, r) {
      const i = this._isReadonly,
        o = this._shallow;
      if (n === "__v_isReactive") return !i;
      if (n === "__v_isReadonly") return i;
      if (n === "__v_isShallow") return o;
      if (n === "__v_raw")
        return r === (i ? (o ? rE : i1) : o ? r1 : n1).get(e) ||
          Object.getPrototypeOf(e) === Object.getPrototypeOf(r)
          ? e
          : void 0;
      const s = Je(e);
      if (!i) {
        if (s && ct(Wp, n)) return Reflect.get(Wp, n, r);
        if (n === "hasOwnProperty") return US;
      }
      const a = Reflect.get(e, n, r);
      return (Ks(n) ? Qb.has(n) : WS(n)) || (i || Wn(e, "get", n), o)
        ? a
        : xe(a)
        ? s && jf(n)
          ? a
          : a.value
        : zt(a)
        ? i
          ? ti(a)
          : Zi(a)
        : a;
    }
  }
  class t1 extends e1 {
    constructor(e = !1) {
      super(!1, e);
    }
    set(e, n, r, i) {
      let o = e[n];
      if (!this._shallow) {
        const l = Os(o);
        if (
          (!jc(r) && !Os(r) && ((o = De(o)), (r = De(r))),
          !Je(e) && xe(o) && !xe(r))
        )
          return l ? !1 : ((o.value = r), !0);
      }
      const s = Je(e) && jf(n) ? Number(n) < e.length : ct(e, n),
        a = Reflect.set(e, n, r, i);
      return (
        e === De(i) &&
          (s ? ji(r, o) && qr(e, "set", n, r) : qr(e, "add", n, r)),
        a
      );
    }
    deleteProperty(e, n) {
      const r = ct(e, n);
      e[n];
      const i = Reflect.deleteProperty(e, n);
      return i && r && qr(e, "delete", n, void 0), i;
    }
    has(e, n) {
      const r = Reflect.has(e, n);
      return (!Ks(n) || !Qb.has(n)) && Wn(e, "has", n), r;
    }
    ownKeys(e) {
      return Wn(e, "iterate", Je(e) ? "length" : Oo), Reflect.ownKeys(e);
    }
  }
  class VS extends e1 {
    constructor(e = !1) {
      super(!0, e);
    }
    set(e, n) {
      return !0;
    }
    deleteProperty(e, n) {
      return !0;
    }
  }
  const GS = new t1(),
    XS = new VS(),
    KS = new t1(!0),
    Kf = (t) => t,
    Tu = (t) => Reflect.getPrototypeOf(t);
  function Kl(t, e, n = !1, r = !1) {
    t = t.__v_raw;
    const i = De(t),
      o = De(e);
    n || (ji(e, o) && Wn(i, "get", e), Wn(i, "get", o));
    const { has: s } = Tu(i),
      a = r ? Kf : n ? Zf : Ga;
    if (s.call(i, e)) return a(t.get(e));
    if (s.call(i, o)) return a(t.get(o));
    t !== i && t.get(e);
  }
  function Yl(t, e = !1) {
    const n = this.__v_raw,
      r = De(n),
      i = De(t);
    return (
      e || (ji(t, i) && Wn(r, "has", t), Wn(r, "has", i)),
      t === i ? n.has(t) : n.has(t) || n.has(i)
    );
  }
  function ql(t, e = !1) {
    return (
      (t = t.__v_raw), !e && Wn(De(t), "iterate", Oo), Reflect.get(t, "size", t)
    );
  }
  function jp(t) {
    t = De(t);
    const e = De(this);
    return Tu(e).has.call(e, t) || (e.add(t), qr(e, "add", t, t)), this;
  }
  function Up(t, e) {
    e = De(e);
    const n = De(this),
      { has: r, get: i } = Tu(n);
    let o = r.call(n, t);
    o || ((t = De(t)), (o = r.call(n, t)));
    const s = i.call(n, t);
    return (
      n.set(t, e), o ? ji(e, s) && qr(n, "set", t, e) : qr(n, "add", t, e), this
    );
  }
  function Vp(t) {
    const e = De(this),
      { has: n, get: r } = Tu(e);
    let i = n.call(e, t);
    i || ((t = De(t)), (i = n.call(e, t))), r && r.call(e, t);
    const o = e.delete(t);
    return i && qr(e, "delete", t, void 0), o;
  }
  function Gp() {
    const t = De(this),
      e = t.size !== 0,
      n = t.clear();
    return e && qr(t, "clear", void 0, void 0), n;
  }
  function Zl(t, e) {
    return function (r, i) {
      const o = this,
        s = o.__v_raw,
        a = De(s),
        l = e ? Kf : t ? Zf : Ga;
      return (
        !t && Wn(a, "iterate", Oo),
        s.forEach((c, u) => r.call(i, l(c), l(u), o))
      );
    };
  }
  function Jl(t, e, n) {
    return function (...r) {
      const i = this.__v_raw,
        o = De(i),
        s = ws(o),
        a = t === "entries" || (t === Symbol.iterator && s),
        l = t === "keys" && s,
        c = i[t](...r),
        u = n ? Kf : e ? Zf : Ga;
      return (
        !e && Wn(o, "iterate", l ? zh : Oo),
        {
          next() {
            const { value: d, done: h } = c.next();
            return h
              ? { value: d, done: h }
              : { value: a ? [u(d[0]), u(d[1])] : u(d), done: h };
          },
          [Symbol.iterator]() {
            return this;
          },
        }
      );
    };
  }
  function mi(t) {
    return function (...e) {
      return t === "delete" ? !1 : t === "clear" ? void 0 : this;
    };
  }
  function YS() {
    const t = {
        get(o) {
          return Kl(this, o);
        },
        get size() {
          return ql(this);
        },
        has: Yl,
        add: jp,
        set: Up,
        delete: Vp,
        clear: Gp,
        forEach: Zl(!1, !1),
      },
      e = {
        get(o) {
          return Kl(this, o, !1, !0);
        },
        get size() {
          return ql(this);
        },
        has: Yl,
        add: jp,
        set: Up,
        delete: Vp,
        clear: Gp,
        forEach: Zl(!1, !0),
      },
      n = {
        get(o) {
          return Kl(this, o, !0);
        },
        get size() {
          return ql(this, !0);
        },
        has(o) {
          return Yl.call(this, o, !0);
        },
        add: mi("add"),
        set: mi("set"),
        delete: mi("delete"),
        clear: mi("clear"),
        forEach: Zl(!0, !1),
      },
      r = {
        get(o) {
          return Kl(this, o, !0, !0);
        },
        get size() {
          return ql(this, !0);
        },
        has(o) {
          return Yl.call(this, o, !0);
        },
        add: mi("add"),
        set: mi("set"),
        delete: mi("delete"),
        clear: mi("clear"),
        forEach: Zl(!0, !0),
      };
    return (
      ["keys", "values", "entries", Symbol.iterator].forEach((o) => {
        (t[o] = Jl(o, !1, !1)),
          (n[o] = Jl(o, !0, !1)),
          (e[o] = Jl(o, !1, !0)),
          (r[o] = Jl(o, !0, !0));
      }),
      [t, n, e, r]
    );
  }
  const [qS, ZS, JS, QS] = YS();
  function Yf(t, e) {
    const n = e ? (t ? QS : JS) : t ? ZS : qS;
    return (r, i, o) =>
      i === "__v_isReactive"
        ? !t
        : i === "__v_isReadonly"
        ? t
        : i === "__v_raw"
        ? r
        : Reflect.get(ct(n, i) && i in r ? n : r, i, o);
  }
  const eE = { get: Yf(!1, !1) },
    tE = { get: Yf(!1, !0) },
    nE = { get: Yf(!0, !1) },
    n1 = new WeakMap(),
    r1 = new WeakMap(),
    i1 = new WeakMap(),
    rE = new WeakMap();
  function iE(t) {
    switch (t) {
      case "Object":
      case "Array":
        return 1;
      case "Map":
      case "Set":
      case "WeakMap":
      case "WeakSet":
        return 2;
      default:
        return 0;
    }
  }
  function oE(t) {
    return t.__v_skip || !Object.isExtensible(t) ? 0 : iE(TS(t));
  }
  function Zi(t) {
    return Os(t) ? t : qf(t, !1, GS, eE, n1);
  }
  function o1(t) {
    return qf(t, !1, KS, tE, r1);
  }
  function ti(t) {
    return qf(t, !0, XS, nE, i1);
  }
  function qf(t, e, n, r, i) {
    if (!zt(t) || (t.__v_raw && !(e && t.__v_isReactive))) return t;
    const o = i.get(t);
    if (o) return o;
    const s = oE(t);
    if (s === 0) return t;
    const a = new Proxy(t, s === 2 ? r : n);
    return i.set(t, a), a;
  }
  function Zr(t) {
    return Os(t) ? Zr(t.__v_raw) : !!(t && t.__v_isReactive);
  }
  function Os(t) {
    return !!(t && t.__v_isReadonly);
  }
  function jc(t) {
    return !!(t && t.__v_isShallow);
  }
  function s1(t) {
    return Zr(t) || Os(t);
  }
  function De(t) {
    const e = t && t.__v_raw;
    return e ? De(e) : t;
  }
  function Ms(t) {
    return Hc(t, "__v_skip", !0), t;
  }
  const Ga = (t) => (zt(t) ? Zi(t) : t),
    Zf = (t) => (zt(t) ? ti(t) : t);
  class a1 {
    constructor(e, n, r, i) {
      (this._setter = n),
        (this.dep = void 0),
        (this.__v_isRef = !0),
        (this.__v_isReadonly = !1),
        (this.effect = new Vf(
          () => e(this._value),
          () => Ic(this, 1),
          () => this.dep && Zb(this.dep)
        )),
        (this.effect.computed = this),
        (this.effect.active = this._cacheable = !i),
        (this.__v_isReadonly = r);
    }
    get value() {
      const e = De(this);
      return (
        (!e._cacheable || e.effect.dirty) &&
          ji(e._value, (e._value = e.effect.run())) &&
          Ic(e, 2),
        l1(e),
        e.effect._dirtyLevel >= 1 && Ic(e, 1),
        e._value
      );
    }
    set value(e) {
      this._setter(e);
    }
    get _dirty() {
      return this.effect.dirty;
    }
    set _dirty(e) {
      this.effect.dirty = e;
    }
  }
  function sE(t, e, n = !1) {
    let r, i;
    const o = nt(t);
    return (
      o ? ((r = t), (i = tr)) : ((r = t.get), (i = t.set)),
      new a1(r, i, o || !i, n)
    );
  }
  function l1(t) {
    Bi &&
      Io &&
      ((t = De(t)),
      Yb(
        Io,
        t.dep ||
          (t.dep = Jb(() => (t.dep = void 0), t instanceof a1 ? t : void 0))
      ));
  }
  function Ic(t, e = 2, n) {
    t = De(t);
    const r = t.dep;
    r && qb(r, e);
  }
  function xe(t) {
    return !!(t && t.__v_isRef === !0);
  }
  function U(t) {
    return u1(t, !1);
  }
  function c1(t) {
    return u1(t, !0);
  }
  function u1(t, e) {
    return xe(t) ? t : new aE(t, e);
  }
  class aE {
    constructor(e, n) {
      (this.__v_isShallow = n),
        (this.dep = void 0),
        (this.__v_isRef = !0),
        (this._rawValue = n ? e : De(e)),
        (this._value = n ? e : Ga(e));
    }
    get value() {
      return l1(this), this._value;
    }
    set value(e) {
      const n = this.__v_isShallow || jc(e) || Os(e);
      (e = n ? e : De(e)),
        ji(e, this._rawValue) &&
          ((this._rawValue = e), (this._value = n ? e : Ga(e)), Ic(this, 2));
    }
  }
  function N(t) {
    return xe(t) ? t.value : t;
  }
  const lE = {
    get: (t, e, n) => N(Reflect.get(t, e, n)),
    set: (t, e, n, r) => {
      const i = t[e];
      return xe(i) && !xe(n) ? ((i.value = n), !0) : Reflect.set(t, e, n, r);
    },
  };
  function d1(t) {
    return Zr(t) ? t : new Proxy(t, lE);
  }
  function cE(t) {
    const e = Je(t) ? new Array(t.length) : {};
    for (const n in t) e[n] = h1(t, n);
    return e;
  }
  class uE {
    constructor(e, n, r) {
      (this._object = e),
        (this._key = n),
        (this._defaultValue = r),
        (this.__v_isRef = !0);
    }
    get value() {
      const e = this._object[this._key];
      return e === void 0 ? this._defaultValue : e;
    }
    set value(e) {
      this._object[this._key] = e;
    }
    get dep() {
      return HS(De(this._object), this._key);
    }
  }
  class dE {
    constructor(e) {
      (this._getter = e), (this.__v_isRef = !0), (this.__v_isReadonly = !0);
    }
    get value() {
      return this._getter();
    }
  }
  function We(t, e, n) {
    return xe(t)
      ? t
      : nt(t)
      ? new dE(t)
      : zt(t) && arguments.length > 1
      ? h1(t, e, n)
      : U(t);
  }
  function h1(t, e, n) {
    const r = t[e];
    return xe(r) ? r : new uE(t, e, n);
  }
  /**
   * @vue/runtime-core v3.4.15
   * (c) 2018-present Yuxi (Evan) You and Vue contributors
   * @license MIT
   **/ function Ni(t, e, n, r) {
    let i;
    try {
      i = r ? t(...r) : t();
    } catch (o) {
      Pu(o, e, n);
    }
    return i;
  }
  function rr(t, e, n, r) {
    if (nt(t)) {
      const o = Ni(t, e, n, r);
      return (
        o &&
          Fb(o) &&
          o.catch((s) => {
            Pu(s, e, n);
          }),
        o
      );
    }
    const i = [];
    for (let o = 0; o < t.length; o++) i.push(rr(t[o], e, n, r));
    return i;
  }
  function Pu(t, e, n, r = !0) {
    const i = e ? e.vnode : null;
    if (e) {
      let o = e.parent;
      const s = e.proxy,
        a = `https://vuejs.org/error-reference/#runtime-${n}`;
      for (; o; ) {
        const c = o.ec;
        if (c) {
          for (let u = 0; u < c.length; u++) if (c[u](t, s, a) === !1) return;
        }
        o = o.parent;
      }
      const l = e.appContext.config.errorHandler;
      if (l) {
        Ni(l, null, 10, [t, s, a]);
        return;
      }
    }
    hE(t, n, i, r);
  }
  function hE(t, e, n, r = !0) {
    console.error(t);
  }
  let Xa = !1,
    Fh = !1;
  const En = [];
  let Pr = 0;
  const Ss = [];
  let ki = null,
    xo = 0;
  const f1 = Promise.resolve();
  let Jf = null;
  function Ht(t) {
    const e = Jf || f1;
    return t ? e.then(this ? t.bind(this) : t) : e;
  }
  function fE(t) {
    let e = Pr + 1,
      n = En.length;
    for (; e < n; ) {
      const r = (e + n) >>> 1,
        i = En[r],
        o = Ka(i);
      o < t || (o === t && i.pre) ? (e = r + 1) : (n = r);
    }
    return e;
  }
  function Qf(t) {
    (!En.length || !En.includes(t, Xa && t.allowRecurse ? Pr + 1 : Pr)) &&
      (t.id == null ? En.push(t) : En.splice(fE(t.id), 0, t), g1());
  }
  function g1() {
    !Xa && !Fh && ((Fh = !0), (Jf = f1.then(m1)));
  }
  function gE(t) {
    const e = En.indexOf(t);
    e > Pr && En.splice(e, 1);
  }
  function pE(t) {
    Je(t)
      ? Ss.push(...t)
      : (!ki || !ki.includes(t, t.allowRecurse ? xo + 1 : xo)) && Ss.push(t),
      g1();
  }
  function Xp(t, e, n = Xa ? Pr + 1 : 0) {
    for (; n < En.length; n++) {
      const r = En[n];
      if (r && r.pre) {
        if (t && r.id !== t.uid) continue;
        En.splice(n, 1), n--, r();
      }
    }
  }
  function p1(t) {
    if (Ss.length) {
      const e = [...new Set(Ss)].sort((n, r) => Ka(n) - Ka(r));
      if (((Ss.length = 0), ki)) {
        ki.push(...e);
        return;
      }
      for (ki = e, xo = 0; xo < ki.length; xo++) ki[xo]();
      (ki = null), (xo = 0);
    }
  }
  const Ka = (t) => (t.id == null ? 1 / 0 : t.id),
    mE = (t, e) => {
      const n = Ka(t) - Ka(e);
      if (n === 0) {
        if (t.pre && !e.pre) return -1;
        if (e.pre && !t.pre) return 1;
      }
      return n;
    };
  function m1(t) {
    (Fh = !1), (Xa = !0), En.sort(mE);
    try {
      for (Pr = 0; Pr < En.length; Pr++) {
        const e = En[Pr];
        e && e.active !== !1 && Ni(e, null, 14);
      }
    } finally {
      (Pr = 0),
        (En.length = 0),
        p1(),
        (Xa = !1),
        (Jf = null),
        (En.length || Ss.length) && m1();
    }
  }
  function vE(t, e, ...n) {
    if (t.isUnmounted) return;
    const r = t.vnode.props || Nt;
    let i = n;
    const o = e.startsWith("update:"),
      s = o && e.slice(7);
    if (s && s in r) {
      const u = `${s === "modelValue" ? "model" : s}Modifiers`,
        { number: d, trim: h } = r[u] || Nt;
      h && (i = n.map((g) => (Jt(g) ? g.trim() : g))), d && (i = n.map(kS));
    }
    let a,
      l = r[(a = kd(e))] || r[(a = kd(Fr(e)))];
    !l && o && (l = r[(a = kd(Ys(e)))]), l && rr(l, t, 6, i);
    const c = r[a + "Once"];
    if (c) {
      if (!t.emitted) t.emitted = {};
      else if (t.emitted[a]) return;
      (t.emitted[a] = !0), rr(c, t, 6, i);
    }
  }
  function v1(t, e, n = !1) {
    const r = e.emitsCache,
      i = r.get(t);
    if (i !== void 0) return i;
    const o = t.emits;
    let s = {},
      a = !1;
    if (!nt(t)) {
      const l = (c) => {
        const u = v1(c, e, !0);
        u && ((a = !0), sn(s, u));
      };
      !n && e.mixins.length && e.mixins.forEach(l),
        t.extends && l(t.extends),
        t.mixins && t.mixins.forEach(l);
    }
    return !o && !a
      ? (zt(t) && r.set(t, null), null)
      : (Je(o) ? o.forEach((l) => (s[l] = null)) : sn(s, o),
        zt(t) && r.set(t, s),
        s);
  }
  function Au(t, e) {
    return !t || !_u(e)
      ? !1
      : ((e = e.slice(2).replace(/Once$/, "")),
        ct(t, e[0].toLowerCase() + e.slice(1)) || ct(t, Ys(e)) || ct(t, e));
  }
  let rn = null,
    b1 = null;
  function Uc(t) {
    const e = rn;
    return (rn = t), (b1 = (t && t.type.__scopeId) || null), e;
  }
  function B(t, e = rn, n) {
    if (!e || t._n) return t;
    const r = (...i) => {
      r._d && lm(-1);
      const o = Uc(e);
      let s;
      try {
        s = t(...i);
      } finally {
        Uc(o), r._d && lm(1);
      }
      return s;
    };
    return (r._n = !0), (r._c = !0), (r._d = !0), r;
  }
  function Md(t) {
    const {
      type: e,
      vnode: n,
      proxy: r,
      withProxy: i,
      props: o,
      propsOptions: [s],
      slots: a,
      attrs: l,
      emit: c,
      render: u,
      renderCache: d,
      data: h,
      setupState: g,
      ctx: f,
      inheritAttrs: p,
    } = t;
    let b, m;
    const _ = Uc(t);
    try {
      if (n.shapeFlag & 4) {
        const S = i || r,
          x = S;
        (b = Tr(u.call(x, S, d, o, g, h, f))), (m = l);
      } else {
        const S = e;
        (b = Tr(
          S.length > 1 ? S(o, { attrs: l, slots: a, emit: c }) : S(o, null)
        )),
          (m = e.props ? l : bE(l));
      }
    } catch (S) {
      ($a.length = 0), Pu(S, t, 1), (b = F(Rn));
    }
    let R = b;
    if (m && p !== !1) {
      const S = Object.keys(m),
        { shapeFlag: x } = R;
      S.length && x & 7 && (s && S.some(Hf) && (m = yE(m, s)), (R = br(R, m)));
    }
    return (
      n.dirs &&
        ((R = br(R)), (R.dirs = R.dirs ? R.dirs.concat(n.dirs) : n.dirs)),
      n.transition && (R.transition = n.transition),
      (b = R),
      Uc(_),
      b
    );
  }
  const bE = (t) => {
      let e;
      for (const n in t)
        (n === "class" || n === "style" || _u(n)) &&
          ((e || (e = {}))[n] = t[n]);
      return e;
    },
    yE = (t, e) => {
      const n = {};
      for (const r in t) (!Hf(r) || !(r.slice(9) in e)) && (n[r] = t[r]);
      return n;
    };
  function xE(t, e, n) {
    const { props: r, children: i, component: o } = t,
      { props: s, children: a, patchFlag: l } = e,
      c = o.emitsOptions;
    if (e.dirs || e.transition) return !0;
    if (n && l >= 0) {
      if (l & 1024) return !0;
      if (l & 16) return r ? Kp(r, s, c) : !!s;
      if (l & 8) {
        const u = e.dynamicProps;
        for (let d = 0; d < u.length; d++) {
          const h = u[d];
          if (s[h] !== r[h] && !Au(c, h)) return !0;
        }
      }
    } else
      return (i || a) && (!a || !a.$stable)
        ? !0
        : r === s
        ? !1
        : r
        ? s
          ? Kp(r, s, c)
          : !0
        : !!s;
    return !1;
  }
  function Kp(t, e, n) {
    const r = Object.keys(e);
    if (r.length !== Object.keys(t).length) return !0;
    for (let i = 0; i < r.length; i++) {
      const o = r[i];
      if (e[o] !== t[o] && !Au(n, o)) return !0;
    }
    return !1;
  }
  function CE({ vnode: t, parent: e }, n) {
    for (; e; ) {
      const r = e.subTree;
      if (
        (r.suspense && r.suspense.activeBranch === t && (r.el = t.el), r === t)
      )
        ((t = e.vnode).el = n), (e = e.parent);
      else break;
    }
  }
  const y1 = "components";
  function _E(t, e) {
    return SE(y1, t, !0, e) || t;
  }
  const wE = Symbol.for("v-ndc");
  function SE(t, e, n = !0, r = !1) {
    const i = rn || gn;
    if (i) {
      const o = i.type;
      if (t === y1) {
        const a = p2(o, !1);
        if (a && (a === e || a === Fr(e) || a === Eu(Fr(e)))) return o;
      }
      const s = Yp(i[t] || o[t], e) || Yp(i.appContext[t], e);
      return !s && r ? o : s;
    }
  }
  function Yp(t, e) {
    return t && (t[e] || t[Fr(e)] || t[Eu(Fr(e))]);
  }
  const EE = (t) => t.__isSuspense;
  function RE(t, e) {
    e && e.pendingBranch
      ? Je(t)
        ? e.effects.push(...t)
        : e.effects.push(t)
      : pE(t);
  }
  const TE = Symbol.for("v-scx"),
    PE = () => Ve(TE);
  function or(t, e) {
    return eg(t, null, e);
  }
  const Ql = {};
  function Et(t, e, n) {
    return eg(t, e, n);
  }
  function eg(
    t,
    e,
    { immediate: n, deep: r, flush: i, once: o, onTrack: s, onTrigger: a } = Nt
  ) {
    if (e && o) {
      const E = e;
      e = (...w) => {
        E(...w), x();
      };
    }
    const l = gn,
      c = (E) => (r === !0 ? E : _o(E, r === !1 ? 1 : void 0));
    let u,
      d = !1,
      h = !1;
    if (
      (xe(t)
        ? ((u = () => t.value), (d = jc(t)))
        : Zr(t)
        ? ((u = () => c(t)), (d = !0))
        : Je(t)
        ? ((h = !0),
          (d = t.some((E) => Zr(E) || jc(E))),
          (u = () =>
            t.map((E) => {
              if (xe(E)) return E.value;
              if (Zr(E)) return c(E);
              if (nt(E)) return Ni(E, l, 2);
            })))
        : nt(t)
        ? e
          ? (u = () => Ni(t, l, 2))
          : (u = () => (g && g(), rr(t, l, 3, [f])))
        : (u = tr),
      e && r)
    ) {
      const E = u;
      u = () => _o(E());
    }
    let g,
      f = (E) => {
        g = R.onStop = () => {
          Ni(E, l, 4), (g = R.onStop = void 0);
        };
      },
      p;
    if (Mu)
      if (
        ((f = tr),
        e ? n && rr(e, l, 3, [u(), h ? [] : void 0, f]) : u(),
        i === "sync")
      ) {
        const E = PE();
        p = E.__watcherHandles || (E.__watcherHandles = []);
      } else return tr;
    let b = h ? new Array(t.length).fill(Ql) : Ql;
    const m = () => {
      if (!(!R.active || !R.dirty))
        if (e) {
          const E = R.run();
          (r || d || (h ? E.some((w, v) => ji(w, b[v])) : ji(E, b))) &&
            (g && g(),
            rr(e, l, 3, [E, b === Ql ? void 0 : h && b[0] === Ql ? [] : b, f]),
            (b = E));
        } else R.run();
    };
    m.allowRecurse = !!e;
    let _;
    i === "sync"
      ? (_ = m)
      : i === "post"
      ? (_ = () => Dn(m, l && l.suspense))
      : ((m.pre = !0), l && (m.id = l.uid), (_ = () => Qf(m)));
    const R = new Vf(u, tr, _),
      S = Gb(),
      x = () => {
        R.stop(), S && Wf(S.effects, R);
      };
    return (
      e
        ? n
          ? m()
          : (b = R.run())
        : i === "post"
        ? Dn(R.run.bind(R), l && l.suspense)
        : R.run(),
      p && p.push(x),
      x
    );
  }
  function AE(t, e, n) {
    const r = this.proxy,
      i = Jt(t) ? (t.includes(".") ? x1(r, t) : () => r[t]) : t.bind(r, r);
    let o;
    nt(e) ? (o = e) : ((o = e.handler), (n = e));
    const s = Rl(this),
      a = eg(i, o.bind(r), n);
    return s(), a;
  }
  function x1(t, e) {
    const n = e.split(".");
    return () => {
      let r = t;
      for (let i = 0; i < n.length && r; i++) r = r[n[i]];
      return r;
    };
  }
  function _o(t, e, n = 0, r) {
    if (!zt(t) || t.__v_skip) return t;
    if (e && e > 0) {
      if (n >= e) return t;
      n++;
    }
    if (((r = r || new Set()), r.has(t))) return t;
    if ((r.add(t), xe(t))) _o(t.value, e, n, r);
    else if (Je(t)) for (let i = 0; i < t.length; i++) _o(t[i], e, n, r);
    else if (zb(t) || ws(t))
      t.forEach((i) => {
        _o(i, e, n, r);
      });
    else if (Nb(t)) for (const i in t) _o(t[i], e, n, r);
    return t;
  }
  function sr(t, e) {
    if (rn === null) return t;
    const n = Lu(rn) || rn.proxy,
      r = t.dirs || (t.dirs = []);
    for (let i = 0; i < e.length; i++) {
      let [o, s, a, l = Nt] = e[i];
      o &&
        (nt(o) && (o = { mounted: o, updated: o }),
        o.deep && _o(s),
        r.push({
          dir: o,
          instance: n,
          value: s,
          oldValue: void 0,
          arg: a,
          modifiers: l,
        }));
    }
    return t;
  }
  function ao(t, e, n, r) {
    const i = t.dirs,
      o = e && e.dirs;
    for (let s = 0; s < i.length; s++) {
      const a = i[s];
      o && (a.oldValue = o[s].value);
      let l = a.dir[r];
      l && (Bo(), rr(l, n, 8, [t.el, a, t, e]), No());
    }
  }
  const Ii = Symbol("_leaveCb"),
    ec = Symbol("_enterCb");
  function C1() {
    const t = {
      isMounted: !1,
      isLeaving: !1,
      isUnmounting: !1,
      leavingVNodes: new Map(),
    };
    return (
      Vt(() => {
        t.isMounted = !0;
      }),
      Qt(() => {
        t.isUnmounting = !0;
      }),
      t
    );
  }
  const Zn = [Function, Array],
    _1 = {
      mode: String,
      appear: Boolean,
      persisted: Boolean,
      onBeforeEnter: Zn,
      onEnter: Zn,
      onAfterEnter: Zn,
      onEnterCancelled: Zn,
      onBeforeLeave: Zn,
      onLeave: Zn,
      onAfterLeave: Zn,
      onLeaveCancelled: Zn,
      onBeforeAppear: Zn,
      onAppear: Zn,
      onAfterAppear: Zn,
      onAppearCancelled: Zn,
    },
    kE = {
      name: "BaseTransition",
      props: _1,
      setup(t, { slots: e }) {
        const n = Wo(),
          r = C1();
        let i;
        return () => {
          const o = e.default && tg(e.default(), !0);
          if (!o || !o.length) return;
          let s = o[0];
          if (o.length > 1) {
            for (const p of o)
              if (p.type !== Rn) {
                s = p;
                break;
              }
          }
          const a = De(t),
            { mode: l } = a;
          if (r.isLeaving) return Ld(s);
          const c = qp(s);
          if (!c) return Ld(s);
          const u = Ya(c, a, r, n);
          qa(c, u);
          const d = n.subTree,
            h = d && qp(d);
          let g = !1;
          const { getTransitionKey: f } = c.type;
          if (f) {
            const p = f();
            i === void 0 ? (i = p) : p !== i && ((i = p), (g = !0));
          }
          if (h && h.type !== Rn && (!Co(c, h) || g)) {
            const p = Ya(h, a, r, n);
            if ((qa(h, p), l === "out-in"))
              return (
                (r.isLeaving = !0),
                (p.afterLeave = () => {
                  (r.isLeaving = !1),
                    n.update.active !== !1 &&
                      ((n.effect.dirty = !0), n.update());
                }),
                Ld(s)
              );
            l === "in-out" &&
              c.type !== Rn &&
              (p.delayLeave = (b, m, _) => {
                const R = w1(r, h);
                (R[String(h.key)] = h),
                  (b[Ii] = () => {
                    m(), (b[Ii] = void 0), delete u.delayedLeave;
                  }),
                  (u.delayedLeave = _);
              });
          }
          return s;
        };
      },
    },
    IE = kE;
  function w1(t, e) {
    const { leavingVNodes: n } = t;
    let r = n.get(e.type);
    return r || ((r = Object.create(null)), n.set(e.type, r)), r;
  }
  function Ya(t, e, n, r) {
    const {
        appear: i,
        mode: o,
        persisted: s = !1,
        onBeforeEnter: a,
        onEnter: l,
        onAfterEnter: c,
        onEnterCancelled: u,
        onBeforeLeave: d,
        onLeave: h,
        onAfterLeave: g,
        onLeaveCancelled: f,
        onBeforeAppear: p,
        onAppear: b,
        onAfterAppear: m,
        onAppearCancelled: _,
      } = e,
      R = String(t.key),
      S = w1(n, t),
      x = (v, y) => {
        v && rr(v, r, 9, y);
      },
      E = (v, y) => {
        const T = y[1];
        x(v, y),
          Je(v) ? v.every((A) => A.length <= 1) && T() : v.length <= 1 && T();
      },
      w = {
        mode: o,
        persisted: s,
        beforeEnter(v) {
          let y = a;
          if (!n.isMounted)
            if (i) y = p || a;
            else return;
          v[Ii] && v[Ii](!0);
          const T = S[R];
          T && Co(t, T) && T.el[Ii] && T.el[Ii](), x(y, [v]);
        },
        enter(v) {
          let y = l,
            T = c,
            A = u;
          if (!n.isMounted)
            if (i) (y = b || l), (T = m || c), (A = _ || u);
            else return;
          let I = !1;
          const L = (v[ec] = (j) => {
            I ||
              ((I = !0),
              j ? x(A, [v]) : x(T, [v]),
              w.delayedLeave && w.delayedLeave(),
              (v[ec] = void 0));
          });
          y ? E(y, [v, L]) : L();
        },
        leave(v, y) {
          const T = String(t.key);
          if ((v[ec] && v[ec](!0), n.isUnmounting)) return y();
          x(d, [v]);
          let A = !1;
          const I = (v[Ii] = (L) => {
            A ||
              ((A = !0),
              y(),
              L ? x(f, [v]) : x(g, [v]),
              (v[Ii] = void 0),
              S[T] === t && delete S[T]);
          });
          (S[T] = t), h ? E(h, [v, I]) : I();
        },
        clone(v) {
          return Ya(v, e, n, r);
        },
      };
    return w;
  }
  function Ld(t) {
    if (ku(t)) return (t = br(t)), (t.children = null), t;
  }
  function qp(t) {
    return ku(t) ? (t.children ? t.children[0] : void 0) : t;
  }
  function qa(t, e) {
    t.shapeFlag & 6 && t.component
      ? qa(t.component.subTree, e)
      : t.shapeFlag & 128
      ? ((t.ssContent.transition = e.clone(t.ssContent)),
        (t.ssFallback.transition = e.clone(t.ssFallback)))
      : (t.transition = e);
  }
  function tg(t, e = !1, n) {
    let r = [],
      i = 0;
    for (let o = 0; o < t.length; o++) {
      let s = t[o];
      const a =
        n == null ? s.key : String(n) + String(s.key != null ? s.key : o);
      s.type === pt
        ? (s.patchFlag & 128 && i++, (r = r.concat(tg(s.children, e, a))))
        : (e || s.type !== Rn) && r.push(a != null ? br(s, { key: a }) : s);
    }
    if (i > 1) for (let o = 0; o < r.length; o++) r[o].patchFlag = -2;
    return r;
  }
  /*! #__NO_SIDE_EFFECTS__ */ function $e(t, e) {
    return nt(t) ? sn({ name: t.name }, e, { setup: t }) : t;
  }
  const Oa = (t) => !!t.type.__asyncLoader,
    ku = (t) => t.type.__isKeepAlive;
  function ng(t, e) {
    S1(t, "a", e);
  }
  function rg(t, e) {
    S1(t, "da", e);
  }
  function S1(t, e, n = gn) {
    const r =
      t.__wdc ||
      (t.__wdc = () => {
        let i = n;
        for (; i; ) {
          if (i.isDeactivated) return;
          i = i.parent;
        }
        return t();
      });
    if ((Iu(e, r, n), n)) {
      let i = n.parent;
      for (; i && i.parent; )
        ku(i.parent.vnode) && OE(r, e, n, i), (i = i.parent);
    }
  }
  function OE(t, e, n, r) {
    const i = Iu(e, t, r, !0);
    T1(() => {
      Wf(r[e], i);
    }, n);
  }
  function Iu(t, e, n = gn, r = !1) {
    if (n) {
      const i = n[t] || (n[t] = []),
        o =
          e.__weh ||
          (e.__weh = (...s) => {
            if (n.isUnmounted) return;
            Bo();
            const a = Rl(n),
              l = rr(e, n, t, s);
            return a(), No(), l;
          });
      return r ? i.unshift(o) : i.push(o), o;
    }
  }
  const ai =
      (t) =>
      (e, n = gn) =>
        (!Mu || t === "sp") && Iu(t, (...r) => e(...r), n),
    Ho = ai("bm"),
    Vt = ai("m"),
    E1 = ai("bu"),
    R1 = ai("u"),
    Qt = ai("bum"),
    T1 = ai("um"),
    ME = ai("sp"),
    LE = ai("rtg"),
    $E = ai("rtc");
  function DE(t, e = gn) {
    Iu("ec", t, e);
  }
  function Zp(t, e, n, r) {
    let i;
    const o = n && n[r];
    if (Je(t) || Jt(t)) {
      i = new Array(t.length);
      for (let s = 0, a = t.length; s < a; s++)
        i[s] = e(t[s], s, void 0, o && o[s]);
    } else if (typeof t == "number") {
      i = new Array(t);
      for (let s = 0; s < t; s++) i[s] = e(s + 1, s, void 0, o && o[s]);
    } else if (zt(t))
      if (t[Symbol.iterator])
        i = Array.from(t, (s, a) => e(s, a, void 0, o && o[a]));
      else {
        const s = Object.keys(t);
        i = new Array(s.length);
        for (let a = 0, l = s.length; a < l; a++) {
          const c = s[a];
          i[a] = e(t[c], c, a, o && o[a]);
        }
      }
    else i = [];
    return n && (n[r] = i), i;
  }
  function zE(t, e, n = {}, r, i) {
    if (rn.isCE || (rn.parent && Oa(rn.parent) && rn.parent.isCE))
      return e !== "default" && (n.name = e), F("slot", n, r && r());
    let o = t[e];
    o && o._c && (o._d = !1), Ie();
    const s = o && P1(o(n)),
      a = He(
        pt,
        { key: n.key || (s && s.key) || `_${e}` },
        s || (r ? r() : []),
        s && t._ === 1 ? 64 : -2
      );
    return (
      !i && a.scopeId && (a.slotScopeIds = [a.scopeId + "-s"]),
      o && o._c && (o._d = !0),
      a
    );
  }
  function P1(t) {
    return t.some((e) =>
      Qa(e) ? !(e.type === Rn || (e.type === pt && !P1(e.children))) : !0
    )
      ? t
      : null;
  }
  const Bh = (t) => (t ? (N1(t) ? Lu(t) || t.proxy : Bh(t.parent)) : null),
    Ma = sn(Object.create(null), {
      $: (t) => t,
      $el: (t) => t.vnode.el,
      $data: (t) => t.data,
      $props: (t) => t.props,
      $attrs: (t) => t.attrs,
      $slots: (t) => t.slots,
      $refs: (t) => t.refs,
      $parent: (t) => Bh(t.parent),
      $root: (t) => Bh(t.root),
      $emit: (t) => t.emit,
      $options: (t) => ig(t),
      $forceUpdate: (t) =>
        t.f ||
        (t.f = () => {
          (t.effect.dirty = !0), Qf(t.update);
        }),
      $nextTick: (t) => t.n || (t.n = Ht.bind(t.proxy)),
      $watch: (t) => AE.bind(t),
    }),
    $d = (t, e) => t !== Nt && !t.__isScriptSetup && ct(t, e),
    FE = {
      get({ _: t }, e) {
        const {
          ctx: n,
          setupState: r,
          data: i,
          props: o,
          accessCache: s,
          type: a,
          appContext: l,
        } = t;
        let c;
        if (e[0] !== "$") {
          const g = s[e];
          if (g !== void 0)
            switch (g) {
              case 1:
                return r[e];
              case 2:
                return i[e];
              case 4:
                return n[e];
              case 3:
                return o[e];
            }
          else {
            if ($d(r, e)) return (s[e] = 1), r[e];
            if (i !== Nt && ct(i, e)) return (s[e] = 2), i[e];
            if ((c = t.propsOptions[0]) && ct(c, e)) return (s[e] = 3), o[e];
            if (n !== Nt && ct(n, e)) return (s[e] = 4), n[e];
            Nh && (s[e] = 0);
          }
        }
        const u = Ma[e];
        let d, h;
        if (u) return e === "$attrs" && Wn(t, "get", e), u(t);
        if ((d = a.__cssModules) && (d = d[e])) return d;
        if (n !== Nt && ct(n, e)) return (s[e] = 4), n[e];
        if (((h = l.config.globalProperties), ct(h, e))) return h[e];
      },
      set({ _: t }, e, n) {
        const { data: r, setupState: i, ctx: o } = t;
        return $d(i, e)
          ? ((i[e] = n), !0)
          : r !== Nt && ct(r, e)
          ? ((r[e] = n), !0)
          : ct(t.props, e) || (e[0] === "$" && e.slice(1) in t)
          ? !1
          : ((o[e] = n), !0);
      },
      has(
        {
          _: {
            data: t,
            setupState: e,
            accessCache: n,
            ctx: r,
            appContext: i,
            propsOptions: o,
          },
        },
        s
      ) {
        let a;
        return (
          !!n[s] ||
          (t !== Nt && ct(t, s)) ||
          $d(e, s) ||
          ((a = o[0]) && ct(a, s)) ||
          ct(r, s) ||
          ct(Ma, s) ||
          ct(i.config.globalProperties, s)
        );
      },
      defineProperty(t, e, n) {
        return (
          n.get != null
            ? (t._.accessCache[e] = 0)
            : ct(n, "value") && this.set(t, e, n.value, null),
          Reflect.defineProperty(t, e, n)
        );
      },
    };
  function Jp(t) {
    return Je(t) ? t.reduce((e, n) => ((e[n] = null), e), {}) : t;
  }
  let Nh = !0;
  function BE(t) {
    const e = ig(t),
      n = t.proxy,
      r = t.ctx;
    (Nh = !1), e.beforeCreate && Qp(e.beforeCreate, t, "bc");
    const {
      data: i,
      computed: o,
      methods: s,
      watch: a,
      provide: l,
      inject: c,
      created: u,
      beforeMount: d,
      mounted: h,
      beforeUpdate: g,
      updated: f,
      activated: p,
      deactivated: b,
      beforeDestroy: m,
      beforeUnmount: _,
      destroyed: R,
      unmounted: S,
      render: x,
      renderTracked: E,
      renderTriggered: w,
      errorCaptured: v,
      serverPrefetch: y,
      expose: T,
      inheritAttrs: A,
      components: I,
      directives: L,
      filters: j,
    } = e;
    if ((c && NE(c, r, null), s))
      for (const D in s) {
        const Y = s[D];
        nt(Y) && (r[D] = Y.bind(n));
      }
    if (i) {
      const D = i.call(n, n);
      zt(D) && (t.data = Zi(D));
    }
    if (((Nh = !0), o))
      for (const D in o) {
        const Y = o[D],
          se = nt(Y) ? Y.bind(n, n) : nt(Y.get) ? Y.get.bind(n, n) : tr,
          de = !nt(Y) && nt(Y.set) ? Y.set.bind(n) : tr,
          fe = ce({ get: se, set: de });
        Object.defineProperty(r, D, {
          enumerable: !0,
          configurable: !0,
          get: () => fe.value,
          set: (z) => (fe.value = z),
        });
      }
    if (a) for (const D in a) A1(a[D], r, n, D);
    if (l) {
      const D = nt(l) ? l.call(n) : l;
      Reflect.ownKeys(D).forEach((Y) => {
        vt(Y, D[Y]);
      });
    }
    u && Qp(u, t, "c");
    function O(D, Y) {
      Je(Y) ? Y.forEach((se) => D(se.bind(n))) : Y && D(Y.bind(n));
    }
    if (
      (O(Ho, d),
      O(Vt, h),
      O(E1, g),
      O(R1, f),
      O(ng, p),
      O(rg, b),
      O(DE, v),
      O($E, E),
      O(LE, w),
      O(Qt, _),
      O(T1, S),
      O(ME, y),
      Je(T))
    )
      if (T.length) {
        const D = t.exposed || (t.exposed = {});
        T.forEach((Y) => {
          Object.defineProperty(D, Y, {
            get: () => n[Y],
            set: (se) => (n[Y] = se),
          });
        });
      } else t.exposed || (t.exposed = {});
    x && t.render === tr && (t.render = x),
      A != null && (t.inheritAttrs = A),
      I && (t.components = I),
      L && (t.directives = L);
  }
  function NE(t, e, n = tr) {
    Je(t) && (t = Hh(t));
    for (const r in t) {
      const i = t[r];
      let o;
      zt(i)
        ? "default" in i
          ? (o = Ve(i.from || r, i.default, !0))
          : (o = Ve(i.from || r))
        : (o = Ve(i)),
        xe(o)
          ? Object.defineProperty(e, r, {
              enumerable: !0,
              configurable: !0,
              get: () => o.value,
              set: (s) => (o.value = s),
            })
          : (e[r] = o);
    }
  }
  function Qp(t, e, n) {
    rr(Je(t) ? t.map((r) => r.bind(e.proxy)) : t.bind(e.proxy), e, n);
  }
  function A1(t, e, n, r) {
    const i = r.includes(".") ? x1(n, r) : () => n[r];
    if (Jt(t)) {
      const o = e[t];
      nt(o) && Et(i, o);
    } else if (nt(t)) Et(i, t.bind(n));
    else if (zt(t))
      if (Je(t)) t.forEach((o) => A1(o, e, n, r));
      else {
        const o = nt(t.handler) ? t.handler.bind(n) : e[t.handler];
        nt(o) && Et(i, o, t);
      }
  }
  function ig(t) {
    const e = t.type,
      { mixins: n, extends: r } = e,
      {
        mixins: i,
        optionsCache: o,
        config: { optionMergeStrategies: s },
      } = t.appContext,
      a = o.get(e);
    let l;
    return (
      a
        ? (l = a)
        : !i.length && !n && !r
        ? (l = e)
        : ((l = {}),
          i.length && i.forEach((c) => Vc(l, c, s, !0)),
          Vc(l, e, s)),
      zt(e) && o.set(e, l),
      l
    );
  }
  function Vc(t, e, n, r = !1) {
    const { mixins: i, extends: o } = e;
    o && Vc(t, o, n, !0), i && i.forEach((s) => Vc(t, s, n, !0));
    for (const s in e)
      if (!(r && s === "expose")) {
        const a = HE[s] || (n && n[s]);
        t[s] = a ? a(t[s], e[s]) : e[s];
      }
    return t;
  }
  const HE = {
    data: em,
    props: tm,
    emits: tm,
    methods: Ra,
    computed: Ra,
    beforeCreate: An,
    created: An,
    beforeMount: An,
    mounted: An,
    beforeUpdate: An,
    updated: An,
    beforeDestroy: An,
    beforeUnmount: An,
    destroyed: An,
    unmounted: An,
    activated: An,
    deactivated: An,
    errorCaptured: An,
    serverPrefetch: An,
    components: Ra,
    directives: Ra,
    watch: jE,
    provide: em,
    inject: WE,
  };
  function em(t, e) {
    return e
      ? t
        ? function () {
            return sn(
              nt(t) ? t.call(this, this) : t,
              nt(e) ? e.call(this, this) : e
            );
          }
        : e
      : t;
  }
  function WE(t, e) {
    return Ra(Hh(t), Hh(e));
  }
  function Hh(t) {
    if (Je(t)) {
      const e = {};
      for (let n = 0; n < t.length; n++) e[t[n]] = t[n];
      return e;
    }
    return t;
  }
  function An(t, e) {
    return t ? [...new Set([].concat(t, e))] : e;
  }
  function Ra(t, e) {
    return t ? sn(Object.create(null), t, e) : e;
  }
  function tm(t, e) {
    return t
      ? Je(t) && Je(e)
        ? [...new Set([...t, ...e])]
        : sn(Object.create(null), Jp(t), Jp(e ?? {}))
      : e;
  }
  function jE(t, e) {
    if (!t) return e;
    if (!e) return t;
    const n = sn(Object.create(null), t);
    for (const r in e) n[r] = An(t[r], e[r]);
    return n;
  }
  function k1() {
    return {
      app: null,
      config: {
        isNativeTag: ES,
        performance: !1,
        globalProperties: {},
        optionMergeStrategies: {},
        errorHandler: void 0,
        warnHandler: void 0,
        compilerOptions: {},
      },
      mixins: [],
      components: {},
      directives: {},
      provides: Object.create(null),
      optionsCache: new WeakMap(),
      propsCache: new WeakMap(),
      emitsCache: new WeakMap(),
    };
  }
  let UE = 0;
  function VE(t, e) {
    return function (r, i = null) {
      nt(r) || (r = sn({}, r)), i != null && !zt(i) && (i = null);
      const o = k1(),
        s = new WeakSet();
      let a = !1;
      const l = (o.app = {
        _uid: UE++,
        _component: r,
        _props: i,
        _container: null,
        _context: o,
        _instance: null,
        version: v2,
        get config() {
          return o.config;
        },
        set config(c) {},
        use(c, ...u) {
          return (
            s.has(c) ||
              (c && nt(c.install)
                ? (s.add(c), c.install(l, ...u))
                : nt(c) && (s.add(c), c(l, ...u))),
            l
          );
        },
        mixin(c) {
          return o.mixins.includes(c) || o.mixins.push(c), l;
        },
        component(c, u) {
          return u ? ((o.components[c] = u), l) : o.components[c];
        },
        directive(c, u) {
          return u ? ((o.directives[c] = u), l) : o.directives[c];
        },
        mount(c, u, d) {
          if (!a) {
            const h = F(r, i);
            return (
              (h.appContext = o),
              d === !0 ? (d = "svg") : d === !1 && (d = void 0),
              u && e ? e(h, c) : t(h, c, d),
              (a = !0),
              (l._container = c),
              (c.__vue_app__ = l),
              Lu(h.component) || h.component.proxy
            );
          }
        },
        unmount() {
          a && (t(null, l._container), delete l._container.__vue_app__);
        },
        provide(c, u) {
          return (o.provides[c] = u), l;
        },
        runWithContext(c) {
          Za = l;
          try {
            return c();
          } finally {
            Za = null;
          }
        },
      });
      return l;
    };
  }
  let Za = null;
  function vt(t, e) {
    if (gn) {
      let n = gn.provides;
      const r = gn.parent && gn.parent.provides;
      r === n && (n = gn.provides = Object.create(r)), (n[t] = e);
    }
  }
  function Ve(t, e, n = !1) {
    const r = gn || rn;
    if (r || Za) {
      const i = r
        ? r.parent == null
          ? r.vnode.appContext && r.vnode.appContext.provides
          : r.parent.provides
        : Za._context.provides;
      if (i && t in i) return i[t];
      if (arguments.length > 1) return n && nt(e) ? e.call(r && r.proxy) : e;
    }
  }
  function GE() {
    return !!(gn || rn || Za);
  }
  function XE(t, e, n, r = !1) {
    const i = {},
      o = {};
    Hc(o, Ou, 1), (t.propsDefaults = Object.create(null)), I1(t, e, i, o);
    for (const s in t.propsOptions[0]) s in i || (i[s] = void 0);
    n
      ? (t.props = r ? i : o1(i))
      : t.type.props
      ? (t.props = i)
      : (t.props = o),
      (t.attrs = o);
  }
  function KE(t, e, n, r) {
    const {
        props: i,
        attrs: o,
        vnode: { patchFlag: s },
      } = t,
      a = De(i),
      [l] = t.propsOptions;
    let c = !1;
    if ((r || s > 0) && !(s & 16)) {
      if (s & 8) {
        const u = t.vnode.dynamicProps;
        for (let d = 0; d < u.length; d++) {
          let h = u[d];
          if (Au(t.emitsOptions, h)) continue;
          const g = e[h];
          if (l)
            if (ct(o, h)) g !== o[h] && ((o[h] = g), (c = !0));
            else {
              const f = Fr(h);
              i[f] = Wh(l, a, f, g, t, !1);
            }
          else g !== o[h] && ((o[h] = g), (c = !0));
        }
      }
    } else {
      I1(t, e, i, o) && (c = !0);
      let u;
      for (const d in a)
        (!e || (!ct(e, d) && ((u = Ys(d)) === d || !ct(e, u)))) &&
          (l
            ? n &&
              (n[d] !== void 0 || n[u] !== void 0) &&
              (i[d] = Wh(l, a, d, void 0, t, !0))
            : delete i[d]);
      if (o !== a)
        for (const d in o) (!e || !ct(e, d)) && (delete o[d], (c = !0));
    }
    c && qr(t, "set", "$attrs");
  }
  function I1(t, e, n, r) {
    const [i, o] = t.propsOptions;
    let s = !1,
      a;
    if (e)
      for (let l in e) {
        if (kc(l)) continue;
        const c = e[l];
        let u;
        i && ct(i, (u = Fr(l)))
          ? !o || !o.includes(u)
            ? (n[u] = c)
            : ((a || (a = {}))[u] = c)
          : Au(t.emitsOptions, l) ||
            ((!(l in r) || c !== r[l]) && ((r[l] = c), (s = !0)));
      }
    if (o) {
      const l = De(n),
        c = a || Nt;
      for (let u = 0; u < o.length; u++) {
        const d = o[u];
        n[d] = Wh(i, l, d, c[d], t, !ct(c, d));
      }
    }
    return s;
  }
  function Wh(t, e, n, r, i, o) {
    const s = t[n];
    if (s != null) {
      const a = ct(s, "default");
      if (a && r === void 0) {
        const l = s.default;
        if (s.type !== Function && !s.skipFactory && nt(l)) {
          const { propsDefaults: c } = i;
          if (n in c) r = c[n];
          else {
            const u = Rl(i);
            (r = c[n] = l.call(null, e)), u();
          }
        } else r = l;
      }
      s[0] &&
        (o && !a ? (r = !1) : s[1] && (r === "" || r === Ys(n)) && (r = !0));
    }
    return r;
  }
  function O1(t, e, n = !1) {
    const r = e.propsCache,
      i = r.get(t);
    if (i) return i;
    const o = t.props,
      s = {},
      a = [];
    let l = !1;
    if (!nt(t)) {
      const u = (d) => {
        l = !0;
        const [h, g] = O1(d, e, !0);
        sn(s, h), g && a.push(...g);
      };
      !n && e.mixins.length && e.mixins.forEach(u),
        t.extends && u(t.extends),
        t.mixins && t.mixins.forEach(u);
    }
    if (!o && !l) return zt(t) && r.set(t, _s), _s;
    if (Je(o))
      for (let u = 0; u < o.length; u++) {
        const d = Fr(o[u]);
        nm(d) && (s[d] = Nt);
      }
    else if (o)
      for (const u in o) {
        const d = Fr(u);
        if (nm(d)) {
          const h = o[u],
            g = (s[d] = Je(h) || nt(h) ? { type: h } : sn({}, h));
          if (g) {
            const f = om(Boolean, g.type),
              p = om(String, g.type);
            (g[0] = f > -1),
              (g[1] = p < 0 || f < p),
              (f > -1 || ct(g, "default")) && a.push(d);
          }
        }
      }
    const c = [s, a];
    return zt(t) && r.set(t, c), c;
  }
  function nm(t) {
    return t[0] !== "$";
  }
  function rm(t) {
    const e = t && t.toString().match(/^\s*(function|class) (\w+)/);
    return e ? e[2] : t === null ? "null" : "";
  }
  function im(t, e) {
    return rm(t) === rm(e);
  }
  function om(t, e) {
    return Je(e) ? e.findIndex((n) => im(n, t)) : nt(e) && im(e, t) ? 0 : -1;
  }
  const M1 = (t) => t[0] === "_" || t === "$stable",
    og = (t) => (Je(t) ? t.map(Tr) : [Tr(t)]),
    YE = (t, e, n) => {
      if (e._n) return e;
      const r = B((...i) => og(e(...i)), n);
      return (r._c = !1), r;
    },
    L1 = (t, e, n) => {
      const r = t._ctx;
      for (const i in t) {
        if (M1(i)) continue;
        const o = t[i];
        if (nt(o)) e[i] = YE(i, o, r);
        else if (o != null) {
          const s = og(o);
          e[i] = () => s;
        }
      }
    },
    $1 = (t, e) => {
      const n = og(e);
      t.slots.default = () => n;
    },
    qE = (t, e) => {
      if (t.vnode.shapeFlag & 32) {
        const n = e._;
        n ? ((t.slots = De(e)), Hc(e, "_", n)) : L1(e, (t.slots = {}));
      } else (t.slots = {}), e && $1(t, e);
      Hc(t.slots, Ou, 1);
    },
    ZE = (t, e, n) => {
      const { vnode: r, slots: i } = t;
      let o = !0,
        s = Nt;
      if (r.shapeFlag & 32) {
        const a = e._;
        a
          ? n && a === 1
            ? (o = !1)
            : (sn(i, e), !n && a === 1 && delete i._)
          : ((o = !e.$stable), L1(e, i)),
          (s = e);
      } else e && ($1(t, e), (s = { default: 1 }));
      if (o) for (const a in i) !M1(a) && s[a] == null && delete i[a];
    };
  function jh(t, e, n, r, i = !1) {
    if (Je(t)) {
      t.forEach((h, g) => jh(h, e && (Je(e) ? e[g] : e), n, r, i));
      return;
    }
    if (Oa(r) && !i) return;
    const o = r.shapeFlag & 4 ? Lu(r.component) || r.component.proxy : r.el,
      s = i ? null : o,
      { i: a, r: l } = t,
      c = e && e.r,
      u = a.refs === Nt ? (a.refs = {}) : a.refs,
      d = a.setupState;
    if (
      (c != null &&
        c !== l &&
        (Jt(c)
          ? ((u[c] = null), ct(d, c) && (d[c] = null))
          : xe(c) && (c.value = null)),
      nt(l))
    )
      Ni(l, a, 12, [s, u]);
    else {
      const h = Jt(l),
        g = xe(l),
        f = t.f;
      if (h || g) {
        const p = () => {
          if (f) {
            const b = h ? (ct(d, l) ? d[l] : u[l]) : l.value;
            i
              ? Je(b) && Wf(b, o)
              : Je(b)
              ? b.includes(o) || b.push(o)
              : h
              ? ((u[l] = [o]), ct(d, l) && (d[l] = u[l]))
              : ((l.value = [o]), t.k && (u[t.k] = l.value));
          } else
            h
              ? ((u[l] = s), ct(d, l) && (d[l] = s))
              : g && ((l.value = s), t.k && (u[t.k] = s));
        };
        i || f ? p() : ((p.id = -1), Dn(p, n));
      }
    }
  }
  const Dn = RE;
  function JE(t) {
    return QE(t);
  }
  function QE(t, e) {
    const n = Hb();
    n.__VUE__ = !0;
    const {
        insert: r,
        remove: i,
        patchProp: o,
        createElement: s,
        createText: a,
        createComment: l,
        setText: c,
        setElementText: u,
        parentNode: d,
        nextSibling: h,
        setScopeId: g = tr,
        insertStaticContent: f,
      } = t,
      p = (
        P,
        $,
        H,
        ae = null,
        le = null,
        he = null,
        Z = void 0,
        W = null,
        Q = !!$.dynamicChildren
      ) => {
        if (P === $) return;
        P && !Co(P, $) && ((ae = ie(P)), z(P, le, he, !0), (P = null)),
          $.patchFlag === -2 && ((Q = !1), ($.dynamicChildren = null));
        const { type: J, ref: G, shapeFlag: X } = $;
        switch (J) {
          case El:
            b(P, $, H, ae);
            break;
          case Rn:
            m(P, $, H, ae);
            break;
          case zd:
            P == null && _($, H, ae, Z);
            break;
          case pt:
            I(P, $, H, ae, le, he, Z, W, Q);
            break;
          default:
            X & 1
              ? x(P, $, H, ae, le, he, Z, W, Q)
              : X & 6
              ? L(P, $, H, ae, le, he, Z, W, Q)
              : (X & 64 || X & 128) &&
                J.process(P, $, H, ae, le, he, Z, W, Q, ge);
        }
        G != null && le && jh(G, P && P.ref, he, $ || P, !$);
      },
      b = (P, $, H, ae) => {
        if (P == null) r(($.el = a($.children)), H, ae);
        else {
          const le = ($.el = P.el);
          $.children !== P.children && c(le, $.children);
        }
      },
      m = (P, $, H, ae) => {
        P == null ? r(($.el = l($.children || "")), H, ae) : ($.el = P.el);
      },
      _ = (P, $, H, ae) => {
        [P.el, P.anchor] = f(P.children, $, H, ae, P.el, P.anchor);
      },
      R = ({ el: P, anchor: $ }, H, ae) => {
        let le;
        for (; P && P !== $; ) (le = h(P)), r(P, H, ae), (P = le);
        r($, H, ae);
      },
      S = ({ el: P, anchor: $ }) => {
        let H;
        for (; P && P !== $; ) (H = h(P)), i(P), (P = H);
        i($);
      },
      x = (P, $, H, ae, le, he, Z, W, Q) => {
        $.type === "svg" ? (Z = "svg") : $.type === "math" && (Z = "mathml"),
          P == null ? E($, H, ae, le, he, Z, W, Q) : y(P, $, le, he, Z, W, Q);
      },
      E = (P, $, H, ae, le, he, Z, W) => {
        let Q, J;
        const { props: G, shapeFlag: X, transition: V, dirs: me } = P;
        if (
          ((Q = P.el = s(P.type, he, G && G.is, G)),
          X & 8
            ? u(Q, P.children)
            : X & 16 && v(P.children, Q, null, ae, le, Dd(P, he), Z, W),
          me && ao(P, null, ae, "created"),
          w(Q, P, P.scopeId, Z, ae),
          G)
        ) {
          for (const Pe in G)
            Pe !== "value" &&
              !kc(Pe) &&
              o(Q, Pe, null, G[Pe], he, P.children, ae, le, _e);
          "value" in G && o(Q, "value", null, G.value, he),
            (J = G.onVnodeBeforeMount) && wr(J, ae, P);
        }
        me && ao(P, null, ae, "beforeMount");
        const we = e2(le, V);
        we && V.beforeEnter(Q),
          r(Q, $, H),
          ((J = G && G.onVnodeMounted) || we || me) &&
            Dn(() => {
              J && wr(J, ae, P),
                we && V.enter(Q),
                me && ao(P, null, ae, "mounted");
            }, le);
      },
      w = (P, $, H, ae, le) => {
        if ((H && g(P, H), ae))
          for (let he = 0; he < ae.length; he++) g(P, ae[he]);
        if (le) {
          let he = le.subTree;
          if ($ === he) {
            const Z = le.vnode;
            w(P, Z, Z.scopeId, Z.slotScopeIds, le.parent);
          }
        }
      },
      v = (P, $, H, ae, le, he, Z, W, Q = 0) => {
        for (let J = Q; J < P.length; J++) {
          const G = (P[J] = W ? Oi(P[J]) : Tr(P[J]));
          p(null, G, $, H, ae, le, he, Z, W);
        }
      },
      y = (P, $, H, ae, le, he, Z) => {
        const W = ($.el = P.el);
        let { patchFlag: Q, dynamicChildren: J, dirs: G } = $;
        Q |= P.patchFlag & 16;
        const X = P.props || Nt,
          V = $.props || Nt;
        let me;
        if (
          (H && lo(H, !1),
          (me = V.onVnodeBeforeUpdate) && wr(me, H, $, P),
          G && ao($, P, H, "beforeUpdate"),
          H && lo(H, !0),
          J
            ? T(P.dynamicChildren, J, W, H, ae, Dd($, le), he)
            : Z || Y(P, $, W, null, H, ae, Dd($, le), he, !1),
          Q > 0)
        ) {
          if (Q & 16) A(W, $, X, V, H, ae, le);
          else if (
            (Q & 2 && X.class !== V.class && o(W, "class", null, V.class, le),
            Q & 4 && o(W, "style", X.style, V.style, le),
            Q & 8)
          ) {
            const we = $.dynamicProps;
            for (let Pe = 0; Pe < we.length; Pe++) {
              const ze = we[Pe],
                Ne = X[ze],
                Fe = V[ze];
              (Fe !== Ne || ze === "value") &&
                o(W, ze, Ne, Fe, le, P.children, H, ae, _e);
            }
          }
          Q & 1 && P.children !== $.children && u(W, $.children);
        } else !Z && J == null && A(W, $, X, V, H, ae, le);
        ((me = V.onVnodeUpdated) || G) &&
          Dn(() => {
            me && wr(me, H, $, P), G && ao($, P, H, "updated");
          }, ae);
      },
      T = (P, $, H, ae, le, he, Z) => {
        for (let W = 0; W < $.length; W++) {
          const Q = P[W],
            J = $[W],
            G =
              Q.el && (Q.type === pt || !Co(Q, J) || Q.shapeFlag & 70)
                ? d(Q.el)
                : H;
          p(Q, J, G, null, ae, le, he, Z, !0);
        }
      },
      A = (P, $, H, ae, le, he, Z) => {
        if (H !== ae) {
          if (H !== Nt)
            for (const W in H)
              !kc(W) &&
                !(W in ae) &&
                o(P, W, H[W], null, Z, $.children, le, he, _e);
          for (const W in ae) {
            if (kc(W)) continue;
            const Q = ae[W],
              J = H[W];
            Q !== J &&
              W !== "value" &&
              o(P, W, J, Q, Z, $.children, le, he, _e);
          }
          "value" in ae && o(P, "value", H.value, ae.value, Z);
        }
      },
      I = (P, $, H, ae, le, he, Z, W, Q) => {
        const J = ($.el = P ? P.el : a("")),
          G = ($.anchor = P ? P.anchor : a(""));
        let { patchFlag: X, dynamicChildren: V, slotScopeIds: me } = $;
        me && (W = W ? W.concat(me) : me),
          P == null
            ? (r(J, H, ae),
              r(G, H, ae),
              v($.children || [], H, G, le, he, Z, W, Q))
            : X > 0 && X & 64 && V && P.dynamicChildren
            ? (T(P.dynamicChildren, V, H, le, he, Z, W),
              ($.key != null || (le && $ === le.subTree)) && sg(P, $, !0))
            : Y(P, $, H, G, le, he, Z, W, Q);
      },
      L = (P, $, H, ae, le, he, Z, W, Q) => {
        ($.slotScopeIds = W),
          P == null
            ? $.shapeFlag & 512
              ? le.ctx.activate($, H, ae, Z, Q)
              : j($, H, ae, le, he, Z, Q)
            : k(P, $, Q);
      },
      j = (P, $, H, ae, le, he, Z) => {
        const W = (P.component = u2(P, ae, le));
        if ((ku(P) && (W.ctx.renderer = ge), d2(W), W.asyncDep)) {
          if ((le && le.registerDep(W, O), !P.el)) {
            const Q = (W.subTree = F(Rn));
            m(null, Q, $, H);
          }
        } else O(W, P, $, H, le, he, Z);
      },
      k = (P, $, H) => {
        const ae = ($.component = P.component);
        if (xE(P, $, H))
          if (ae.asyncDep && !ae.asyncResolved) {
            D(ae, $, H);
            return;
          } else
            (ae.next = $), gE(ae.update), (ae.effect.dirty = !0), ae.update();
        else ($.el = P.el), (ae.vnode = $);
      },
      O = (P, $, H, ae, le, he, Z) => {
        const W = () => {
            if (P.isMounted) {
              let { next: G, bu: X, u: V, parent: me, vnode: we } = P;
              {
                const Qe = D1(P);
                if (Qe) {
                  G && ((G.el = we.el), D(P, G, Z)),
                    Qe.asyncDep.then(() => {
                      P.isUnmounted || W();
                    });
                  return;
                }
              }
              let Pe = G,
                ze;
              lo(P, !1),
                G ? ((G.el = we.el), D(P, G, Z)) : (G = we),
                X && Id(X),
                (ze = G.props && G.props.onVnodeBeforeUpdate) &&
                  wr(ze, me, G, we),
                lo(P, !0);
              const Ne = Md(P),
                Fe = P.subTree;
              (P.subTree = Ne),
                p(Fe, Ne, d(Fe.el), ie(Fe), P, le, he),
                (G.el = Ne.el),
                Pe === null && CE(P, Ne.el),
                V && Dn(V, le),
                (ze = G.props && G.props.onVnodeUpdated) &&
                  Dn(() => wr(ze, me, G, we), le);
            } else {
              let G;
              const { el: X, props: V } = $,
                { bm: me, m: we, parent: Pe } = P,
                ze = Oa($);
              if (
                (lo(P, !1),
                me && Id(me),
                !ze && (G = V && V.onVnodeBeforeMount) && wr(G, Pe, $),
                lo(P, !0),
                X && Me)
              ) {
                const Ne = () => {
                  (P.subTree = Md(P)), Me(X, P.subTree, P, le, null);
                };
                ze
                  ? $.type.__asyncLoader().then(() => !P.isUnmounted && Ne())
                  : Ne();
              } else {
                const Ne = (P.subTree = Md(P));
                p(null, Ne, H, ae, P, le, he), ($.el = Ne.el);
              }
              if ((we && Dn(we, le), !ze && (G = V && V.onVnodeMounted))) {
                const Ne = $;
                Dn(() => wr(G, Pe, Ne), le);
              }
              ($.shapeFlag & 256 ||
                (Pe && Oa(Pe.vnode) && Pe.vnode.shapeFlag & 256)) &&
                P.a &&
                Dn(P.a, le),
                (P.isMounted = !0),
                ($ = H = ae = null);
            }
          },
          Q = (P.effect = new Vf(W, tr, () => Qf(J), P.scope)),
          J = (P.update = () => {
            Q.dirty && Q.run();
          });
        (J.id = P.uid), lo(P, !0), J();
      },
      D = (P, $, H) => {
        $.component = P;
        const ae = P.vnode.props;
        (P.vnode = $),
          (P.next = null),
          KE(P, $.props, ae, H),
          ZE(P, $.children, H),
          Bo(),
          Xp(P),
          No();
      },
      Y = (P, $, H, ae, le, he, Z, W, Q = !1) => {
        const J = P && P.children,
          G = P ? P.shapeFlag : 0,
          X = $.children,
          { patchFlag: V, shapeFlag: me } = $;
        if (V > 0) {
          if (V & 128) {
            de(J, X, H, ae, le, he, Z, W, Q);
            return;
          } else if (V & 256) {
            se(J, X, H, ae, le, he, Z, W, Q);
            return;
          }
        }
        me & 8
          ? (G & 16 && _e(J, le, he), X !== J && u(H, X))
          : G & 16
          ? me & 16
            ? de(J, X, H, ae, le, he, Z, W, Q)
            : _e(J, le, he, !0)
          : (G & 8 && u(H, ""), me & 16 && v(X, H, ae, le, he, Z, W, Q));
      },
      se = (P, $, H, ae, le, he, Z, W, Q) => {
        (P = P || _s), ($ = $ || _s);
        const J = P.length,
          G = $.length,
          X = Math.min(J, G);
        let V;
        for (V = 0; V < X; V++) {
          const me = ($[V] = Q ? Oi($[V]) : Tr($[V]));
          p(P[V], me, H, null, le, he, Z, W, Q);
        }
        J > G ? _e(P, le, he, !0, !1, X) : v($, H, ae, le, he, Z, W, Q, X);
      },
      de = (P, $, H, ae, le, he, Z, W, Q) => {
        let J = 0;
        const G = $.length;
        let X = P.length - 1,
          V = G - 1;
        for (; J <= X && J <= V; ) {
          const me = P[J],
            we = ($[J] = Q ? Oi($[J]) : Tr($[J]));
          if (Co(me, we)) p(me, we, H, null, le, he, Z, W, Q);
          else break;
          J++;
        }
        for (; J <= X && J <= V; ) {
          const me = P[X],
            we = ($[V] = Q ? Oi($[V]) : Tr($[V]));
          if (Co(me, we)) p(me, we, H, null, le, he, Z, W, Q);
          else break;
          X--, V--;
        }
        if (J > X) {
          if (J <= V) {
            const me = V + 1,
              we = me < G ? $[me].el : ae;
            for (; J <= V; )
              p(null, ($[J] = Q ? Oi($[J]) : Tr($[J])), H, we, le, he, Z, W, Q),
                J++;
          }
        } else if (J > V) for (; J <= X; ) z(P[J], le, he, !0), J++;
        else {
          const me = J,
            we = J,
            Pe = new Map();
          for (J = we; J <= V; J++) {
            const ve = ($[J] = Q ? Oi($[J]) : Tr($[J]));
            ve.key != null && Pe.set(ve.key, J);
          }
          let ze,
            Ne = 0;
          const Fe = V - we + 1;
          let Qe = !1,
            It = 0;
          const rt = new Array(Fe);
          for (J = 0; J < Fe; J++) rt[J] = 0;
          for (J = me; J <= X; J++) {
            const ve = P[J];
            if (Ne >= Fe) {
              z(ve, le, he, !0);
              continue;
            }
            let Le;
            if (ve.key != null) Le = Pe.get(ve.key);
            else
              for (ze = we; ze <= V; ze++)
                if (rt[ze - we] === 0 && Co(ve, $[ze])) {
                  Le = ze;
                  break;
                }
            Le === void 0
              ? z(ve, le, he, !0)
              : ((rt[Le - we] = J + 1),
                Le >= It ? (It = Le) : (Qe = !0),
                p(ve, $[Le], H, null, le, he, Z, W, Q),
                Ne++);
          }
          const ln = Qe ? t2(rt) : _s;
          for (ze = ln.length - 1, J = Fe - 1; J >= 0; J--) {
            const ve = we + J,
              Le = $[ve],
              Re = ve + 1 < G ? $[ve + 1].el : ae;
            rt[J] === 0
              ? p(null, Le, H, Re, le, he, Z, W, Q)
              : Qe && (ze < 0 || J !== ln[ze] ? fe(Le, H, Re, 2) : ze--);
          }
        }
      },
      fe = (P, $, H, ae, le = null) => {
        const { el: he, type: Z, transition: W, children: Q, shapeFlag: J } = P;
        if (J & 6) {
          fe(P.component.subTree, $, H, ae);
          return;
        }
        if (J & 128) {
          P.suspense.move($, H, ae);
          return;
        }
        if (J & 64) {
          Z.move(P, $, H, ge);
          return;
        }
        if (Z === pt) {
          r(he, $, H);
          for (let X = 0; X < Q.length; X++) fe(Q[X], $, H, ae);
          r(P.anchor, $, H);
          return;
        }
        if (Z === zd) {
          R(P, $, H);
          return;
        }
        if (ae !== 2 && J & 1 && W)
          if (ae === 0)
            W.beforeEnter(he), r(he, $, H), Dn(() => W.enter(he), le);
          else {
            const { leave: X, delayLeave: V, afterLeave: me } = W,
              we = () => r(he, $, H),
              Pe = () => {
                X(he, () => {
                  we(), me && me();
                });
              };
            V ? V(he, we, Pe) : Pe();
          }
        else r(he, $, H);
      },
      z = (P, $, H, ae = !1, le = !1) => {
        const {
          type: he,
          props: Z,
          ref: W,
          children: Q,
          dynamicChildren: J,
          shapeFlag: G,
          patchFlag: X,
          dirs: V,
        } = P;
        if ((W != null && jh(W, null, H, P, !0), G & 256)) {
          $.ctx.deactivate(P);
          return;
        }
        const me = G & 1 && V,
          we = !Oa(P);
        let Pe;
        if ((we && (Pe = Z && Z.onVnodeBeforeUnmount) && wr(Pe, $, P), G & 6))
          K(P.component, H, ae);
        else {
          if (G & 128) {
            P.suspense.unmount(H, ae);
            return;
          }
          me && ao(P, null, $, "beforeUnmount"),
            G & 64
              ? P.type.remove(P, $, H, le, ge, ae)
              : J && (he !== pt || (X > 0 && X & 64))
              ? _e(J, $, H, !1, !0)
              : ((he === pt && X & 384) || (!le && G & 16)) && _e(Q, $, H),
            ae && ee(P);
        }
        ((we && (Pe = Z && Z.onVnodeUnmounted)) || me) &&
          Dn(() => {
            Pe && wr(Pe, $, P), me && ao(P, null, $, "unmounted");
          }, H);
      },
      ee = (P) => {
        const { type: $, el: H, anchor: ae, transition: le } = P;
        if ($ === pt) {
          ue(H, ae);
          return;
        }
        if ($ === zd) {
          S(P);
          return;
        }
        const he = () => {
          i(H), le && !le.persisted && le.afterLeave && le.afterLeave();
        };
        if (P.shapeFlag & 1 && le && !le.persisted) {
          const { leave: Z, delayLeave: W } = le,
            Q = () => Z(H, he);
          W ? W(P.el, he, Q) : Q();
        } else he();
      },
      ue = (P, $) => {
        let H;
        for (; P !== $; ) (H = h(P)), i(P), (P = H);
        i($);
      },
      K = (P, $, H) => {
        const { bum: ae, scope: le, update: he, subTree: Z, um: W } = P;
        ae && Id(ae),
          le.stop(),
          he && ((he.active = !1), z(Z, P, $, H)),
          W && Dn(W, $),
          Dn(() => {
            P.isUnmounted = !0;
          }, $),
          $ &&
            $.pendingBranch &&
            !$.isUnmounted &&
            P.asyncDep &&
            !P.asyncResolved &&
            P.suspenseId === $.pendingId &&
            ($.deps--, $.deps === 0 && $.resolve());
      },
      _e = (P, $, H, ae = !1, le = !1, he = 0) => {
        for (let Z = he; Z < P.length; Z++) z(P[Z], $, H, ae, le);
      },
      ie = (P) =>
        P.shapeFlag & 6
          ? ie(P.component.subTree)
          : P.shapeFlag & 128
          ? P.suspense.next()
          : h(P.anchor || P.el);
    let pe = !1;
    const re = (P, $, H) => {
        P == null
          ? $._vnode && z($._vnode, null, null, !0)
          : p($._vnode || null, P, $, null, null, null, H),
          pe || ((pe = !0), Xp(), p1(), (pe = !1)),
          ($._vnode = P);
      },
      ge = { p, um: z, m: fe, r: ee, mt: j, mc: v, pc: Y, pbc: T, n: ie, o: t };
    let ke, Me;
    return (
      e && ([ke, Me] = e(ge)),
      { render: re, hydrate: ke, createApp: VE(re, ke) }
    );
  }
  function Dd({ type: t, props: e }, n) {
    return (n === "svg" && t === "foreignObject") ||
      (n === "mathml" &&
        t === "annotation-xml" &&
        e &&
        e.encoding &&
        e.encoding.includes("html"))
      ? void 0
      : n;
  }
  function lo({ effect: t, update: e }, n) {
    t.allowRecurse = e.allowRecurse = n;
  }
  function e2(t, e) {
    return (!t || (t && !t.pendingBranch)) && e && !e.persisted;
  }
  function sg(t, e, n = !1) {
    const r = t.children,
      i = e.children;
    if (Je(r) && Je(i))
      for (let o = 0; o < r.length; o++) {
        const s = r[o];
        let a = i[o];
        a.shapeFlag & 1 &&
          !a.dynamicChildren &&
          ((a.patchFlag <= 0 || a.patchFlag === 32) &&
            ((a = i[o] = Oi(i[o])), (a.el = s.el)),
          n || sg(s, a)),
          a.type === El && (a.el = s.el);
      }
  }
  function t2(t) {
    const e = t.slice(),
      n = [0];
    let r, i, o, s, a;
    const l = t.length;
    for (r = 0; r < l; r++) {
      const c = t[r];
      if (c !== 0) {
        if (((i = n[n.length - 1]), t[i] < c)) {
          (e[r] = i), n.push(r);
          continue;
        }
        for (o = 0, s = n.length - 1; o < s; )
          (a = (o + s) >> 1), t[n[a]] < c ? (o = a + 1) : (s = a);
        c < t[n[o]] && (o > 0 && (e[r] = n[o - 1]), (n[o] = r));
      }
    }
    for (o = n.length, s = n[o - 1]; o-- > 0; ) (n[o] = s), (s = e[s]);
    return n;
  }
  function D1(t) {
    const e = t.subTree.component;
    if (e) return e.asyncDep && !e.asyncResolved ? e : D1(e);
  }
  const n2 = (t) => t.__isTeleport,
    La = (t) => t && (t.disabled || t.disabled === ""),
    sm = (t) => typeof SVGElement < "u" && t instanceof SVGElement,
    am = (t) =>
      typeof MathMLElement == "function" && t instanceof MathMLElement,
    Uh = (t, e) => {
      const n = t && t.to;
      return Jt(n) ? (e ? e(n) : null) : n;
    },
    r2 = {
      name: "Teleport",
      __isTeleport: !0,
      process(t, e, n, r, i, o, s, a, l, c) {
        const {
            mc: u,
            pc: d,
            pbc: h,
            o: { insert: g, querySelector: f, createText: p, createComment: b },
          } = c,
          m = La(e.props);
        let { shapeFlag: _, children: R, dynamicChildren: S } = e;
        if (t == null) {
          const x = (e.el = p("")),
            E = (e.anchor = p(""));
          g(x, n, r), g(E, n, r);
          const w = (e.target = Uh(e.props, f)),
            v = (e.targetAnchor = p(""));
          w &&
            (g(v, w),
            s === "svg" || sm(w)
              ? (s = "svg")
              : (s === "mathml" || am(w)) && (s = "mathml"));
          const y = (T, A) => {
            _ & 16 && u(R, T, A, i, o, s, a, l);
          };
          m ? y(n, E) : w && y(w, v);
        } else {
          e.el = t.el;
          const x = (e.anchor = t.anchor),
            E = (e.target = t.target),
            w = (e.targetAnchor = t.targetAnchor),
            v = La(t.props),
            y = v ? n : E,
            T = v ? x : w;
          if (
            (s === "svg" || sm(E)
              ? (s = "svg")
              : (s === "mathml" || am(E)) && (s = "mathml"),
            S
              ? (h(t.dynamicChildren, S, y, i, o, s, a), sg(t, e, !0))
              : l || d(t, e, y, T, i, o, s, a, !1),
            m)
          )
            v
              ? e.props &&
                t.props &&
                e.props.to !== t.props.to &&
                (e.props.to = t.props.to)
              : tc(e, n, x, c, 1);
          else if ((e.props && e.props.to) !== (t.props && t.props.to)) {
            const A = (e.target = Uh(e.props, f));
            A && tc(e, A, null, c, 0);
          } else v && tc(e, E, w, c, 1);
        }
        z1(e);
      },
      remove(t, e, n, r, { um: i, o: { remove: o } }, s) {
        const {
          shapeFlag: a,
          children: l,
          anchor: c,
          targetAnchor: u,
          target: d,
          props: h,
        } = t;
        if ((d && o(u), s && o(c), a & 16)) {
          const g = s || !La(h);
          for (let f = 0; f < l.length; f++) {
            const p = l[f];
            i(p, e, n, g, !!p.dynamicChildren);
          }
        }
      },
      move: tc,
      hydrate: i2,
    };
  function tc(t, e, n, { o: { insert: r }, m: i }, o = 2) {
    o === 0 && r(t.targetAnchor, e, n);
    const { el: s, anchor: a, shapeFlag: l, children: c, props: u } = t,
      d = o === 2;
    if ((d && r(s, e, n), (!d || La(u)) && l & 16))
      for (let h = 0; h < c.length; h++) i(c[h], e, n, 2);
    d && r(a, e, n);
  }
  function i2(
    t,
    e,
    n,
    r,
    i,
    o,
    { o: { nextSibling: s, parentNode: a, querySelector: l } },
    c
  ) {
    const u = (e.target = Uh(e.props, l));
    if (u) {
      const d = u._lpa || u.firstChild;
      if (e.shapeFlag & 16)
        if (La(e.props))
          (e.anchor = c(s(t), e, a(t), n, r, i, o)), (e.targetAnchor = d);
        else {
          e.anchor = s(t);
          let h = d;
          for (; h; )
            if (
              ((h = s(h)),
              h && h.nodeType === 8 && h.data === "teleport anchor")
            ) {
              (e.targetAnchor = h),
                (u._lpa = e.targetAnchor && s(e.targetAnchor));
              break;
            }
          c(d, e, u, n, r, i, o);
        }
      z1(e);
    }
    return e.anchor && s(e.anchor);
  }
  const Sl = r2;
  function z1(t) {
    const e = t.ctx;
    if (e && e.ut) {
      let n = t.children[0].el;
      for (; n && n !== t.targetAnchor; )
        n.nodeType === 1 && n.setAttribute("data-v-owner", e.uid),
          (n = n.nextSibling);
      e.ut();
    }
  }
  const pt = Symbol.for("v-fgt"),
    El = Symbol.for("v-txt"),
    Rn = Symbol.for("v-cmt"),
    zd = Symbol.for("v-stc"),
    $a = [];
  let pr = null;
  function Ie(t = !1) {
    $a.push((pr = t ? null : []));
  }
  function o2() {
    $a.pop(), (pr = $a[$a.length - 1] || null);
  }
  let Ja = 1;
  function lm(t) {
    Ja += t;
  }
  function F1(t) {
    return (
      (t.dynamicChildren = Ja > 0 ? pr || _s : null),
      o2(),
      Ja > 0 && pr && pr.push(t),
      t
    );
  }
  function nn(t, e, n, r, i, o) {
    return F1(At(t, e, n, r, i, o, !0));
  }
  function He(t, e, n, r, i) {
    return F1(F(t, e, n, r, i, !0));
  }
  function Qa(t) {
    return t ? t.__v_isVNode === !0 : !1;
  }
  function Co(t, e) {
    return t.type === e.type && t.key === e.key;
  }
  const Ou = "__vInternal",
    B1 = ({ key: t }) => t ?? null,
    Oc = ({ ref: t, ref_key: e, ref_for: n }) => (
      typeof t == "number" && (t = "" + t),
      t != null
        ? Jt(t) || xe(t) || nt(t)
          ? { i: rn, r: t, k: e, f: !!n }
          : t
        : null
    );
  function At(
    t,
    e = null,
    n = null,
    r = 0,
    i = null,
    o = t === pt ? 0 : 1,
    s = !1,
    a = !1
  ) {
    const l = {
      __v_isVNode: !0,
      __v_skip: !0,
      type: t,
      props: e,
      key: e && B1(e),
      ref: e && Oc(e),
      scopeId: b1,
      slotScopeIds: null,
      children: n,
      component: null,
      suspense: null,
      ssContent: null,
      ssFallback: null,
      dirs: null,
      transition: null,
      el: null,
      anchor: null,
      target: null,
      targetAnchor: null,
      staticCount: 0,
      shapeFlag: o,
      patchFlag: r,
      dynamicProps: i,
      dynamicChildren: null,
      appContext: null,
      ctx: rn,
    };
    return (
      a
        ? (ag(l, n), o & 128 && t.normalize(l))
        : n && (l.shapeFlag |= Jt(n) ? 8 : 16),
      Ja > 0 &&
        !s &&
        pr &&
        (l.patchFlag > 0 || o & 6) &&
        l.patchFlag !== 32 &&
        pr.push(l),
      l
    );
  }
  const F = s2;
  function s2(t, e = null, n = null, r = 0, i = null, o = !1) {
    if (((!t || t === wE) && (t = Rn), Qa(t))) {
      const a = br(t, e, !0);
      return (
        n && ag(a, n),
        Ja > 0 &&
          !o &&
          pr &&
          (a.shapeFlag & 6 ? (pr[pr.indexOf(t)] = a) : pr.push(a)),
        (a.patchFlag |= -2),
        a
      );
    }
    if ((m2(t) && (t = t.__vccOpts), e)) {
      e = a2(e);
      let { class: a, style: l } = e;
      a && !Jt(a) && (e.class = Uf(a)),
        zt(l) && (s1(l) && !Je(l) && (l = sn({}, l)), (e.style = Ru(l)));
    }
    const s = Jt(t) ? 1 : EE(t) ? 128 : n2(t) ? 64 : zt(t) ? 4 : nt(t) ? 2 : 0;
    return At(t, e, n, r, i, s, o, !0);
  }
  function a2(t) {
    return t ? (s1(t) || Ou in t ? sn({}, t) : t) : null;
  }
  function br(t, e, n = !1) {
    const { props: r, ref: i, patchFlag: o, children: s } = t,
      a = e ? qs(r || {}, e) : r;
    return {
      __v_isVNode: !0,
      __v_skip: !0,
      type: t.type,
      props: a,
      key: a && B1(a),
      ref:
        e && e.ref
          ? n && i
            ? Je(i)
              ? i.concat(Oc(e))
              : [i, Oc(e)]
            : Oc(e)
          : i,
      scopeId: t.scopeId,
      slotScopeIds: t.slotScopeIds,
      children: s,
      target: t.target,
      targetAnchor: t.targetAnchor,
      staticCount: t.staticCount,
      shapeFlag: t.shapeFlag,
      patchFlag: e && t.type !== pt ? (o === -1 ? 16 : o | 16) : o,
      dynamicProps: t.dynamicProps,
      dynamicChildren: t.dynamicChildren,
      appContext: t.appContext,
      dirs: t.dirs,
      transition: t.transition,
      component: t.component,
      suspense: t.suspense,
      ssContent: t.ssContent && br(t.ssContent),
      ssFallback: t.ssFallback && br(t.ssFallback),
      el: t.el,
      anchor: t.anchor,
      ctx: t.ctx,
      ce: t.ce,
    };
  }
  function Se(t = " ", e = 0) {
    return F(El, null, t, e);
  }
  function et(t = "", e = !1) {
    return e ? (Ie(), He(Rn, null, t)) : F(Rn, null, t);
  }
  function Tr(t) {
    return t == null || typeof t == "boolean"
      ? F(Rn)
      : Je(t)
      ? F(pt, null, t.slice())
      : typeof t == "object"
      ? Oi(t)
      : F(El, null, String(t));
  }
  function Oi(t) {
    return (t.el === null && t.patchFlag !== -1) || t.memo ? t : br(t);
  }
  function ag(t, e) {
    let n = 0;
    const { shapeFlag: r } = t;
    if (e == null) e = null;
    else if (Je(e)) n = 16;
    else if (typeof e == "object")
      if (r & 65) {
        const i = e.default;
        i && (i._c && (i._d = !1), ag(t, i()), i._c && (i._d = !0));
        return;
      } else {
        n = 32;
        const i = e._;
        !i && !(Ou in e)
          ? (e._ctx = rn)
          : i === 3 &&
            rn &&
            (rn.slots._ === 1 ? (e._ = 1) : ((e._ = 2), (t.patchFlag |= 1024)));
      }
    else
      nt(e)
        ? ((e = { default: e, _ctx: rn }), (n = 32))
        : ((e = String(e)), r & 64 ? ((n = 16), (e = [Se(e)])) : (n = 8));
    (t.children = e), (t.shapeFlag |= n);
  }
  function qs(...t) {
    const e = {};
    for (let n = 0; n < t.length; n++) {
      const r = t[n];
      for (const i in r)
        if (i === "class")
          e.class !== r.class && (e.class = Uf([e.class, r.class]));
        else if (i === "style") e.style = Ru([e.style, r.style]);
        else if (_u(i)) {
          const o = e[i],
            s = r[i];
          s &&
            o !== s &&
            !(Je(o) && o.includes(s)) &&
            (e[i] = o ? [].concat(o, s) : s);
        } else i !== "" && (e[i] = r[i]);
    }
    return e;
  }
  function wr(t, e, n, r = null) {
    rr(t, e, 7, [n, r]);
  }
  const l2 = k1();
  let c2 = 0;
  function u2(t, e, n) {
    const r = t.type,
      i = (e ? e.appContext : t.appContext) || l2,
      o = {
        uid: c2++,
        vnode: t,
        type: r,
        parent: e,
        appContext: i,
        root: null,
        next: null,
        subTree: null,
        effect: null,
        update: null,
        scope: new Ub(!0),
        render: null,
        proxy: null,
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: e ? e.provides : Object.create(i.provides),
        accessCache: null,
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: O1(r, i),
        emitsOptions: v1(r, i),
        emit: null,
        emitted: null,
        propsDefaults: Nt,
        inheritAttrs: r.inheritAttrs,
        ctx: Nt,
        data: Nt,
        props: Nt,
        attrs: Nt,
        slots: Nt,
        refs: Nt,
        setupState: Nt,
        setupContext: null,
        attrsProxy: null,
        slotsProxy: null,
        suspense: n,
        suspenseId: n ? n.pendingId : 0,
        asyncDep: null,
        asyncResolved: !1,
        isMounted: !1,
        isUnmounted: !1,
        isDeactivated: !1,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null,
      };
    return (
      (o.ctx = { _: o }),
      (o.root = e ? e.root : o),
      (o.emit = vE.bind(null, o)),
      t.ce && t.ce(o),
      o
    );
  }
  let gn = null;
  const Wo = () => gn || rn;
  let Gc, Vh;
  {
    const t = Hb(),
      e = (n, r) => {
        let i;
        return (
          (i = t[n]) || (i = t[n] = []),
          i.push(r),
          (o) => {
            i.length > 1 ? i.forEach((s) => s(o)) : i[0](o);
          }
        );
      };
    (Gc = e("__VUE_INSTANCE_SETTERS__", (n) => (gn = n))),
      (Vh = e("__VUE_SSR_SETTERS__", (n) => (Mu = n)));
  }
  const Rl = (t) => {
      const e = gn;
      return (
        Gc(t),
        t.scope.on(),
        () => {
          t.scope.off(), Gc(e);
        }
      );
    },
    cm = () => {
      gn && gn.scope.off(), Gc(null);
    };
  function N1(t) {
    return t.vnode.shapeFlag & 4;
  }
  let Mu = !1;
  function d2(t, e = !1) {
    e && Vh(e);
    const { props: n, children: r } = t.vnode,
      i = N1(t);
    XE(t, n, i, e), qE(t, r);
    const o = i ? h2(t, e) : void 0;
    return e && Vh(!1), o;
  }
  function h2(t, e) {
    const n = t.type;
    (t.accessCache = Object.create(null)), (t.proxy = Ms(new Proxy(t.ctx, FE)));
    const { setup: r } = n;
    if (r) {
      const i = (t.setupContext = r.length > 1 ? g2(t) : null),
        o = Rl(t);
      Bo();
      const s = Ni(r, t, 0, [t.props, i]);
      if ((No(), o(), Fb(s))) {
        if ((s.then(cm, cm), e))
          return s
            .then((a) => {
              um(t, a, e);
            })
            .catch((a) => {
              Pu(a, t, 0);
            });
        t.asyncDep = s;
      } else um(t, s, e);
    } else H1(t, e);
  }
  function um(t, e, n) {
    nt(e)
      ? t.type.__ssrInlineRender
        ? (t.ssrRender = e)
        : (t.render = e)
      : zt(e) && (t.setupState = d1(e)),
      H1(t, n);
  }
  let dm;
  function H1(t, e, n) {
    const r = t.type;
    if (!t.render) {
      if (!e && dm && !r.render) {
        const i = r.template || ig(t).template;
        if (i) {
          const { isCustomElement: o, compilerOptions: s } =
              t.appContext.config,
            { delimiters: a, compilerOptions: l } = r,
            c = sn(sn({ isCustomElement: o, delimiters: a }, s), l);
          r.render = dm(i, c);
        }
      }
      t.render = r.render || tr;
    }
    {
      const i = Rl(t);
      Bo();
      try {
        BE(t);
      } finally {
        No(), i();
      }
    }
  }
  function f2(t) {
    return (
      t.attrsProxy ||
      (t.attrsProxy = new Proxy(t.attrs, {
        get(e, n) {
          return Wn(t, "get", "$attrs"), e[n];
        },
      }))
    );
  }
  function g2(t) {
    const e = (n) => {
      t.exposed = n || {};
    };
    return {
      get attrs() {
        return f2(t);
      },
      slots: t.slots,
      emit: t.emit,
      expose: e,
    };
  }
  function Lu(t) {
    if (t.exposed)
      return (
        t.exposeProxy ||
        (t.exposeProxy = new Proxy(d1(Ms(t.exposed)), {
          get(e, n) {
            if (n in e) return e[n];
            if (n in Ma) return Ma[n](t);
          },
          has(e, n) {
            return n in e || n in Ma;
          },
        }))
      );
  }
  function p2(t, e = !0) {
    return nt(t) ? t.displayName || t.name : t.name || (e && t.__name);
  }
  function m2(t) {
    return nt(t) && "__vccOpts" in t;
  }
  const ce = (t, e) => sE(t, e, Mu);
  function C(t, e, n) {
    const r = arguments.length;
    return r === 2
      ? zt(e) && !Je(e)
        ? Qa(e)
          ? F(t, null, [e])
          : F(t, e)
        : F(t, null, e)
      : (r > 3
          ? (n = Array.prototype.slice.call(arguments, 2))
          : r === 3 && Qa(n) && (n = [n]),
        F(t, e, n));
  }
  const v2 = "3.4.15";
  /**
   * @vue/runtime-dom v3.4.15
   * (c) 2018-present Yuxi (Evan) You and Vue contributors
   * @license MIT
   **/ const b2 = "http://www.w3.org/2000/svg",
    y2 = "http://www.w3.org/1998/Math/MathML",
    Mi = typeof document < "u" ? document : null,
    hm = Mi && Mi.createElement("template"),
    x2 = {
      insert: (t, e, n) => {
        e.insertBefore(t, n || null);
      },
      remove: (t) => {
        const e = t.parentNode;
        e && e.removeChild(t);
      },
      createElement: (t, e, n, r) => {
        const i =
          e === "svg"
            ? Mi.createElementNS(b2, t)
            : e === "mathml"
            ? Mi.createElementNS(y2, t)
            : Mi.createElement(t, n ? { is: n } : void 0);
        return (
          t === "select" &&
            r &&
            r.multiple != null &&
            i.setAttribute("multiple", r.multiple),
          i
        );
      },
      createText: (t) => Mi.createTextNode(t),
      createComment: (t) => Mi.createComment(t),
      setText: (t, e) => {
        t.nodeValue = e;
      },
      setElementText: (t, e) => {
        t.textContent = e;
      },
      parentNode: (t) => t.parentNode,
      nextSibling: (t) => t.nextSibling,
      querySelector: (t) => Mi.querySelector(t),
      setScopeId(t, e) {
        t.setAttribute(e, "");
      },
      insertStaticContent(t, e, n, r, i, o) {
        const s = n ? n.previousSibling : e.lastChild;
        if (i && (i === o || i.nextSibling))
          for (
            ;
            e.insertBefore(i.cloneNode(!0), n),
              !(i === o || !(i = i.nextSibling));

          );
        else {
          hm.innerHTML =
            r === "svg"
              ? `<svg>${t}</svg>`
              : r === "mathml"
              ? `<math>${t}</math>`
              : t;
          const a = hm.content;
          if (r === "svg" || r === "mathml") {
            const l = a.firstChild;
            for (; l.firstChild; ) a.appendChild(l.firstChild);
            a.removeChild(l);
          }
          e.insertBefore(a, n);
        }
        return [
          s ? s.nextSibling : e.firstChild,
          n ? n.previousSibling : e.lastChild,
        ];
      },
    },
    vi = "transition",
    ha = "animation",
    Ls = Symbol("_vtc"),
    vn = (t, { slots: e }) => C(IE, j1(t), e);
  vn.displayName = "Transition";
  const W1 = {
      name: String,
      type: String,
      css: { type: Boolean, default: !0 },
      duration: [String, Number, Object],
      enterFromClass: String,
      enterActiveClass: String,
      enterToClass: String,
      appearFromClass: String,
      appearActiveClass: String,
      appearToClass: String,
      leaveFromClass: String,
      leaveActiveClass: String,
      leaveToClass: String,
    },
    C2 = (vn.props = sn({}, _1, W1)),
    co = (t, e = []) => {
      Je(t) ? t.forEach((n) => n(...e)) : t && t(...e);
    },
    fm = (t) => (t ? (Je(t) ? t.some((e) => e.length > 1) : t.length > 1) : !1);
  function j1(t) {
    const e = {};
    for (const I in t) I in W1 || (e[I] = t[I]);
    if (t.css === !1) return e;
    const {
        name: n = "v",
        type: r,
        duration: i,
        enterFromClass: o = `${n}-enter-from`,
        enterActiveClass: s = `${n}-enter-active`,
        enterToClass: a = `${n}-enter-to`,
        appearFromClass: l = o,
        appearActiveClass: c = s,
        appearToClass: u = a,
        leaveFromClass: d = `${n}-leave-from`,
        leaveActiveClass: h = `${n}-leave-active`,
        leaveToClass: g = `${n}-leave-to`,
      } = t,
      f = _2(i),
      p = f && f[0],
      b = f && f[1],
      {
        onBeforeEnter: m,
        onEnter: _,
        onEnterCancelled: R,
        onLeave: S,
        onLeaveCancelled: x,
        onBeforeAppear: E = m,
        onAppear: w = _,
        onAppearCancelled: v = R,
      } = e,
      y = (I, L, j) => {
        Ri(I, L ? u : a), Ri(I, L ? c : s), j && j();
      },
      T = (I, L) => {
        (I._isLeaving = !1), Ri(I, d), Ri(I, g), Ri(I, h), L && L();
      },
      A = (I) => (L, j) => {
        const k = I ? w : _,
          O = () => y(L, I, j);
        co(k, [L, O]),
          gm(() => {
            Ri(L, I ? l : o), Vr(L, I ? u : a), fm(k) || pm(L, r, p, O);
          });
      };
    return sn(e, {
      onBeforeEnter(I) {
        co(m, [I]), Vr(I, o), Vr(I, s);
      },
      onBeforeAppear(I) {
        co(E, [I]), Vr(I, l), Vr(I, c);
      },
      onEnter: A(!1),
      onAppear: A(!0),
      onLeave(I, L) {
        I._isLeaving = !0;
        const j = () => T(I, L);
        Vr(I, d),
          V1(),
          Vr(I, h),
          gm(() => {
            I._isLeaving && (Ri(I, d), Vr(I, g), fm(S) || pm(I, r, b, j));
          }),
          co(S, [I, j]);
      },
      onEnterCancelled(I) {
        y(I, !1), co(R, [I]);
      },
      onAppearCancelled(I) {
        y(I, !0), co(v, [I]);
      },
      onLeaveCancelled(I) {
        T(I), co(x, [I]);
      },
    });
  }
  function _2(t) {
    if (t == null) return null;
    if (zt(t)) return [Fd(t.enter), Fd(t.leave)];
    {
      const e = Fd(t);
      return [e, e];
    }
  }
  function Fd(t) {
    return IS(t);
  }
  function Vr(t, e) {
    e.split(/\s+/).forEach((n) => n && t.classList.add(n)),
      (t[Ls] || (t[Ls] = new Set())).add(e);
  }
  function Ri(t, e) {
    e.split(/\s+/).forEach((r) => r && t.classList.remove(r));
    const n = t[Ls];
    n && (n.delete(e), n.size || (t[Ls] = void 0));
  }
  function gm(t) {
    requestAnimationFrame(() => {
      requestAnimationFrame(t);
    });
  }
  let w2 = 0;
  function pm(t, e, n, r) {
    const i = (t._endId = ++w2),
      o = () => {
        i === t._endId && r();
      };
    if (n) return setTimeout(o, n);
    const { type: s, timeout: a, propCount: l } = U1(t, e);
    if (!s) return r();
    const c = s + "end";
    let u = 0;
    const d = () => {
        t.removeEventListener(c, h), o();
      },
      h = (g) => {
        g.target === t && ++u >= l && d();
      };
    setTimeout(() => {
      u < l && d();
    }, a + 1),
      t.addEventListener(c, h);
  }
  function U1(t, e) {
    const n = window.getComputedStyle(t),
      r = (f) => (n[f] || "").split(", "),
      i = r(`${vi}Delay`),
      o = r(`${vi}Duration`),
      s = mm(i, o),
      a = r(`${ha}Delay`),
      l = r(`${ha}Duration`),
      c = mm(a, l);
    let u = null,
      d = 0,
      h = 0;
    e === vi
      ? s > 0 && ((u = vi), (d = s), (h = o.length))
      : e === ha
      ? c > 0 && ((u = ha), (d = c), (h = l.length))
      : ((d = Math.max(s, c)),
        (u = d > 0 ? (s > c ? vi : ha) : null),
        (h = u ? (u === vi ? o.length : l.length) : 0));
    const g =
      u === vi && /\b(transform|all)(,|$)/.test(r(`${vi}Property`).toString());
    return { type: u, timeout: d, propCount: h, hasTransform: g };
  }
  function mm(t, e) {
    for (; t.length < e.length; ) t = t.concat(t);
    return Math.max(...e.map((n, r) => vm(n) + vm(t[r])));
  }
  function vm(t) {
    return t === "auto" ? 0 : Number(t.slice(0, -1).replace(",", ".")) * 1e3;
  }
  function V1() {
    return document.body.offsetHeight;
  }
  function S2(t, e, n) {
    const r = t[Ls];
    r && (e = (e ? [e, ...r] : [...r]).join(" ")),
      e == null
        ? t.removeAttribute("class")
        : n
        ? t.setAttribute("class", e)
        : (t.className = e);
  }
  const lg = Symbol("_vod"),
    $s = {
      beforeMount(t, { value: e }, { transition: n }) {
        (t[lg] = t.style.display === "none" ? "" : t.style.display),
          n && e ? n.beforeEnter(t) : fa(t, e);
      },
      mounted(t, { value: e }, { transition: n }) {
        n && e && n.enter(t);
      },
      updated(t, { value: e, oldValue: n }, { transition: r }) {
        !e != !n &&
          (r
            ? e
              ? (r.beforeEnter(t), fa(t, !0), r.enter(t))
              : r.leave(t, () => {
                  fa(t, !1);
                })
            : fa(t, e));
      },
      beforeUnmount(t, { value: e }) {
        fa(t, e);
      },
    };
  function fa(t, e) {
    t.style.display = e ? t[lg] : "none";
  }
  const E2 = Symbol("");
  function R2(t, e, n) {
    const r = t.style,
      i = r.display,
      o = Jt(n);
    if (n && !o) {
      if (e && !Jt(e)) for (const s in e) n[s] == null && Gh(r, s, "");
      for (const s in n) Gh(r, s, n[s]);
    } else if (o) {
      if (e !== n) {
        const s = r[E2];
        s && (n += ";" + s), (r.cssText = n);
      }
    } else e && t.removeAttribute("style");
    lg in t && (r.display = i);
  }
  const bm = /\s*!important$/;
  function Gh(t, e, n) {
    if (Je(n)) n.forEach((r) => Gh(t, e, r));
    else if ((n == null && (n = ""), e.startsWith("--"))) t.setProperty(e, n);
    else {
      const r = T2(t, e);
      bm.test(n)
        ? t.setProperty(Ys(r), n.replace(bm, ""), "important")
        : (t[r] = n);
    }
  }
  const ym = ["Webkit", "Moz", "ms"],
    Bd = {};
  function T2(t, e) {
    const n = Bd[e];
    if (n) return n;
    let r = Fr(e);
    if (r !== "filter" && r in t) return (Bd[e] = r);
    r = Eu(r);
    for (let i = 0; i < ym.length; i++) {
      const o = ym[i] + r;
      if (o in t) return (Bd[e] = o);
    }
    return e;
  }
  const xm = "http://www.w3.org/1999/xlink";
  function P2(t, e, n, r, i) {
    if (r && e.startsWith("xlink:"))
      n == null
        ? t.removeAttributeNS(xm, e.slice(6, e.length))
        : t.setAttributeNS(xm, e, n);
    else {
      const o = zS(e);
      n == null || (o && !Wb(n))
        ? t.removeAttribute(e)
        : t.setAttribute(e, o ? "" : n);
    }
  }
  function A2(t, e, n, r, i, o, s) {
    if (e === "innerHTML" || e === "textContent") {
      r && s(r, i, o), (t[e] = n ?? "");
      return;
    }
    const a = t.tagName;
    if (e === "value" && a !== "PROGRESS" && !a.includes("-")) {
      t._value = n;
      const c = a === "OPTION" ? t.getAttribute("value") : t.value,
        u = n ?? "";
      c !== u && (t.value = u), n == null && t.removeAttribute(e);
      return;
    }
    let l = !1;
    if (n === "" || n == null) {
      const c = typeof t[e];
      c === "boolean"
        ? (n = Wb(n))
        : n == null && c === "string"
        ? ((n = ""), (l = !0))
        : c === "number" && ((n = 0), (l = !0));
    }
    try {
      t[e] = n;
    } catch {}
    l && t.removeAttribute(e);
  }
  function k2(t, e, n, r) {
    t.addEventListener(e, n, r);
  }
  function I2(t, e, n, r) {
    t.removeEventListener(e, n, r);
  }
  const Cm = Symbol("_vei");
  function O2(t, e, n, r, i = null) {
    const o = t[Cm] || (t[Cm] = {}),
      s = o[e];
    if (r && s) s.value = r;
    else {
      const [a, l] = M2(e);
      if (r) {
        const c = (o[e] = D2(r, i));
        k2(t, a, c, l);
      } else s && (I2(t, a, s, l), (o[e] = void 0));
    }
  }
  const _m = /(?:Once|Passive|Capture)$/;
  function M2(t) {
    let e;
    if (_m.test(t)) {
      e = {};
      let r;
      for (; (r = t.match(_m)); )
        (t = t.slice(0, t.length - r[0].length)), (e[r[0].toLowerCase()] = !0);
    }
    return [t[2] === ":" ? t.slice(3) : Ys(t.slice(2)), e];
  }
  let Nd = 0;
  const L2 = Promise.resolve(),
    $2 = () => Nd || (L2.then(() => (Nd = 0)), (Nd = Date.now()));
  function D2(t, e) {
    const n = (r) => {
      if (!r._vts) r._vts = Date.now();
      else if (r._vts <= n.attached) return;
      rr(z2(r, n.value), e, 5, [r]);
    };
    return (n.value = t), (n.attached = $2()), n;
  }
  function z2(t, e) {
    if (Je(e)) {
      const n = t.stopImmediatePropagation;
      return (
        (t.stopImmediatePropagation = () => {
          n.call(t), (t._stopped = !0);
        }),
        e.map((r) => (i) => !i._stopped && r && r(i))
      );
    } else return e;
  }
  const wm = (t) =>
      t.charCodeAt(0) === 111 &&
      t.charCodeAt(1) === 110 &&
      t.charCodeAt(2) > 96 &&
      t.charCodeAt(2) < 123,
    F2 = (t, e, n, r, i, o, s, a, l) => {
      const c = i === "svg";
      e === "class"
        ? S2(t, r, c)
        : e === "style"
        ? R2(t, n, r)
        : _u(e)
        ? Hf(e) || O2(t, e, n, r, s)
        : (
            e[0] === "."
              ? ((e = e.slice(1)), !0)
              : e[0] === "^"
              ? ((e = e.slice(1)), !1)
              : B2(t, e, r, c)
          )
        ? A2(t, e, r, o, s, a, l)
        : (e === "true-value"
            ? (t._trueValue = r)
            : e === "false-value" && (t._falseValue = r),
          P2(t, e, r, c));
    };
  function B2(t, e, n, r) {
    if (r)
      return !!(
        e === "innerHTML" ||
        e === "textContent" ||
        (e in t && wm(e) && nt(n))
      );
    if (
      e === "spellcheck" ||
      e === "draggable" ||
      e === "translate" ||
      e === "form" ||
      (e === "list" && t.tagName === "INPUT") ||
      (e === "type" && t.tagName === "TEXTAREA")
    )
      return !1;
    if (e === "width" || e === "height") {
      const i = t.tagName;
      if (i === "IMG" || i === "VIDEO" || i === "CANVAS" || i === "SOURCE")
        return !1;
    }
    return wm(e) && Jt(n) ? !1 : e in t;
  }
  const G1 = new WeakMap(),
    X1 = new WeakMap(),
    Xc = Symbol("_moveCb"),
    Sm = Symbol("_enterCb"),
    K1 = {
      name: "TransitionGroup",
      props: sn({}, C2, { tag: String, moveClass: String }),
      setup(t, { slots: e }) {
        const n = Wo(),
          r = C1();
        let i, o;
        return (
          R1(() => {
            if (!i.length) return;
            const s = t.moveClass || `${t.name || "v"}-move`;
            if (!U2(i[0].el, n.vnode.el, s)) return;
            i.forEach(H2), i.forEach(W2);
            const a = i.filter(j2);
            V1(),
              a.forEach((l) => {
                const c = l.el,
                  u = c.style;
                Vr(c, s),
                  (u.transform = u.webkitTransform = u.transitionDuration = "");
                const d = (c[Xc] = (h) => {
                  (h && h.target !== c) ||
                    ((!h || /transform$/.test(h.propertyName)) &&
                      (c.removeEventListener("transitionend", d),
                      (c[Xc] = null),
                      Ri(c, s)));
                });
                c.addEventListener("transitionend", d);
              });
          }),
          () => {
            const s = De(t),
              a = j1(s);
            let l = s.tag || pt;
            (i = o), (o = e.default ? tg(e.default()) : []);
            for (let c = 0; c < o.length; c++) {
              const u = o[c];
              u.key != null && qa(u, Ya(u, a, r, n));
            }
            if (i)
              for (let c = 0; c < i.length; c++) {
                const u = i[c];
                qa(u, Ya(u, a, r, n)), G1.set(u, u.el.getBoundingClientRect());
              }
            return F(l, null, o);
          }
        );
      },
    },
    N2 = (t) => delete t.mode;
  K1.props;
  const Y1 = K1;
  function H2(t) {
    const e = t.el;
    e[Xc] && e[Xc](), e[Sm] && e[Sm]();
  }
  function W2(t) {
    X1.set(t, t.el.getBoundingClientRect());
  }
  function j2(t) {
    const e = G1.get(t),
      n = X1.get(t),
      r = e.left - n.left,
      i = e.top - n.top;
    if (r || i) {
      const o = t.el.style;
      return (
        (o.transform = o.webkitTransform = `translate(${r}px,${i}px)`),
        (o.transitionDuration = "0s"),
        t
      );
    }
  }
  function U2(t, e, n) {
    const r = t.cloneNode(),
      i = t[Ls];
    i &&
      i.forEach((a) => {
        a.split(/\s+/).forEach((l) => l && r.classList.remove(l));
      }),
      n.split(/\s+/).forEach((a) => a && r.classList.add(a)),
      (r.style.display = "none");
    const o = e.nodeType === 1 ? e : e.parentNode;
    o.appendChild(r);
    const { hasTransform: s } = U1(r);
    return o.removeChild(r), s;
  }
  const V2 = sn({ patchProp: F2 }, x2);
  let Em;
  function G2() {
    return Em || (Em = JE(V2));
  }
  const X2 = (...t) => {
    const e = G2().createApp(...t),
      { mount: n } = e;
    return (
      (e.mount = (r) => {
        const i = Y2(r);
        if (!i) return;
        const o = e._component;
        !nt(o) && !o.render && !o.template && (o.template = i.innerHTML),
          (i.innerHTML = "");
        const s = n(i, !1, K2(i));
        return (
          i instanceof Element &&
            (i.removeAttribute("v-cloak"), i.setAttribute("data-v-app", "")),
          s
        );
      }),
      e
    );
  };
  function K2(t) {
    if (t instanceof SVGElement) return "svg";
    if (typeof MathMLElement == "function" && t instanceof MathMLElement)
      return "mathml";
  }
  function Y2(t) {
    return Jt(t) ? document.querySelector(t) : t;
  }
  /*!
   * vue-router v4.2.5
   * (c) 2023 Eduardo San Martin Morote
   * @license MIT
   */ const ds = typeof window < "u";
  function q2(t) {
    return t.__esModule || t[Symbol.toStringTag] === "Module";
  }
  const Pt = Object.assign;
  function Hd(t, e) {
    const n = {};
    for (const r in e) {
      const i = e[r];
      n[r] = yr(i) ? i.map(t) : t(i);
    }
    return n;
  }
  const Da = () => {},
    yr = Array.isArray,
    Z2 = /\/$/,
    J2 = (t) => t.replace(Z2, "");
  function Wd(t, e, n = "/") {
    let r,
      i = {},
      o = "",
      s = "";
    const a = e.indexOf("#");
    let l = e.indexOf("?");
    return (
      a < l && a >= 0 && (l = -1),
      l > -1 &&
        ((r = e.slice(0, l)),
        (o = e.slice(l + 1, a > -1 ? a : e.length)),
        (i = t(o))),
      a > -1 && ((r = r || e.slice(0, a)), (s = e.slice(a, e.length))),
      (r = nR(r ?? e, n)),
      { fullPath: r + (o && "?") + o + s, path: r, query: i, hash: s }
    );
  }
  function Q2(t, e) {
    const n = e.query ? t(e.query) : "";
    return e.path + (n && "?") + n + (e.hash || "");
  }
  function Rm(t, e) {
    return !e || !t.toLowerCase().startsWith(e.toLowerCase())
      ? t
      : t.slice(e.length) || "/";
  }
  function eR(t, e, n) {
    const r = e.matched.length - 1,
      i = n.matched.length - 1;
    return (
      r > -1 &&
      r === i &&
      Ds(e.matched[r], n.matched[i]) &&
      q1(e.params, n.params) &&
      t(e.query) === t(n.query) &&
      e.hash === n.hash
    );
  }
  function Ds(t, e) {
    return (t.aliasOf || t) === (e.aliasOf || e);
  }
  function q1(t, e) {
    if (Object.keys(t).length !== Object.keys(e).length) return !1;
    for (const n in t) if (!tR(t[n], e[n])) return !1;
    return !0;
  }
  function tR(t, e) {
    return yr(t) ? Tm(t, e) : yr(e) ? Tm(e, t) : t === e;
  }
  function Tm(t, e) {
    return yr(e)
      ? t.length === e.length && t.every((n, r) => n === e[r])
      : t.length === 1 && t[0] === e;
  }
  function nR(t, e) {
    if (t.startsWith("/")) return t;
    if (!t) return e;
    const n = e.split("/"),
      r = t.split("/"),
      i = r[r.length - 1];
    (i === ".." || i === ".") && r.push("");
    let o = n.length - 1,
      s,
      a;
    for (s = 0; s < r.length; s++)
      if (((a = r[s]), a !== "."))
        if (a === "..") o > 1 && o--;
        else break;
    return (
      n.slice(0, o).join("/") +
      "/" +
      r.slice(s - (s === r.length ? 1 : 0)).join("/")
    );
  }
  var el;
  (function (t) {
    (t.pop = "pop"), (t.push = "push");
  })(el || (el = {}));
  var za;
  (function (t) {
    (t.back = "back"), (t.forward = "forward"), (t.unknown = "");
  })(za || (za = {}));
  function rR(t) {
    if (!t)
      if (ds) {
        const e = document.querySelector("base");
        (t = (e && e.getAttribute("href")) || "/"),
          (t = t.replace(/^\w+:\/\/[^\/]+/, ""));
      } else t = "/";
    return t[0] !== "/" && t[0] !== "#" && (t = "/" + t), J2(t);
  }
  const iR = /^[^#]+#/;
  function oR(t, e) {
    return t.replace(iR, "#") + e;
  }
  function sR(t, e) {
    const n = document.documentElement.getBoundingClientRect(),
      r = t.getBoundingClientRect();
    return {
      behavior: e.behavior,
      left: r.left - n.left - (e.left || 0),
      top: r.top - n.top - (e.top || 0),
    };
  }
  const $u = () => ({ left: window.pageXOffset, top: window.pageYOffset });
  function aR(t) {
    let e;
    if ("el" in t) {
      const n = t.el,
        r = typeof n == "string" && n.startsWith("#"),
        i =
          typeof n == "string"
            ? r
              ? document.getElementById(n.slice(1))
              : document.querySelector(n)
            : n;
      if (!i) return;
      e = sR(i, t);
    } else e = t;
    "scrollBehavior" in document.documentElement.style
      ? window.scrollTo(e)
      : window.scrollTo(
          e.left != null ? e.left : window.pageXOffset,
          e.top != null ? e.top : window.pageYOffset
        );
  }
  function Pm(t, e) {
    return (history.state ? history.state.position - e : -1) + t;
  }
  const Xh = new Map();
  function lR(t, e) {
    Xh.set(t, e);
  }
  function cR(t) {
    const e = Xh.get(t);
    return Xh.delete(t), e;
  }
  let uR = () => location.protocol + "//" + location.host;
  function Z1(t, e) {
    const { pathname: n, search: r, hash: i } = e,
      o = t.indexOf("#");
    if (o > -1) {
      let a = i.includes(t.slice(o)) ? t.slice(o).length : 1,
        l = i.slice(a);
      return l[0] !== "/" && (l = "/" + l), Rm(l, "");
    }
    return Rm(n, t) + r + i;
  }
  function dR(t, e, n, r) {
    let i = [],
      o = [],
      s = null;
    const a = ({ state: h }) => {
      const g = Z1(t, location),
        f = n.value,
        p = e.value;
      let b = 0;
      if (h) {
        if (((n.value = g), (e.value = h), s && s === f)) {
          s = null;
          return;
        }
        b = p ? h.position - p.position : 0;
      } else r(g);
      i.forEach((m) => {
        m(n.value, f, {
          delta: b,
          type: el.pop,
          direction: b ? (b > 0 ? za.forward : za.back) : za.unknown,
        });
      });
    };
    function l() {
      s = n.value;
    }
    function c(h) {
      i.push(h);
      const g = () => {
        const f = i.indexOf(h);
        f > -1 && i.splice(f, 1);
      };
      return o.push(g), g;
    }
    function u() {
      const { history: h } = window;
      h.state && h.replaceState(Pt({}, h.state, { scroll: $u() }), "");
    }
    function d() {
      for (const h of o) h();
      (o = []),
        window.removeEventListener("popstate", a),
        window.removeEventListener("beforeunload", u);
    }
    return (
      window.addEventListener("popstate", a),
      window.addEventListener("beforeunload", u, { passive: !0 }),
      { pauseListeners: l, listen: c, destroy: d }
    );
  }
  function Am(t, e, n, r = !1, i = !1) {
    return {
      back: t,
      current: e,
      forward: n,
      replaced: r,
      position: window.history.length,
      scroll: i ? $u() : null,
    };
  }
  function hR(t) {
    const { history: e, location: n } = window,
      r = { value: Z1(t, n) },
      i = { value: e.state };
    i.value ||
      o(
        r.value,
        {
          back: null,
          current: r.value,
          forward: null,
          position: e.length - 1,
          replaced: !0,
          scroll: null,
        },
        !0
      );
    function o(l, c, u) {
      const d = t.indexOf("#"),
        h =
          d > -1
            ? (n.host && document.querySelector("base") ? t : t.slice(d)) + l
            : uR() + t + l;
      try {
        e[u ? "replaceState" : "pushState"](c, "", h), (i.value = c);
      } catch (g) {
        console.error(g), n[u ? "replace" : "assign"](h);
      }
    }
    function s(l, c) {
      const u = Pt({}, e.state, Am(i.value.back, l, i.value.forward, !0), c, {
        position: i.value.position,
      });
      o(l, u, !0), (r.value = l);
    }
    function a(l, c) {
      const u = Pt({}, i.value, e.state, { forward: l, scroll: $u() });
      o(u.current, u, !0);
      const d = Pt({}, Am(r.value, l, null), { position: u.position + 1 }, c);
      o(l, d, !1), (r.value = l);
    }
    return { location: r, state: i, push: a, replace: s };
  }
  function fR(t) {
    t = rR(t);
    const e = hR(t),
      n = dR(t, e.state, e.location, e.replace);
    function r(o, s = !0) {
      s || n.pauseListeners(), history.go(o);
    }
    const i = Pt(
      { location: "", base: t, go: r, createHref: oR.bind(null, t) },
      e,
      n
    );
    return (
      Object.defineProperty(i, "location", {
        enumerable: !0,
        get: () => e.location.value,
      }),
      Object.defineProperty(i, "state", {
        enumerable: !0,
        get: () => e.state.value,
      }),
      i
    );
  }
  function gR(t) {
    return typeof t == "string" || (t && typeof t == "object");
  }
  function J1(t) {
    return typeof t == "string" || typeof t == "symbol";
  }
  const bi = {
      path: "/",
      name: void 0,
      params: {},
      query: {},
      hash: "",
      fullPath: "/",
      matched: [],
      meta: {},
      redirectedFrom: void 0,
    },
    Q1 = Symbol("");
  var km;
  (function (t) {
    (t[(t.aborted = 4)] = "aborted"),
      (t[(t.cancelled = 8)] = "cancelled"),
      (t[(t.duplicated = 16)] = "duplicated");
  })(km || (km = {}));
  function zs(t, e) {
    return Pt(new Error(), { type: t, [Q1]: !0 }, e);
  }
  function Hr(t, e) {
    return t instanceof Error && Q1 in t && (e == null || !!(t.type & e));
  }
  const Im = "[^/]+?",
    pR = { sensitive: !1, strict: !1, start: !0, end: !0 },
    mR = /[.+*?^${}()[\]/\\]/g;
  function vR(t, e) {
    const n = Pt({}, pR, e),
      r = [];
    let i = n.start ? "^" : "";
    const o = [];
    for (const c of t) {
      const u = c.length ? [] : [90];
      n.strict && !c.length && (i += "/");
      for (let d = 0; d < c.length; d++) {
        const h = c[d];
        let g = 40 + (n.sensitive ? 0.25 : 0);
        if (h.type === 0)
          d || (i += "/"), (i += h.value.replace(mR, "\\$&")), (g += 40);
        else if (h.type === 1) {
          const { value: f, repeatable: p, optional: b, regexp: m } = h;
          o.push({ name: f, repeatable: p, optional: b });
          const _ = m || Im;
          if (_ !== Im) {
            g += 10;
            try {
              new RegExp(`(${_})`);
            } catch (S) {
              throw new Error(
                `Invalid custom RegExp for param "${f}" (${_}): ` + S.message
              );
            }
          }
          let R = p ? `((?:${_})(?:/(?:${_}))*)` : `(${_})`;
          d || (R = b && c.length < 2 ? `(?:/${R})` : "/" + R),
            b && (R += "?"),
            (i += R),
            (g += 20),
            b && (g += -8),
            p && (g += -20),
            _ === ".*" && (g += -50);
        }
        u.push(g);
      }
      r.push(u);
    }
    if (n.strict && n.end) {
      const c = r.length - 1;
      r[c][r[c].length - 1] += 0.7000000000000001;
    }
    n.strict || (i += "/?"), n.end ? (i += "$") : n.strict && (i += "(?:/|$)");
    const s = new RegExp(i, n.sensitive ? "" : "i");
    function a(c) {
      const u = c.match(s),
        d = {};
      if (!u) return null;
      for (let h = 1; h < u.length; h++) {
        const g = u[h] || "",
          f = o[h - 1];
        d[f.name] = g && f.repeatable ? g.split("/") : g;
      }
      return d;
    }
    function l(c) {
      let u = "",
        d = !1;
      for (const h of t) {
        (!d || !u.endsWith("/")) && (u += "/"), (d = !1);
        for (const g of h)
          if (g.type === 0) u += g.value;
          else if (g.type === 1) {
            const { value: f, repeatable: p, optional: b } = g,
              m = f in c ? c[f] : "";
            if (yr(m) && !p)
              throw new Error(
                `Provided param "${f}" is an array but it is not repeatable (* or + modifiers)`
              );
            const _ = yr(m) ? m.join("/") : m;
            if (!_)
              if (b)
                h.length < 2 &&
                  (u.endsWith("/") ? (u = u.slice(0, -1)) : (d = !0));
              else throw new Error(`Missing required param "${f}"`);
            u += _;
          }
      }
      return u || "/";
    }
    return { re: s, score: r, keys: o, parse: a, stringify: l };
  }
  function bR(t, e) {
    let n = 0;
    for (; n < t.length && n < e.length; ) {
      const r = e[n] - t[n];
      if (r) return r;
      n++;
    }
    return t.length < e.length
      ? t.length === 1 && t[0] === 80
        ? -1
        : 1
      : t.length > e.length
      ? e.length === 1 && e[0] === 80
        ? 1
        : -1
      : 0;
  }
  function yR(t, e) {
    let n = 0;
    const r = t.score,
      i = e.score;
    for (; n < r.length && n < i.length; ) {
      const o = bR(r[n], i[n]);
      if (o) return o;
      n++;
    }
    if (Math.abs(i.length - r.length) === 1) {
      if (Om(r)) return 1;
      if (Om(i)) return -1;
    }
    return i.length - r.length;
  }
  function Om(t) {
    const e = t[t.length - 1];
    return t.length > 0 && e[e.length - 1] < 0;
  }
  const xR = { type: 0, value: "" },
    CR = /[a-zA-Z0-9_]/;
  function _R(t) {
    if (!t) return [[]];
    if (t === "/") return [[xR]];
    if (!t.startsWith("/")) throw new Error(`Invalid path "${t}"`);
    function e(g) {
      throw new Error(`ERR (${n})/"${c}": ${g}`);
    }
    let n = 0,
      r = n;
    const i = [];
    let o;
    function s() {
      o && i.push(o), (o = []);
    }
    let a = 0,
      l,
      c = "",
      u = "";
    function d() {
      c &&
        (n === 0
          ? o.push({ type: 0, value: c })
          : n === 1 || n === 2 || n === 3
          ? (o.length > 1 &&
              (l === "*" || l === "+") &&
              e(
                `A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`
              ),
            o.push({
              type: 1,
              value: c,
              regexp: u,
              repeatable: l === "*" || l === "+",
              optional: l === "*" || l === "?",
            }))
          : e("Invalid state to consume buffer"),
        (c = ""));
    }
    function h() {
      c += l;
    }
    for (; a < t.length; ) {
      if (((l = t[a++]), l === "\\" && n !== 2)) {
        (r = n), (n = 4);
        continue;
      }
      switch (n) {
        case 0:
          l === "/" ? (c && d(), s()) : l === ":" ? (d(), (n = 1)) : h();
          break;
        case 4:
          h(), (n = r);
          break;
        case 1:
          l === "("
            ? (n = 2)
            : CR.test(l)
            ? h()
            : (d(), (n = 0), l !== "*" && l !== "?" && l !== "+" && a--);
          break;
        case 2:
          l === ")"
            ? u[u.length - 1] == "\\"
              ? (u = u.slice(0, -1) + l)
              : (n = 3)
            : (u += l);
          break;
        case 3:
          d(), (n = 0), l !== "*" && l !== "?" && l !== "+" && a--, (u = "");
          break;
        default:
          e("Unknown state");
          break;
      }
    }
    return (
      n === 2 && e(`Unfinished custom RegExp for param "${c}"`), d(), s(), i
    );
  }
  function wR(t, e, n) {
    const r = vR(_R(t.path), n),
      i = Pt(r, { record: t, parent: e, children: [], alias: [] });
    return e && !i.record.aliasOf == !e.record.aliasOf && e.children.push(i), i;
  }
  function SR(t, e) {
    const n = [],
      r = new Map();
    e = $m({ strict: !1, end: !0, sensitive: !1 }, e);
    function i(u) {
      return r.get(u);
    }
    function o(u, d, h) {
      const g = !h,
        f = ER(u);
      f.aliasOf = h && h.record;
      const p = $m(e, u),
        b = [f];
      if ("alias" in u) {
        const R = typeof u.alias == "string" ? [u.alias] : u.alias;
        for (const S of R)
          b.push(
            Pt({}, f, {
              components: h ? h.record.components : f.components,
              path: S,
              aliasOf: h ? h.record : f,
            })
          );
      }
      let m, _;
      for (const R of b) {
        const { path: S } = R;
        if (d && S[0] !== "/") {
          const x = d.record.path,
            E = x[x.length - 1] === "/" ? "" : "/";
          R.path = d.record.path + (S && E + S);
        }
        if (
          ((m = wR(R, d, p)),
          h
            ? h.alias.push(m)
            : ((_ = _ || m),
              _ !== m && _.alias.push(m),
              g && u.name && !Lm(m) && s(u.name)),
          f.children)
        ) {
          const x = f.children;
          for (let E = 0; E < x.length; E++) o(x[E], m, h && h.children[E]);
        }
        (h = h || m),
          ((m.record.components && Object.keys(m.record.components).length) ||
            m.record.name ||
            m.record.redirect) &&
            l(m);
      }
      return _
        ? () => {
            s(_);
          }
        : Da;
    }
    function s(u) {
      if (J1(u)) {
        const d = r.get(u);
        d &&
          (r.delete(u),
          n.splice(n.indexOf(d), 1),
          d.children.forEach(s),
          d.alias.forEach(s));
      } else {
        const d = n.indexOf(u);
        d > -1 &&
          (n.splice(d, 1),
          u.record.name && r.delete(u.record.name),
          u.children.forEach(s),
          u.alias.forEach(s));
      }
    }
    function a() {
      return n;
    }
    function l(u) {
      let d = 0;
      for (
        ;
        d < n.length &&
        yR(u, n[d]) >= 0 &&
        (u.record.path !== n[d].record.path || !ey(u, n[d]));

      )
        d++;
      n.splice(d, 0, u), u.record.name && !Lm(u) && r.set(u.record.name, u);
    }
    function c(u, d) {
      let h,
        g = {},
        f,
        p;
      if ("name" in u && u.name) {
        if (((h = r.get(u.name)), !h)) throw zs(1, { location: u });
        (p = h.record.name),
          (g = Pt(
            Mm(
              d.params,
              h.keys.filter((_) => !_.optional).map((_) => _.name)
            ),
            u.params &&
              Mm(
                u.params,
                h.keys.map((_) => _.name)
              )
          )),
          (f = h.stringify(g));
      } else if ("path" in u)
        (f = u.path),
          (h = n.find((_) => _.re.test(f))),
          h && ((g = h.parse(f)), (p = h.record.name));
      else {
        if (
          ((h = d.name ? r.get(d.name) : n.find((_) => _.re.test(d.path))), !h)
        )
          throw zs(1, { location: u, currentLocation: d });
        (p = h.record.name),
          (g = Pt({}, d.params, u.params)),
          (f = h.stringify(g));
      }
      const b = [];
      let m = h;
      for (; m; ) b.unshift(m.record), (m = m.parent);
      return { name: p, path: f, params: g, matched: b, meta: TR(b) };
    }
    return (
      t.forEach((u) => o(u)),
      {
        addRoute: o,
        resolve: c,
        removeRoute: s,
        getRoutes: a,
        getRecordMatcher: i,
      }
    );
  }
  function Mm(t, e) {
    const n = {};
    for (const r of e) r in t && (n[r] = t[r]);
    return n;
  }
  function ER(t) {
    return {
      path: t.path,
      redirect: t.redirect,
      name: t.name,
      meta: t.meta || {},
      aliasOf: void 0,
      beforeEnter: t.beforeEnter,
      props: RR(t),
      children: t.children || [],
      instances: {},
      leaveGuards: new Set(),
      updateGuards: new Set(),
      enterCallbacks: {},
      components:
        "components" in t
          ? t.components || null
          : t.component && { default: t.component },
    };
  }
  function RR(t) {
    const e = {},
      n = t.props || !1;
    if ("component" in t) e.default = n;
    else for (const r in t.components) e[r] = typeof n == "object" ? n[r] : n;
    return e;
  }
  function Lm(t) {
    for (; t; ) {
      if (t.record.aliasOf) return !0;
      t = t.parent;
    }
    return !1;
  }
  function TR(t) {
    return t.reduce((e, n) => Pt(e, n.meta), {});
  }
  function $m(t, e) {
    const n = {};
    for (const r in t) n[r] = r in e ? e[r] : t[r];
    return n;
  }
  function ey(t, e) {
    return e.children.some((n) => n === t || ey(t, n));
  }
  const ty = /#/g,
    PR = /&/g,
    AR = /\//g,
    kR = /=/g,
    IR = /\?/g,
    ny = /\+/g,
    OR = /%5B/g,
    MR = /%5D/g,
    ry = /%5E/g,
    LR = /%60/g,
    iy = /%7B/g,
    $R = /%7C/g,
    oy = /%7D/g,
    DR = /%20/g;
  function cg(t) {
    return encodeURI("" + t)
      .replace($R, "|")
      .replace(OR, "[")
      .replace(MR, "]");
  }
  function zR(t) {
    return cg(t).replace(iy, "{").replace(oy, "}").replace(ry, "^");
  }
  function Kh(t) {
    return cg(t)
      .replace(ny, "%2B")
      .replace(DR, "+")
      .replace(ty, "%23")
      .replace(PR, "%26")
      .replace(LR, "`")
      .replace(iy, "{")
      .replace(oy, "}")
      .replace(ry, "^");
  }
  function FR(t) {
    return Kh(t).replace(kR, "%3D");
  }
  function BR(t) {
    return cg(t).replace(ty, "%23").replace(IR, "%3F");
  }
  function NR(t) {
    return t == null ? "" : BR(t).replace(AR, "%2F");
  }
  function Kc(t) {
    try {
      return decodeURIComponent("" + t);
    } catch {}
    return "" + t;
  }
  function HR(t) {
    const e = {};
    if (t === "" || t === "?") return e;
    const r = (t[0] === "?" ? t.slice(1) : t).split("&");
    for (let i = 0; i < r.length; ++i) {
      const o = r[i].replace(ny, " "),
        s = o.indexOf("="),
        a = Kc(s < 0 ? o : o.slice(0, s)),
        l = s < 0 ? null : Kc(o.slice(s + 1));
      if (a in e) {
        let c = e[a];
        yr(c) || (c = e[a] = [c]), c.push(l);
      } else e[a] = l;
    }
    return e;
  }
  function Dm(t) {
    let e = "";
    for (let n in t) {
      const r = t[n];
      if (((n = FR(n)), r == null)) {
        r !== void 0 && (e += (e.length ? "&" : "") + n);
        continue;
      }
      (yr(r) ? r.map((o) => o && Kh(o)) : [r && Kh(r)]).forEach((o) => {
        o !== void 0 &&
          ((e += (e.length ? "&" : "") + n), o != null && (e += "=" + o));
      });
    }
    return e;
  }
  function WR(t) {
    const e = {};
    for (const n in t) {
      const r = t[n];
      r !== void 0 &&
        (e[n] = yr(r)
          ? r.map((i) => (i == null ? null : "" + i))
          : r == null
          ? r
          : "" + r);
    }
    return e;
  }
  const jR = Symbol(""),
    zm = Symbol(""),
    Du = Symbol(""),
    sy = Symbol(""),
    Yh = Symbol("");
  function ga() {
    let t = [];
    function e(r) {
      return (
        t.push(r),
        () => {
          const i = t.indexOf(r);
          i > -1 && t.splice(i, 1);
        }
      );
    }
    function n() {
      t = [];
    }
    return { add: e, list: () => t.slice(), reset: n };
  }
  function Li(t, e, n, r, i) {
    const o = r && (r.enterCallbacks[i] = r.enterCallbacks[i] || []);
    return () =>
      new Promise((s, a) => {
        const l = (d) => {
            d === !1
              ? a(zs(4, { from: n, to: e }))
              : d instanceof Error
              ? a(d)
              : gR(d)
              ? a(zs(2, { from: e, to: d }))
              : (o &&
                  r.enterCallbacks[i] === o &&
                  typeof d == "function" &&
                  o.push(d),
                s());
          },
          c = t.call(r && r.instances[i], e, n, l);
        let u = Promise.resolve(c);
        t.length < 3 && (u = u.then(l)), u.catch((d) => a(d));
      });
  }
  function jd(t, e, n, r) {
    const i = [];
    for (const o of t)
      for (const s in o.components) {
        let a = o.components[s];
        if (!(e !== "beforeRouteEnter" && !o.instances[s]))
          if (UR(a)) {
            const c = (a.__vccOpts || a)[e];
            c && i.push(Li(c, n, r, o, s));
          } else {
            let l = a();
            i.push(() =>
              l.then((c) => {
                if (!c)
                  return Promise.reject(
                    new Error(
                      `Couldn't resolve component "${s}" at "${o.path}"`
                    )
                  );
                const u = q2(c) ? c.default : c;
                o.components[s] = u;
                const h = (u.__vccOpts || u)[e];
                return h && Li(h, n, r, o, s)();
              })
            );
          }
      }
    return i;
  }
  function UR(t) {
    return (
      typeof t == "object" ||
      "displayName" in t ||
      "props" in t ||
      "__vccOpts" in t
    );
  }
  function Fm(t) {
    const e = Ve(Du),
      n = Ve(sy),
      r = ce(() => e.resolve(N(t.to))),
      i = ce(() => {
        const { matched: l } = r.value,
          { length: c } = l,
          u = l[c - 1],
          d = n.matched;
        if (!u || !d.length) return -1;
        const h = d.findIndex(Ds.bind(null, u));
        if (h > -1) return h;
        const g = Bm(l[c - 2]);
        return c > 1 && Bm(u) === g && d[d.length - 1].path !== g
          ? d.findIndex(Ds.bind(null, l[c - 2]))
          : h;
      }),
      o = ce(() => i.value > -1 && KR(n.params, r.value.params)),
      s = ce(
        () =>
          i.value > -1 &&
          i.value === n.matched.length - 1 &&
          q1(n.params, r.value.params)
      );
    function a(l = {}) {
      return XR(l)
        ? e[N(t.replace) ? "replace" : "push"](N(t.to)).catch(Da)
        : Promise.resolve();
    }
    return {
      route: r,
      href: ce(() => r.value.href),
      isActive: o,
      isExactActive: s,
      navigate: a,
    };
  }
  const VR = $e({
      name: "RouterLink",
      compatConfig: { MODE: 3 },
      props: {
        to: { type: [String, Object], required: !0 },
        replace: Boolean,
        activeClass: String,
        exactActiveClass: String,
        custom: Boolean,
        ariaCurrentValue: { type: String, default: "page" },
      },
      useLink: Fm,
      setup(t, { slots: e }) {
        const n = Zi(Fm(t)),
          { options: r } = Ve(Du),
          i = ce(() => ({
            [Nm(t.activeClass, r.linkActiveClass, "router-link-active")]:
              n.isActive,
            [Nm(
              t.exactActiveClass,
              r.linkExactActiveClass,
              "router-link-exact-active"
            )]: n.isExactActive,
          }));
        return () => {
          const o = e.default && e.default(n);
          return t.custom
            ? o
            : C(
                "a",
                {
                  "aria-current": n.isExactActive ? t.ariaCurrentValue : null,
                  href: n.href,
                  onClick: n.navigate,
                  class: i.value,
                },
                o
              );
        };
      },
    }),
    GR = VR;
  function XR(t) {
    if (
      !(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey) &&
      !t.defaultPrevented &&
      !(t.button !== void 0 && t.button !== 0)
    ) {
      if (t.currentTarget && t.currentTarget.getAttribute) {
        const e = t.currentTarget.getAttribute("target");
        if (/\b_blank\b/i.test(e)) return;
      }
      return t.preventDefault && t.preventDefault(), !0;
    }
  }
  function KR(t, e) {
    for (const n in e) {
      const r = e[n],
        i = t[n];
      if (typeof r == "string") {
        if (r !== i) return !1;
      } else if (
        !yr(i) ||
        i.length !== r.length ||
        r.some((o, s) => o !== i[s])
      )
        return !1;
    }
    return !0;
  }
  function Bm(t) {
    return t ? (t.aliasOf ? t.aliasOf.path : t.path) : "";
  }
  const Nm = (t, e, n) => t ?? e ?? n,
    YR = $e({
      name: "RouterView",
      inheritAttrs: !1,
      props: { name: { type: String, default: "default" }, route: Object },
      compatConfig: { MODE: 3 },
      setup(t, { attrs: e, slots: n }) {
        const r = Ve(Yh),
          i = ce(() => t.route || r.value),
          o = Ve(zm, 0),
          s = ce(() => {
            let c = N(o);
            const { matched: u } = i.value;
            let d;
            for (; (d = u[c]) && !d.components; ) c++;
            return c;
          }),
          a = ce(() => i.value.matched[s.value]);
        vt(
          zm,
          ce(() => s.value + 1)
        ),
          vt(jR, a),
          vt(Yh, i);
        const l = U();
        return (
          Et(
            () => [l.value, a.value, t.name],
            ([c, u, d], [h, g, f]) => {
              u &&
                ((u.instances[d] = c),
                g &&
                  g !== u &&
                  c &&
                  c === h &&
                  (u.leaveGuards.size || (u.leaveGuards = g.leaveGuards),
                  u.updateGuards.size || (u.updateGuards = g.updateGuards))),
                c &&
                  u &&
                  (!g || !Ds(u, g) || !h) &&
                  (u.enterCallbacks[d] || []).forEach((p) => p(c));
            },
            { flush: "post" }
          ),
          () => {
            const c = i.value,
              u = t.name,
              d = a.value,
              h = d && d.components[u];
            if (!h) return Hm(n.default, { Component: h, route: c });
            const g = d.props[u],
              f = g
                ? g === !0
                  ? c.params
                  : typeof g == "function"
                  ? g(c)
                  : g
                : null,
              b = C(
                h,
                Pt({}, f, e, {
                  onVnodeUnmounted: (m) => {
                    m.component.isUnmounted && (d.instances[u] = null);
                  },
                  ref: l,
                })
              );
            return Hm(n.default, { Component: b, route: c }) || b;
          }
        );
      },
    });
  function Hm(t, e) {
    if (!t) return null;
    const n = t(e);
    return n.length === 1 ? n[0] : n;
  }
  const qR = YR;
  function ZR(t) {
    const e = SR(t.routes, t),
      n = t.parseQuery || HR,
      r = t.stringifyQuery || Dm,
      i = t.history,
      o = ga(),
      s = ga(),
      a = ga(),
      l = c1(bi);
    let c = bi;
    ds &&
      t.scrollBehavior &&
      "scrollRestoration" in history &&
      (history.scrollRestoration = "manual");
    const u = Hd.bind(null, (ie) => "" + ie),
      d = Hd.bind(null, NR),
      h = Hd.bind(null, Kc);
    function g(ie, pe) {
      let re, ge;
      return (
        J1(ie) ? ((re = e.getRecordMatcher(ie)), (ge = pe)) : (ge = ie),
        e.addRoute(ge, re)
      );
    }
    function f(ie) {
      const pe = e.getRecordMatcher(ie);
      pe && e.removeRoute(pe);
    }
    function p() {
      return e.getRoutes().map((ie) => ie.record);
    }
    function b(ie) {
      return !!e.getRecordMatcher(ie);
    }
    function m(ie, pe) {
      if (((pe = Pt({}, pe || l.value)), typeof ie == "string")) {
        const $ = Wd(n, ie, pe.path),
          H = e.resolve({ path: $.path }, pe),
          ae = i.createHref($.fullPath);
        return Pt($, H, {
          params: h(H.params),
          hash: Kc($.hash),
          redirectedFrom: void 0,
          href: ae,
        });
      }
      let re;
      if ("path" in ie) re = Pt({}, ie, { path: Wd(n, ie.path, pe.path).path });
      else {
        const $ = Pt({}, ie.params);
        for (const H in $) $[H] == null && delete $[H];
        (re = Pt({}, ie, { params: d($) })), (pe.params = d(pe.params));
      }
      const ge = e.resolve(re, pe),
        ke = ie.hash || "";
      ge.params = u(h(ge.params));
      const Me = Q2(r, Pt({}, ie, { hash: zR(ke), path: ge.path })),
        P = i.createHref(Me);
      return Pt(
        {
          fullPath: Me,
          hash: ke,
          query: r === Dm ? WR(ie.query) : ie.query || {},
        },
        ge,
        { redirectedFrom: void 0, href: P }
      );
    }
    function _(ie) {
      return typeof ie == "string" ? Wd(n, ie, l.value.path) : Pt({}, ie);
    }
    function R(ie, pe) {
      if (c !== ie) return zs(8, { from: pe, to: ie });
    }
    function S(ie) {
      return w(ie);
    }
    function x(ie) {
      return S(Pt(_(ie), { replace: !0 }));
    }
    function E(ie) {
      const pe = ie.matched[ie.matched.length - 1];
      if (pe && pe.redirect) {
        const { redirect: re } = pe;
        let ge = typeof re == "function" ? re(ie) : re;
        return (
          typeof ge == "string" &&
            ((ge =
              ge.includes("?") || ge.includes("#")
                ? (ge = _(ge))
                : { path: ge }),
            (ge.params = {})),
          Pt(
            {
              query: ie.query,
              hash: ie.hash,
              params: "path" in ge ? {} : ie.params,
            },
            ge
          )
        );
      }
    }
    function w(ie, pe) {
      const re = (c = m(ie)),
        ge = l.value,
        ke = ie.state,
        Me = ie.force,
        P = ie.replace === !0,
        $ = E(re);
      if ($)
        return w(
          Pt(_($), {
            state: typeof $ == "object" ? Pt({}, ke, $.state) : ke,
            force: Me,
            replace: P,
          }),
          pe || re
        );
      const H = re;
      H.redirectedFrom = pe;
      let ae;
      return (
        !Me &&
          eR(r, ge, re) &&
          ((ae = zs(16, { to: H, from: ge })), fe(ge, ge, !0, !1)),
        (ae ? Promise.resolve(ae) : T(H, ge))
          .catch((le) => (Hr(le) ? (Hr(le, 2) ? le : de(le)) : Y(le, H, ge)))
          .then((le) => {
            if (le) {
              if (Hr(le, 2))
                return w(
                  Pt({ replace: P }, _(le.to), {
                    state:
                      typeof le.to == "object" ? Pt({}, ke, le.to.state) : ke,
                    force: Me,
                  }),
                  pe || H
                );
            } else le = I(H, ge, !0, P, ke);
            return A(H, ge, le), le;
          })
      );
    }
    function v(ie, pe) {
      const re = R(ie, pe);
      return re ? Promise.reject(re) : Promise.resolve();
    }
    function y(ie) {
      const pe = ue.values().next().value;
      return pe && typeof pe.runWithContext == "function"
        ? pe.runWithContext(ie)
        : ie();
    }
    function T(ie, pe) {
      let re;
      const [ge, ke, Me] = JR(ie, pe);
      re = jd(ge.reverse(), "beforeRouteLeave", ie, pe);
      for (const $ of ge)
        $.leaveGuards.forEach((H) => {
          re.push(Li(H, ie, pe));
        });
      const P = v.bind(null, ie, pe);
      return (
        re.push(P),
        _e(re)
          .then(() => {
            re = [];
            for (const $ of o.list()) re.push(Li($, ie, pe));
            return re.push(P), _e(re);
          })
          .then(() => {
            re = jd(ke, "beforeRouteUpdate", ie, pe);
            for (const $ of ke)
              $.updateGuards.forEach((H) => {
                re.push(Li(H, ie, pe));
              });
            return re.push(P), _e(re);
          })
          .then(() => {
            re = [];
            for (const $ of Me)
              if ($.beforeEnter)
                if (yr($.beforeEnter))
                  for (const H of $.beforeEnter) re.push(Li(H, ie, pe));
                else re.push(Li($.beforeEnter, ie, pe));
            return re.push(P), _e(re);
          })
          .then(
            () => (
              ie.matched.forEach(($) => ($.enterCallbacks = {})),
              (re = jd(Me, "beforeRouteEnter", ie, pe)),
              re.push(P),
              _e(re)
            )
          )
          .then(() => {
            re = [];
            for (const $ of s.list()) re.push(Li($, ie, pe));
            return re.push(P), _e(re);
          })
          .catch(($) => (Hr($, 8) ? $ : Promise.reject($)))
      );
    }
    function A(ie, pe, re) {
      a.list().forEach((ge) => y(() => ge(ie, pe, re)));
    }
    function I(ie, pe, re, ge, ke) {
      const Me = R(ie, pe);
      if (Me) return Me;
      const P = pe === bi,
        $ = ds ? history.state : {};
      re &&
        (ge || P
          ? i.replace(ie.fullPath, Pt({ scroll: P && $ && $.scroll }, ke))
          : i.push(ie.fullPath, ke)),
        (l.value = ie),
        fe(ie, pe, re, P),
        de();
    }
    let L;
    function j() {
      L ||
        (L = i.listen((ie, pe, re) => {
          if (!K.listening) return;
          const ge = m(ie),
            ke = E(ge);
          if (ke) {
            w(Pt(ke, { replace: !0 }), ge).catch(Da);
            return;
          }
          c = ge;
          const Me = l.value;
          ds && lR(Pm(Me.fullPath, re.delta), $u()),
            T(ge, Me)
              .catch((P) =>
                Hr(P, 12)
                  ? P
                  : Hr(P, 2)
                  ? (w(P.to, ge)
                      .then(($) => {
                        Hr($, 20) &&
                          !re.delta &&
                          re.type === el.pop &&
                          i.go(-1, !1);
                      })
                      .catch(Da),
                    Promise.reject())
                  : (re.delta && i.go(-re.delta, !1), Y(P, ge, Me))
              )
              .then((P) => {
                (P = P || I(ge, Me, !1)),
                  P &&
                    (re.delta && !Hr(P, 8)
                      ? i.go(-re.delta, !1)
                      : re.type === el.pop && Hr(P, 20) && i.go(-1, !1)),
                  A(ge, Me, P);
              })
              .catch(Da);
        }));
    }
    let k = ga(),
      O = ga(),
      D;
    function Y(ie, pe, re) {
      de(ie);
      const ge = O.list();
      return (
        ge.length ? ge.forEach((ke) => ke(ie, pe, re)) : console.error(ie),
        Promise.reject(ie)
      );
    }
    function se() {
      return D && l.value !== bi
        ? Promise.resolve()
        : new Promise((ie, pe) => {
            k.add([ie, pe]);
          });
    }
    function de(ie) {
      return (
        D ||
          ((D = !ie),
          j(),
          k.list().forEach(([pe, re]) => (ie ? re(ie) : pe())),
          k.reset()),
        ie
      );
    }
    function fe(ie, pe, re, ge) {
      const { scrollBehavior: ke } = t;
      if (!ds || !ke) return Promise.resolve();
      const Me =
        (!re && cR(Pm(ie.fullPath, 0))) ||
        ((ge || !re) && history.state && history.state.scroll) ||
        null;
      return Ht()
        .then(() => ke(ie, pe, Me))
        .then((P) => P && aR(P))
        .catch((P) => Y(P, ie, pe));
    }
    const z = (ie) => i.go(ie);
    let ee;
    const ue = new Set(),
      K = {
        currentRoute: l,
        listening: !0,
        addRoute: g,
        removeRoute: f,
        hasRoute: b,
        getRoutes: p,
        resolve: m,
        options: t,
        push: S,
        replace: x,
        go: z,
        back: () => z(-1),
        forward: () => z(1),
        beforeEach: o.add,
        beforeResolve: s.add,
        afterEach: a.add,
        onError: O.add,
        isReady: se,
        install(ie) {
          const pe = this;
          ie.component("RouterLink", GR),
            ie.component("RouterView", qR),
            (ie.config.globalProperties.$router = pe),
            Object.defineProperty(ie.config.globalProperties, "$route", {
              enumerable: !0,
              get: () => N(l),
            }),
            ds &&
              !ee &&
              l.value === bi &&
              ((ee = !0), S(i.location).catch((ke) => {}));
          const re = {};
          for (const ke in bi)
            Object.defineProperty(re, ke, {
              get: () => l.value[ke],
              enumerable: !0,
            });
          ie.provide(Du, pe), ie.provide(sy, o1(re)), ie.provide(Yh, l);
          const ge = ie.unmount;
          ue.add(ie),
            (ie.unmount = function () {
              ue.delete(ie),
                ue.size < 1 &&
                  ((c = bi),
                  L && L(),
                  (L = null),
                  (l.value = bi),
                  (ee = !1),
                  (D = !1)),
                ge();
            });
        },
      };
    function _e(ie) {
      return ie.reduce((pe, re) => pe.then(() => y(re)), Promise.resolve());
    }
    return K;
  }
  function JR(t, e) {
    const n = [],
      r = [],
      i = [],
      o = Math.max(e.matched.length, t.matched.length);
    for (let s = 0; s < o; s++) {
      const a = e.matched[s];
      a && (t.matched.find((c) => Ds(c, a)) ? r.push(a) : n.push(a));
      const l = t.matched[s];
      l && (e.matched.find((c) => Ds(c, l)) || i.push(l));
    }
    return [n, r, i];
  }
  function Zs() {
    return Ve(Du);
  }
  let Yc = [];
  const ay = new WeakMap();
  function QR() {
    Yc.forEach((t) => t(...ay.get(t))), (Yc = []);
  }
  function ug(t, ...e) {
    ay.set(t, e),
      !Yc.includes(t) && Yc.push(t) === 1 && requestAnimationFrame(QR);
  }
  function Wm(t, e) {
    let { target: n } = t;
    for (; n; ) {
      if (n.dataset && n.dataset[e] !== void 0) return !0;
      n = n.parentElement;
    }
    return !1;
  }
  function Fs(t) {
    return t.composedPath()[0] || null;
  }
  function kn(t) {
    return typeof t == "string"
      ? t.endsWith("px")
        ? Number(t.slice(0, t.length - 2))
        : Number(t)
      : t;
  }
  function wo(t) {
    if (t != null)
      return typeof t == "number" ? `${t}px` : t.endsWith("px") ? t : `${t}px`;
  }
  function nr(t, e) {
    const n = t.trim().split(/\s+/g),
      r = { top: n[0] };
    switch (n.length) {
      case 1:
        (r.right = n[0]), (r.bottom = n[0]), (r.left = n[0]);
        break;
      case 2:
        (r.right = n[1]), (r.left = n[1]), (r.bottom = n[0]);
        break;
      case 3:
        (r.right = n[1]), (r.bottom = n[2]), (r.left = n[1]);
        break;
      case 4:
        (r.right = n[1]), (r.bottom = n[2]), (r.left = n[3]);
        break;
      default:
        throw new Error("[seemly/getMargin]:" + t + " is not a valid value.");
    }
    return e === void 0 ? r : r[e];
  }
  function eT(t, e) {
    const [n, r] = t.split(" ");
    return e ? (e === "row" ? n : r) : { row: n, col: r || n };
  }
  const jm = {
      black: "#000",
      silver: "#C0C0C0",
      gray: "#808080",
      white: "#FFF",
      maroon: "#800000",
      red: "#F00",
      purple: "#800080",
      fuchsia: "#F0F",
      green: "#008000",
      lime: "#0F0",
      olive: "#808000",
      yellow: "#FF0",
      navy: "#000080",
      blue: "#00F",
      teal: "#008080",
      aqua: "#0FF",
      transparent: "#0000",
    },
    Js = "^\\s*",
    Qs = "\\s*$",
    So = "\\s*((\\.\\d+)|(\\d+(\\.\\d*)?))\\s*",
    Eo = "([0-9A-Fa-f])",
    Ro = "([0-9A-Fa-f]{2})",
    tT = new RegExp(`${Js}rgb\\s*\\(${So},${So},${So}\\)${Qs}`),
    nT = new RegExp(`${Js}rgba\\s*\\(${So},${So},${So},${So}\\)${Qs}`),
    rT = new RegExp(`${Js}#${Eo}${Eo}${Eo}${Qs}`),
    iT = new RegExp(`${Js}#${Ro}${Ro}${Ro}${Qs}`),
    oT = new RegExp(`${Js}#${Eo}${Eo}${Eo}${Eo}${Qs}`),
    sT = new RegExp(`${Js}#${Ro}${Ro}${Ro}${Ro}${Qs}`);
  function Ln(t) {
    return parseInt(t, 16);
  }
  function ni(t) {
    try {
      let e;
      if ((e = iT.exec(t))) return [Ln(e[1]), Ln(e[2]), Ln(e[3]), 1];
      if ((e = tT.exec(t))) return [_n(e[1]), _n(e[5]), _n(e[9]), 1];
      if ((e = nT.exec(t))) return [_n(e[1]), _n(e[5]), _n(e[9]), Fa(e[13])];
      if ((e = rT.exec(t)))
        return [Ln(e[1] + e[1]), Ln(e[2] + e[2]), Ln(e[3] + e[3]), 1];
      if ((e = sT.exec(t)))
        return [Ln(e[1]), Ln(e[2]), Ln(e[3]), Fa(Ln(e[4]) / 255)];
      if ((e = oT.exec(t)))
        return [
          Ln(e[1] + e[1]),
          Ln(e[2] + e[2]),
          Ln(e[3] + e[3]),
          Fa(Ln(e[4] + e[4]) / 255),
        ];
      if (t in jm) return ni(jm[t]);
      throw new Error(`[seemly/rgba]: Invalid color value ${t}.`);
    } catch (e) {
      throw e;
    }
  }
  function aT(t) {
    return t > 1 ? 1 : t < 0 ? 0 : t;
  }
  function qh(t, e, n, r) {
    return `rgba(${_n(t)}, ${_n(e)}, ${_n(n)}, ${aT(r)})`;
  }
  function Ud(t, e, n, r, i) {
    return _n((t * e * (1 - r) + n * r) / i);
  }
  function Ue(t, e) {
    Array.isArray(t) || (t = ni(t)), Array.isArray(e) || (e = ni(e));
    const n = t[3],
      r = e[3],
      i = Fa(n + r - n * r);
    return qh(
      Ud(t[0], n, e[0], r, i),
      Ud(t[1], n, e[1], r, i),
      Ud(t[2], n, e[2], r, i),
      i
    );
  }
  function Ae(t, e) {
    const [n, r, i, o = 1] = Array.isArray(t) ? t : ni(t);
    return e.alpha ? qh(n, r, i, e.alpha) : qh(n, r, i, o);
  }
  function Yt(t, e) {
    const [n, r, i, o = 1] = Array.isArray(t) ? t : ni(t),
      { lightness: s = 1, alpha: a = 1 } = e;
    return lT([n * s, r * s, i * s, o * a]);
  }
  function Fa(t) {
    const e = Math.round(Number(t) * 100) / 100;
    return e > 1 ? 1 : e < 0 ? 0 : e;
  }
  function _n(t) {
    const e = Math.round(Number(t));
    return e > 255 ? 255 : e < 0 ? 0 : e;
  }
  function lT(t) {
    const [e, n, r] = t;
    return 3 in t
      ? `rgba(${_n(e)}, ${_n(n)}, ${_n(r)}, ${Fa(t[3])})`
      : `rgba(${_n(e)}, ${_n(n)}, ${_n(r)}, 1)`;
  }
  function Ui(t = 8) {
    return Math.random()
      .toString(16)
      .slice(2, 2 + t);
  }
  function cT(t, e) {
    const n = [];
    for (let r = 0; r < t; ++r) n.push(e);
    return n;
  }
  function ly(t, e = "default", n = []) {
    const i = t.$slots[e];
    return i === void 0 ? n : i();
  }
  function Um(t, e = "default", n = []) {
    const { children: r } = t;
    if (r !== null && typeof r == "object" && !Array.isArray(r)) {
      const i = r[e];
      if (typeof i == "function") return i();
    }
    return n;
  }
  function Bs(t, e = [], n) {
    const r = {};
    return (
      e.forEach((i) => {
        r[i] = t[i];
      }),
      Object.assign(r, n)
    );
  }
  function zu(t, e = [], n) {
    const r = {};
    return (
      Object.getOwnPropertyNames(t).forEach((o) => {
        e.includes(o) || (r[o] = t[o]);
      }),
      Object.assign(r, n)
    );
  }
  function Hi(t, e = !0, n = []) {
    return (
      t.forEach((r) => {
        if (r !== null) {
          if (typeof r != "object") {
            (typeof r == "string" || typeof r == "number") &&
              n.push(Se(String(r)));
            return;
          }
          if (Array.isArray(r)) {
            Hi(r, e, n);
            return;
          }
          if (r.type === pt) {
            if (r.children === null) return;
            Array.isArray(r.children) && Hi(r.children, e, n);
          } else {
            if (r.type === Rn && e) return;
            n.push(r);
          }
        }
      }),
      n
    );
  }
  function Ke(t, ...e) {
    if (Array.isArray(t)) t.forEach((n) => Ke(n, ...e));
    else return t(...e);
  }
  function Fu(t) {
    return Object.keys(t);
  }
  const wn = (t, ...e) =>
    typeof t == "function"
      ? t(...e)
      : typeof t == "string"
      ? Se(t)
      : typeof t == "number"
      ? Se(String(t))
      : null;
  function tl(t, e) {
    console.error(`[naive/${t}]: ${e}`);
  }
  function jo(t, e) {
    throw new Error(`[naive/${t}]: ${e}`);
  }
  function uT(t) {
    switch (t) {
      case "tiny":
        return "mini";
      case "small":
        return "tiny";
      case "medium":
        return "small";
      case "large":
        return "medium";
      case "huge":
        return "large";
    }
    throw Error(`${t} has no smaller size.`);
  }
  function qc(t, e = "default", n = void 0) {
    const r = t[e];
    if (!r) return tl("getFirstSlotVNode", `slot[${e}] is empty`), null;
    const i = Hi(r(n));
    return i.length === 1
      ? i[0]
      : (tl("getFirstSlotVNode", `slot[${e}] should have exactly one child`),
        null);
  }
  function Tl(t) {
    return t.some((e) =>
      Qa(e) ? !(e.type === Rn || (e.type === pt && !Tl(e.children))) : !0
    )
      ? t
      : null;
  }
  function Lr(t, e) {
    return (t && Tl(t())) || e();
  }
  function dT(t, e, n) {
    return (t && Tl(t(e))) || n(e);
  }
  function gt(t, e) {
    const n = t && Tl(t());
    return e(n || null);
  }
  function Es(t) {
    return !(t && Tl(t()));
  }
  function Vd(t) {
    const e = t.filter((n) => n !== void 0);
    if (e.length !== 0)
      return e.length === 1
        ? e[0]
        : (n) => {
            t.forEach((r) => {
              r && r(n);
            });
          };
  }
  const Vm = $e({
      render() {
        var t, e;
        return (e = (t = this.$slots).default) === null || e === void 0
          ? void 0
          : e.call(t);
      },
    }),
    hT = /^(\d|\.)+$/,
    Gm = /(\d|\.)+/;
  function Kr(t, { c: e = 1, offset: n = 0, attachPx: r = !0 } = {}) {
    if (typeof t == "number") {
      const i = (t + n) * e;
      return i === 0 ? "0" : `${i}px`;
    } else if (typeof t == "string")
      if (hT.test(t)) {
        const i = (Number(t) + n) * e;
        return r ? (i === 0 ? "0" : `${i}px`) : `${i}`;
      } else {
        const i = Gm.exec(t);
        return i ? t.replace(Gm, String((Number(i[0]) + n) * e)) : t;
      }
    return t;
  }
  function Zc(t) {
    return t.replace(/#|\(|\)|,|\s|\./g, "_");
  }
  function fT(t) {
    let e = 0;
    for (let n = 0; n < t.length; ++n) t[n] === "&" && ++e;
    return e;
  }
  const cy = /\s*,(?![^(]*\))\s*/g,
    gT = /\s+/g;
  function pT(t, e) {
    const n = [];
    return (
      e.split(cy).forEach((r) => {
        let i = fT(r);
        if (i) {
          if (i === 1) {
            t.forEach((s) => {
              n.push(r.replace("&", s));
            });
            return;
          }
        } else {
          t.forEach((s) => {
            n.push((s && s + " ") + r);
          });
          return;
        }
        let o = [r];
        for (; i--; ) {
          const s = [];
          o.forEach((a) => {
            t.forEach((l) => {
              s.push(a.replace("&", l));
            });
          }),
            (o = s);
        }
        o.forEach((s) => n.push(s));
      }),
      n
    );
  }
  function mT(t, e) {
    const n = [];
    return (
      e.split(cy).forEach((r) => {
        t.forEach((i) => {
          n.push((i && i + " ") + r);
        });
      }),
      n
    );
  }
  function vT(t) {
    let e = [""];
    return (
      t.forEach((n) => {
        (n = n && n.trim()),
          n && (n.includes("&") ? (e = pT(e, n)) : (e = mT(e, n)));
      }),
      e.join(", ").replace(gT, " ")
    );
  }
  function Xm(t) {
    if (!t) return;
    const e = t.parentElement;
    e && e.removeChild(t);
  }
  function Bu(t) {
    return document.querySelector(`style[cssr-id="${t}"]`);
  }
  function bT(t) {
    const e = document.createElement("style");
    return e.setAttribute("cssr-id", t), e;
  }
  function nc(t) {
    return t ? /^\s*@(s|m)/.test(t) : !1;
  }
  const yT = /[A-Z]/g;
  function uy(t) {
    return t.replace(yT, (e) => "-" + e.toLowerCase());
  }
  function xT(t, e = "  ") {
    return typeof t == "object" && t !== null
      ? ` {
` +
          Object.entries(t).map((n) => e + `  ${uy(n[0])}: ${n[1]};`).join(`
`) +
          `
` +
          e +
          "}"
      : `: ${t};`;
  }
  function CT(t, e, n) {
    return typeof t == "function" ? t({ context: e.context, props: n }) : t;
  }
  function Km(t, e, n, r) {
    if (!e) return "";
    const i = CT(e, n, r);
    if (!i) return "";
    if (typeof i == "string")
      return `${t} {
${i}
}`;
    const o = Object.keys(i);
    if (o.length === 0)
      return n.config.keepEmptyBlock
        ? t +
            ` {
}`
        : "";
    const s = t ? [t + " {"] : [];
    return (
      o.forEach((a) => {
        const l = i[a];
        if (a === "raw") {
          s.push(
            `
` +
              l +
              `
`
          );
          return;
        }
        (a = uy(a)), l != null && s.push(`  ${a}${xT(l)}`);
      }),
      t && s.push("}"),
      s.join(`
`)
    );
  }
  function Zh(t, e, n) {
    t &&
      t.forEach((r) => {
        if (Array.isArray(r)) Zh(r, e, n);
        else if (typeof r == "function") {
          const i = r(e);
          Array.isArray(i) ? Zh(i, e, n) : i && n(i);
        } else r && n(r);
      });
  }
  function dy(t, e, n, r, i, o) {
    const s = t.$;
    let a = "";
    if (!s || typeof s == "string") nc(s) ? (a = s) : e.push(s);
    else if (typeof s == "function") {
      const u = s({ context: r.context, props: i });
      nc(u) ? (a = u) : e.push(u);
    } else if (
      (s.before && s.before(r.context), !s.$ || typeof s.$ == "string")
    )
      nc(s.$) ? (a = s.$) : e.push(s.$);
    else if (s.$) {
      const u = s.$({ context: r.context, props: i });
      nc(u) ? (a = u) : e.push(u);
    }
    const l = vT(e),
      c = Km(l, t.props, r, i);
    a
      ? (n.push(`${a} {`),
        o &&
          c &&
          o.insertRule(`${a} {
${c}
}
`))
      : (o && c && o.insertRule(c), !o && c.length && n.push(c)),
      t.children &&
        Zh(t.children, { context: r.context, props: i }, (u) => {
          if (typeof u == "string") {
            const d = Km(l, { raw: u }, r, i);
            o ? o.insertRule(d) : n.push(d);
          } else dy(u, e, n, r, i, o);
        }),
      e.pop(),
      a && n.push("}"),
      s && s.after && s.after(r.context);
  }
  function hy(t, e, n, r = !1) {
    const i = [];
    return (
      dy(t, [], i, e, n, r ? t.instance.__styleSheet : void 0),
      r
        ? ""
        : i.join(`

`)
    );
  }
  function nl(t) {
    for (var e = 0, n, r = 0, i = t.length; i >= 4; ++r, i -= 4)
      (n =
        (t.charCodeAt(r) & 255) |
        ((t.charCodeAt(++r) & 255) << 8) |
        ((t.charCodeAt(++r) & 255) << 16) |
        ((t.charCodeAt(++r) & 255) << 24)),
        (n = (n & 65535) * 1540483477 + (((n >>> 16) * 59797) << 16)),
        (n ^= n >>> 24),
        (e =
          ((n & 65535) * 1540483477 + (((n >>> 16) * 59797) << 16)) ^
          ((e & 65535) * 1540483477 + (((e >>> 16) * 59797) << 16)));
    switch (i) {
      case 3:
        e ^= (t.charCodeAt(r + 2) & 255) << 16;
      case 2:
        e ^= (t.charCodeAt(r + 1) & 255) << 8;
      case 1:
        (e ^= t.charCodeAt(r) & 255),
          (e = (e & 65535) * 1540483477 + (((e >>> 16) * 59797) << 16));
    }
    return (
      (e ^= e >>> 13),
      (e = (e & 65535) * 1540483477 + (((e >>> 16) * 59797) << 16)),
      ((e ^ (e >>> 15)) >>> 0).toString(36)
    );
  }
  typeof window < "u" && (window.__cssrContext = {});
  function _T(t, e, n) {
    const { els: r } = e;
    if (n === void 0) r.forEach(Xm), (e.els = []);
    else {
      const i = Bu(n);
      i && r.includes(i) && (Xm(i), (e.els = r.filter((o) => o !== i)));
    }
  }
  function Ym(t, e) {
    t.push(e);
  }
  function wT(t, e, n, r, i, o, s, a, l) {
    if (o && !l) {
      if (n === void 0) {
        console.error("[css-render/mount]: `id` is required in `silent` mode.");
        return;
      }
      const h = window.__cssrContext;
      h[n] || ((h[n] = !0), hy(e, t, r, o));
      return;
    }
    let c;
    if ((n === void 0 && ((c = e.render(r)), (n = nl(c))), l)) {
      l.adapter(n, c ?? e.render(r));
      return;
    }
    const u = Bu(n);
    if (u !== null && !s) return u;
    const d = u ?? bT(n);
    if ((c === void 0 && (c = e.render(r)), (d.textContent = c), u !== null))
      return u;
    if (a) {
      const h = document.head.querySelector(`meta[name="${a}"]`);
      if (h) return document.head.insertBefore(d, h), Ym(e.els, d), d;
    }
    return (
      i
        ? document.head.insertBefore(
            d,
            document.head.querySelector("style, link")
          )
        : document.head.appendChild(d),
      Ym(e.els, d),
      d
    );
  }
  function ST(t) {
    return hy(this, this.instance, t);
  }
  function ET(t = {}) {
    const {
      id: e,
      ssr: n,
      props: r,
      head: i = !1,
      silent: o = !1,
      force: s = !1,
      anchorMetaName: a,
    } = t;
    return wT(this.instance, this, e, r, i, o, s, a, n);
  }
  function RT(t = {}) {
    const { id: e } = t;
    _T(this.instance, this, e);
  }
  const rc = function (t, e, n, r) {
      return {
        instance: t,
        $: e,
        props: n,
        children: r,
        els: [],
        render: ST,
        mount: ET,
        unmount: RT,
      };
    },
    TT = function (t, e, n, r) {
      return Array.isArray(e)
        ? rc(t, { $: null }, null, e)
        : Array.isArray(n)
        ? rc(t, e, null, n)
        : Array.isArray(r)
        ? rc(t, e, n, r)
        : rc(t, e, n, null);
    };
  function fy(t = {}) {
    let e = null;
    const n = {
      c: (...r) => TT(n, ...r),
      use: (r, ...i) => r.install(n, ...i),
      find: Bu,
      context: {},
      config: t,
      get __styleSheet() {
        if (!e) {
          const r = document.createElement("style");
          return (
            document.head.appendChild(r),
            (e = document.styleSheets[document.styleSheets.length - 1]),
            e
          );
        }
        return e;
      },
    };
    return n;
  }
  function PT(t, e) {
    if (t === void 0) return !1;
    if (e) {
      const {
        context: { ids: n },
      } = e;
      return n.has(t);
    }
    return Bu(t) !== null;
  }
  function AT(t) {
    let e = ".",
      n = "__",
      r = "--",
      i;
    if (t) {
      let f = t.blockPrefix;
      f && (e = f),
        (f = t.elementPrefix),
        f && (n = f),
        (f = t.modifierPrefix),
        f && (r = f);
    }
    const o = {
      install(f) {
        i = f.c;
        const p = f.context;
        (p.bem = {}), (p.bem.b = null), (p.bem.els = null);
      },
    };
    function s(f) {
      let p, b;
      return {
        before(m) {
          (p = m.bem.b), (b = m.bem.els), (m.bem.els = null);
        },
        after(m) {
          (m.bem.b = p), (m.bem.els = b);
        },
        $({ context: m, props: _ }) {
          return (
            (f = typeof f == "string" ? f : f({ context: m, props: _ })),
            (m.bem.b = f),
            `${(_ == null ? void 0 : _.bPrefix) || e}${m.bem.b}`
          );
        },
      };
    }
    function a(f) {
      let p;
      return {
        before(b) {
          p = b.bem.els;
        },
        after(b) {
          b.bem.els = p;
        },
        $({ context: b, props: m }) {
          return (
            (f = typeof f == "string" ? f : f({ context: b, props: m })),
            (b.bem.els = f.split(",").map((_) => _.trim())),
            b.bem.els
              .map(
                (_) =>
                  `${(m == null ? void 0 : m.bPrefix) || e}${b.bem.b}${n}${_}`
              )
              .join(", ")
          );
        },
      };
    }
    function l(f) {
      return {
        $({ context: p, props: b }) {
          f = typeof f == "string" ? f : f({ context: p, props: b });
          const m = f.split(",").map((S) => S.trim());
          function _(S) {
            return m
              .map(
                (x) =>
                  `&${(b == null ? void 0 : b.bPrefix) || e}${p.bem.b}${
                    S !== void 0 ? `${n}${S}` : ""
                  }${r}${x}`
              )
              .join(", ");
          }
          const R = p.bem.els;
          return R !== null ? _(R[0]) : _();
        },
      };
    }
    function c(f) {
      return {
        $({ context: p, props: b }) {
          f = typeof f == "string" ? f : f({ context: p, props: b });
          const m = p.bem.els;
          return `&:not(${(b == null ? void 0 : b.bPrefix) || e}${p.bem.b}${
            m !== null && m.length > 0 ? `${n}${m[0]}` : ""
          }${r}${f})`;
        },
      };
    }
    return (
      Object.assign(o, {
        cB: (...f) => i(s(f[0]), f[1], f[2]),
        cE: (...f) => i(a(f[0]), f[1], f[2]),
        cM: (...f) => i(l(f[0]), f[1], f[2]),
        cNotM: (...f) => i(c(f[0]), f[1], f[2]),
      }),
      o
    );
  }
  const kT = "n",
    rl = `.${kT}-`,
    IT = "__",
    OT = "--",
    gy = fy(),
    py = AT({ blockPrefix: rl, elementPrefix: IT, modifierPrefix: OT });
  gy.use(py);
  const { c: q, find: tU } = gy,
    { cB: M, cE: ne, cM: te, cNotM: Zt } = py;
  function Pl(t) {
    return q(
      ({ props: { bPrefix: e } }) => `${e || rl}modal, ${e || rl}drawer`,
      [t]
    );
  }
  function Nu(t) {
    return q(({ props: { bPrefix: e } }) => `${e || rl}popover`, [t]);
  }
  function my(t) {
    return q(({ props: { bPrefix: e } }) => `&${e || rl}modal`, t);
  }
  const MT = (...t) => q(">", [M(...t)]);
  function Te(t, e) {
    return (
      t + (e === "default" ? "" : e.replace(/^[a-z]/, (n) => n.toUpperCase()))
    );
  }
  let Gd;
  function LT() {
    return (
      Gd === void 0 &&
        (Gd =
          navigator.userAgent.includes("Node.js") ||
          navigator.userAgent.includes("jsdom")),
      Gd
    );
  }
  const Ji = typeof document < "u" && typeof window < "u",
    $T = new WeakSet();
  function DT(t) {
    return !$T.has(t);
  }
  function zT(t) {
    const e = U(!!t.value);
    if (e.value) return ti(e);
    const n = Et(t, (r) => {
      r && ((e.value = !0), n());
    });
    return ti(e);
  }
  function Tn(t) {
    const e = ce(t),
      n = U(e.value);
    return (
      Et(e, (r) => {
        n.value = r;
      }),
      typeof t == "function"
        ? n
        : {
            __v_isRef: !0,
            get value() {
              return n.value;
            },
            set value(r) {
              t.set(r);
            },
          }
    );
  }
  function vy() {
    return Wo() !== null;
  }
  const dg = typeof window < "u";
  let Rs, Ba;
  const FT = () => {
    var t, e;
    (Rs = dg
      ? (e = (t = document) === null || t === void 0 ? void 0 : t.fonts) ===
          null || e === void 0
        ? void 0
        : e.ready
      : void 0),
      (Ba = !1),
      Rs !== void 0
        ? Rs.then(() => {
            Ba = !0;
          })
        : (Ba = !0);
  };
  FT();
  function by(t) {
    if (Ba) return;
    let e = !1;
    Vt(() => {
      Ba ||
        Rs == null ||
        Rs.then(() => {
          e || t();
        });
    }),
      Qt(() => {
        e = !0;
      });
  }
  function Mc(t) {
    return t.composedPath()[0];
  }
  const BT = { mousemoveoutside: new WeakMap(), clickoutside: new WeakMap() };
  function NT(t, e, n) {
    if (t === "mousemoveoutside") {
      const r = (i) => {
        e.contains(Mc(i)) || n(i);
      };
      return { mousemove: r, touchstart: r };
    } else if (t === "clickoutside") {
      let r = !1;
      const i = (s) => {
          r = !e.contains(Mc(s));
        },
        o = (s) => {
          r && (e.contains(Mc(s)) || n(s));
        };
      return { mousedown: i, mouseup: o, touchstart: i, touchend: o };
    }
    return (
      console.error(
        `[evtd/create-trap-handler]: name \`${t}\` is invalid. This could be a bug of evtd.`
      ),
      {}
    );
  }
  function yy(t, e, n) {
    const r = BT[t];
    let i = r.get(e);
    i === void 0 && r.set(e, (i = new WeakMap()));
    let o = i.get(n);
    return o === void 0 && i.set(n, (o = NT(t, e, n))), o;
  }
  function HT(t, e, n, r) {
    if (t === "mousemoveoutside" || t === "clickoutside") {
      const i = yy(t, e, n);
      return (
        Object.keys(i).forEach((o) => {
          kt(o, document, i[o], r);
        }),
        !0
      );
    }
    return !1;
  }
  function WT(t, e, n, r) {
    if (t === "mousemoveoutside" || t === "clickoutside") {
      const i = yy(t, e, n);
      return (
        Object.keys(i).forEach((o) => {
          mt(o, document, i[o], r);
        }),
        !0
      );
    }
    return !1;
  }
  function jT() {
    if (typeof window > "u") return { on: () => {}, off: () => {} };
    const t = new WeakMap(),
      e = new WeakMap();
    function n() {
      t.set(this, !0);
    }
    function r() {
      t.set(this, !0), e.set(this, !0);
    }
    function i(w, v, y) {
      const T = w[v];
      return (
        (w[v] = function () {
          return y.apply(w, arguments), T.apply(w, arguments);
        }),
        w
      );
    }
    function o(w, v) {
      w[v] = Event.prototype[v];
    }
    const s = new WeakMap(),
      a = Object.getOwnPropertyDescriptor(Event.prototype, "currentTarget");
    function l() {
      var w;
      return (w = s.get(this)) !== null && w !== void 0 ? w : null;
    }
    function c(w, v) {
      a !== void 0 &&
        Object.defineProperty(w, "currentTarget", {
          configurable: !0,
          enumerable: !0,
          get: v ?? a.get,
        });
    }
    const u = { bubble: {}, capture: {} },
      d = {};
    function h() {
      const w = function (v) {
        const { type: y, eventPhase: T, bubbles: A } = v,
          I = Mc(v);
        if (T === 2) return;
        const L = T === 1 ? "capture" : "bubble";
        let j = I;
        const k = [];
        for (; j === null && (j = window), k.push(j), j !== window; )
          j = j.parentNode || null;
        const O = u.capture[y],
          D = u.bubble[y];
        if (
          (i(v, "stopPropagation", n),
          i(v, "stopImmediatePropagation", r),
          c(v, l),
          L === "capture")
        ) {
          if (O === void 0) return;
          for (let Y = k.length - 1; Y >= 0 && !t.has(v); --Y) {
            const se = k[Y],
              de = O.get(se);
            if (de !== void 0) {
              s.set(v, se);
              for (const fe of de) {
                if (e.has(v)) break;
                fe(v);
              }
            }
            if (Y === 0 && !A && D !== void 0) {
              const fe = D.get(se);
              if (fe !== void 0)
                for (const z of fe) {
                  if (e.has(v)) break;
                  z(v);
                }
            }
          }
        } else if (L === "bubble") {
          if (D === void 0) return;
          for (let Y = 0; Y < k.length && !t.has(v); ++Y) {
            const se = k[Y],
              de = D.get(se);
            if (de !== void 0) {
              s.set(v, se);
              for (const fe of de) {
                if (e.has(v)) break;
                fe(v);
              }
            }
          }
        }
        o(v, "stopPropagation"), o(v, "stopImmediatePropagation"), c(v);
      };
      return (w.displayName = "evtdUnifiedHandler"), w;
    }
    function g() {
      const w = function (v) {
        const { type: y, eventPhase: T } = v;
        if (T !== 2) return;
        const A = d[y];
        A !== void 0 && A.forEach((I) => I(v));
      };
      return (w.displayName = "evtdUnifiedWindowEventHandler"), w;
    }
    const f = h(),
      p = g();
    function b(w, v) {
      const y = u[w];
      return (
        y[v] === void 0 &&
          ((y[v] = new Map()), window.addEventListener(v, f, w === "capture")),
        y[v]
      );
    }
    function m(w) {
      return (
        d[w] === void 0 && ((d[w] = new Set()), window.addEventListener(w, p)),
        d[w]
      );
    }
    function _(w, v) {
      let y = w.get(v);
      return y === void 0 && w.set(v, (y = new Set())), y;
    }
    function R(w, v, y, T) {
      const A = u[v][y];
      if (A !== void 0) {
        const I = A.get(w);
        if (I !== void 0 && I.has(T)) return !0;
      }
      return !1;
    }
    function S(w, v) {
      const y = d[w];
      return !!(y !== void 0 && y.has(v));
    }
    function x(w, v, y, T) {
      let A;
      if (
        (typeof T == "object" && T.once === !0
          ? (A = (O) => {
              E(w, v, A, T), y(O);
            })
          : (A = y),
        HT(w, v, A, T))
      )
        return;
      const L =
          T === !0 || (typeof T == "object" && T.capture === !0)
            ? "capture"
            : "bubble",
        j = b(L, w),
        k = _(j, v);
      if ((k.has(A) || k.add(A), v === window)) {
        const O = m(w);
        O.has(A) || O.add(A);
      }
    }
    function E(w, v, y, T) {
      if (WT(w, v, y, T)) return;
      const I = T === !0 || (typeof T == "object" && T.capture === !0),
        L = I ? "capture" : "bubble",
        j = b(L, w),
        k = _(j, v);
      if (v === window && !R(v, I ? "bubble" : "capture", w, y) && S(w, y)) {
        const D = d[w];
        D.delete(y),
          D.size === 0 && (window.removeEventListener(w, p), (d[w] = void 0));
      }
      k.has(y) && k.delete(y),
        k.size === 0 && j.delete(v),
        j.size === 0 &&
          (window.removeEventListener(w, f, L === "capture"),
          (u[L][w] = void 0));
    }
    return { on: x, off: E };
  }
  const { on: kt, off: mt } = jT(),
    Ta = U(null);
  function qm(t) {
    if (t.clientX > 0 || t.clientY > 0)
      Ta.value = { x: t.clientX, y: t.clientY };
    else {
      const { target: e } = t;
      if (e instanceof Element) {
        const {
          left: n,
          top: r,
          width: i,
          height: o,
        } = e.getBoundingClientRect();
        n > 0 || r > 0
          ? (Ta.value = { x: n + i / 2, y: r + o / 2 })
          : (Ta.value = { x: 0, y: 0 });
      } else Ta.value = null;
    }
  }
  let ic = 0,
    Zm = !0;
  function xy() {
    if (!dg) return ti(U(null));
    ic === 0 && kt("click", document, qm, !0);
    const t = () => {
      ic += 1;
    };
    return (
      Zm && (Zm = vy())
        ? (Ho(t),
          Qt(() => {
            (ic -= 1), ic === 0 && mt("click", document, qm, !0);
          }))
        : t(),
      ti(Ta)
    );
  }
  const UT = U(void 0);
  let oc = 0;
  function Jm() {
    UT.value = Date.now();
  }
  let Qm = !0;
  function Cy(t) {
    if (!dg) return ti(U(!1));
    const e = U(!1);
    let n = null;
    function r() {
      n !== null && window.clearTimeout(n);
    }
    function i() {
      r(),
        (e.value = !0),
        (n = window.setTimeout(() => {
          e.value = !1;
        }, t));
    }
    oc === 0 && kt("click", window, Jm, !0);
    const o = () => {
      (oc += 1), kt("click", window, i, !0);
    };
    return (
      Qm && (Qm = vy())
        ? (Ho(o),
          Qt(() => {
            (oc -= 1),
              oc === 0 && mt("click", window, Jm, !0),
              mt("click", window, i, !0),
              r();
          }))
        : o(),
      ti(e)
    );
  }
  function li(t, e) {
    return (
      Et(t, (n) => {
        n !== void 0 && (e.value = n);
      }),
      ce(() => (t.value === void 0 ? e.value : t.value))
    );
  }
  function Qi() {
    const t = U(!1);
    return (
      Vt(() => {
        t.value = !0;
      }),
      ti(t)
    );
  }
  function Jc(t, e) {
    return ce(() => {
      for (const n of e) if (t[n] !== void 0) return t[n];
      return t[e[e.length - 1]];
    });
  }
  const VT =
    (typeof window > "u"
      ? !1
      : /iPad|iPhone|iPod/.test(navigator.platform) ||
        (navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1)) &&
    !window.MSStream;
  function GT() {
    return VT;
  }
  const hg = "n-internal-select-menu",
    _y = "n-internal-select-menu-body",
    fg = "n-modal-body",
    wy = "n-modal",
    gg = "n-drawer-body",
    pg = "n-popover-body",
    Sy = "__disabled__";
  function ar(t) {
    const e = Ve(fg, null),
      n = Ve(gg, null),
      r = Ve(pg, null),
      i = Ve(_y, null),
      o = U();
    if (typeof document < "u") {
      o.value = document.fullscreenElement;
      const s = () => {
        o.value = document.fullscreenElement;
      };
      Vt(() => {
        kt("fullscreenchange", document, s);
      }),
        Qt(() => {
          mt("fullscreenchange", document, s);
        });
    }
    return Tn(() => {
      var s;
      const { to: a } = t;
      return a !== void 0
        ? a === !1
          ? Sy
          : a === !0
          ? o.value || "body"
          : a
        : e != null && e.value
        ? (s = e.value.$el) !== null && s !== void 0
          ? s
          : e.value
        : n != null && n.value
        ? n.value
        : r != null && r.value
        ? r.value
        : i != null && i.value
        ? i.value
        : a ?? (o.value || "body");
    });
  }
  ar.tdkey = Sy;
  ar.propTo = { type: [String, Object, Boolean], default: void 0 };
  function Jh(t, e, n = "default") {
    const r = e[n];
    if (r === void 0) throw new Error(`[vueuc/${t}]: slot[${n}] is empty.`);
    return r();
  }
  function Qh(t, e = !0, n = []) {
    return (
      t.forEach((r) => {
        if (r !== null) {
          if (typeof r != "object") {
            (typeof r == "string" || typeof r == "number") &&
              n.push(Se(String(r)));
            return;
          }
          if (Array.isArray(r)) {
            Qh(r, e, n);
            return;
          }
          if (r.type === pt) {
            if (r.children === null) return;
            Array.isArray(r.children) && Qh(r.children, e, n);
          } else r.type !== Rn && n.push(r);
        }
      }),
      n
    );
  }
  function e0(t, e, n = "default") {
    const r = e[n];
    if (r === void 0) throw new Error(`[vueuc/${t}]: slot[${n}] is empty.`);
    const i = Qh(r());
    if (i.length === 1) return i[0];
    throw new Error(`[vueuc/${t}]: slot[${n}] should have exactly one child.`);
  }
  let yi = null;
  function Ey() {
    if (
      yi === null &&
      ((yi = document.getElementById("v-binder-view-measurer")), yi === null)
    ) {
      (yi = document.createElement("div")), (yi.id = "v-binder-view-measurer");
      const { style: t } = yi;
      (t.position = "fixed"),
        (t.left = "0"),
        (t.right = "0"),
        (t.top = "0"),
        (t.bottom = "0"),
        (t.pointerEvents = "none"),
        (t.visibility = "hidden"),
        document.body.appendChild(yi);
    }
    return yi.getBoundingClientRect();
  }
  function XT(t, e) {
    const n = Ey();
    return {
      top: e,
      left: t,
      height: 0,
      width: 0,
      right: n.width - t,
      bottom: n.height - e,
    };
  }
  function Xd(t) {
    const e = t.getBoundingClientRect(),
      n = Ey();
    return {
      left: e.left - n.left,
      top: e.top - n.top,
      bottom: n.height + n.top - e.bottom,
      right: n.width + n.left - e.right,
      width: e.width,
      height: e.height,
    };
  }
  function KT(t) {
    return t.nodeType === 9 ? null : t.parentNode;
  }
  function Ry(t) {
    if (t === null) return null;
    const e = KT(t);
    if (e === null) return null;
    if (e.nodeType === 9) return document;
    if (e.nodeType === 1) {
      const { overflow: n, overflowX: r, overflowY: i } = getComputedStyle(e);
      if (/(auto|scroll|overlay)/.test(n + i + r)) return e;
    }
    return Ry(e);
  }
  const YT = $e({
      name: "Binder",
      props: {
        syncTargetWithParent: Boolean,
        syncTarget: { type: Boolean, default: !0 },
      },
      setup(t) {
        var e;
        vt("VBinder", (e = Wo()) === null || e === void 0 ? void 0 : e.proxy);
        const n = Ve("VBinder", null),
          r = U(null),
          i = (m) => {
            (r.value = m), n && t.syncTargetWithParent && n.setTargetRef(m);
          };
        let o = [];
        const s = () => {
            let m = r.value;
            for (; (m = Ry(m)), m !== null; ) o.push(m);
            for (const _ of o) kt("scroll", _, d, !0);
          },
          a = () => {
            for (const m of o) mt("scroll", m, d, !0);
            o = [];
          },
          l = new Set(),
          c = (m) => {
            l.size === 0 && s(), l.has(m) || l.add(m);
          },
          u = (m) => {
            l.has(m) && l.delete(m), l.size === 0 && a();
          },
          d = () => {
            ug(h);
          },
          h = () => {
            l.forEach((m) => m());
          },
          g = new Set(),
          f = (m) => {
            g.size === 0 && kt("resize", window, b), g.has(m) || g.add(m);
          },
          p = (m) => {
            g.has(m) && g.delete(m), g.size === 0 && mt("resize", window, b);
          },
          b = () => {
            g.forEach((m) => m());
          };
        return (
          Qt(() => {
            mt("resize", window, b), a();
          }),
          {
            targetRef: r,
            setTargetRef: i,
            addScrollListener: c,
            removeScrollListener: u,
            addResizeListener: f,
            removeResizeListener: p,
          }
        );
      },
      render() {
        return Jh("binder", this.$slots);
      },
    }),
    mg = YT,
    vg = $e({
      name: "Target",
      setup() {
        const { setTargetRef: t, syncTarget: e } = Ve("VBinder");
        return {
          syncTarget: e,
          setTargetDirective: { mounted: t, updated: t },
        };
      },
      render() {
        const { syncTarget: t, setTargetDirective: e } = this;
        return t
          ? sr(e0("follower", this.$slots), [[e]])
          : e0("follower", this.$slots);
      },
    }),
    ts = "@@mmoContext",
    qT = {
      mounted(t, { value: e }) {
        (t[ts] = { handler: void 0 }),
          typeof e == "function" &&
            ((t[ts].handler = e), kt("mousemoveoutside", t, e));
      },
      updated(t, { value: e }) {
        const n = t[ts];
        typeof e == "function"
          ? n.handler
            ? n.handler !== e &&
              (mt("mousemoveoutside", t, n.handler),
              (n.handler = e),
              kt("mousemoveoutside", t, e))
            : ((t[ts].handler = e), kt("mousemoveoutside", t, e))
          : n.handler &&
            (mt("mousemoveoutside", t, n.handler), (n.handler = void 0));
      },
      unmounted(t) {
        const { handler: e } = t[ts];
        e && mt("mousemoveoutside", t, e), (t[ts].handler = void 0);
      },
    },
    ZT = qT,
    ns = "@@coContext",
    JT = {
      mounted(t, { value: e, modifiers: n }) {
        (t[ns] = { handler: void 0 }),
          typeof e == "function" &&
            ((t[ns].handler = e),
            kt("clickoutside", t, e, { capture: n.capture }));
      },
      updated(t, { value: e, modifiers: n }) {
        const r = t[ns];
        typeof e == "function"
          ? r.handler
            ? r.handler !== e &&
              (mt("clickoutside", t, r.handler, { capture: n.capture }),
              (r.handler = e),
              kt("clickoutside", t, e, { capture: n.capture }))
            : ((t[ns].handler = e),
              kt("clickoutside", t, e, { capture: n.capture }))
          : r.handler &&
            (mt("clickoutside", t, r.handler, { capture: n.capture }),
            (r.handler = void 0));
      },
      unmounted(t, { modifiers: e }) {
        const { handler: n } = t[ns];
        n && mt("clickoutside", t, n, { capture: e.capture }),
          (t[ns].handler = void 0);
      },
    },
    Qc = JT;
  function QT(t, e) {
    console.error(`[vdirs/${t}]: ${e}`);
  }
  class eP {
    constructor() {
      (this.elementZIndex = new Map()), (this.nextZIndex = 2e3);
    }
    get elementCount() {
      return this.elementZIndex.size;
    }
    ensureZIndex(e, n) {
      const { elementZIndex: r } = this;
      if (n !== void 0) {
        (e.style.zIndex = `${n}`), r.delete(e);
        return;
      }
      const { nextZIndex: i } = this;
      (r.has(e) && r.get(e) + 1 === this.nextZIndex) ||
        ((e.style.zIndex = `${i}`),
        r.set(e, i),
        (this.nextZIndex = i + 1),
        this.squashState());
    }
    unregister(e, n) {
      const { elementZIndex: r } = this;
      r.has(e)
        ? r.delete(e)
        : n === void 0 &&
          QT(
            "z-index-manager/unregister-element",
            "Element not found when unregistering."
          ),
        this.squashState();
    }
    squashState() {
      const { elementCount: e } = this;
      e || (this.nextZIndex = 2e3),
        this.nextZIndex - e > 2500 && this.rearrange();
    }
    rearrange() {
      const e = Array.from(this.elementZIndex.entries());
      e.sort((n, r) => n[1] - r[1]),
        (this.nextZIndex = 2e3),
        e.forEach((n) => {
          const r = n[0],
            i = this.nextZIndex++;
          `${i}` !== r.style.zIndex && (r.style.zIndex = `${i}`);
        });
    }
  }
  const Kd = new eP(),
    rs = "@@ziContext",
    tP = {
      mounted(t, e) {
        const { value: n = {} } = e,
          { zIndex: r, enabled: i } = n;
        (t[rs] = { enabled: !!i, initialized: !1 }),
          i && (Kd.ensureZIndex(t, r), (t[rs].initialized = !0));
      },
      updated(t, e) {
        const { value: n = {} } = e,
          { zIndex: r, enabled: i } = n,
          o = t[rs].enabled;
        i && !o && (Kd.ensureZIndex(t, r), (t[rs].initialized = !0)),
          (t[rs].enabled = !!i);
      },
      unmounted(t, e) {
        if (!t[rs].initialized) return;
        const { value: n = {} } = e,
          { zIndex: r } = n;
        Kd.unregister(t, r);
      },
    },
    Hu = tP,
    Ty = Symbol("@css-render/vue3-ssr");
  function nP(t, e) {
    return `<style cssr-id="${t}">
${e}
</style>`;
  }
  function rP(t, e) {
    const n = Ve(Ty, null);
    if (n === null) {
      console.error("[css-render/vue3-ssr]: no ssr context found.");
      return;
    }
    const { styles: r, ids: i } = n;
    i.has(t) || (r !== null && (i.add(t), r.push(nP(t, e))));
  }
  const iP = typeof document < "u";
  function Uo() {
    if (iP) return;
    const t = Ve(Ty, null);
    if (t !== null) return { adapter: rP, context: t };
  }
  function t0(t, e) {
    console.error(`[vueuc/${t}]: ${e}`);
  }
  const { c: Yr } = fy(),
    bg = "vueuc-style";
  function n0(t) {
    return t & -t;
  }
  class oP {
    constructor(e, n) {
      (this.l = e), (this.min = n);
      const r = new Array(e + 1);
      for (let i = 0; i < e + 1; ++i) r[i] = 0;
      this.ft = r;
    }
    add(e, n) {
      if (n === 0) return;
      const { l: r, ft: i } = this;
      for (e += 1; e <= r; ) (i[e] += n), (e += n0(e));
    }
    get(e) {
      return this.sum(e + 1) - this.sum(e);
    }
    sum(e) {
      if ((e === void 0 && (e = this.l), e <= 0)) return 0;
      const { ft: n, min: r, l: i } = this;
      if (e > i)
        throw new Error("[FinweckTree.sum]: `i` is larger than length.");
      let o = e * r;
      for (; e > 0; ) (o += n[e]), (e -= n0(e));
      return o;
    }
    getBound(e) {
      let n = 0,
        r = this.l;
      for (; r > n; ) {
        const i = Math.floor((n + r) / 2),
          o = this.sum(i);
        if (o > e) {
          r = i;
          continue;
        } else if (o < e) {
          if (n === i) return this.sum(n + 1) <= e ? n + 1 : i;
          n = i;
        } else return i;
      }
      return n;
    }
  }
  function r0(t) {
    return typeof t == "string" ? document.querySelector(t) : t();
  }
  const yg = $e({
      name: "LazyTeleport",
      props: {
        to: { type: [String, Object], default: void 0 },
        disabled: Boolean,
        show: { type: Boolean, required: !0 },
      },
      setup(t) {
        return {
          showTeleport: zT(We(t, "show")),
          mergedTo: ce(() => {
            const { to: e } = t;
            return e ?? "body";
          }),
        };
      },
      render() {
        return this.showTeleport
          ? this.disabled
            ? Jh("lazy-teleport", this.$slots)
            : C(
                Sl,
                { disabled: this.disabled, to: this.mergedTo },
                Jh("lazy-teleport", this.$slots)
              )
          : null;
      },
    }),
    sc = { top: "bottom", bottom: "top", left: "right", right: "left" },
    i0 = { start: "end", center: "center", end: "start" },
    Yd = { top: "height", bottom: "height", left: "width", right: "width" },
    sP = {
      "bottom-start": "top left",
      bottom: "top center",
      "bottom-end": "top right",
      "top-start": "bottom left",
      top: "bottom center",
      "top-end": "bottom right",
      "right-start": "top left",
      right: "center left",
      "right-end": "bottom left",
      "left-start": "top right",
      left: "center right",
      "left-end": "bottom right",
    },
    aP = {
      "bottom-start": "bottom left",
      bottom: "bottom center",
      "bottom-end": "bottom right",
      "top-start": "top left",
      top: "top center",
      "top-end": "top right",
      "right-start": "top right",
      right: "center right",
      "right-end": "bottom right",
      "left-start": "top left",
      left: "center left",
      "left-end": "bottom left",
    },
    lP = {
      "bottom-start": "right",
      "bottom-end": "left",
      "top-start": "right",
      "top-end": "left",
      "right-start": "bottom",
      "right-end": "top",
      "left-start": "bottom",
      "left-end": "top",
    },
    o0 = { top: !0, bottom: !1, left: !0, right: !1 },
    s0 = { top: "end", bottom: "start", left: "end", right: "start" };
  function cP(t, e, n, r, i, o) {
    if (!i || o) return { placement: t, top: 0, left: 0 };
    const [s, a] = t.split("-");
    let l = a ?? "center",
      c = { top: 0, left: 0 };
    const u = (g, f, p) => {
        let b = 0,
          m = 0;
        const _ = n[g] - e[f] - e[g];
        return (
          _ > 0 && r && (p ? (m = o0[f] ? _ : -_) : (b = o0[f] ? _ : -_)),
          { left: b, top: m }
        );
      },
      d = s === "left" || s === "right";
    if (l !== "center") {
      const g = lP[t],
        f = sc[g],
        p = Yd[g];
      if (n[p] > e[p]) {
        if (e[g] + e[p] < n[p]) {
          const b = (n[p] - e[p]) / 2;
          e[g] < b || e[f] < b
            ? e[g] < e[f]
              ? ((l = i0[a]), (c = u(p, f, d)))
              : (c = u(p, g, d))
            : (l = "center");
        }
      } else n[p] < e[p] && e[f] < 0 && e[g] > e[f] && (l = i0[a]);
    } else {
      const g = s === "bottom" || s === "top" ? "left" : "top",
        f = sc[g],
        p = Yd[g],
        b = (n[p] - e[p]) / 2;
      (e[g] < b || e[f] < b) &&
        (e[g] > e[f]
          ? ((l = s0[g]), (c = u(p, g, d)))
          : ((l = s0[f]), (c = u(p, f, d))));
    }
    let h = s;
    return (
      e[s] < n[Yd[s]] && e[s] < e[sc[s]] && (h = sc[s]),
      { placement: l !== "center" ? `${h}-${l}` : h, left: c.left, top: c.top }
    );
  }
  function uP(t, e) {
    return e ? aP[t] : sP[t];
  }
  function dP(t, e, n, r, i, o) {
    if (o)
      switch (t) {
        case "bottom-start":
          return {
            top: `${Math.round(n.top - e.top + n.height)}px`,
            left: `${Math.round(n.left - e.left)}px`,
            transform: "translateY(-100%)",
          };
        case "bottom-end":
          return {
            top: `${Math.round(n.top - e.top + n.height)}px`,
            left: `${Math.round(n.left - e.left + n.width)}px`,
            transform: "translateX(-100%) translateY(-100%)",
          };
        case "top-start":
          return {
            top: `${Math.round(n.top - e.top)}px`,
            left: `${Math.round(n.left - e.left)}px`,
            transform: "",
          };
        case "top-end":
          return {
            top: `${Math.round(n.top - e.top)}px`,
            left: `${Math.round(n.left - e.left + n.width)}px`,
            transform: "translateX(-100%)",
          };
        case "right-start":
          return {
            top: `${Math.round(n.top - e.top)}px`,
            left: `${Math.round(n.left - e.left + n.width)}px`,
            transform: "translateX(-100%)",
          };
        case "right-end":
          return {
            top: `${Math.round(n.top - e.top + n.height)}px`,
            left: `${Math.round(n.left - e.left + n.width)}px`,
            transform: "translateX(-100%) translateY(-100%)",
          };
        case "left-start":
          return {
            top: `${Math.round(n.top - e.top)}px`,
            left: `${Math.round(n.left - e.left)}px`,
            transform: "",
          };
        case "left-end":
          return {
            top: `${Math.round(n.top - e.top + n.height)}px`,
            left: `${Math.round(n.left - e.left)}px`,
            transform: "translateY(-100%)",
          };
        case "top":
          return {
            top: `${Math.round(n.top - e.top)}px`,
            left: `${Math.round(n.left - e.left + n.width / 2)}px`,
            transform: "translateX(-50%)",
          };
        case "right":
          return {
            top: `${Math.round(n.top - e.top + n.height / 2)}px`,
            left: `${Math.round(n.left - e.left + n.width)}px`,
            transform: "translateX(-100%) translateY(-50%)",
          };
        case "left":
          return {
            top: `${Math.round(n.top - e.top + n.height / 2)}px`,
            left: `${Math.round(n.left - e.left)}px`,
            transform: "translateY(-50%)",
          };
        case "bottom":
        default:
          return {
            top: `${Math.round(n.top - e.top + n.height)}px`,
            left: `${Math.round(n.left - e.left + n.width / 2)}px`,
            transform: "translateX(-50%) translateY(-100%)",
          };
      }
    switch (t) {
      case "bottom-start":
        return {
          top: `${Math.round(n.top - e.top + n.height + r)}px`,
          left: `${Math.round(n.left - e.left + i)}px`,
          transform: "",
        };
      case "bottom-end":
        return {
          top: `${Math.round(n.top - e.top + n.height + r)}px`,
          left: `${Math.round(n.left - e.left + n.width + i)}px`,
          transform: "translateX(-100%)",
        };
      case "top-start":
        return {
          top: `${Math.round(n.top - e.top + r)}px`,
          left: `${Math.round(n.left - e.left + i)}px`,
          transform: "translateY(-100%)",
        };
      case "top-end":
        return {
          top: `${Math.round(n.top - e.top + r)}px`,
          left: `${Math.round(n.left - e.left + n.width + i)}px`,
          transform: "translateX(-100%) translateY(-100%)",
        };
      case "right-start":
        return {
          top: `${Math.round(n.top - e.top + r)}px`,
          left: `${Math.round(n.left - e.left + n.width + i)}px`,
          transform: "",
        };
      case "right-end":
        return {
          top: `${Math.round(n.top - e.top + n.height + r)}px`,
          left: `${Math.round(n.left - e.left + n.width + i)}px`,
          transform: "translateY(-100%)",
        };
      case "left-start":
        return {
          top: `${Math.round(n.top - e.top + r)}px`,
          left: `${Math.round(n.left - e.left + i)}px`,
          transform: "translateX(-100%)",
        };
      case "left-end":
        return {
          top: `${Math.round(n.top - e.top + n.height + r)}px`,
          left: `${Math.round(n.left - e.left + i)}px`,
          transform: "translateX(-100%) translateY(-100%)",
        };
      case "top":
        return {
          top: `${Math.round(n.top - e.top + r)}px`,
          left: `${Math.round(n.left - e.left + n.width / 2 + i)}px`,
          transform: "translateY(-100%) translateX(-50%)",
        };
      case "right":
        return {
          top: `${Math.round(n.top - e.top + n.height / 2 + r)}px`,
          left: `${Math.round(n.left - e.left + n.width + i)}px`,
          transform: "translateY(-50%)",
        };
      case "left":
        return {
          top: `${Math.round(n.top - e.top + n.height / 2 + r)}px`,
          left: `${Math.round(n.left - e.left + i)}px`,
          transform: "translateY(-50%) translateX(-100%)",
        };
      case "bottom":
      default:
        return {
          top: `${Math.round(n.top - e.top + n.height + r)}px`,
          left: `${Math.round(n.left - e.left + n.width / 2 + i)}px`,
          transform: "translateX(-50%)",
        };
    }
  }
  const hP = Yr([
      Yr(".v-binder-follower-container", {
        position: "absolute",
        left: "0",
        right: "0",
        top: "0",
        height: "0",
        pointerEvents: "none",
        zIndex: "auto",
      }),
      Yr(
        ".v-binder-follower-content",
        { position: "absolute", zIndex: "auto" },
        [Yr("> *", { pointerEvents: "all" })]
      ),
    ]),
    xg = $e({
      name: "Follower",
      inheritAttrs: !1,
      props: {
        show: Boolean,
        enabled: { type: Boolean, default: void 0 },
        placement: { type: String, default: "bottom" },
        syncTrigger: { type: Array, default: ["resize", "scroll"] },
        to: [String, Object],
        flip: { type: Boolean, default: !0 },
        internalShift: Boolean,
        x: Number,
        y: Number,
        width: String,
        minWidth: String,
        containerClass: String,
        teleportDisabled: Boolean,
        zindexable: { type: Boolean, default: !0 },
        zIndex: Number,
        overlap: Boolean,
      },
      setup(t) {
        const e = Ve("VBinder"),
          n = Tn(() => (t.enabled !== void 0 ? t.enabled : t.show)),
          r = U(null),
          i = U(null),
          o = () => {
            const { syncTrigger: h } = t;
            h.includes("scroll") && e.addScrollListener(l),
              h.includes("resize") && e.addResizeListener(l);
          },
          s = () => {
            e.removeScrollListener(l), e.removeResizeListener(l);
          };
        Vt(() => {
          n.value && (l(), o());
        });
        const a = Uo();
        hP.mount({ id: "vueuc/binder", head: !0, anchorMetaName: bg, ssr: a }),
          Qt(() => {
            s();
          }),
          by(() => {
            n.value && l();
          });
        const l = () => {
          if (!n.value) return;
          const h = r.value;
          if (h === null) return;
          const g = e.targetRef,
            { x: f, y: p, overlap: b } = t,
            m = f !== void 0 && p !== void 0 ? XT(f, p) : Xd(g);
          h.style.setProperty("--v-target-width", `${Math.round(m.width)}px`),
            h.style.setProperty(
              "--v-target-height",
              `${Math.round(m.height)}px`
            );
          const {
            width: _,
            minWidth: R,
            placement: S,
            internalShift: x,
            flip: E,
          } = t;
          h.setAttribute("v-placement", S),
            b
              ? h.setAttribute("v-overlap", "")
              : h.removeAttribute("v-overlap");
          const { style: w } = h;
          _ === "target"
            ? (w.width = `${m.width}px`)
            : _ !== void 0
            ? (w.width = _)
            : (w.width = ""),
            R === "target"
              ? (w.minWidth = `${m.width}px`)
              : R !== void 0
              ? (w.minWidth = R)
              : (w.minWidth = "");
          const v = Xd(h),
            y = Xd(i.value),
            { left: T, top: A, placement: I } = cP(S, m, v, x, E, b),
            L = uP(I, b),
            { left: j, top: k, transform: O } = dP(I, y, m, A, T, b);
          h.setAttribute("v-placement", I),
            h.style.setProperty("--v-offset-left", `${Math.round(T)}px`),
            h.style.setProperty("--v-offset-top", `${Math.round(A)}px`),
            (h.style.transform = `translateX(${j}) translateY(${k}) ${O}`),
            h.style.setProperty("--v-transform-origin", L),
            (h.style.transformOrigin = L);
        };
        Et(n, (h) => {
          h ? (o(), c()) : s();
        });
        const c = () => {
          Ht()
            .then(l)
            .catch((h) => console.error(h));
        };
        [
          "placement",
          "x",
          "y",
          "internalShift",
          "flip",
          "width",
          "overlap",
          "minWidth",
        ].forEach((h) => {
          Et(We(t, h), l);
        }),
          ["teleportDisabled"].forEach((h) => {
            Et(We(t, h), c);
          }),
          Et(We(t, "syncTrigger"), (h) => {
            h.includes("resize")
              ? e.addResizeListener(l)
              : e.removeResizeListener(l),
              h.includes("scroll")
                ? e.addScrollListener(l)
                : e.removeScrollListener(l);
          });
        const u = Qi(),
          d = Tn(() => {
            const { to: h } = t;
            if (h !== void 0) return h;
            u.value;
          });
        return {
          VBinder: e,
          mergedEnabled: n,
          offsetContainerRef: i,
          followerRef: r,
          mergedTo: d,
          syncPosition: l,
        };
      },
      render() {
        return C(
          yg,
          {
            show: this.show,
            to: this.mergedTo,
            disabled: this.teleportDisabled,
          },
          {
            default: () => {
              var t, e;
              const n = C(
                "div",
                {
                  class: ["v-binder-follower-container", this.containerClass],
                  ref: "offsetContainerRef",
                },
                [
                  C(
                    "div",
                    { class: "v-binder-follower-content", ref: "followerRef" },
                    (e = (t = this.$slots).default) === null || e === void 0
                      ? void 0
                      : e.call(t)
                  ),
                ]
              );
              return this.zindexable
                ? sr(n, [
                    [Hu, { enabled: this.mergedEnabled, zIndex: this.zIndex }],
                  ])
                : n;
            },
          }
        );
      },
    });
  var Mo = [],
    fP = function () {
      return Mo.some(function (t) {
        return t.activeTargets.length > 0;
      });
    },
    gP = function () {
      return Mo.some(function (t) {
        return t.skippedTargets.length > 0;
      });
    },
    a0 = "ResizeObserver loop completed with undelivered notifications.",
    pP = function () {
      var t;
      typeof ErrorEvent == "function"
        ? (t = new ErrorEvent("error", { message: a0 }))
        : ((t = document.createEvent("Event")),
          t.initEvent("error", !1, !1),
          (t.message = a0)),
        window.dispatchEvent(t);
    },
    il;
  (function (t) {
    (t.BORDER_BOX = "border-box"),
      (t.CONTENT_BOX = "content-box"),
      (t.DEVICE_PIXEL_CONTENT_BOX = "device-pixel-content-box");
  })(il || (il = {}));
  var Lo = function (t) {
      return Object.freeze(t);
    },
    mP = (function () {
      function t(e, n) {
        (this.inlineSize = e), (this.blockSize = n), Lo(this);
      }
      return t;
    })(),
    Py = (function () {
      function t(e, n, r, i) {
        return (
          (this.x = e),
          (this.y = n),
          (this.width = r),
          (this.height = i),
          (this.top = this.y),
          (this.left = this.x),
          (this.bottom = this.top + this.height),
          (this.right = this.left + this.width),
          Lo(this)
        );
      }
      return (
        (t.prototype.toJSON = function () {
          var e = this,
            n = e.x,
            r = e.y,
            i = e.top,
            o = e.right,
            s = e.bottom,
            a = e.left,
            l = e.width,
            c = e.height;
          return {
            x: n,
            y: r,
            top: i,
            right: o,
            bottom: s,
            left: a,
            width: l,
            height: c,
          };
        }),
        (t.fromRect = function (e) {
          return new t(e.x, e.y, e.width, e.height);
        }),
        t
      );
    })(),
    Cg = function (t) {
      return t instanceof SVGElement && "getBBox" in t;
    },
    Ay = function (t) {
      if (Cg(t)) {
        var e = t.getBBox(),
          n = e.width,
          r = e.height;
        return !n && !r;
      }
      var i = t,
        o = i.offsetWidth,
        s = i.offsetHeight;
      return !(o || s || t.getClientRects().length);
    },
    l0 = function (t) {
      var e;
      if (t instanceof Element) return !0;
      var n =
        (e = t == null ? void 0 : t.ownerDocument) === null || e === void 0
          ? void 0
          : e.defaultView;
      return !!(n && t instanceof n.Element);
    },
    vP = function (t) {
      switch (t.tagName) {
        case "INPUT":
          if (t.type !== "image") break;
        case "VIDEO":
        case "AUDIO":
        case "EMBED":
        case "OBJECT":
        case "CANVAS":
        case "IFRAME":
        case "IMG":
          return !0;
      }
      return !1;
    },
    Na = typeof window < "u" ? window : {},
    ac = new WeakMap(),
    c0 = /auto|scroll/,
    bP = /^tb|vertical/,
    yP = /msie|trident/i.test(Na.navigator && Na.navigator.userAgent),
    Sr = function (t) {
      return parseFloat(t || "0");
    },
    Ts = function (t, e, n) {
      return (
        t === void 0 && (t = 0),
        e === void 0 && (e = 0),
        n === void 0 && (n = !1),
        new mP((n ? e : t) || 0, (n ? t : e) || 0)
      );
    },
    u0 = Lo({
      devicePixelContentBoxSize: Ts(),
      borderBoxSize: Ts(),
      contentBoxSize: Ts(),
      contentRect: new Py(0, 0, 0, 0),
    }),
    ky = function (t, e) {
      if ((e === void 0 && (e = !1), ac.has(t) && !e)) return ac.get(t);
      if (Ay(t)) return ac.set(t, u0), u0;
      var n = getComputedStyle(t),
        r = Cg(t) && t.ownerSVGElement && t.getBBox(),
        i = !yP && n.boxSizing === "border-box",
        o = bP.test(n.writingMode || ""),
        s = !r && c0.test(n.overflowY || ""),
        a = !r && c0.test(n.overflowX || ""),
        l = r ? 0 : Sr(n.paddingTop),
        c = r ? 0 : Sr(n.paddingRight),
        u = r ? 0 : Sr(n.paddingBottom),
        d = r ? 0 : Sr(n.paddingLeft),
        h = r ? 0 : Sr(n.borderTopWidth),
        g = r ? 0 : Sr(n.borderRightWidth),
        f = r ? 0 : Sr(n.borderBottomWidth),
        p = r ? 0 : Sr(n.borderLeftWidth),
        b = d + c,
        m = l + u,
        _ = p + g,
        R = h + f,
        S = a ? t.offsetHeight - R - t.clientHeight : 0,
        x = s ? t.offsetWidth - _ - t.clientWidth : 0,
        E = i ? b + _ : 0,
        w = i ? m + R : 0,
        v = r ? r.width : Sr(n.width) - E - x,
        y = r ? r.height : Sr(n.height) - w - S,
        T = v + b + x + _,
        A = y + m + S + R,
        I = Lo({
          devicePixelContentBoxSize: Ts(
            Math.round(v * devicePixelRatio),
            Math.round(y * devicePixelRatio),
            o
          ),
          borderBoxSize: Ts(T, A, o),
          contentBoxSize: Ts(v, y, o),
          contentRect: new Py(d, l, v, y),
        });
      return ac.set(t, I), I;
    },
    Iy = function (t, e, n) {
      var r = ky(t, n),
        i = r.borderBoxSize,
        o = r.contentBoxSize,
        s = r.devicePixelContentBoxSize;
      switch (e) {
        case il.DEVICE_PIXEL_CONTENT_BOX:
          return s;
        case il.BORDER_BOX:
          return i;
        default:
          return o;
      }
    },
    xP = (function () {
      function t(e) {
        var n = ky(e);
        (this.target = e),
          (this.contentRect = n.contentRect),
          (this.borderBoxSize = Lo([n.borderBoxSize])),
          (this.contentBoxSize = Lo([n.contentBoxSize])),
          (this.devicePixelContentBoxSize = Lo([n.devicePixelContentBoxSize]));
      }
      return t;
    })(),
    Oy = function (t) {
      if (Ay(t)) return 1 / 0;
      for (var e = 0, n = t.parentNode; n; ) (e += 1), (n = n.parentNode);
      return e;
    },
    CP = function () {
      var t = 1 / 0,
        e = [];
      Mo.forEach(function (s) {
        if (s.activeTargets.length !== 0) {
          var a = [];
          s.activeTargets.forEach(function (c) {
            var u = new xP(c.target),
              d = Oy(c.target);
            a.push(u),
              (c.lastReportedSize = Iy(c.target, c.observedBox)),
              d < t && (t = d);
          }),
            e.push(function () {
              s.callback.call(s.observer, a, s.observer);
            }),
            s.activeTargets.splice(0, s.activeTargets.length);
        }
      });
      for (var n = 0, r = e; n < r.length; n++) {
        var i = r[n];
        i();
      }
      return t;
    },
    d0 = function (t) {
      Mo.forEach(function (n) {
        n.activeTargets.splice(0, n.activeTargets.length),
          n.skippedTargets.splice(0, n.skippedTargets.length),
          n.observationTargets.forEach(function (i) {
            i.isActive() &&
              (Oy(i.target) > t
                ? n.activeTargets.push(i)
                : n.skippedTargets.push(i));
          });
      });
    },
    _P = function () {
      var t = 0;
      for (d0(t); fP(); ) (t = CP()), d0(t);
      return gP() && pP(), t > 0;
    },
    qd,
    My = [],
    wP = function () {
      return My.splice(0).forEach(function (t) {
        return t();
      });
    },
    SP = function (t) {
      if (!qd) {
        var e = 0,
          n = document.createTextNode(""),
          r = { characterData: !0 };
        new MutationObserver(function () {
          return wP();
        }).observe(n, r),
          (qd = function () {
            n.textContent = "".concat(e ? e-- : e++);
          });
      }
      My.push(t), qd();
    },
    EP = function (t) {
      SP(function () {
        requestAnimationFrame(t);
      });
    },
    Lc = 0,
    RP = function () {
      return !!Lc;
    },
    TP = 250,
    PP = { attributes: !0, characterData: !0, childList: !0, subtree: !0 },
    h0 = [
      "resize",
      "load",
      "transitionend",
      "animationend",
      "animationstart",
      "animationiteration",
      "keyup",
      "keydown",
      "mouseup",
      "mousedown",
      "mouseover",
      "mouseout",
      "blur",
      "focus",
    ],
    f0 = function (t) {
      return t === void 0 && (t = 0), Date.now() + t;
    },
    Zd = !1,
    AP = (function () {
      function t() {
        var e = this;
        (this.stopped = !0),
          (this.listener = function () {
            return e.schedule();
          });
      }
      return (
        (t.prototype.run = function (e) {
          var n = this;
          if ((e === void 0 && (e = TP), !Zd)) {
            Zd = !0;
            var r = f0(e);
            EP(function () {
              var i = !1;
              try {
                i = _P();
              } finally {
                if (((Zd = !1), (e = r - f0()), !RP())) return;
                i ? n.run(1e3) : e > 0 ? n.run(e) : n.start();
              }
            });
          }
        }),
        (t.prototype.schedule = function () {
          this.stop(), this.run();
        }),
        (t.prototype.observe = function () {
          var e = this,
            n = function () {
              return e.observer && e.observer.observe(document.body, PP);
            };
          document.body ? n() : Na.addEventListener("DOMContentLoaded", n);
        }),
        (t.prototype.start = function () {
          var e = this;
          this.stopped &&
            ((this.stopped = !1),
            (this.observer = new MutationObserver(this.listener)),
            this.observe(),
            h0.forEach(function (n) {
              return Na.addEventListener(n, e.listener, !0);
            }));
        }),
        (t.prototype.stop = function () {
          var e = this;
          this.stopped ||
            (this.observer && this.observer.disconnect(),
            h0.forEach(function (n) {
              return Na.removeEventListener(n, e.listener, !0);
            }),
            (this.stopped = !0));
        }),
        t
      );
    })(),
    ef = new AP(),
    g0 = function (t) {
      !Lc && t > 0 && ef.start(), (Lc += t), !Lc && ef.stop();
    },
    kP = function (t) {
      return !Cg(t) && !vP(t) && getComputedStyle(t).display === "inline";
    },
    IP = (function () {
      function t(e, n) {
        (this.target = e),
          (this.observedBox = n || il.CONTENT_BOX),
          (this.lastReportedSize = { inlineSize: 0, blockSize: 0 });
      }
      return (
        (t.prototype.isActive = function () {
          var e = Iy(this.target, this.observedBox, !0);
          return (
            kP(this.target) && (this.lastReportedSize = e),
            this.lastReportedSize.inlineSize !== e.inlineSize ||
              this.lastReportedSize.blockSize !== e.blockSize
          );
        }),
        t
      );
    })(),
    OP = (function () {
      function t(e, n) {
        (this.activeTargets = []),
          (this.skippedTargets = []),
          (this.observationTargets = []),
          (this.observer = e),
          (this.callback = n);
      }
      return t;
    })(),
    lc = new WeakMap(),
    p0 = function (t, e) {
      for (var n = 0; n < t.length; n += 1) if (t[n].target === e) return n;
      return -1;
    },
    cc = (function () {
      function t() {}
      return (
        (t.connect = function (e, n) {
          var r = new OP(e, n);
          lc.set(e, r);
        }),
        (t.observe = function (e, n, r) {
          var i = lc.get(e),
            o = i.observationTargets.length === 0;
          p0(i.observationTargets, n) < 0 &&
            (o && Mo.push(i),
            i.observationTargets.push(new IP(n, r && r.box)),
            g0(1),
            ef.schedule());
        }),
        (t.unobserve = function (e, n) {
          var r = lc.get(e),
            i = p0(r.observationTargets, n),
            o = r.observationTargets.length === 1;
          i >= 0 &&
            (o && Mo.splice(Mo.indexOf(r), 1),
            r.observationTargets.splice(i, 1),
            g0(-1));
        }),
        (t.disconnect = function (e) {
          var n = this,
            r = lc.get(e);
          r.observationTargets.slice().forEach(function (i) {
            return n.unobserve(e, i.target);
          }),
            r.activeTargets.splice(0, r.activeTargets.length);
        }),
        t
      );
    })(),
    MP = (function () {
      function t(e) {
        if (arguments.length === 0)
          throw new TypeError(
            "Failed to construct 'ResizeObserver': 1 argument required, but only 0 present."
          );
        if (typeof e != "function")
          throw new TypeError(
            "Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function."
          );
        cc.connect(this, e);
      }
      return (
        (t.prototype.observe = function (e, n) {
          if (arguments.length === 0)
            throw new TypeError(
              "Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present."
            );
          if (!l0(e))
            throw new TypeError(
              "Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element"
            );
          cc.observe(this, e, n);
        }),
        (t.prototype.unobserve = function (e) {
          if (arguments.length === 0)
            throw new TypeError(
              "Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present."
            );
          if (!l0(e))
            throw new TypeError(
              "Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element"
            );
          cc.unobserve(this, e);
        }),
        (t.prototype.disconnect = function () {
          cc.disconnect(this);
        }),
        (t.toString = function () {
          return "function ResizeObserver () { [polyfill code] }";
        }),
        t
      );
    })();
  class LP {
    constructor() {
      (this.handleResize = this.handleResize.bind(this)),
        (this.observer = new ((typeof window < "u" && window.ResizeObserver) ||
          MP)(this.handleResize)),
        (this.elHandlersMap = new Map());
    }
    handleResize(e) {
      for (const n of e) {
        const r = this.elHandlersMap.get(n.target);
        r !== void 0 && r(n);
      }
    }
    registerHandler(e, n) {
      this.elHandlersMap.set(e, n), this.observer.observe(e);
    }
    unregisterHandler(e) {
      this.elHandlersMap.has(e) &&
        (this.elHandlersMap.delete(e), this.observer.unobserve(e));
    }
  }
  const eu = new LP(),
    $o = $e({
      name: "ResizeObserver",
      props: { onResize: Function },
      setup(t) {
        let e = !1;
        const n = Wo().proxy;
        function r(i) {
          const { onResize: o } = t;
          o !== void 0 && o(i);
        }
        Vt(() => {
          const i = n.$el;
          if (i === void 0) {
            t0("resize-observer", "$el does not exist.");
            return;
          }
          if (
            i.nextElementSibling !== i.nextSibling &&
            i.nodeType === 3 &&
            i.nodeValue !== ""
          ) {
            t0(
              "resize-observer",
              "$el can not be observed (it may be a text node)."
            );
            return;
          }
          i.nextElementSibling !== null &&
            (eu.registerHandler(i.nextElementSibling, r), (e = !0));
        }),
          Qt(() => {
            e && eu.unregisterHandler(n.$el.nextElementSibling);
          });
      },
      render() {
        return zE(this.$slots, "default");
      },
    });
  let uc;
  function $P() {
    return typeof document > "u"
      ? !1
      : (uc === void 0 &&
          ("matchMedia" in window
            ? (uc = window.matchMedia("(pointer:coarse)").matches)
            : (uc = !1)),
        uc);
  }
  let Jd;
  function m0() {
    return typeof document > "u"
      ? 1
      : (Jd === void 0 &&
          (Jd = "chrome" in window ? window.devicePixelRatio : 1),
        Jd);
  }
  const DP = Yr(
      ".v-vl",
      {
        maxHeight: "inherit",
        height: "100%",
        overflow: "auto",
        minWidth: "1px",
      },
      [
        Yr("&:not(.v-vl--show-scrollbar)", { scrollbarWidth: "none" }, [
          Yr(
            "&::-webkit-scrollbar, &::-webkit-scrollbar-track-piece, &::-webkit-scrollbar-thumb",
            { width: 0, height: 0, display: "none" }
          ),
        ]),
      ]
    ),
    zP = $e({
      name: "VirtualList",
      inheritAttrs: !1,
      props: {
        showScrollbar: { type: Boolean, default: !0 },
        items: { type: Array, default: () => [] },
        itemSize: { type: Number, required: !0 },
        itemResizable: Boolean,
        itemsStyle: [String, Object],
        visibleItemsTag: { type: [String, Object], default: "div" },
        visibleItemsProps: Object,
        ignoreItemResize: Boolean,
        onScroll: Function,
        onWheel: Function,
        onResize: Function,
        defaultScrollKey: [Number, String],
        defaultScrollIndex: Number,
        keyField: { type: String, default: "key" },
        paddingTop: { type: [Number, String], default: 0 },
        paddingBottom: { type: [Number, String], default: 0 },
      },
      setup(t) {
        const e = Uo();
        DP.mount({
          id: "vueuc/virtual-list",
          head: !0,
          anchorMetaName: bg,
          ssr: e,
        }),
          Vt(() => {
            const { defaultScrollIndex: A, defaultScrollKey: I } = t;
            A != null ? f({ index: A }) : I != null && f({ key: I });
          });
        let n = !1,
          r = !1;
        ng(() => {
          if (((n = !1), !r)) {
            r = !0;
            return;
          }
          f({ top: d.value, left: u });
        }),
          rg(() => {
            (n = !0), r || (r = !0);
          });
        const i = ce(() => {
            const A = new Map(),
              { keyField: I } = t;
            return (
              t.items.forEach((L, j) => {
                A.set(L[I], j);
              }),
              A
            );
          }),
          o = U(null),
          s = U(void 0),
          a = new Map(),
          l = ce(() => {
            const { items: A, itemSize: I, keyField: L } = t,
              j = new oP(A.length, I);
            return (
              A.forEach((k, O) => {
                const D = k[L],
                  Y = a.get(D);
                Y !== void 0 && j.add(O, Y);
              }),
              j
            );
          }),
          c = U(0);
        let u = 0;
        const d = U(0),
          h = Tn(() =>
            Math.max(l.value.getBound(d.value - kn(t.paddingTop)) - 1, 0)
          ),
          g = ce(() => {
            const { value: A } = s;
            if (A === void 0) return [];
            const { items: I, itemSize: L } = t,
              j = h.value,
              k = Math.min(j + Math.ceil(A / L + 1), I.length - 1),
              O = [];
            for (let D = j; D <= k; ++D) O.push(I[D]);
            return O;
          }),
          f = (A, I) => {
            if (typeof A == "number") {
              _(A, I, "auto");
              return;
            }
            const {
              left: L,
              top: j,
              index: k,
              key: O,
              position: D,
              behavior: Y,
              debounce: se = !0,
            } = A;
            if (L !== void 0 || j !== void 0) _(L, j, Y);
            else if (k !== void 0) m(k, Y, se);
            else if (O !== void 0) {
              const de = i.value.get(O);
              de !== void 0 && m(de, Y, se);
            } else
              D === "bottom"
                ? _(0, Number.MAX_SAFE_INTEGER, Y)
                : D === "top" && _(0, 0, Y);
          };
        let p,
          b = null;
        function m(A, I, L) {
          const { value: j } = l,
            k = j.sum(A) + kn(t.paddingTop);
          if (!L) o.value.scrollTo({ left: 0, top: k, behavior: I });
          else {
            (p = A),
              b !== null && window.clearTimeout(b),
              (b = window.setTimeout(() => {
                (p = void 0), (b = null);
              }, 16));
            const { scrollTop: O, offsetHeight: D } = o.value;
            if (k > O) {
              const Y = j.get(A);
              k + Y <= O + D ||
                o.value.scrollTo({ left: 0, top: k + Y - D, behavior: I });
            } else o.value.scrollTo({ left: 0, top: k, behavior: I });
          }
        }
        function _(A, I, L) {
          o.value.scrollTo({ left: A, top: I, behavior: L });
        }
        function R(A, I) {
          var L, j, k;
          if (n || t.ignoreItemResize || T(I.target)) return;
          const { value: O } = l,
            D = i.value.get(A),
            Y = O.get(D),
            se =
              (k =
                (j =
                  (L = I.borderBoxSize) === null || L === void 0
                    ? void 0
                    : L[0]) === null || j === void 0
                  ? void 0
                  : j.blockSize) !== null && k !== void 0
                ? k
                : I.contentRect.height;
          if (se === Y) return;
          se - t.itemSize === 0 ? a.delete(A) : a.set(A, se - t.itemSize);
          const fe = se - Y;
          if (fe === 0) return;
          O.add(D, fe);
          const z = o.value;
          if (z != null) {
            if (p === void 0) {
              const ee = O.sum(D);
              z.scrollTop > ee && z.scrollBy(0, fe);
            } else if (D < p) z.scrollBy(0, fe);
            else if (D === p) {
              const ee = O.sum(D);
              se + ee > z.scrollTop + z.offsetHeight && z.scrollBy(0, fe);
            }
            y();
          }
          c.value++;
        }
        const S = !$P();
        let x = !1;
        function E(A) {
          var I;
          (I = t.onScroll) === null || I === void 0 || I.call(t, A),
            (!S || !x) && y();
        }
        function w(A) {
          var I;
          if (((I = t.onWheel) === null || I === void 0 || I.call(t, A), S)) {
            const L = o.value;
            if (L != null) {
              if (
                A.deltaX === 0 &&
                ((L.scrollTop === 0 && A.deltaY <= 0) ||
                  (L.scrollTop + L.offsetHeight >= L.scrollHeight &&
                    A.deltaY >= 0))
              )
                return;
              A.preventDefault(),
                (L.scrollTop += A.deltaY / m0()),
                (L.scrollLeft += A.deltaX / m0()),
                y(),
                (x = !0),
                ug(() => {
                  x = !1;
                });
            }
          }
        }
        function v(A) {
          if (n || T(A.target) || A.contentRect.height === s.value) return;
          s.value = A.contentRect.height;
          const { onResize: I } = t;
          I !== void 0 && I(A);
        }
        function y() {
          const { value: A } = o;
          A != null && ((d.value = A.scrollTop), (u = A.scrollLeft));
        }
        function T(A) {
          let I = A;
          for (; I !== null; ) {
            if (I.style.display === "none") return !0;
            I = I.parentElement;
          }
          return !1;
        }
        return {
          listHeight: s,
          listStyle: { overflow: "auto" },
          keyToIndex: i,
          itemsStyle: ce(() => {
            const { itemResizable: A } = t,
              I = wo(l.value.sum());
            return (
              c.value,
              [
                t.itemsStyle,
                {
                  boxSizing: "content-box",
                  height: A ? "" : I,
                  minHeight: A ? I : "",
                  paddingTop: wo(t.paddingTop),
                  paddingBottom: wo(t.paddingBottom),
                },
              ]
            );
          }),
          visibleItemsStyle: ce(
            () => (
              c.value, { transform: `translateY(${wo(l.value.sum(h.value))})` }
            )
          ),
          viewportItems: g,
          listElRef: o,
          itemsElRef: U(null),
          scrollTo: f,
          handleListResize: v,
          handleListScroll: E,
          handleListWheel: w,
          handleItemResize: R,
        };
      },
      render() {
        const {
          itemResizable: t,
          keyField: e,
          keyToIndex: n,
          visibleItemsTag: r,
        } = this;
        return C(
          $o,
          { onResize: this.handleListResize },
          {
            default: () => {
              var i, o;
              return C(
                "div",
                qs(this.$attrs, {
                  class: ["v-vl", this.showScrollbar && "v-vl--show-scrollbar"],
                  onScroll: this.handleListScroll,
                  onWheel: this.handleListWheel,
                  ref: "listElRef",
                }),
                [
                  this.items.length !== 0
                    ? C(
                        "div",
                        {
                          ref: "itemsElRef",
                          class: "v-vl-items",
                          style: this.itemsStyle,
                        },
                        [
                          C(
                            r,
                            Object.assign(
                              {
                                class: "v-vl-visible-items",
                                style: this.visibleItemsStyle,
                              },
                              this.visibleItemsProps
                            ),
                            {
                              default: () =>
                                this.viewportItems.map((s) => {
                                  const a = s[e],
                                    l = n.get(a),
                                    c = this.$slots.default({
                                      item: s,
                                      index: l,
                                    })[0];
                                  return t
                                    ? C(
                                        $o,
                                        {
                                          key: a,
                                          onResize: (u) =>
                                            this.handleItemResize(a, u),
                                        },
                                        { default: () => c }
                                      )
                                    : ((c.key = a), c);
                                }),
                            }
                          ),
                        ]
                      )
                    : (o = (i = this.$slots).empty) === null || o === void 0
                    ? void 0
                    : o.call(i),
                ]
              );
            },
          }
        );
      },
    }),
    FP = Yr(".v-x-scroll", { overflow: "auto", scrollbarWidth: "none" }, [
      Yr("&::-webkit-scrollbar", { width: 0, height: 0 }),
    ]),
    BP = $e({
      name: "XScroll",
      props: { disabled: Boolean, onScroll: Function },
      setup() {
        const t = U(null);
        function e(i) {
          !(i.currentTarget.offsetWidth < i.currentTarget.scrollWidth) ||
            i.deltaY === 0 ||
            ((i.currentTarget.scrollLeft += i.deltaY + i.deltaX),
            i.preventDefault());
        }
        const n = Uo();
        return (
          FP.mount({
            id: "vueuc/x-scroll",
            head: !0,
            anchorMetaName: bg,
            ssr: n,
          }),
          Object.assign(
            { selfRef: t, handleWheel: e },
            {
              scrollTo(...i) {
                var o;
                (o = t.value) === null || o === void 0 || o.scrollTo(...i);
              },
            }
          )
        );
      },
      render() {
        return C(
          "div",
          {
            ref: "selfRef",
            onScroll: this.onScroll,
            onWheel: this.disabled ? void 0 : this.handleWheel,
            class: "v-x-scroll",
          },
          this.$slots
        );
      },
    });
  function Ly(t) {
    return t instanceof HTMLElement;
  }
  function $y(t) {
    for (let e = 0; e < t.childNodes.length; e++) {
      const n = t.childNodes[e];
      if (Ly(n) && (zy(n) || $y(n))) return !0;
    }
    return !1;
  }
  function Dy(t) {
    for (let e = t.childNodes.length - 1; e >= 0; e--) {
      const n = t.childNodes[e];
      if (Ly(n) && (zy(n) || Dy(n))) return !0;
    }
    return !1;
  }
  function zy(t) {
    if (!NP(t)) return !1;
    try {
      t.focus({ preventScroll: !0 });
    } catch {}
    return document.activeElement === t;
  }
  function NP(t) {
    if (
      t.tabIndex > 0 ||
      (t.tabIndex === 0 && t.getAttribute("tabIndex") !== null)
    )
      return !0;
    if (t.getAttribute("disabled")) return !1;
    switch (t.nodeName) {
      case "A":
        return !!t.href && t.rel !== "ignore";
      case "INPUT":
        return t.type !== "hidden" && t.type !== "file";
      case "BUTTON":
      case "SELECT":
      case "TEXTAREA":
        return !0;
      default:
        return !1;
    }
  }
  let pa = [];
  const Fy = $e({
    name: "FocusTrap",
    props: {
      disabled: Boolean,
      active: Boolean,
      autoFocus: { type: Boolean, default: !0 },
      onEsc: Function,
      initialFocusTo: String,
      finalFocusTo: String,
      returnFocusOnDeactivated: { type: Boolean, default: !0 },
    },
    setup(t) {
      const e = Ui(),
        n = U(null),
        r = U(null);
      let i = !1,
        o = !1;
      const s = typeof document > "u" ? null : document.activeElement;
      function a() {
        return pa[pa.length - 1] === e;
      }
      function l(b) {
        var m;
        b.code === "Escape" &&
          a() &&
          ((m = t.onEsc) === null || m === void 0 || m.call(t, b));
      }
      Vt(() => {
        Et(
          () => t.active,
          (b) => {
            b
              ? (d(), kt("keydown", document, l))
              : (mt("keydown", document, l), i && h());
          },
          { immediate: !0 }
        );
      }),
        Qt(() => {
          mt("keydown", document, l), i && h();
        });
      function c(b) {
        if (!o && a()) {
          const m = u();
          if (m === null || m.contains(Fs(b))) return;
          g("first");
        }
      }
      function u() {
        const b = n.value;
        if (b === null) return null;
        let m = b;
        for (
          ;
          (m = m.nextSibling),
            !(m === null || (m instanceof Element && m.tagName === "DIV"));

        );
        return m;
      }
      function d() {
        var b;
        if (!t.disabled) {
          if ((pa.push(e), t.autoFocus)) {
            const { initialFocusTo: m } = t;
            m === void 0
              ? g("first")
              : (b = r0(m)) === null ||
                b === void 0 ||
                b.focus({ preventScroll: !0 });
          }
          (i = !0), document.addEventListener("focus", c, !0);
        }
      }
      function h() {
        var b;
        if (
          t.disabled ||
          (document.removeEventListener("focus", c, !0),
          (pa = pa.filter((_) => _ !== e)),
          a())
        )
          return;
        const { finalFocusTo: m } = t;
        m !== void 0
          ? (b = r0(m)) === null ||
            b === void 0 ||
            b.focus({ preventScroll: !0 })
          : t.returnFocusOnDeactivated &&
            s instanceof HTMLElement &&
            ((o = !0), s.focus({ preventScroll: !0 }), (o = !1));
      }
      function g(b) {
        if (a() && t.active) {
          const m = n.value,
            _ = r.value;
          if (m !== null && _ !== null) {
            const R = u();
            if (R == null || R === _) {
              (o = !0), m.focus({ preventScroll: !0 }), (o = !1);
              return;
            }
            o = !0;
            const S = b === "first" ? $y(R) : Dy(R);
            (o = !1), S || ((o = !0), m.focus({ preventScroll: !0 }), (o = !1));
          }
        }
      }
      function f(b) {
        if (o) return;
        const m = u();
        m !== null &&
          (b.relatedTarget !== null && m.contains(b.relatedTarget)
            ? g("last")
            : g("first"));
      }
      function p(b) {
        o ||
          (b.relatedTarget !== null && b.relatedTarget === n.value
            ? g("last")
            : g("first"));
      }
      return {
        focusableStartRef: n,
        focusableEndRef: r,
        focusableStyle: "position: absolute; height: 0; width: 0;",
        handleStartFocus: f,
        handleEndFocus: p,
      };
    },
    render() {
      const { default: t } = this.$slots;
      if (t === void 0) return null;
      if (this.disabled) return t();
      const { active: e, focusableStyle: n } = this;
      return C(pt, null, [
        C("div", {
          "aria-hidden": "true",
          tabindex: e ? "0" : "-1",
          ref: "focusableStartRef",
          style: n,
          onFocus: this.handleStartFocus,
        }),
        t(),
        C("div", {
          "aria-hidden": "true",
          style: n,
          ref: "focusableEndRef",
          tabindex: e ? "0" : "-1",
          onFocus: this.handleEndFocus,
        }),
      ]);
    },
  });
  function HP(t, e) {
    e &&
      (Vt(() => {
        const { value: n } = t;
        n && eu.registerHandler(n, e);
      }),
      Qt(() => {
        const { value: n } = t;
        n && eu.unregisterHandler(n);
      }));
  }
  let is = 0,
    v0 = "",
    b0 = "",
    y0 = "",
    x0 = "";
  const C0 = U("0px");
  function WP(t) {
    if (typeof document > "u") return;
    const e = document.documentElement;
    let n,
      r = !1;
    const i = () => {
      (e.style.marginRight = v0),
        (e.style.overflow = b0),
        (e.style.overflowX = y0),
        (e.style.overflowY = x0),
        (C0.value = "0px");
    };
    Vt(() => {
      n = Et(
        t,
        (o) => {
          if (o) {
            if (!is) {
              const s = window.innerWidth - e.offsetWidth;
              s > 0 &&
                ((v0 = e.style.marginRight),
                (e.style.marginRight = `${s}px`),
                (C0.value = `${s}px`)),
                (b0 = e.style.overflow),
                (y0 = e.style.overflowX),
                (x0 = e.style.overflowY),
                (e.style.overflow = "hidden"),
                (e.style.overflowX = "hidden"),
                (e.style.overflowY = "hidden");
            }
            (r = !0), is++;
          } else is--, is || i(), (r = !1);
        },
        { immediate: !0 }
      );
    }),
      Qt(() => {
        n == null || n(), r && (is--, is || i(), (r = !1));
      });
  }
  const _g = U(!1),
    _0 = () => {
      _g.value = !0;
    },
    w0 = () => {
      _g.value = !1;
    };
  let ma = 0;
  const jP = () => (
    Ji &&
      (Ho(() => {
        ma ||
          (window.addEventListener("compositionstart", _0),
          window.addEventListener("compositionend", w0)),
          ma++;
      }),
      Qt(() => {
        ma <= 1
          ? (window.removeEventListener("compositionstart", _0),
            window.removeEventListener("compositionend", w0),
            (ma = 0))
          : ma--;
      })),
    _g
  );
  function UP(t) {
    const e = { isDeactivated: !1 };
    let n = !1;
    return (
      ng(() => {
        if (((e.isDeactivated = !1), !n)) {
          n = !0;
          return;
        }
        t();
      }),
      rg(() => {
        (e.isDeactivated = !0), n || (n = !0);
      }),
      e
    );
  }
  const By = (t, e) => {
      if (!t) return;
      const n = document.createElement("a");
      (n.href = t),
        e !== void 0 && (n.download = e),
        document.body.appendChild(n),
        n.click(),
        document.body.removeChild(n);
    },
    S0 = "n-form-item";
  function eo(
    t,
    { defaultSize: e = "medium", mergedSize: n, mergedDisabled: r } = {}
  ) {
    const i = Ve(S0, null);
    vt(S0, null);
    const o = ce(
        n
          ? () => n(i)
          : () => {
              const { size: l } = t;
              if (l) return l;
              if (i) {
                const { mergedSize: c } = i;
                if (c.value !== void 0) return c.value;
              }
              return e;
            }
      ),
      s = ce(
        r
          ? () => r(i)
          : () => {
              const { disabled: l } = t;
              return l !== void 0 ? l : i ? i.disabled.value : !1;
            }
      ),
      a = ce(() => {
        const { status: l } = t;
        return l || (i == null ? void 0 : i.mergedValidationStatus.value);
      });
    return (
      Qt(() => {
        i && i.restoreValidation();
      }),
      {
        mergedSizeRef: o,
        mergedDisabledRef: s,
        mergedStatusRef: a,
        nTriggerFormBlur() {
          i && i.handleContentBlur();
        },
        nTriggerFormChange() {
          i && i.handleContentChange();
        },
        nTriggerFormFocus() {
          i && i.handleContentFocus();
        },
        nTriggerFormInput() {
          i && i.handleContentInput();
        },
      }
    );
  }
  var Ny =
      typeof global == "object" && global && global.Object === Object && global,
    VP = typeof self == "object" && self && self.Object === Object && self,
    xr = Ny || VP || Function("return this")(),
    Vi = xr.Symbol,
    Hy = Object.prototype,
    GP = Hy.hasOwnProperty,
    XP = Hy.toString,
    va = Vi ? Vi.toStringTag : void 0;
  function KP(t) {
    var e = GP.call(t, va),
      n = t[va];
    try {
      t[va] = void 0;
      var r = !0;
    } catch {}
    var i = XP.call(t);
    return r && (e ? (t[va] = n) : delete t[va]), i;
  }
  var YP = Object.prototype,
    qP = YP.toString;
  function ZP(t) {
    return qP.call(t);
  }
  var JP = "[object Null]",
    QP = "[object Undefined]",
    E0 = Vi ? Vi.toStringTag : void 0;
  function Vo(t) {
    return t == null
      ? t === void 0
        ? QP
        : JP
      : E0 && E0 in Object(t)
      ? KP(t)
      : ZP(t);
  }
  function Gi(t) {
    return t != null && typeof t == "object";
  }
  var eA = "[object Symbol]";
  function Wu(t) {
    return typeof t == "symbol" || (Gi(t) && Vo(t) == eA);
  }
  function Wy(t, e) {
    for (var n = -1, r = t == null ? 0 : t.length, i = Array(r); ++n < r; )
      i[n] = e(t[n], n, t);
    return i;
  }
  var lr = Array.isArray,
    tA = 1 / 0,
    R0 = Vi ? Vi.prototype : void 0,
    T0 = R0 ? R0.toString : void 0;
  function jy(t) {
    if (typeof t == "string") return t;
    if (lr(t)) return Wy(t, jy) + "";
    if (Wu(t)) return T0 ? T0.call(t) : "";
    var e = t + "";
    return e == "0" && 1 / t == -tA ? "-0" : e;
  }
  var nA = /\s/;
  function rA(t) {
    for (var e = t.length; e-- && nA.test(t.charAt(e)); );
    return e;
  }
  var iA = /^\s+/;
  function oA(t) {
    return t && t.slice(0, rA(t) + 1).replace(iA, "");
  }
  function cr(t) {
    var e = typeof t;
    return t != null && (e == "object" || e == "function");
  }
  var P0 = NaN,
    sA = /^[-+]0x[0-9a-f]+$/i,
    aA = /^0b[01]+$/i,
    lA = /^0o[0-7]+$/i,
    cA = parseInt;
  function A0(t) {
    if (typeof t == "number") return t;
    if (Wu(t)) return P0;
    if (cr(t)) {
      var e = typeof t.valueOf == "function" ? t.valueOf() : t;
      t = cr(e) ? e + "" : e;
    }
    if (typeof t != "string") return t === 0 ? t : +t;
    t = oA(t);
    var n = aA.test(t);
    return n || lA.test(t) ? cA(t.slice(2), n ? 2 : 8) : sA.test(t) ? P0 : +t;
  }
  function wg(t) {
    return t;
  }
  var uA = "[object AsyncFunction]",
    dA = "[object Function]",
    hA = "[object GeneratorFunction]",
    fA = "[object Proxy]";
  function Sg(t) {
    if (!cr(t)) return !1;
    var e = Vo(t);
    return e == dA || e == hA || e == uA || e == fA;
  }
  var Qd = xr["__core-js_shared__"],
    k0 = (function () {
      var t = /[^.]+$/.exec((Qd && Qd.keys && Qd.keys.IE_PROTO) || "");
      return t ? "Symbol(src)_1." + t : "";
    })();
  function gA(t) {
    return !!k0 && k0 in t;
  }
  var pA = Function.prototype,
    mA = pA.toString;
  function Go(t) {
    if (t != null) {
      try {
        return mA.call(t);
      } catch {}
      try {
        return t + "";
      } catch {}
    }
    return "";
  }
  var vA = /[\\^$.*+?()[\]{}|]/g,
    bA = /^\[object .+?Constructor\]$/,
    yA = Function.prototype,
    xA = Object.prototype,
    CA = yA.toString,
    _A = xA.hasOwnProperty,
    wA = RegExp(
      "^" +
        CA.call(_A)
          .replace(vA, "\\$&")
          .replace(
            /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
            "$1.*?"
          ) +
        "$"
    );
  function SA(t) {
    if (!cr(t) || gA(t)) return !1;
    var e = Sg(t) ? wA : bA;
    return e.test(Go(t));
  }
  function EA(t, e) {
    return t == null ? void 0 : t[e];
  }
  function Xo(t, e) {
    var n = EA(t, e);
    return SA(n) ? n : void 0;
  }
  var tf = Xo(xr, "WeakMap"),
    I0 = Object.create,
    RA = (function () {
      function t() {}
      return function (e) {
        if (!cr(e)) return {};
        if (I0) return I0(e);
        t.prototype = e;
        var n = new t();
        return (t.prototype = void 0), n;
      };
    })();
  function TA(t, e, n) {
    switch (n.length) {
      case 0:
        return t.call(e);
      case 1:
        return t.call(e, n[0]);
      case 2:
        return t.call(e, n[0], n[1]);
      case 3:
        return t.call(e, n[0], n[1], n[2]);
    }
    return t.apply(e, n);
  }
  function PA(t, e) {
    var n = -1,
      r = t.length;
    for (e || (e = Array(r)); ++n < r; ) e[n] = t[n];
    return e;
  }
  var AA = 800,
    kA = 16,
    IA = Date.now;
  function OA(t) {
    var e = 0,
      n = 0;
    return function () {
      var r = IA(),
        i = kA - (r - n);
      if (((n = r), i > 0)) {
        if (++e >= AA) return arguments[0];
      } else e = 0;
      return t.apply(void 0, arguments);
    };
  }
  function MA(t) {
    return function () {
      return t;
    };
  }
  var tu = (function () {
      try {
        var t = Xo(Object, "defineProperty");
        return t({}, "", {}), t;
      } catch {}
    })(),
    LA = tu
      ? function (t, e) {
          return tu(t, "toString", {
            configurable: !0,
            enumerable: !1,
            value: MA(e),
            writable: !0,
          });
        }
      : wg;
  const $A = LA;
  var DA = OA($A),
    zA = 9007199254740991,
    FA = /^(?:0|[1-9]\d*)$/;
  function Eg(t, e) {
    var n = typeof t;
    return (
      (e = e ?? zA),
      !!e &&
        (n == "number" || (n != "symbol" && FA.test(t))) &&
        t > -1 &&
        t % 1 == 0 &&
        t < e
    );
  }
  function Rg(t, e, n) {
    e == "__proto__" && tu
      ? tu(t, e, { configurable: !0, enumerable: !0, value: n, writable: !0 })
      : (t[e] = n);
  }
  function Al(t, e) {
    return t === e || (t !== t && e !== e);
  }
  var BA = Object.prototype,
    NA = BA.hasOwnProperty;
  function HA(t, e, n) {
    var r = t[e];
    (!(NA.call(t, e) && Al(r, n)) || (n === void 0 && !(e in t))) &&
      Rg(t, e, n);
  }
  function WA(t, e, n, r) {
    var i = !n;
    n || (n = {});
    for (var o = -1, s = e.length; ++o < s; ) {
      var a = e[o],
        l = r ? r(n[a], t[a], a, n, t) : void 0;
      l === void 0 && (l = t[a]), i ? Rg(n, a, l) : HA(n, a, l);
    }
    return n;
  }
  var O0 = Math.max;
  function jA(t, e, n) {
    return (
      (e = O0(e === void 0 ? t.length - 1 : e, 0)),
      function () {
        for (
          var r = arguments, i = -1, o = O0(r.length - e, 0), s = Array(o);
          ++i < o;

        )
          s[i] = r[e + i];
        i = -1;
        for (var a = Array(e + 1); ++i < e; ) a[i] = r[i];
        return (a[e] = n(s)), TA(t, this, a);
      }
    );
  }
  function UA(t, e) {
    return DA(jA(t, e, wg), t + "");
  }
  var VA = 9007199254740991;
  function Tg(t) {
    return typeof t == "number" && t > -1 && t % 1 == 0 && t <= VA;
  }
  function ea(t) {
    return t != null && Tg(t.length) && !Sg(t);
  }
  function GA(t, e, n) {
    if (!cr(n)) return !1;
    var r = typeof e;
    return (r == "number" ? ea(n) && Eg(e, n.length) : r == "string" && e in n)
      ? Al(n[e], t)
      : !1;
  }
  function XA(t) {
    return UA(function (e, n) {
      var r = -1,
        i = n.length,
        o = i > 1 ? n[i - 1] : void 0,
        s = i > 2 ? n[2] : void 0;
      for (
        o = t.length > 3 && typeof o == "function" ? (i--, o) : void 0,
          s && GA(n[0], n[1], s) && ((o = i < 3 ? void 0 : o), (i = 1)),
          e = Object(e);
        ++r < i;

      ) {
        var a = n[r];
        a && t(e, a, r, o);
      }
      return e;
    });
  }
  var KA = Object.prototype;
  function Pg(t) {
    var e = t && t.constructor,
      n = (typeof e == "function" && e.prototype) || KA;
    return t === n;
  }
  function YA(t, e) {
    for (var n = -1, r = Array(t); ++n < t; ) r[n] = e(n);
    return r;
  }
  var qA = "[object Arguments]";
  function M0(t) {
    return Gi(t) && Vo(t) == qA;
  }
  var Uy = Object.prototype,
    ZA = Uy.hasOwnProperty,
    JA = Uy.propertyIsEnumerable,
    nu = M0(
      (function () {
        return arguments;
      })()
    )
      ? M0
      : function (t) {
          return Gi(t) && ZA.call(t, "callee") && !JA.call(t, "callee");
        };
  function QA() {
    return !1;
  }
  var Vy = typeof In == "object" && In && !In.nodeType && In,
    L0 = Vy && typeof Hn == "object" && Hn && !Hn.nodeType && Hn,
    e5 = L0 && L0.exports === Vy,
    $0 = e5 ? xr.Buffer : void 0,
    t5 = $0 ? $0.isBuffer : void 0,
    ru = t5 || QA,
    n5 = "[object Arguments]",
    r5 = "[object Array]",
    i5 = "[object Boolean]",
    o5 = "[object Date]",
    s5 = "[object Error]",
    a5 = "[object Function]",
    l5 = "[object Map]",
    c5 = "[object Number]",
    u5 = "[object Object]",
    d5 = "[object RegExp]",
    h5 = "[object Set]",
    f5 = "[object String]",
    g5 = "[object WeakMap]",
    p5 = "[object ArrayBuffer]",
    m5 = "[object DataView]",
    v5 = "[object Float32Array]",
    b5 = "[object Float64Array]",
    y5 = "[object Int8Array]",
    x5 = "[object Int16Array]",
    C5 = "[object Int32Array]",
    _5 = "[object Uint8Array]",
    w5 = "[object Uint8ClampedArray]",
    S5 = "[object Uint16Array]",
    E5 = "[object Uint32Array]",
    Bt = {};
  Bt[v5] =
    Bt[b5] =
    Bt[y5] =
    Bt[x5] =
    Bt[C5] =
    Bt[_5] =
    Bt[w5] =
    Bt[S5] =
    Bt[E5] =
      !0;
  Bt[n5] =
    Bt[r5] =
    Bt[p5] =
    Bt[i5] =
    Bt[m5] =
    Bt[o5] =
    Bt[s5] =
    Bt[a5] =
    Bt[l5] =
    Bt[c5] =
    Bt[u5] =
    Bt[d5] =
    Bt[h5] =
    Bt[f5] =
    Bt[g5] =
      !1;
  function R5(t) {
    return Gi(t) && Tg(t.length) && !!Bt[Vo(t)];
  }
  function T5(t) {
    return function (e) {
      return t(e);
    };
  }
  var Gy = typeof In == "object" && In && !In.nodeType && In,
    Ha = Gy && typeof Hn == "object" && Hn && !Hn.nodeType && Hn,
    P5 = Ha && Ha.exports === Gy,
    eh = P5 && Ny.process,
    D0 = (function () {
      try {
        var t = Ha && Ha.require && Ha.require("util").types;
        return t || (eh && eh.binding && eh.binding("util"));
      } catch {}
    })(),
    z0 = D0 && D0.isTypedArray,
    Ag = z0 ? T5(z0) : R5,
    A5 = Object.prototype,
    k5 = A5.hasOwnProperty;
  function Xy(t, e) {
    var n = lr(t),
      r = !n && nu(t),
      i = !n && !r && ru(t),
      o = !n && !r && !i && Ag(t),
      s = n || r || i || o,
      a = s ? YA(t.length, String) : [],
      l = a.length;
    for (var c in t)
      (e || k5.call(t, c)) &&
        !(
          s &&
          (c == "length" ||
            (i && (c == "offset" || c == "parent")) ||
            (o && (c == "buffer" || c == "byteLength" || c == "byteOffset")) ||
            Eg(c, l))
        ) &&
        a.push(c);
    return a;
  }
  function Ky(t, e) {
    return function (n) {
      return t(e(n));
    };
  }
  var I5 = Ky(Object.keys, Object),
    O5 = Object.prototype,
    M5 = O5.hasOwnProperty;
  function L5(t) {
    if (!Pg(t)) return I5(t);
    var e = [];
    for (var n in Object(t)) M5.call(t, n) && n != "constructor" && e.push(n);
    return e;
  }
  function kg(t) {
    return ea(t) ? Xy(t) : L5(t);
  }
  function $5(t) {
    var e = [];
    if (t != null) for (var n in Object(t)) e.push(n);
    return e;
  }
  var D5 = Object.prototype,
    z5 = D5.hasOwnProperty;
  function F5(t) {
    if (!cr(t)) return $5(t);
    var e = Pg(t),
      n = [];
    for (var r in t) (r == "constructor" && (e || !z5.call(t, r))) || n.push(r);
    return n;
  }
  function Yy(t) {
    return ea(t) ? Xy(t, !0) : F5(t);
  }
  var B5 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    N5 = /^\w*$/;
  function Ig(t, e) {
    if (lr(t)) return !1;
    var n = typeof t;
    return n == "number" ||
      n == "symbol" ||
      n == "boolean" ||
      t == null ||
      Wu(t)
      ? !0
      : N5.test(t) || !B5.test(t) || (e != null && t in Object(e));
  }
  var ol = Xo(Object, "create");
  function H5() {
    (this.__data__ = ol ? ol(null) : {}), (this.size = 0);
  }
  function W5(t) {
    var e = this.has(t) && delete this.__data__[t];
    return (this.size -= e ? 1 : 0), e;
  }
  var j5 = "__lodash_hash_undefined__",
    U5 = Object.prototype,
    V5 = U5.hasOwnProperty;
  function G5(t) {
    var e = this.__data__;
    if (ol) {
      var n = e[t];
      return n === j5 ? void 0 : n;
    }
    return V5.call(e, t) ? e[t] : void 0;
  }
  var X5 = Object.prototype,
    K5 = X5.hasOwnProperty;
  function Y5(t) {
    var e = this.__data__;
    return ol ? e[t] !== void 0 : K5.call(e, t);
  }
  var q5 = "__lodash_hash_undefined__";
  function Z5(t, e) {
    var n = this.__data__;
    return (
      (this.size += this.has(t) ? 0 : 1),
      (n[t] = ol && e === void 0 ? q5 : e),
      this
    );
  }
  function Do(t) {
    var e = -1,
      n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n; ) {
      var r = t[e];
      this.set(r[0], r[1]);
    }
  }
  Do.prototype.clear = H5;
  Do.prototype.delete = W5;
  Do.prototype.get = G5;
  Do.prototype.has = Y5;
  Do.prototype.set = Z5;
  function J5() {
    (this.__data__ = []), (this.size = 0);
  }
  function ju(t, e) {
    for (var n = t.length; n--; ) if (Al(t[n][0], e)) return n;
    return -1;
  }
  var Q5 = Array.prototype,
    ek = Q5.splice;
  function tk(t) {
    var e = this.__data__,
      n = ju(e, t);
    if (n < 0) return !1;
    var r = e.length - 1;
    return n == r ? e.pop() : ek.call(e, n, 1), --this.size, !0;
  }
  function nk(t) {
    var e = this.__data__,
      n = ju(e, t);
    return n < 0 ? void 0 : e[n][1];
  }
  function rk(t) {
    return ju(this.__data__, t) > -1;
  }
  function ik(t, e) {
    var n = this.__data__,
      r = ju(n, t);
    return r < 0 ? (++this.size, n.push([t, e])) : (n[r][1] = e), this;
  }
  function ci(t) {
    var e = -1,
      n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n; ) {
      var r = t[e];
      this.set(r[0], r[1]);
    }
  }
  ci.prototype.clear = J5;
  ci.prototype.delete = tk;
  ci.prototype.get = nk;
  ci.prototype.has = rk;
  ci.prototype.set = ik;
  var sl = Xo(xr, "Map");
  function ok() {
    (this.size = 0),
      (this.__data__ = {
        hash: new Do(),
        map: new (sl || ci)(),
        string: new Do(),
      });
  }
  function sk(t) {
    var e = typeof t;
    return e == "string" || e == "number" || e == "symbol" || e == "boolean"
      ? t !== "__proto__"
      : t === null;
  }
  function Uu(t, e) {
    var n = t.__data__;
    return sk(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map;
  }
  function ak(t) {
    var e = Uu(this, t).delete(t);
    return (this.size -= e ? 1 : 0), e;
  }
  function lk(t) {
    return Uu(this, t).get(t);
  }
  function ck(t) {
    return Uu(this, t).has(t);
  }
  function uk(t, e) {
    var n = Uu(this, t),
      r = n.size;
    return n.set(t, e), (this.size += n.size == r ? 0 : 1), this;
  }
  function ui(t) {
    var e = -1,
      n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n; ) {
      var r = t[e];
      this.set(r[0], r[1]);
    }
  }
  ui.prototype.clear = ok;
  ui.prototype.delete = ak;
  ui.prototype.get = lk;
  ui.prototype.has = ck;
  ui.prototype.set = uk;
  var dk = "Expected a function";
  function Og(t, e) {
    if (typeof t != "function" || (e != null && typeof e != "function"))
      throw new TypeError(dk);
    var n = function () {
      var r = arguments,
        i = e ? e.apply(this, r) : r[0],
        o = n.cache;
      if (o.has(i)) return o.get(i);
      var s = t.apply(this, r);
      return (n.cache = o.set(i, s) || o), s;
    };
    return (n.cache = new (Og.Cache || ui)()), n;
  }
  Og.Cache = ui;
  var hk = 500;
  function fk(t) {
    var e = Og(t, function (r) {
        return n.size === hk && n.clear(), r;
      }),
      n = e.cache;
    return e;
  }
  var gk =
      /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
    pk = /\\(\\)?/g,
    mk = fk(function (t) {
      var e = [];
      return (
        t.charCodeAt(0) === 46 && e.push(""),
        t.replace(gk, function (n, r, i, o) {
          e.push(i ? o.replace(pk, "$1") : r || n);
        }),
        e
      );
    });
  function Vu(t) {
    return t == null ? "" : jy(t);
  }
  function qy(t, e) {
    return lr(t) ? t : Ig(t, e) ? [t] : mk(Vu(t));
  }
  var vk = 1 / 0;
  function Gu(t) {
    if (typeof t == "string" || Wu(t)) return t;
    var e = t + "";
    return e == "0" && 1 / t == -vk ? "-0" : e;
  }
  function Zy(t, e) {
    e = qy(e, t);
    for (var n = 0, r = e.length; t != null && n < r; ) t = t[Gu(e[n++])];
    return n && n == r ? t : void 0;
  }
  function bk(t, e, n) {
    var r = t == null ? void 0 : Zy(t, e);
    return r === void 0 ? n : r;
  }
  function yk(t, e) {
    for (var n = -1, r = e.length, i = t.length; ++n < r; ) t[i + n] = e[n];
    return t;
  }
  var Jy = Ky(Object.getPrototypeOf, Object),
    xk = "[object Object]",
    Ck = Function.prototype,
    _k = Object.prototype,
    Qy = Ck.toString,
    wk = _k.hasOwnProperty,
    Sk = Qy.call(Object);
  function Ek(t) {
    if (!Gi(t) || Vo(t) != xk) return !1;
    var e = Jy(t);
    if (e === null) return !0;
    var n = wk.call(e, "constructor") && e.constructor;
    return typeof n == "function" && n instanceof n && Qy.call(n) == Sk;
  }
  function Rk(t, e, n) {
    var r = -1,
      i = t.length;
    e < 0 && (e = -e > i ? 0 : i + e),
      (n = n > i ? i : n),
      n < 0 && (n += i),
      (i = e > n ? 0 : (n - e) >>> 0),
      (e >>>= 0);
    for (var o = Array(i); ++r < i; ) o[r] = t[r + e];
    return o;
  }
  function Tk(t, e, n) {
    var r = t.length;
    return (n = n === void 0 ? r : n), !e && n >= r ? t : Rk(t, e, n);
  }
  var Pk = "\\ud800-\\udfff",
    Ak = "\\u0300-\\u036f",
    kk = "\\ufe20-\\ufe2f",
    Ik = "\\u20d0-\\u20ff",
    Ok = Ak + kk + Ik,
    Mk = "\\ufe0e\\ufe0f",
    Lk = "\\u200d",
    $k = RegExp("[" + Lk + Pk + Ok + Mk + "]");
  function ex(t) {
    return $k.test(t);
  }
  function Dk(t) {
    return t.split("");
  }
  var tx = "\\ud800-\\udfff",
    zk = "\\u0300-\\u036f",
    Fk = "\\ufe20-\\ufe2f",
    Bk = "\\u20d0-\\u20ff",
    Nk = zk + Fk + Bk,
    Hk = "\\ufe0e\\ufe0f",
    Wk = "[" + tx + "]",
    nf = "[" + Nk + "]",
    rf = "\\ud83c[\\udffb-\\udfff]",
    jk = "(?:" + nf + "|" + rf + ")",
    nx = "[^" + tx + "]",
    rx = "(?:\\ud83c[\\udde6-\\uddff]){2}",
    ix = "[\\ud800-\\udbff][\\udc00-\\udfff]",
    Uk = "\\u200d",
    ox = jk + "?",
    sx = "[" + Hk + "]?",
    Vk = "(?:" + Uk + "(?:" + [nx, rx, ix].join("|") + ")" + sx + ox + ")*",
    Gk = sx + ox + Vk,
    Xk = "(?:" + [nx + nf + "?", nf, rx, ix, Wk].join("|") + ")",
    Kk = RegExp(rf + "(?=" + rf + ")|" + Xk + Gk, "g");
  function Yk(t) {
    return t.match(Kk) || [];
  }
  function qk(t) {
    return ex(t) ? Yk(t) : Dk(t);
  }
  function Zk(t) {
    return function (e) {
      e = Vu(e);
      var n = ex(e) ? qk(e) : void 0,
        r = n ? n[0] : e.charAt(0),
        i = n ? Tk(n, 1).join("") : e.slice(1);
      return r[t]() + i;
    };
  }
  var Jk = Zk("toUpperCase");
  function Qk(t, e, n, r) {
    var i = -1,
      o = t == null ? 0 : t.length;
    for (r && o && (n = t[++i]); ++i < o; ) n = e(n, t[i], i, t);
    return n;
  }
  function eI(t) {
    return function (e) {
      return t == null ? void 0 : t[e];
    };
  }
  var tI = {
      À: "A",
      Á: "A",
      Â: "A",
      Ã: "A",
      Ä: "A",
      Å: "A",
      à: "a",
      á: "a",
      â: "a",
      ã: "a",
      ä: "a",
      å: "a",
      Ç: "C",
      ç: "c",
      Ð: "D",
      ð: "d",
      È: "E",
      É: "E",
      Ê: "E",
      Ë: "E",
      è: "e",
      é: "e",
      ê: "e",
      ë: "e",
      Ì: "I",
      Í: "I",
      Î: "I",
      Ï: "I",
      ì: "i",
      í: "i",
      î: "i",
      ï: "i",
      Ñ: "N",
      ñ: "n",
      Ò: "O",
      Ó: "O",
      Ô: "O",
      Õ: "O",
      Ö: "O",
      Ø: "O",
      ò: "o",
      ó: "o",
      ô: "o",
      õ: "o",
      ö: "o",
      ø: "o",
      Ù: "U",
      Ú: "U",
      Û: "U",
      Ü: "U",
      ù: "u",
      ú: "u",
      û: "u",
      ü: "u",
      Ý: "Y",
      ý: "y",
      ÿ: "y",
      Æ: "Ae",
      æ: "ae",
      Þ: "Th",
      þ: "th",
      ß: "ss",
      Ā: "A",
      Ă: "A",
      Ą: "A",
      ā: "a",
      ă: "a",
      ą: "a",
      Ć: "C",
      Ĉ: "C",
      Ċ: "C",
      Č: "C",
      ć: "c",
      ĉ: "c",
      ċ: "c",
      č: "c",
      Ď: "D",
      Đ: "D",
      ď: "d",
      đ: "d",
      Ē: "E",
      Ĕ: "E",
      Ė: "E",
      Ę: "E",
      Ě: "E",
      ē: "e",
      ĕ: "e",
      ė: "e",
      ę: "e",
      ě: "e",
      Ĝ: "G",
      Ğ: "G",
      Ġ: "G",
      Ģ: "G",
      ĝ: "g",
      ğ: "g",
      ġ: "g",
      ģ: "g",
      Ĥ: "H",
      Ħ: "H",
      ĥ: "h",
      ħ: "h",
      Ĩ: "I",
      Ī: "I",
      Ĭ: "I",
      Į: "I",
      İ: "I",
      ĩ: "i",
      ī: "i",
      ĭ: "i",
      į: "i",
      ı: "i",
      Ĵ: "J",
      ĵ: "j",
      Ķ: "K",
      ķ: "k",
      ĸ: "k",
      Ĺ: "L",
      Ļ: "L",
      Ľ: "L",
      Ŀ: "L",
      Ł: "L",
      ĺ: "l",
      ļ: "l",
      ľ: "l",
      ŀ: "l",
      ł: "l",
      Ń: "N",
      Ņ: "N",
      Ň: "N",
      Ŋ: "N",
      ń: "n",
      ņ: "n",
      ň: "n",
      ŋ: "n",
      Ō: "O",
      Ŏ: "O",
      Ő: "O",
      ō: "o",
      ŏ: "o",
      ő: "o",
      Ŕ: "R",
      Ŗ: "R",
      Ř: "R",
      ŕ: "r",
      ŗ: "r",
      ř: "r",
      Ś: "S",
      Ŝ: "S",
      Ş: "S",
      Š: "S",
      ś: "s",
      ŝ: "s",
      ş: "s",
      š: "s",
      Ţ: "T",
      Ť: "T",
      Ŧ: "T",
      ţ: "t",
      ť: "t",
      ŧ: "t",
      Ũ: "U",
      Ū: "U",
      Ŭ: "U",
      Ů: "U",
      Ű: "U",
      Ų: "U",
      ũ: "u",
      ū: "u",
      ŭ: "u",
      ů: "u",
      ű: "u",
      ų: "u",
      Ŵ: "W",
      ŵ: "w",
      Ŷ: "Y",
      ŷ: "y",
      Ÿ: "Y",
      Ź: "Z",
      Ż: "Z",
      Ž: "Z",
      ź: "z",
      ż: "z",
      ž: "z",
      Ĳ: "IJ",
      ĳ: "ij",
      Œ: "Oe",
      œ: "oe",
      ŉ: "'n",
      ſ: "s",
    },
    nI = eI(tI);
  const rI = nI;
  var iI = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
    oI = "\\u0300-\\u036f",
    sI = "\\ufe20-\\ufe2f",
    aI = "\\u20d0-\\u20ff",
    lI = oI + sI + aI,
    cI = "[" + lI + "]",
    uI = RegExp(cI, "g");
  function dI(t) {
    return (t = Vu(t)), t && t.replace(iI, rI).replace(uI, "");
  }
  var hI = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
  function fI(t) {
    return t.match(hI) || [];
  }
  var gI = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
  function pI(t) {
    return gI.test(t);
  }
  var ax = "\\ud800-\\udfff",
    mI = "\\u0300-\\u036f",
    vI = "\\ufe20-\\ufe2f",
    bI = "\\u20d0-\\u20ff",
    yI = mI + vI + bI,
    lx = "\\u2700-\\u27bf",
    cx = "a-z\\xdf-\\xf6\\xf8-\\xff",
    xI = "\\xac\\xb1\\xd7\\xf7",
    CI = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",
    _I = "\\u2000-\\u206f",
    wI =
      " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
    ux = "A-Z\\xc0-\\xd6\\xd8-\\xde",
    SI = "\\ufe0e\\ufe0f",
    dx = xI + CI + _I + wI,
    hx = "['’]",
    F0 = "[" + dx + "]",
    EI = "[" + yI + "]",
    fx = "\\d+",
    RI = "[" + lx + "]",
    gx = "[" + cx + "]",
    px = "[^" + ax + dx + fx + lx + cx + ux + "]",
    TI = "\\ud83c[\\udffb-\\udfff]",
    PI = "(?:" + EI + "|" + TI + ")",
    AI = "[^" + ax + "]",
    mx = "(?:\\ud83c[\\udde6-\\uddff]){2}",
    vx = "[\\ud800-\\udbff][\\udc00-\\udfff]",
    hs = "[" + ux + "]",
    kI = "\\u200d",
    B0 = "(?:" + gx + "|" + px + ")",
    II = "(?:" + hs + "|" + px + ")",
    N0 = "(?:" + hx + "(?:d|ll|m|re|s|t|ve))?",
    H0 = "(?:" + hx + "(?:D|LL|M|RE|S|T|VE))?",
    bx = PI + "?",
    yx = "[" + SI + "]?",
    OI = "(?:" + kI + "(?:" + [AI, mx, vx].join("|") + ")" + yx + bx + ")*",
    MI = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
    LI = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
    $I = yx + bx + OI,
    DI = "(?:" + [RI, mx, vx].join("|") + ")" + $I,
    zI = RegExp(
      [
        hs + "?" + gx + "+" + N0 + "(?=" + [F0, hs, "$"].join("|") + ")",
        II + "+" + H0 + "(?=" + [F0, hs + B0, "$"].join("|") + ")",
        hs + "?" + B0 + "+" + N0,
        hs + "+" + H0,
        LI,
        MI,
        fx,
        DI,
      ].join("|"),
      "g"
    );
  function FI(t) {
    return t.match(zI) || [];
  }
  function BI(t, e, n) {
    return (
      (t = Vu(t)),
      (e = n ? void 0 : e),
      e === void 0 ? (pI(t) ? FI(t) : fI(t)) : t.match(e) || []
    );
  }
  var NI = "['’]",
    HI = RegExp(NI, "g");
  function WI(t) {
    return function (e) {
      return Qk(BI(dI(e).replace(HI, "")), t, "");
    };
  }
  function jI() {
    (this.__data__ = new ci()), (this.size = 0);
  }
  function UI(t) {
    var e = this.__data__,
      n = e.delete(t);
    return (this.size = e.size), n;
  }
  function VI(t) {
    return this.__data__.get(t);
  }
  function GI(t) {
    return this.__data__.has(t);
  }
  var XI = 200;
  function KI(t, e) {
    var n = this.__data__;
    if (n instanceof ci) {
      var r = n.__data__;
      if (!sl || r.length < XI - 1)
        return r.push([t, e]), (this.size = ++n.size), this;
      n = this.__data__ = new ui(r);
    }
    return n.set(t, e), (this.size = n.size), this;
  }
  function $r(t) {
    var e = (this.__data__ = new ci(t));
    this.size = e.size;
  }
  $r.prototype.clear = jI;
  $r.prototype.delete = UI;
  $r.prototype.get = VI;
  $r.prototype.has = GI;
  $r.prototype.set = KI;
  var xx = typeof In == "object" && In && !In.nodeType && In,
    W0 = xx && typeof Hn == "object" && Hn && !Hn.nodeType && Hn,
    YI = W0 && W0.exports === xx,
    j0 = YI ? xr.Buffer : void 0,
    U0 = j0 ? j0.allocUnsafe : void 0;
  function qI(t, e) {
    if (e) return t.slice();
    var n = t.length,
      r = U0 ? U0(n) : new t.constructor(n);
    return t.copy(r), r;
  }
  function ZI(t, e) {
    for (var n = -1, r = t == null ? 0 : t.length, i = 0, o = []; ++n < r; ) {
      var s = t[n];
      e(s, n, t) && (o[i++] = s);
    }
    return o;
  }
  function JI() {
    return [];
  }
  var QI = Object.prototype,
    eO = QI.propertyIsEnumerable,
    V0 = Object.getOwnPropertySymbols,
    tO = V0
      ? function (t) {
          return t == null
            ? []
            : ((t = Object(t)),
              ZI(V0(t), function (e) {
                return eO.call(t, e);
              }));
        }
      : JI;
  const nO = tO;
  function rO(t, e, n) {
    var r = e(t);
    return lr(t) ? r : yk(r, n(t));
  }
  function G0(t) {
    return rO(t, kg, nO);
  }
  var of = Xo(xr, "DataView"),
    sf = Xo(xr, "Promise"),
    af = Xo(xr, "Set"),
    X0 = "[object Map]",
    iO = "[object Object]",
    K0 = "[object Promise]",
    Y0 = "[object Set]",
    q0 = "[object WeakMap]",
    Z0 = "[object DataView]",
    oO = Go(of),
    sO = Go(sl),
    aO = Go(sf),
    lO = Go(af),
    cO = Go(tf),
    vo = Vo;
  ((of && vo(new of(new ArrayBuffer(1))) != Z0) ||
    (sl && vo(new sl()) != X0) ||
    (sf && vo(sf.resolve()) != K0) ||
    (af && vo(new af()) != Y0) ||
    (tf && vo(new tf()) != q0)) &&
    (vo = function (t) {
      var e = Vo(t),
        n = e == iO ? t.constructor : void 0,
        r = n ? Go(n) : "";
      if (r)
        switch (r) {
          case oO:
            return Z0;
          case sO:
            return X0;
          case aO:
            return K0;
          case lO:
            return Y0;
          case cO:
            return q0;
        }
      return e;
    });
  const J0 = vo;
  var iu = xr.Uint8Array;
  function uO(t) {
    var e = new t.constructor(t.byteLength);
    return new iu(e).set(new iu(t)), e;
  }
  function dO(t, e) {
    var n = e ? uO(t.buffer) : t.buffer;
    return new t.constructor(n, t.byteOffset, t.length);
  }
  function hO(t) {
    return typeof t.constructor == "function" && !Pg(t) ? RA(Jy(t)) : {};
  }
  var fO = "__lodash_hash_undefined__";
  function gO(t) {
    return this.__data__.set(t, fO), this;
  }
  function pO(t) {
    return this.__data__.has(t);
  }
  function ou(t) {
    var e = -1,
      n = t == null ? 0 : t.length;
    for (this.__data__ = new ui(); ++e < n; ) this.add(t[e]);
  }
  ou.prototype.add = ou.prototype.push = gO;
  ou.prototype.has = pO;
  function mO(t, e) {
    for (var n = -1, r = t == null ? 0 : t.length; ++n < r; )
      if (e(t[n], n, t)) return !0;
    return !1;
  }
  function vO(t, e) {
    return t.has(e);
  }
  var bO = 1,
    yO = 2;
  function Cx(t, e, n, r, i, o) {
    var s = n & bO,
      a = t.length,
      l = e.length;
    if (a != l && !(s && l > a)) return !1;
    var c = o.get(t),
      u = o.get(e);
    if (c && u) return c == e && u == t;
    var d = -1,
      h = !0,
      g = n & yO ? new ou() : void 0;
    for (o.set(t, e), o.set(e, t); ++d < a; ) {
      var f = t[d],
        p = e[d];
      if (r) var b = s ? r(p, f, d, e, t, o) : r(f, p, d, t, e, o);
      if (b !== void 0) {
        if (b) continue;
        h = !1;
        break;
      }
      if (g) {
        if (
          !mO(e, function (m, _) {
            if (!vO(g, _) && (f === m || i(f, m, n, r, o))) return g.push(_);
          })
        ) {
          h = !1;
          break;
        }
      } else if (!(f === p || i(f, p, n, r, o))) {
        h = !1;
        break;
      }
    }
    return o.delete(t), o.delete(e), h;
  }
  function xO(t) {
    var e = -1,
      n = Array(t.size);
    return (
      t.forEach(function (r, i) {
        n[++e] = [i, r];
      }),
      n
    );
  }
  function CO(t) {
    var e = -1,
      n = Array(t.size);
    return (
      t.forEach(function (r) {
        n[++e] = r;
      }),
      n
    );
  }
  var _O = 1,
    wO = 2,
    SO = "[object Boolean]",
    EO = "[object Date]",
    RO = "[object Error]",
    TO = "[object Map]",
    PO = "[object Number]",
    AO = "[object RegExp]",
    kO = "[object Set]",
    IO = "[object String]",
    OO = "[object Symbol]",
    MO = "[object ArrayBuffer]",
    LO = "[object DataView]",
    Q0 = Vi ? Vi.prototype : void 0,
    th = Q0 ? Q0.valueOf : void 0;
  function $O(t, e, n, r, i, o, s) {
    switch (n) {
      case LO:
        if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)
          return !1;
        (t = t.buffer), (e = e.buffer);
      case MO:
        return !(t.byteLength != e.byteLength || !o(new iu(t), new iu(e)));
      case SO:
      case EO:
      case PO:
        return Al(+t, +e);
      case RO:
        return t.name == e.name && t.message == e.message;
      case AO:
      case IO:
        return t == e + "";
      case TO:
        var a = xO;
      case kO:
        var l = r & _O;
        if ((a || (a = CO), t.size != e.size && !l)) return !1;
        var c = s.get(t);
        if (c) return c == e;
        (r |= wO), s.set(t, e);
        var u = Cx(a(t), a(e), r, i, o, s);
        return s.delete(t), u;
      case OO:
        if (th) return th.call(t) == th.call(e);
    }
    return !1;
  }
  var DO = 1,
    zO = Object.prototype,
    FO = zO.hasOwnProperty;
  function BO(t, e, n, r, i, o) {
    var s = n & DO,
      a = G0(t),
      l = a.length,
      c = G0(e),
      u = c.length;
    if (l != u && !s) return !1;
    for (var d = l; d--; ) {
      var h = a[d];
      if (!(s ? h in e : FO.call(e, h))) return !1;
    }
    var g = o.get(t),
      f = o.get(e);
    if (g && f) return g == e && f == t;
    var p = !0;
    o.set(t, e), o.set(e, t);
    for (var b = s; ++d < l; ) {
      h = a[d];
      var m = t[h],
        _ = e[h];
      if (r) var R = s ? r(_, m, h, e, t, o) : r(m, _, h, t, e, o);
      if (!(R === void 0 ? m === _ || i(m, _, n, r, o) : R)) {
        p = !1;
        break;
      }
      b || (b = h == "constructor");
    }
    if (p && !b) {
      var S = t.constructor,
        x = e.constructor;
      S != x &&
        "constructor" in t &&
        "constructor" in e &&
        !(
          typeof S == "function" &&
          S instanceof S &&
          typeof x == "function" &&
          x instanceof x
        ) &&
        (p = !1);
    }
    return o.delete(t), o.delete(e), p;
  }
  var NO = 1,
    ev = "[object Arguments]",
    tv = "[object Array]",
    dc = "[object Object]",
    HO = Object.prototype,
    nv = HO.hasOwnProperty;
  function WO(t, e, n, r, i, o) {
    var s = lr(t),
      a = lr(e),
      l = s ? tv : J0(t),
      c = a ? tv : J0(e);
    (l = l == ev ? dc : l), (c = c == ev ? dc : c);
    var u = l == dc,
      d = c == dc,
      h = l == c;
    if (h && ru(t)) {
      if (!ru(e)) return !1;
      (s = !0), (u = !1);
    }
    if (h && !u)
      return (
        o || (o = new $r()),
        s || Ag(t) ? Cx(t, e, n, r, i, o) : $O(t, e, l, n, r, i, o)
      );
    if (!(n & NO)) {
      var g = u && nv.call(t, "__wrapped__"),
        f = d && nv.call(e, "__wrapped__");
      if (g || f) {
        var p = g ? t.value() : t,
          b = f ? e.value() : e;
        return o || (o = new $r()), i(p, b, n, r, o);
      }
    }
    return h ? (o || (o = new $r()), BO(t, e, n, r, i, o)) : !1;
  }
  function Mg(t, e, n, r, i) {
    return t === e
      ? !0
      : t == null || e == null || (!Gi(t) && !Gi(e))
      ? t !== t && e !== e
      : WO(t, e, n, r, Mg, i);
  }
  var jO = 1,
    UO = 2;
  function VO(t, e, n, r) {
    var i = n.length,
      o = i,
      s = !r;
    if (t == null) return !o;
    for (t = Object(t); i--; ) {
      var a = n[i];
      if (s && a[2] ? a[1] !== t[a[0]] : !(a[0] in t)) return !1;
    }
    for (; ++i < o; ) {
      a = n[i];
      var l = a[0],
        c = t[l],
        u = a[1];
      if (s && a[2]) {
        if (c === void 0 && !(l in t)) return !1;
      } else {
        var d = new $r();
        if (r) var h = r(c, u, l, t, e, d);
        if (!(h === void 0 ? Mg(u, c, jO | UO, r, d) : h)) return !1;
      }
    }
    return !0;
  }
  function _x(t) {
    return t === t && !cr(t);
  }
  function GO(t) {
    for (var e = kg(t), n = e.length; n--; ) {
      var r = e[n],
        i = t[r];
      e[n] = [r, i, _x(i)];
    }
    return e;
  }
  function wx(t, e) {
    return function (n) {
      return n == null ? !1 : n[t] === e && (e !== void 0 || t in Object(n));
    };
  }
  function XO(t) {
    var e = GO(t);
    return e.length == 1 && e[0][2]
      ? wx(e[0][0], e[0][1])
      : function (n) {
          return n === t || VO(n, t, e);
        };
  }
  function KO(t, e) {
    return t != null && e in Object(t);
  }
  function YO(t, e, n) {
    e = qy(e, t);
    for (var r = -1, i = e.length, o = !1; ++r < i; ) {
      var s = Gu(e[r]);
      if (!(o = t != null && n(t, s))) break;
      t = t[s];
    }
    return o || ++r != i
      ? o
      : ((i = t == null ? 0 : t.length),
        !!i && Tg(i) && Eg(s, i) && (lr(t) || nu(t)));
  }
  function qO(t, e) {
    return t != null && YO(t, e, KO);
  }
  var ZO = 1,
    JO = 2;
  function QO(t, e) {
    return Ig(t) && _x(e)
      ? wx(Gu(t), e)
      : function (n) {
          var r = bk(n, t);
          return r === void 0 && r === e ? qO(n, t) : Mg(e, r, ZO | JO);
        };
  }
  function eM(t) {
    return function (e) {
      return e == null ? void 0 : e[t];
    };
  }
  function tM(t) {
    return function (e) {
      return Zy(e, t);
    };
  }
  function nM(t) {
    return Ig(t) ? eM(Gu(t)) : tM(t);
  }
  function rM(t) {
    return typeof t == "function"
      ? t
      : t == null
      ? wg
      : typeof t == "object"
      ? lr(t)
        ? QO(t[0], t[1])
        : XO(t)
      : nM(t);
  }
  function iM(t) {
    return function (e, n, r) {
      for (var i = -1, o = Object(e), s = r(e), a = s.length; a--; ) {
        var l = s[t ? a : ++i];
        if (n(o[l], l, o) === !1) break;
      }
      return e;
    };
  }
  var Sx = iM();
  function oM(t, e) {
    return t && Sx(t, e, kg);
  }
  function sM(t, e) {
    return function (n, r) {
      if (n == null) return n;
      if (!ea(n)) return t(n, r);
      for (
        var i = n.length, o = e ? i : -1, s = Object(n);
        (e ? o-- : ++o < i) && r(s[o], o, s) !== !1;

      );
      return n;
    };
  }
  var aM = sM(oM),
    nh = function () {
      return xr.Date.now();
    },
    lM = "Expected a function",
    cM = Math.max,
    uM = Math.min;
  function dM(t, e, n) {
    var r,
      i,
      o,
      s,
      a,
      l,
      c = 0,
      u = !1,
      d = !1,
      h = !0;
    if (typeof t != "function") throw new TypeError(lM);
    (e = A0(e) || 0),
      cr(n) &&
        ((u = !!n.leading),
        (d = "maxWait" in n),
        (o = d ? cM(A0(n.maxWait) || 0, e) : o),
        (h = "trailing" in n ? !!n.trailing : h));
    function g(E) {
      var w = r,
        v = i;
      return (r = i = void 0), (c = E), (s = t.apply(v, w)), s;
    }
    function f(E) {
      return (c = E), (a = setTimeout(m, e)), u ? g(E) : s;
    }
    function p(E) {
      var w = E - l,
        v = E - c,
        y = e - w;
      return d ? uM(y, o - v) : y;
    }
    function b(E) {
      var w = E - l,
        v = E - c;
      return l === void 0 || w >= e || w < 0 || (d && v >= o);
    }
    function m() {
      var E = nh();
      if (b(E)) return _(E);
      a = setTimeout(m, p(E));
    }
    function _(E) {
      return (a = void 0), h && r ? g(E) : ((r = i = void 0), s);
    }
    function R() {
      a !== void 0 && clearTimeout(a), (c = 0), (r = l = i = a = void 0);
    }
    function S() {
      return a === void 0 ? s : _(nh());
    }
    function x() {
      var E = nh(),
        w = b(E);
      if (((r = arguments), (i = this), (l = E), w)) {
        if (a === void 0) return f(l);
        if (d) return clearTimeout(a), (a = setTimeout(m, e)), g(l);
      }
      return a === void 0 && (a = setTimeout(m, e)), s;
    }
    return (x.cancel = R), (x.flush = S), x;
  }
  function lf(t, e, n) {
    ((n !== void 0 && !Al(t[e], n)) || (n === void 0 && !(e in t))) &&
      Rg(t, e, n);
  }
  function hM(t) {
    return Gi(t) && ea(t);
  }
  function cf(t, e) {
    if (!(e === "constructor" && typeof t[e] == "function") && e != "__proto__")
      return t[e];
  }
  function fM(t) {
    return WA(t, Yy(t));
  }
  function gM(t, e, n, r, i, o, s) {
    var a = cf(t, n),
      l = cf(e, n),
      c = s.get(l);
    if (c) {
      lf(t, n, c);
      return;
    }
    var u = o ? o(a, l, n + "", t, e, s) : void 0,
      d = u === void 0;
    if (d) {
      var h = lr(l),
        g = !h && ru(l),
        f = !h && !g && Ag(l);
      (u = l),
        h || g || f
          ? lr(a)
            ? (u = a)
            : hM(a)
            ? (u = PA(a))
            : g
            ? ((d = !1), (u = qI(l, !0)))
            : f
            ? ((d = !1), (u = dO(l, !0)))
            : (u = [])
          : Ek(l) || nu(l)
          ? ((u = a), nu(a) ? (u = fM(a)) : (!cr(a) || Sg(a)) && (u = hO(l)))
          : (d = !1);
    }
    d && (s.set(l, u), i(u, l, r, o, s), s.delete(l)), lf(t, n, u);
  }
  function Ex(t, e, n, r, i) {
    t !== e &&
      Sx(
        e,
        function (o, s) {
          if ((i || (i = new $r()), cr(o))) gM(t, e, s, n, Ex, r, i);
          else {
            var a = r ? r(cf(t, s), o, s + "", t, e, i) : void 0;
            a === void 0 && (a = o), lf(t, s, a);
          }
        },
        Yy
      );
  }
  function pM(t, e) {
    var n = -1,
      r = ea(t) ? Array(t.length) : [];
    return (
      aM(t, function (i, o, s) {
        r[++n] = e(i, o, s);
      }),
      r
    );
  }
  function mM(t, e) {
    var n = lr(t) ? Wy : pM;
    return n(t, rM(e));
  }
  var vM = WI(function (t, e, n) {
      return t + (n ? "-" : "") + e.toLowerCase();
    }),
    Pa = XA(function (t, e, n) {
      Ex(t, e, n);
    }),
    bM = "Expected a function";
  function rh(t, e, n) {
    var r = !0,
      i = !0;
    if (typeof t != "function") throw new TypeError(bM);
    return (
      cr(n) &&
        ((r = "leading" in n ? !!n.leading : r),
        (i = "trailing" in n ? !!n.trailing : i)),
      dM(t, e, { leading: r, maxWait: e, trailing: i })
    );
  }
  const to = {
      fontFamily:
        'v-sans, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
      fontFamilyMono:
        "v-mono, SFMono-Regular, Menlo, Consolas, Courier, monospace",
      fontWeight: "400",
      fontWeightStrong: "500",
      cubicBezierEaseInOut: "cubic-bezier(.4, 0, .2, 1)",
      cubicBezierEaseOut: "cubic-bezier(0, 0, .2, 1)",
      cubicBezierEaseIn: "cubic-bezier(.4, 0, 1, 1)",
      borderRadius: "3px",
      borderRadiusSmall: "2px",
      fontSize: "14px",
      fontSizeMini: "12px",
      fontSizeTiny: "12px",
      fontSizeSmall: "14px",
      fontSizeMedium: "14px",
      fontSizeLarge: "15px",
      fontSizeHuge: "16px",
      lineHeight: "1.6",
      heightMini: "16px",
      heightTiny: "22px",
      heightSmall: "28px",
      heightMedium: "34px",
      heightLarge: "40px",
      heightHuge: "46px",
    },
    { fontSize: yM, fontFamily: xM, lineHeight: CM } = to,
    Rx = q(
      "body",
      `
 margin: 0;
 font-size: ${yM};
 font-family: ${xM};
 line-height: ${CM};
 -webkit-text-size-adjust: 100%;
 -webkit-tap-highlight-color: transparent;
`,
      [
        q(
          "input",
          `
 font-family: inherit;
 font-size: inherit;
 `
        ),
      ]
    ),
    ri = "n-config-provider",
    al = "naive-ui-style";
  function Ye(t, e, n, r, i, o) {
    const s = Uo(),
      a = Ve(ri, null);
    if (n) {
      const c = () => {
        const u = o == null ? void 0 : o.value;
        n.mount({
          id: u === void 0 ? e : u + e,
          head: !0,
          props: { bPrefix: u ? `.${u}-` : void 0 },
          anchorMetaName: al,
          ssr: s,
        }),
          (a != null && a.preflightStyleDisabled) ||
            Rx.mount({ id: "n-global", head: !0, anchorMetaName: al, ssr: s });
      };
      s ? c() : Ho(c);
    }
    return ce(() => {
      var c;
      const {
          theme: { common: u, self: d, peers: h = {} } = {},
          themeOverrides: g = {},
          builtinThemeOverrides: f = {},
        } = i,
        { common: p, peers: b } = g,
        {
          common: m = void 0,
          [t]: { common: _ = void 0, self: R = void 0, peers: S = {} } = {},
        } = (a == null ? void 0 : a.mergedThemeRef.value) || {},
        { common: x = void 0, [t]: E = {} } =
          (a == null ? void 0 : a.mergedThemeOverridesRef.value) || {},
        { common: w, peers: v = {} } = E,
        y = Pa({}, u || _ || m || r.common, x, w, p),
        T = Pa(
          (c = d || R || r.self) === null || c === void 0 ? void 0 : c(y),
          f,
          E,
          g
        );
      return {
        common: y,
        self: T,
        peers: Pa({}, r.peers, S, h),
        peerOverrides: Pa({}, f.peers, v, b),
      };
    });
  }
  Ye.props = {
    theme: Object,
    themeOverrides: Object,
    builtinThemeOverrides: Object,
  };
  const su = "n";
  function Ct(t = {}, e = { defaultBordered: !0 }) {
    const n = Ve(ri, null);
    return {
      inlineThemeDisabled: n == null ? void 0 : n.inlineThemeDisabled,
      mergedRtlRef: n == null ? void 0 : n.mergedRtlRef,
      mergedComponentPropsRef: n == null ? void 0 : n.mergedComponentPropsRef,
      mergedBreakpointsRef: n == null ? void 0 : n.mergedBreakpointsRef,
      mergedBorderedRef: ce(() => {
        var r, i;
        const { bordered: o } = t;
        return o !== void 0
          ? o
          : (i =
              (r = n == null ? void 0 : n.mergedBorderedRef.value) !== null &&
              r !== void 0
                ? r
                : e.defaultBordered) !== null && i !== void 0
          ? i
          : !0;
      }),
      mergedClsPrefixRef: n ? n.mergedClsPrefixRef : c1(su),
      namespaceRef: ce(() => (n == null ? void 0 : n.mergedNamespaceRef.value)),
    };
  }
  const _M = {
      name: "en-US",
      global: {
        undo: "Undo",
        redo: "Redo",
        confirm: "Confirm",
        clear: "Clear",
      },
      Popconfirm: { positiveText: "Confirm", negativeText: "Cancel" },
      Cascader: {
        placeholder: "Please Select",
        loading: "Loading",
        loadingRequiredMessage: (t) =>
          `Please load all ${t}'s descendants before checking it.`,
      },
      Time: { dateFormat: "yyyy-MM-dd", dateTimeFormat: "yyyy-MM-dd HH:mm:ss" },
      DatePicker: {
        yearFormat: "yyyy",
        monthFormat: "MMM",
        dayFormat: "eeeeee",
        yearTypeFormat: "yyyy",
        monthTypeFormat: "yyyy-MM",
        dateFormat: "yyyy-MM-dd",
        dateTimeFormat: "yyyy-MM-dd HH:mm:ss",
        quarterFormat: "yyyy-qqq",
        weekFormat: "yyyy-w",
        clear: "Clear",
        now: "Now",
        confirm: "Confirm",
        selectTime: "Select Time",
        selectDate: "Select Date",
        datePlaceholder: "Select Date",
        datetimePlaceholder: "Select Date and Time",
        monthPlaceholder: "Select Month",
        yearPlaceholder: "Select Year",
        quarterPlaceholder: "Select Quarter",
        weekPlaceholder: "Select Week",
        startDatePlaceholder: "Start Date",
        endDatePlaceholder: "End Date",
        startDatetimePlaceholder: "Start Date and Time",
        endDatetimePlaceholder: "End Date and Time",
        startMonthPlaceholder: "Start Month",
        endMonthPlaceholder: "End Month",
        monthBeforeYear: !0,
        firstDayOfWeek: 6,
        today: "Today",
      },
      DataTable: {
        checkTableAll: "Select all in the table",
        uncheckTableAll: "Unselect all in the table",
        confirm: "Confirm",
        clear: "Clear",
      },
      LegacyTransfer: { sourceTitle: "Source", targetTitle: "Target" },
      Transfer: {
        selectAll: "Select all",
        unselectAll: "Unselect all",
        clearAll: "Clear",
        total: (t) => `Total ${t} items`,
        selected: (t) => `${t} items selected`,
      },
      Empty: { description: "No Data" },
      Select: { placeholder: "Please Select" },
      TimePicker: {
        placeholder: "Select Time",
        positiveText: "OK",
        negativeText: "Cancel",
        now: "Now",
        clear: "Clear",
      },
      Pagination: { goto: "Goto", selectionSuffix: "page" },
      DynamicTags: { add: "Add" },
      Log: { loading: "Loading" },
      Input: { placeholder: "Please Input" },
      InputNumber: { placeholder: "Please Input" },
      DynamicInput: { create: "Create" },
      ThemeEditor: {
        title: "Theme Editor",
        clearAllVars: "Clear All Variables",
        clearSearch: "Clear Search",
        filterCompName: "Filter Component Name",
        filterVarName: "Filter Variable Name",
        import: "Import",
        export: "Export",
        restore: "Reset to Default",
      },
      Image: {
        tipPrevious: "Previous picture (←)",
        tipNext: "Next picture (→)",
        tipCounterclockwise: "Counterclockwise",
        tipClockwise: "Clockwise",
        tipZoomOut: "Zoom out",
        tipZoomIn: "Zoom in",
        tipDownload: "Download",
        tipClose: "Close (Esc)",
        tipOriginalSize: "Zoom to original size",
      },
    },
    wM = _M;
  function ih(t) {
    return function () {
      var e =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
        n = e.width ? String(e.width) : t.defaultWidth,
        r = t.formats[n] || t.formats[t.defaultWidth];
      return r;
    };
  }
  function ba(t) {
    return function (e, n) {
      var r = n != null && n.context ? String(n.context) : "standalone",
        i;
      if (r === "formatting" && t.formattingValues) {
        var o = t.defaultFormattingWidth || t.defaultWidth,
          s = n != null && n.width ? String(n.width) : o;
        i = t.formattingValues[s] || t.formattingValues[o];
      } else {
        var a = t.defaultWidth,
          l = n != null && n.width ? String(n.width) : t.defaultWidth;
        i = t.values[l] || t.values[a];
      }
      var c = t.argumentCallback ? t.argumentCallback(e) : e;
      return i[c];
    };
  }
  function ya(t) {
    return function (e) {
      var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        r = n.width,
        i = (r && t.matchPatterns[r]) || t.matchPatterns[t.defaultMatchWidth],
        o = e.match(i);
      if (!o) return null;
      var s = o[0],
        a = (r && t.parsePatterns[r]) || t.parsePatterns[t.defaultParseWidth],
        l = Array.isArray(a)
          ? EM(a, function (d) {
              return d.test(s);
            })
          : SM(a, function (d) {
              return d.test(s);
            }),
        c;
      (c = t.valueCallback ? t.valueCallback(l) : l),
        (c = n.valueCallback ? n.valueCallback(c) : c);
      var u = e.slice(s.length);
      return { value: c, rest: u };
    };
  }
  function SM(t, e) {
    for (var n in t) if (t.hasOwnProperty(n) && e(t[n])) return n;
  }
  function EM(t, e) {
    for (var n = 0; n < t.length; n++) if (e(t[n])) return n;
  }
  function RM(t) {
    return function (e) {
      var n =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        r = e.match(t.matchPattern);
      if (!r) return null;
      var i = r[0],
        o = e.match(t.parsePattern);
      if (!o) return null;
      var s = t.valueCallback ? t.valueCallback(o[0]) : o[0];
      s = n.valueCallback ? n.valueCallback(s) : s;
      var a = e.slice(i.length);
      return { value: s, rest: a };
    };
  }
  var TM = {
      lessThanXSeconds: {
        one: "less than a second",
        other: "less than {{count}} seconds",
      },
      xSeconds: { one: "1 second", other: "{{count}} seconds" },
      halfAMinute: "half a minute",
      lessThanXMinutes: {
        one: "less than a minute",
        other: "less than {{count}} minutes",
      },
      xMinutes: { one: "1 minute", other: "{{count}} minutes" },
      aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" },
      xHours: { one: "1 hour", other: "{{count}} hours" },
      xDays: { one: "1 day", other: "{{count}} days" },
      aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" },
      xWeeks: { one: "1 week", other: "{{count}} weeks" },
      aboutXMonths: { one: "about 1 month", other: "about {{count}} months" },
      xMonths: { one: "1 month", other: "{{count}} months" },
      aboutXYears: { one: "about 1 year", other: "about {{count}} years" },
      xYears: { one: "1 year", other: "{{count}} years" },
      overXYears: { one: "over 1 year", other: "over {{count}} years" },
      almostXYears: { one: "almost 1 year", other: "almost {{count}} years" },
    },
    PM = function (e, n, r) {
      var i,
        o = TM[e];
      return (
        typeof o == "string"
          ? (i = o)
          : n === 1
          ? (i = o.one)
          : (i = o.other.replace("{{count}}", n.toString())),
        r != null && r.addSuffix
          ? r.comparison && r.comparison > 0
            ? "in " + i
            : i + " ago"
          : i
      );
    };
  const AM = PM;
  var kM = {
      full: "EEEE, MMMM do, y",
      long: "MMMM do, y",
      medium: "MMM d, y",
      short: "MM/dd/yyyy",
    },
    IM = {
      full: "h:mm:ss a zzzz",
      long: "h:mm:ss a z",
      medium: "h:mm:ss a",
      short: "h:mm a",
    },
    OM = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: "{{date}}, {{time}}",
      short: "{{date}}, {{time}}",
    },
    MM = {
      date: ih({ formats: kM, defaultWidth: "full" }),
      time: ih({ formats: IM, defaultWidth: "full" }),
      dateTime: ih({ formats: OM, defaultWidth: "full" }),
    };
  const LM = MM;
  var $M = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: "P",
    },
    DM = function (e, n, r, i) {
      return $M[e];
    };
  const zM = DM;
  var FM = {
      narrow: ["B", "A"],
      abbreviated: ["BC", "AD"],
      wide: ["Before Christ", "Anno Domini"],
    },
    BM = {
      narrow: ["1", "2", "3", "4"],
      abbreviated: ["Q1", "Q2", "Q3", "Q4"],
      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
    },
    NM = {
      narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
      abbreviated: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      wide: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
    },
    HM = {
      narrow: ["S", "M", "T", "W", "T", "F", "S"],
      short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      wide: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
    },
    WM = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night",
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night",
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night",
      },
    },
    jM = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night",
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night",
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night",
      },
    },
    UM = function (e, n) {
      var r = Number(e),
        i = r % 100;
      if (i > 20 || i < 10)
        switch (i % 10) {
          case 1:
            return r + "st";
          case 2:
            return r + "nd";
          case 3:
            return r + "rd";
        }
      return r + "th";
    },
    VM = {
      ordinalNumber: UM,
      era: ba({ values: FM, defaultWidth: "wide" }),
      quarter: ba({
        values: BM,
        defaultWidth: "wide",
        argumentCallback: function (e) {
          return e - 1;
        },
      }),
      month: ba({ values: NM, defaultWidth: "wide" }),
      day: ba({ values: HM, defaultWidth: "wide" }),
      dayPeriod: ba({
        values: WM,
        defaultWidth: "wide",
        formattingValues: jM,
        defaultFormattingWidth: "wide",
      }),
    };
  const GM = VM;
  var XM = /^(\d+)(th|st|nd|rd)?/i,
    KM = /\d+/i,
    YM = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i,
    },
    qM = { any: [/^b/i, /^(a|c)/i] },
    ZM = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i,
    },
    JM = { any: [/1/i, /2/i, /3/i, /4/i] },
    QM = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
    },
    e3 = {
      narrow: [
        /^j/i,
        /^f/i,
        /^m/i,
        /^a/i,
        /^m/i,
        /^j/i,
        /^j/i,
        /^a/i,
        /^s/i,
        /^o/i,
        /^n/i,
        /^d/i,
      ],
      any: [
        /^ja/i,
        /^f/i,
        /^mar/i,
        /^ap/i,
        /^may/i,
        /^jun/i,
        /^jul/i,
        /^au/i,
        /^s/i,
        /^o/i,
        /^n/i,
        /^d/i,
      ],
    },
    t3 = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
    },
    n3 = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
    },
    r3 = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
    },
    i3 = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i,
      },
    },
    o3 = {
      ordinalNumber: RM({
        matchPattern: XM,
        parsePattern: KM,
        valueCallback: function (e) {
          return parseInt(e, 10);
        },
      }),
      era: ya({
        matchPatterns: YM,
        defaultMatchWidth: "wide",
        parsePatterns: qM,
        defaultParseWidth: "any",
      }),
      quarter: ya({
        matchPatterns: ZM,
        defaultMatchWidth: "wide",
        parsePatterns: JM,
        defaultParseWidth: "any",
        valueCallback: function (e) {
          return e + 1;
        },
      }),
      month: ya({
        matchPatterns: QM,
        defaultMatchWidth: "wide",
        parsePatterns: e3,
        defaultParseWidth: "any",
      }),
      day: ya({
        matchPatterns: t3,
        defaultMatchWidth: "wide",
        parsePatterns: n3,
        defaultParseWidth: "any",
      }),
      dayPeriod: ya({
        matchPatterns: r3,
        defaultMatchWidth: "any",
        parsePatterns: i3,
        defaultParseWidth: "any",
      }),
    };
  const s3 = o3;
  var a3 = {
    code: "en-US",
    formatDistance: AM,
    formatLong: LM,
    formatRelative: zM,
    localize: GM,
    match: s3,
    options: { weekStartsOn: 0, firstWeekContainsDate: 1 },
  };
  const l3 = a3,
    c3 = { name: "en-US", locale: l3 },
    u3 = c3;
  function Xu(t) {
    const { mergedLocaleRef: e, mergedDateLocaleRef: n } = Ve(ri, null) || {},
      r = ce(() => {
        var o, s;
        return (s =
          (o = e == null ? void 0 : e.value) === null || o === void 0
            ? void 0
            : o[t]) !== null && s !== void 0
          ? s
          : wM[t];
      });
    return {
      dateLocaleRef: ce(() => {
        var o;
        return (o = n == null ? void 0 : n.value) !== null && o !== void 0
          ? o
          : u3;
      }),
      localeRef: r,
    };
  }
  function Ko(t, e, n) {
    if (!e) return;
    const r = Uo(),
      i = Ve(ri, null),
      o = () => {
        const s = n.value;
        e.mount({
          id: s === void 0 ? t : s + t,
          head: !0,
          anchorMetaName: al,
          props: { bPrefix: s ? `.${s}-` : void 0 },
          ssr: r,
        }),
          (i != null && i.preflightStyleDisabled) ||
            Rx.mount({ id: "n-global", head: !0, anchorMetaName: al, ssr: r });
      };
    r ? o() : Ho(o);
  }
  function jt(t, e, n, r) {
    var i;
    n || jo("useThemeClass", "cssVarsRef is not passed");
    const o =
        (i = Ve(ri, null)) === null || i === void 0
          ? void 0
          : i.mergedThemeHashRef,
      s = U(""),
      a = Uo();
    let l;
    const c = `__${t}`,
      u = () => {
        let d = c;
        const h = e ? e.value : void 0,
          g = o == null ? void 0 : o.value;
        g && (d += "-" + g), h && (d += "-" + h);
        const { themeOverrides: f, builtinThemeOverrides: p } = r;
        f && (d += "-" + nl(JSON.stringify(f))),
          p && (d += "-" + nl(JSON.stringify(p))),
          (s.value = d),
          (l = () => {
            const b = n.value;
            let m = "";
            for (const _ in b) m += `${_}: ${b[_]};`;
            q(`.${d}`, m).mount({ id: d, ssr: a }), (l = void 0);
          });
      };
    return (
      or(() => {
        u();
      }),
      {
        themeClass: s,
        onRender: () => {
          l == null || l();
        },
      }
    );
  }
  function Cr(t, e, n) {
    if (!e) return;
    const r = Uo(),
      i = ce(() => {
        const { value: s } = e;
        if (!s) return;
        const a = s[t];
        if (a) return a;
      }),
      o = () => {
        or(() => {
          const { value: s } = n,
            a = `${s}${t}Rtl`;
          if (PT(a, r)) return;
          const { value: l } = i;
          l &&
            l.style.mount({
              id: a,
              head: !0,
              anchorMetaName: al,
              props: { bPrefix: s ? `.${s}-` : void 0 },
              ssr: r,
            });
        });
      };
    return r ? o() : Ho(o), i;
  }
  const Lg = $e({
    name: "Add",
    render() {
      return C(
        "svg",
        {
          width: "512",
          height: "512",
          viewBox: "0 0 512 512",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C("path", {
          d: "M256 112V400M400 256H112",
          stroke: "currentColor",
          "stroke-width": "32",
          "stroke-linecap": "round",
          "stroke-linejoin": "round",
        })
      );
    },
  });
  function Mn(t, e) {
    return $e({
      name: Jk(t),
      setup() {
        var n;
        const r =
          (n = Ve(ri, null)) === null || n === void 0
            ? void 0
            : n.mergedIconsRef;
        return () => {
          var i;
          const o =
            (i = r == null ? void 0 : r.value) === null || i === void 0
              ? void 0
              : i[t];
          return o ? o() : e;
        };
      },
    });
  }
  const d3 = Mn(
      "attach",
      C(
        "svg",
        {
          viewBox: "0 0 16 16",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          {
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd",
          },
          C(
            "g",
            { fill: "currentColor", "fill-rule": "nonzero" },
            C("path", {
              d: "M3.25735931,8.70710678 L7.85355339,4.1109127 C8.82986412,3.13460197 10.4127766,3.13460197 11.3890873,4.1109127 C12.365398,5.08722343 12.365398,6.67013588 11.3890873,7.64644661 L6.08578644,12.9497475 C5.69526215,13.3402718 5.06209717,13.3402718 4.67157288,12.9497475 C4.28104858,12.5592232 4.28104858,11.9260582 4.67157288,11.5355339 L9.97487373,6.23223305 C10.1701359,6.0369709 10.1701359,5.72038841 9.97487373,5.52512627 C9.77961159,5.32986412 9.4630291,5.32986412 9.26776695,5.52512627 L3.96446609,10.8284271 C3.18341751,11.6094757 3.18341751,12.8758057 3.96446609,13.6568542 C4.74551468,14.4379028 6.01184464,14.4379028 6.79289322,13.6568542 L12.0961941,8.35355339 C13.4630291,6.98671837 13.4630291,4.77064094 12.0961941,3.40380592 C10.7293591,2.0369709 8.51328163,2.0369709 7.14644661,3.40380592 L2.55025253,8 C2.35499039,8.19526215 2.35499039,8.51184464 2.55025253,8.70710678 C2.74551468,8.90236893 3.06209717,8.90236893 3.25735931,8.70710678 Z",
            })
          )
        )
      )
    ),
    h3 = $e({
      name: "Checkmark",
      render() {
        return C(
          "svg",
          { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 16 16" },
          C(
            "g",
            { fill: "none" },
            C("path", {
              d: "M14.046 3.486a.75.75 0 0 1-.032 1.06l-7.93 7.474a.85.85 0 0 1-1.188-.022l-2.68-2.72a.75.75 0 1 1 1.068-1.053l2.234 2.267l7.468-7.038a.75.75 0 0 1 1.06.032z",
              fill: "currentColor",
            })
          )
        );
      },
    }),
    f3 = Mn(
      "close",
      C(
        "svg",
        {
          viewBox: "0 0 12 12",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
          "aria-hidden": !0,
        },
        C(
          "g",
          {
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd",
          },
          C(
            "g",
            { fill: "currentColor", "fill-rule": "nonzero" },
            C("path", {
              d: "M2.08859116,2.2156945 L2.14644661,2.14644661 C2.32001296,1.97288026 2.58943736,1.95359511 2.7843055,2.08859116 L2.85355339,2.14644661 L6,5.293 L9.14644661,2.14644661 C9.34170876,1.95118446 9.65829124,1.95118446 9.85355339,2.14644661 C10.0488155,2.34170876 10.0488155,2.65829124 9.85355339,2.85355339 L6.707,6 L9.85355339,9.14644661 C10.0271197,9.32001296 10.0464049,9.58943736 9.91140884,9.7843055 L9.85355339,9.85355339 C9.67998704,10.0271197 9.41056264,10.0464049 9.2156945,9.91140884 L9.14644661,9.85355339 L6,6.707 L2.85355339,9.85355339 C2.65829124,10.0488155 2.34170876,10.0488155 2.14644661,9.85355339 C1.95118446,9.65829124 1.95118446,9.34170876 2.14644661,9.14644661 L5.293,6 L2.14644661,2.85355339 C1.97288026,2.67998704 1.95359511,2.41056264 2.08859116,2.2156945 L2.14644661,2.14644661 L2.08859116,2.2156945 Z",
            })
          )
        )
      )
    ),
    Tx = $e({
      name: "Eye",
      render() {
        return C(
          "svg",
          { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512" },
          C("path", {
            d: "M255.66 112c-77.94 0-157.89 45.11-220.83 135.33a16 16 0 0 0-.27 17.77C82.92 340.8 161.8 400 255.66 400c92.84 0 173.34-59.38 221.79-135.25a16.14 16.14 0 0 0 0-17.47C428.89 172.28 347.8 112 255.66 112z",
            fill: "none",
            stroke: "currentColor",
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
            "stroke-width": "32",
          }),
          C("circle", {
            cx: "256",
            cy: "256",
            r: "80",
            fill: "none",
            stroke: "currentColor",
            "stroke-miterlimit": "10",
            "stroke-width": "32",
          })
        );
      },
    }),
    g3 = $e({
      name: "EyeOff",
      render() {
        return C(
          "svg",
          { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512" },
          C("path", {
            d: "M432 448a15.92 15.92 0 0 1-11.31-4.69l-352-352a16 16 0 0 1 22.62-22.62l352 352A16 16 0 0 1 432 448z",
            fill: "currentColor",
          }),
          C("path", {
            d: "M255.66 384c-41.49 0-81.5-12.28-118.92-36.5c-34.07-22-64.74-53.51-88.7-91v-.08c19.94-28.57 41.78-52.73 65.24-72.21a2 2 0 0 0 .14-2.94L93.5 161.38a2 2 0 0 0-2.71-.12c-24.92 21-48.05 46.76-69.08 76.92a31.92 31.92 0 0 0-.64 35.54c26.41 41.33 60.4 76.14 98.28 100.65C162 402 207.9 416 255.66 416a239.13 239.13 0 0 0 75.8-12.58a2 2 0 0 0 .77-3.31l-21.58-21.58a4 4 0 0 0-3.83-1a204.8 204.8 0 0 1-51.16 6.47z",
            fill: "currentColor",
          }),
          C("path", {
            d: "M490.84 238.6c-26.46-40.92-60.79-75.68-99.27-100.53C349 110.55 302 96 255.66 96a227.34 227.34 0 0 0-74.89 12.83a2 2 0 0 0-.75 3.31l21.55 21.55a4 4 0 0 0 3.88 1a192.82 192.82 0 0 1 50.21-6.69c40.69 0 80.58 12.43 118.55 37c34.71 22.4 65.74 53.88 89.76 91a.13.13 0 0 1 0 .16a310.72 310.72 0 0 1-64.12 72.73a2 2 0 0 0-.15 2.95l19.9 19.89a2 2 0 0 0 2.7.13a343.49 343.49 0 0 0 68.64-78.48a32.2 32.2 0 0 0-.1-34.78z",
            fill: "currentColor",
          }),
          C("path", {
            d: "M256 160a95.88 95.88 0 0 0-21.37 2.4a2 2 0 0 0-1 3.38l112.59 112.56a2 2 0 0 0 3.38-1A96 96 0 0 0 256 160z",
            fill: "currentColor",
          }),
          C("path", {
            d: "M165.78 233.66a2 2 0 0 0-3.38 1a96 96 0 0 0 115 115a2 2 0 0 0 1-3.38z",
            fill: "currentColor",
          })
        );
      },
    }),
    p3 = Mn(
      "trash",
      C(
        "svg",
        { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512" },
        C("path", {
          d: "M432,144,403.33,419.74A32,32,0,0,1,371.55,448H140.46a32,32,0,0,1-31.78-28.26L80,144",
          style:
            "fill: none; stroke: currentcolor; stroke-linecap: round; stroke-linejoin: round; stroke-width: 32px;",
        }),
        C("rect", {
          x: "32",
          y: "64",
          width: "448",
          height: "80",
          rx: "16",
          ry: "16",
          style:
            "fill: none; stroke: currentcolor; stroke-linecap: round; stroke-linejoin: round; stroke-width: 32px;",
        }),
        C("line", {
          x1: "312",
          y1: "240",
          x2: "200",
          y2: "352",
          style:
            "fill: none; stroke: currentcolor; stroke-linecap: round; stroke-linejoin: round; stroke-width: 32px;",
        }),
        C("line", {
          x1: "312",
          y1: "352",
          x2: "200",
          y2: "240",
          style:
            "fill: none; stroke: currentcolor; stroke-linecap: round; stroke-linejoin: round; stroke-width: 32px;",
        })
      )
    ),
    m3 = Mn(
      "download",
      C(
        "svg",
        {
          viewBox: "0 0 16 16",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          {
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd",
          },
          C(
            "g",
            { fill: "currentColor", "fill-rule": "nonzero" },
            C("path", {
              d: "M3.5,13 L12.5,13 C12.7761424,13 13,13.2238576 13,13.5 C13,13.7454599 12.8231248,13.9496084 12.5898756,13.9919443 L12.5,14 L3.5,14 C3.22385763,14 3,13.7761424 3,13.5 C3,13.2545401 3.17687516,13.0503916 3.41012437,13.0080557 L3.5,13 L12.5,13 L3.5,13 Z M7.91012437,1.00805567 L8,1 C8.24545989,1 8.44960837,1.17687516 8.49194433,1.41012437 L8.5,1.5 L8.5,10.292 L11.1819805,7.6109127 C11.3555469,7.43734635 11.6249713,7.4180612 11.8198394,7.55305725 L11.8890873,7.6109127 C12.0626536,7.78447906 12.0819388,8.05390346 11.9469427,8.2487716 L11.8890873,8.31801948 L8.35355339,11.8535534 C8.17998704,12.0271197 7.91056264,12.0464049 7.7156945,11.9114088 L7.64644661,11.8535534 L4.1109127,8.31801948 C3.91565056,8.12275734 3.91565056,7.80617485 4.1109127,7.6109127 C4.28447906,7.43734635 4.55390346,7.4180612 4.7487716,7.55305725 L4.81801948,7.6109127 L7.5,10.292 L7.5,1.5 C7.5,1.25454011 7.67687516,1.05039163 7.91012437,1.00805567 L8,1 L7.91012437,1.00805567 Z",
            })
          )
        )
      )
    ),
    v3 = $e({
      name: "Empty",
      render() {
        return C(
          "svg",
          {
            viewBox: "0 0 28 28",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
          },
          C("path", {
            d: "M26 7.5C26 11.0899 23.0899 14 19.5 14C15.9101 14 13 11.0899 13 7.5C13 3.91015 15.9101 1 19.5 1C23.0899 1 26 3.91015 26 7.5ZM16.8536 4.14645C16.6583 3.95118 16.3417 3.95118 16.1464 4.14645C15.9512 4.34171 15.9512 4.65829 16.1464 4.85355L18.7929 7.5L16.1464 10.1464C15.9512 10.3417 15.9512 10.6583 16.1464 10.8536C16.3417 11.0488 16.6583 11.0488 16.8536 10.8536L19.5 8.20711L22.1464 10.8536C22.3417 11.0488 22.6583 11.0488 22.8536 10.8536C23.0488 10.6583 23.0488 10.3417 22.8536 10.1464L20.2071 7.5L22.8536 4.85355C23.0488 4.65829 23.0488 4.34171 22.8536 4.14645C22.6583 3.95118 22.3417 3.95118 22.1464 4.14645L19.5 6.79289L16.8536 4.14645Z",
            fill: "currentColor",
          }),
          C("path", {
            d: "M25 22.75V12.5991C24.5572 13.0765 24.053 13.4961 23.5 13.8454V16H17.5L17.3982 16.0068C17.0322 16.0565 16.75 16.3703 16.75 16.75C16.75 18.2688 15.5188 19.5 14 19.5C12.4812 19.5 11.25 18.2688 11.25 16.75L11.2432 16.6482C11.1935 16.2822 10.8797 16 10.5 16H4.5V7.25C4.5 6.2835 5.2835 5.5 6.25 5.5H12.2696C12.4146 4.97463 12.6153 4.47237 12.865 4H6.25C4.45507 4 3 5.45507 3 7.25V22.75C3 24.5449 4.45507 26 6.25 26H21.75C23.5449 26 25 24.5449 25 22.75ZM4.5 22.75V17.5H9.81597L9.85751 17.7041C10.2905 19.5919 11.9808 21 14 21L14.215 20.9947C16.2095 20.8953 17.842 19.4209 18.184 17.5H23.5V22.75C23.5 23.7165 22.7165 24.5 21.75 24.5H6.25C5.2835 24.5 4.5 23.7165 4.5 22.75Z",
            fill: "currentColor",
          })
        );
      },
    }),
    kl = Mn(
      "error",
      C(
        "svg",
        {
          viewBox: "0 0 48 48",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          { stroke: "none", "stroke-width": "1", "fill-rule": "evenodd" },
          C(
            "g",
            { "fill-rule": "nonzero" },
            C("path", {
              d: "M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M17.8838835,16.1161165 L17.7823881,16.0249942 C17.3266086,15.6583353 16.6733914,15.6583353 16.2176119,16.0249942 L16.1161165,16.1161165 L16.0249942,16.2176119 C15.6583353,16.6733914 15.6583353,17.3266086 16.0249942,17.7823881 L16.1161165,17.8838835 L22.233,24 L16.1161165,30.1161165 L16.0249942,30.2176119 C15.6583353,30.6733914 15.6583353,31.3266086 16.0249942,31.7823881 L16.1161165,31.8838835 L16.2176119,31.9750058 C16.6733914,32.3416647 17.3266086,32.3416647 17.7823881,31.9750058 L17.8838835,31.8838835 L24,25.767 L30.1161165,31.8838835 L30.2176119,31.9750058 C30.6733914,32.3416647 31.3266086,32.3416647 31.7823881,31.9750058 L31.8838835,31.8838835 L31.9750058,31.7823881 C32.3416647,31.3266086 32.3416647,30.6733914 31.9750058,30.2176119 L31.8838835,30.1161165 L25.767,24 L31.8838835,17.8838835 L31.9750058,17.7823881 C32.3416647,17.3266086 32.3416647,16.6733914 31.9750058,16.2176119 L31.8838835,16.1161165 L31.7823881,16.0249942 C31.3266086,15.6583353 30.6733914,15.6583353 30.2176119,16.0249942 L30.1161165,16.1161165 L24,22.233 L17.8838835,16.1161165 L17.7823881,16.0249942 L17.8838835,16.1161165 Z",
            })
          )
        )
      )
    ),
    Ns = Mn(
      "info",
      C(
        "svg",
        {
          viewBox: "0 0 28 28",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          { stroke: "none", "stroke-width": "1", "fill-rule": "evenodd" },
          C(
            "g",
            { "fill-rule": "nonzero" },
            C("path", {
              d: "M14,2 C20.6274,2 26,7.37258 26,14 C26,20.6274 20.6274,26 14,26 C7.37258,26 2,20.6274 2,14 C2,7.37258 7.37258,2 14,2 Z M14,11 C13.4477,11 13,11.4477 13,12 L13,12 L13,20 C13,20.5523 13.4477,21 14,21 C14.5523,21 15,20.5523 15,20 L15,20 L15,12 C15,11.4477 14.5523,11 14,11 Z M14,6.75 C13.3096,6.75 12.75,7.30964 12.75,8 C12.75,8.69036 13.3096,9.25 14,9.25 C14.6904,9.25 15.25,8.69036 15.25,8 C15.25,7.30964 14.6904,6.75 14,6.75 Z",
            })
          )
        )
      )
    ),
    Il = Mn(
      "success",
      C(
        "svg",
        {
          viewBox: "0 0 48 48",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          { stroke: "none", "stroke-width": "1", "fill-rule": "evenodd" },
          C(
            "g",
            { "fill-rule": "nonzero" },
            C("path", {
              d: "M24,4 C35.045695,4 44,12.954305 44,24 C44,35.045695 35.045695,44 24,44 C12.954305,44 4,35.045695 4,24 C4,12.954305 12.954305,4 24,4 Z M32.6338835,17.6161165 C32.1782718,17.1605048 31.4584514,17.1301307 30.9676119,17.5249942 L30.8661165,17.6161165 L20.75,27.732233 L17.1338835,24.1161165 C16.6457281,23.6279612 15.8542719,23.6279612 15.3661165,24.1161165 C14.9105048,24.5717282 14.8801307,25.2915486 15.2749942,25.7823881 L15.3661165,25.8838835 L19.8661165,30.3838835 C20.3217282,30.8394952 21.0415486,30.8698693 21.5323881,30.4750058 L21.6338835,30.3838835 L32.6338835,19.3838835 C33.1220388,18.8957281 33.1220388,18.1042719 32.6338835,17.6161165 Z",
            })
          )
        )
      )
    ),
    Ol = Mn(
      "warning",
      C(
        "svg",
        {
          viewBox: "0 0 24 24",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          { stroke: "none", "stroke-width": "1", "fill-rule": "evenodd" },
          C(
            "g",
            { "fill-rule": "nonzero" },
            C("path", {
              d: "M12,2 C17.523,2 22,6.478 22,12 C22,17.522 17.523,22 12,22 C6.477,22 2,17.522 2,12 C2,6.478 6.477,2 12,2 Z M12.0018002,15.0037242 C11.450254,15.0037242 11.0031376,15.4508407 11.0031376,16.0023869 C11.0031376,16.553933 11.450254,17.0010495 12.0018002,17.0010495 C12.5533463,17.0010495 13.0004628,16.553933 13.0004628,16.0023869 C13.0004628,15.4508407 12.5533463,15.0037242 12.0018002,15.0037242 Z M11.99964,7 C11.4868042,7.00018474 11.0642719,7.38637706 11.0066858,7.8837365 L11,8.00036004 L11.0018003,13.0012393 L11.00857,13.117858 C11.0665141,13.6151758 11.4893244,14.0010638 12.0021602,14.0008793 C12.514996,14.0006946 12.9375283,13.6145023 12.9951144,13.1171428 L13.0018002,13.0005193 L13,7.99964009 L12.9932303,7.8830214 C12.9352861,7.38570354 12.5124758,6.99981552 11.99964,7 Z",
            })
          )
        )
      )
    ),
    b3 = Mn(
      "cancel",
      C(
        "svg",
        {
          viewBox: "0 0 16 16",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          {
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd",
          },
          C(
            "g",
            { fill: "currentColor", "fill-rule": "nonzero" },
            C("path", {
              d: "M2.58859116,2.7156945 L2.64644661,2.64644661 C2.82001296,2.47288026 3.08943736,2.45359511 3.2843055,2.58859116 L3.35355339,2.64644661 L8,7.293 L12.6464466,2.64644661 C12.8417088,2.45118446 13.1582912,2.45118446 13.3535534,2.64644661 C13.5488155,2.84170876 13.5488155,3.15829124 13.3535534,3.35355339 L8.707,8 L13.3535534,12.6464466 C13.5271197,12.820013 13.5464049,13.0894374 13.4114088,13.2843055 L13.3535534,13.3535534 C13.179987,13.5271197 12.9105626,13.5464049 12.7156945,13.4114088 L12.6464466,13.3535534 L8,8.707 L3.35355339,13.3535534 C3.15829124,13.5488155 2.84170876,13.5488155 2.64644661,13.3535534 C2.45118446,13.1582912 2.45118446,12.8417088 2.64644661,12.6464466 L7.293,8 L2.64644661,3.35355339 C2.47288026,3.17998704 2.45359511,2.91056264 2.58859116,2.7156945 L2.64644661,2.64644661 L2.58859116,2.7156945 Z",
            })
          )
        )
      )
    ),
    y3 = $e({
      name: "ChevronDown",
      render() {
        return C(
          "svg",
          {
            viewBox: "0 0 16 16",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
          },
          C("path", {
            d: "M3.14645 5.64645C3.34171 5.45118 3.65829 5.45118 3.85355 5.64645L8 9.79289L12.1464 5.64645C12.3417 5.45118 12.6583 5.45118 12.8536 5.64645C13.0488 5.84171 13.0488 6.15829 12.8536 6.35355L8.35355 10.8536C8.15829 11.0488 7.84171 11.0488 7.64645 10.8536L3.14645 6.35355C2.95118 6.15829 2.95118 5.84171 3.14645 5.64645Z",
            fill: "currentColor",
          })
        );
      },
    }),
    x3 = Mn(
      "clear",
      C(
        "svg",
        {
          viewBox: "0 0 16 16",
          version: "1.1",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C(
          "g",
          {
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd",
          },
          C(
            "g",
            { fill: "currentColor", "fill-rule": "nonzero" },
            C("path", {
              d: "M8,2 C11.3137085,2 14,4.6862915 14,8 C14,11.3137085 11.3137085,14 8,14 C4.6862915,14 2,11.3137085 2,8 C2,4.6862915 4.6862915,2 8,2 Z M6.5343055,5.83859116 C6.33943736,5.70359511 6.07001296,5.72288026 5.89644661,5.89644661 L5.89644661,5.89644661 L5.83859116,5.9656945 C5.70359511,6.16056264 5.72288026,6.42998704 5.89644661,6.60355339 L5.89644661,6.60355339 L7.293,8 L5.89644661,9.39644661 L5.83859116,9.4656945 C5.70359511,9.66056264 5.72288026,9.92998704 5.89644661,10.1035534 L5.89644661,10.1035534 L5.9656945,10.1614088 C6.16056264,10.2964049 6.42998704,10.2771197 6.60355339,10.1035534 L6.60355339,10.1035534 L8,8.707 L9.39644661,10.1035534 L9.4656945,10.1614088 C9.66056264,10.2964049 9.92998704,10.2771197 10.1035534,10.1035534 L10.1035534,10.1035534 L10.1614088,10.0343055 C10.2964049,9.83943736 10.2771197,9.57001296 10.1035534,9.39644661 L10.1035534,9.39644661 L8.707,8 L10.1035534,6.60355339 L10.1614088,6.5343055 C10.2964049,6.33943736 10.2771197,6.07001296 10.1035534,5.89644661 L10.1035534,5.89644661 L10.0343055,5.83859116 C9.83943736,5.70359511 9.57001296,5.72288026 9.39644661,5.89644661 L9.39644661,5.89644661 L8,7.293 L6.60355339,5.89644661 Z",
            })
          )
        )
      )
    ),
    C3 = Mn(
      "retry",
      C(
        "svg",
        { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512" },
        C("path", {
          d: "M320,146s24.36-12-64-12A160,160,0,1,0,416,294",
          style:
            "fill: none; stroke: currentcolor; stroke-linecap: round; stroke-miterlimit: 10; stroke-width: 32px;",
        }),
        C("polyline", {
          points: "256 58 336 138 256 218",
          style:
            "fill: none; stroke: currentcolor; stroke-linecap: round; stroke-linejoin: round; stroke-width: 32px;",
        })
      )
    ),
    _3 = Mn(
      "rotateClockwise",
      C(
        "svg",
        {
          viewBox: "0 0 20 20",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C("path", {
          d: "M3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10C17 12.7916 15.3658 15.2026 13 16.3265V14.5C13 14.2239 12.7761 14 12.5 14C12.2239 14 12 14.2239 12 14.5V17.5C12 17.7761 12.2239 18 12.5 18H15.5C15.7761 18 16 17.7761 16 17.5C16 17.2239 15.7761 17 15.5 17H13.8758C16.3346 15.6357 18 13.0128 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 10.2761 2.22386 10.5 2.5 10.5C2.77614 10.5 3 10.2761 3 10Z",
          fill: "currentColor",
        }),
        C("path", {
          d: "M10 12C11.1046 12 12 11.1046 12 10C12 8.89543 11.1046 8 10 8C8.89543 8 8 8.89543 8 10C8 11.1046 8.89543 12 10 12ZM10 11C9.44772 11 9 10.5523 9 10C9 9.44772 9.44772 9 10 9C10.5523 9 11 9.44772 11 10C11 10.5523 10.5523 11 10 11Z",
          fill: "currentColor",
        })
      )
    ),
    w3 = Mn(
      "rotateClockwise",
      C(
        "svg",
        {
          viewBox: "0 0 20 20",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C("path", {
          d: "M17 10C17 6.13401 13.866 3 10 3C6.13401 3 3 6.13401 3 10C3 12.7916 4.63419 15.2026 7 16.3265V14.5C7 14.2239 7.22386 14 7.5 14C7.77614 14 8 14.2239 8 14.5V17.5C8 17.7761 7.77614 18 7.5 18H4.5C4.22386 18 4 17.7761 4 17.5C4 17.2239 4.22386 17 4.5 17H6.12422C3.66539 15.6357 2 13.0128 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10C18 10.2761 17.7761 10.5 17.5 10.5C17.2239 10.5 17 10.2761 17 10Z",
          fill: "currentColor",
        }),
        C("path", {
          d: "M10 12C8.89543 12 8 11.1046 8 10C8 8.89543 8.89543 8 10 8C11.1046 8 12 8.89543 12 10C12 11.1046 11.1046 12 10 12ZM10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z",
          fill: "currentColor",
        })
      )
    ),
    S3 = Mn(
      "zoomIn",
      C(
        "svg",
        {
          viewBox: "0 0 20 20",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C("path", {
          d: "M11.5 8.5C11.5 8.22386 11.2761 8 11 8H9V6C9 5.72386 8.77614 5.5 8.5 5.5C8.22386 5.5 8 5.72386 8 6V8H6C5.72386 8 5.5 8.22386 5.5 8.5C5.5 8.77614 5.72386 9 6 9H8V11C8 11.2761 8.22386 11.5 8.5 11.5C8.77614 11.5 9 11.2761 9 11V9H11C11.2761 9 11.5 8.77614 11.5 8.5Z",
          fill: "currentColor",
        }),
        C("path", {
          d: "M8.5 3C11.5376 3 14 5.46243 14 8.5C14 9.83879 13.5217 11.0659 12.7266 12.0196L16.8536 16.1464C17.0488 16.3417 17.0488 16.6583 16.8536 16.8536C16.68 17.0271 16.4106 17.0464 16.2157 16.9114L16.1464 16.8536L12.0196 12.7266C11.0659 13.5217 9.83879 14 8.5 14C5.46243 14 3 11.5376 3 8.5C3 5.46243 5.46243 3 8.5 3ZM8.5 4C6.01472 4 4 6.01472 4 8.5C4 10.9853 6.01472 13 8.5 13C10.9853 13 13 10.9853 13 8.5C13 6.01472 10.9853 4 8.5 4Z",
          fill: "currentColor",
        })
      )
    ),
    E3 = Mn(
      "zoomOut",
      C(
        "svg",
        {
          viewBox: "0 0 20 20",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
        },
        C("path", {
          d: "M11 8C11.2761 8 11.5 8.22386 11.5 8.5C11.5 8.77614 11.2761 9 11 9H6C5.72386 9 5.5 8.77614 5.5 8.5C5.5 8.22386 5.72386 8 6 8H11Z",
          fill: "currentColor",
        }),
        C("path", {
          d: "M14 8.5C14 5.46243 11.5376 3 8.5 3C5.46243 3 3 5.46243 3 8.5C3 11.5376 5.46243 14 8.5 14C9.83879 14 11.0659 13.5217 12.0196 12.7266L16.1464 16.8536L16.2157 16.9114C16.4106 17.0464 16.68 17.0271 16.8536 16.8536C17.0488 16.6583 17.0488 16.3417 16.8536 16.1464L12.7266 12.0196C13.5217 11.0659 14 9.83879 14 8.5ZM4 8.5C4 6.01472 6.01472 4 8.5 4C10.9853 4 13 6.01472 13 8.5C13 10.9853 10.9853 13 8.5 13C6.01472 13 4 10.9853 4 8.5Z",
          fill: "currentColor",
        })
      )
    ),
    R3 = $e({
      name: "ResizeSmall",
      render() {
        return C(
          "svg",
          { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 20 20" },
          C(
            "g",
            { fill: "none" },
            C("path", {
              d: "M5.5 4A1.5 1.5 0 0 0 4 5.5v1a.5.5 0 0 1-1 0v-1A2.5 2.5 0 0 1 5.5 3h1a.5.5 0 0 1 0 1h-1zM16 5.5A1.5 1.5 0 0 0 14.5 4h-1a.5.5 0 0 1 0-1h1A2.5 2.5 0 0 1 17 5.5v1a.5.5 0 0 1-1 0v-1zm0 9a1.5 1.5 0 0 1-1.5 1.5h-1a.5.5 0 0 0 0 1h1a2.5 2.5 0 0 0 2.5-2.5v-1a.5.5 0 0 0-1 0v1zm-12 0A1.5 1.5 0 0 0 5.5 16h1.25a.5.5 0 0 1 0 1H5.5A2.5 2.5 0 0 1 3 14.5v-1.25a.5.5 0 0 1 1 0v1.25zM8.5 7A1.5 1.5 0 0 0 7 8.5v3A1.5 1.5 0 0 0 8.5 13h3a1.5 1.5 0 0 0 1.5-1.5v-3A1.5 1.5 0 0 0 11.5 7h-3zM8 8.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-3z",
              fill: "currentColor",
            })
          )
        );
      },
    }),
    Yo = $e({
      name: "BaseIconSwitchTransition",
      setup(t, { slots: e }) {
        const n = Qi();
        return () =>
          C(vn, { name: "icon-switch-transition", appear: n.value }, e);
      },
    }),
    Ku = $e({
      name: "FadeInExpandTransition",
      props: {
        appear: Boolean,
        group: Boolean,
        mode: String,
        onLeave: Function,
        onAfterLeave: Function,
        onAfterEnter: Function,
        width: Boolean,
        reverse: Boolean,
      },
      setup(t, { slots: e }) {
        function n(a) {
          t.width
            ? (a.style.maxWidth = `${a.offsetWidth}px`)
            : (a.style.maxHeight = `${a.offsetHeight}px`),
            a.offsetWidth;
        }
        function r(a) {
          t.width ? (a.style.maxWidth = "0") : (a.style.maxHeight = "0"),
            a.offsetWidth;
          const { onLeave: l } = t;
          l && l();
        }
        function i(a) {
          t.width ? (a.style.maxWidth = "") : (a.style.maxHeight = "");
          const { onAfterLeave: l } = t;
          l && l();
        }
        function o(a) {
          if (((a.style.transition = "none"), t.width)) {
            const l = a.offsetWidth;
            (a.style.maxWidth = "0"),
              a.offsetWidth,
              (a.style.transition = ""),
              (a.style.maxWidth = `${l}px`);
          } else if (t.reverse)
            (a.style.maxHeight = `${a.offsetHeight}px`),
              a.offsetHeight,
              (a.style.transition = ""),
              (a.style.maxHeight = "0");
          else {
            const l = a.offsetHeight;
            (a.style.maxHeight = "0"),
              a.offsetWidth,
              (a.style.transition = ""),
              (a.style.maxHeight = `${l}px`);
          }
          a.offsetWidth;
        }
        function s(a) {
          var l;
          t.width
            ? (a.style.maxWidth = "")
            : t.reverse || (a.style.maxHeight = ""),
            (l = t.onAfterEnter) === null || l === void 0 || l.call(t);
        }
        return () => {
          const { group: a, width: l, appear: c, mode: u } = t,
            d = a ? Y1 : vn,
            h = {
              name: l
                ? "fade-in-width-expand-transition"
                : "fade-in-height-expand-transition",
              appear: c,
              onEnter: o,
              onAfterEnter: s,
              onBeforeLeave: n,
              onLeave: r,
              onAfterLeave: i,
            };
          return a || (h.mode = u), C(d, h, e);
        };
      },
    }),
    T3 = M(
      "base-icon",
      `
 height: 1em;
 width: 1em;
 line-height: 1em;
 text-align: center;
 display: inline-block;
 position: relative;
 fill: currentColor;
 transform: translateZ(0);
`,
      [
        q(
          "svg",
          `
 height: 1em;
 width: 1em;
 `
        ),
      ]
    ),
    ht = $e({
      name: "BaseIcon",
      props: {
        role: String,
        ariaLabel: String,
        ariaDisabled: { type: Boolean, default: void 0 },
        ariaHidden: { type: Boolean, default: void 0 },
        clsPrefix: { type: String, required: !0 },
        onClick: Function,
        onMousedown: Function,
        onMouseup: Function,
      },
      setup(t) {
        Ko("-base-icon", T3, We(t, "clsPrefix"));
      },
      render() {
        return C(
          "i",
          {
            class: `${this.clsPrefix}-base-icon`,
            onClick: this.onClick,
            onMousedown: this.onMousedown,
            onMouseup: this.onMouseup,
            role: this.role,
            "aria-label": this.ariaLabel,
            "aria-hidden": this.ariaHidden,
            "aria-disabled": this.ariaDisabled,
          },
          this.$slots
        );
      },
    }),
    P3 = M(
      "base-close",
      `
 display: flex;
 align-items: center;
 justify-content: center;
 cursor: pointer;
 background-color: transparent;
 color: var(--n-close-icon-color);
 border-radius: var(--n-close-border-radius);
 height: var(--n-close-size);
 width: var(--n-close-size);
 font-size: var(--n-close-icon-size);
 outline: none;
 border: none;
 position: relative;
 padding: 0;
`,
      [
        te(
          "absolute",
          `
 height: var(--n-close-icon-size);
 width: var(--n-close-icon-size);
 `
        ),
        q(
          "&::before",
          `
 content: "";
 position: absolute;
 width: var(--n-close-size);
 height: var(--n-close-size);
 left: 50%;
 top: 50%;
 transform: translateY(-50%) translateX(-50%);
 transition: inherit;
 border-radius: inherit;
 `
        ),
        Zt("disabled", [
          q(
            "&:hover",
            `
 color: var(--n-close-icon-color-hover);
 `
          ),
          q(
            "&:hover::before",
            `
 background-color: var(--n-close-color-hover);
 `
          ),
          q(
            "&:focus::before",
            `
 background-color: var(--n-close-color-hover);
 `
          ),
          q(
            "&:active",
            `
 color: var(--n-close-icon-color-pressed);
 `
          ),
          q(
            "&:active::before",
            `
 background-color: var(--n-close-color-pressed);
 `
          ),
        ]),
        te(
          "disabled",
          `
 cursor: not-allowed;
 color: var(--n-close-icon-color-disabled);
 background-color: transparent;
 `
        ),
        te("round", [
          q(
            "&::before",
            `
 border-radius: 50%;
 `
          ),
        ]),
      ]
    ),
    ta = $e({
      name: "BaseClose",
      props: {
        isButtonTag: { type: Boolean, default: !0 },
        clsPrefix: { type: String, required: !0 },
        disabled: { type: Boolean, default: void 0 },
        focusable: { type: Boolean, default: !0 },
        round: Boolean,
        onClick: Function,
        absolute: Boolean,
      },
      setup(t) {
        return (
          Ko("-base-close", P3, We(t, "clsPrefix")),
          () => {
            const {
              clsPrefix: e,
              disabled: n,
              absolute: r,
              round: i,
              isButtonTag: o,
            } = t;
            return C(
              o ? "button" : "div",
              {
                type: o ? "button" : void 0,
                tabindex: n || !t.focusable ? -1 : 0,
                "aria-disabled": n,
                "aria-label": "close",
                role: o ? void 0 : "button",
                disabled: n,
                class: [
                  `${e}-base-close`,
                  r && `${e}-base-close--absolute`,
                  n && `${e}-base-close--disabled`,
                  i && `${e}-base-close--round`,
                ],
                onMousedown: (a) => {
                  t.focusable || a.preventDefault();
                },
                onClick: t.onClick,
              },
              C(ht, { clsPrefix: e }, { default: () => C(f3, null) })
            );
          }
        );
      },
    }),
    A3 = $e({
      props: { onFocus: Function, onBlur: Function },
      setup(t) {
        return () =>
          C("div", {
            style: "width: 0; height: 0",
            tabindex: 0,
            onFocus: t.onFocus,
            onBlur: t.onBlur,
          });
      },
    }),
    { cubicBezierEaseInOut: k3 } = to;
  function ii({
    originalTransform: t = "",
    left: e = 0,
    top: n = 0,
    transition: r = `all .3s ${k3} !important`,
  } = {}) {
    return [
      q(
        "&.icon-switch-transition-enter-from, &.icon-switch-transition-leave-to",
        { transform: t + " scale(0.75)", left: e, top: n, opacity: 0 }
      ),
      q(
        "&.icon-switch-transition-enter-to, &.icon-switch-transition-leave-from",
        { transform: `scale(1) ${t}`, left: e, top: n, opacity: 1 }
      ),
      q(
        "&.icon-switch-transition-enter-active, &.icon-switch-transition-leave-active",
        {
          transformOrigin: "center",
          position: "absolute",
          left: e,
          top: n,
          transition: r,
        }
      ),
    ];
  }
  const I3 = q([
      q(
        "@keyframes rotator",
        `
 0% {
 -webkit-transform: rotate(0deg);
 transform: rotate(0deg);
 }
 100% {
 -webkit-transform: rotate(360deg);
 transform: rotate(360deg);
 }`
      ),
      M(
        "base-loading",
        `
 position: relative;
 line-height: 0;
 width: 1em;
 height: 1em;
 `,
        [
          ne(
            "transition-wrapper",
            `
 position: absolute;
 width: 100%;
 height: 100%;
 `,
            [ii()]
          ),
          ne(
            "placeholder",
            `
 position: absolute;
 left: 50%;
 top: 50%;
 transform: translateX(-50%) translateY(-50%);
 `,
            [
              ii({
                left: "50%",
                top: "50%",
                originalTransform: "translateX(-50%) translateY(-50%)",
              }),
            ]
          ),
          ne(
            "container",
            `
 animation: rotator 3s linear infinite both;
 `,
            [
              ne(
                "icon",
                `
 height: 1em;
 width: 1em;
 `
              ),
            ]
          ),
        ]
      ),
    ]),
    oh = "1.6s",
    O3 = {
      strokeWidth: { type: Number, default: 28 },
      stroke: { type: String, default: void 0 },
    },
    Ml = $e({
      name: "BaseLoading",
      props: Object.assign(
        {
          clsPrefix: { type: String, required: !0 },
          show: { type: Boolean, default: !0 },
          scale: { type: Number, default: 1 },
          radius: { type: Number, default: 100 },
        },
        O3
      ),
      setup(t) {
        Ko("-base-loading", I3, We(t, "clsPrefix"));
      },
      render() {
        const {
            clsPrefix: t,
            radius: e,
            strokeWidth: n,
            stroke: r,
            scale: i,
          } = this,
          o = e / i;
        return C(
          "div",
          { class: `${t}-base-loading`, role: "img", "aria-label": "loading" },
          C(Yo, null, {
            default: () =>
              this.show
                ? C(
                    "div",
                    {
                      key: "icon",
                      class: `${t}-base-loading__transition-wrapper`,
                    },
                    C(
                      "div",
                      { class: `${t}-base-loading__container` },
                      C(
                        "svg",
                        {
                          class: `${t}-base-loading__icon`,
                          viewBox: `0 0 ${2 * o} ${2 * o}`,
                          xmlns: "http://www.w3.org/2000/svg",
                          style: { color: r },
                        },
                        C(
                          "g",
                          null,
                          C("animateTransform", {
                            attributeName: "transform",
                            type: "rotate",
                            values: `0 ${o} ${o};270 ${o} ${o}`,
                            begin: "0s",
                            dur: oh,
                            fill: "freeze",
                            repeatCount: "indefinite",
                          }),
                          C(
                            "circle",
                            {
                              class: `${t}-base-loading__icon`,
                              fill: "none",
                              stroke: "currentColor",
                              "stroke-width": n,
                              "stroke-linecap": "round",
                              cx: o,
                              cy: o,
                              r: e - n / 2,
                              "stroke-dasharray": 5.67 * e,
                              "stroke-dashoffset": 18.48 * e,
                            },
                            C("animateTransform", {
                              attributeName: "transform",
                              type: "rotate",
                              values: `0 ${o} ${o};135 ${o} ${o};450 ${o} ${o}`,
                              begin: "0s",
                              dur: oh,
                              fill: "freeze",
                              repeatCount: "indefinite",
                            }),
                            C("animate", {
                              attributeName: "stroke-dashoffset",
                              values: `${5.67 * e};${1.42 * e};${5.67 * e}`,
                              begin: "0s",
                              dur: oh,
                              fill: "freeze",
                              repeatCount: "indefinite",
                            })
                          )
                        )
                      )
                    )
                  )
                : C(
                    "div",
                    {
                      key: "placeholder",
                      class: `${t}-base-loading__placeholder`,
                    },
                    this.$slots
                  ),
          })
        );
      },
    });
  function rv(t) {
    return Array.isArray(t) ? t : [t];
  }
  const uf = { STOP: "STOP" };
  function Px(t, e) {
    const n = e(t);
    t.children !== void 0 &&
      n !== uf.STOP &&
      t.children.forEach((r) => Px(r, e));
  }
  function M3(t, e = {}) {
    const { preserveGroup: n = !1 } = e,
      r = [],
      i = n
        ? (s) => {
            s.isLeaf || (r.push(s.key), o(s.children));
          }
        : (s) => {
            s.isLeaf || (s.isGroup || r.push(s.key), o(s.children));
          };
    function o(s) {
      s.forEach(i);
    }
    return o(t), r;
  }
  function L3(t, e) {
    const { isLeaf: n } = t;
    return n !== void 0 ? n : !e(t);
  }
  function $3(t) {
    return t.children;
  }
  function D3(t) {
    return t.key;
  }
  function z3() {
    return !1;
  }
  function F3(t, e) {
    const { isLeaf: n } = t;
    return !(n === !1 && !Array.isArray(e(t)));
  }
  function B3(t) {
    return t.disabled === !0;
  }
  function N3(t, e) {
    return t.isLeaf === !1 && !Array.isArray(e(t));
  }
  function sh(t) {
    var e;
    return t == null
      ? []
      : Array.isArray(t)
      ? t
      : (e = t.checkedKeys) !== null && e !== void 0
      ? e
      : [];
  }
  function ah(t) {
    var e;
    return t == null || Array.isArray(t)
      ? []
      : (e = t.indeterminateKeys) !== null && e !== void 0
      ? e
      : [];
  }
  function H3(t, e) {
    const n = new Set(t);
    return (
      e.forEach((r) => {
        n.has(r) || n.add(r);
      }),
      Array.from(n)
    );
  }
  function W3(t, e) {
    const n = new Set(t);
    return (
      e.forEach((r) => {
        n.has(r) && n.delete(r);
      }),
      Array.from(n)
    );
  }
  function j3(t) {
    return (t == null ? void 0 : t.type) === "group";
  }
  function U3(t) {
    const e = new Map();
    return (
      t.forEach((n, r) => {
        e.set(n.key, r);
      }),
      (n) => {
        var r;
        return (r = e.get(n)) !== null && r !== void 0 ? r : null;
      }
    );
  }
  class V3 extends Error {
    constructor() {
      super(),
        (this.message =
          "SubtreeNotLoadedError: checking a subtree whose required nodes are not fully loaded.");
    }
  }
  function G3(t, e, n, r) {
    return au(e.concat(t), n, r, !1);
  }
  function X3(t, e) {
    const n = new Set();
    return (
      t.forEach((r) => {
        const i = e.treeNodeMap.get(r);
        if (i !== void 0) {
          let o = i.parent;
          for (; o !== null && !(o.disabled || n.has(o.key)); )
            n.add(o.key), (o = o.parent);
        }
      }),
      n
    );
  }
  function K3(t, e, n, r) {
    const i = au(e, n, r, !1),
      o = au(t, n, r, !0),
      s = X3(t, n),
      a = [];
    return (
      i.forEach((l) => {
        (o.has(l) || s.has(l)) && a.push(l);
      }),
      a.forEach((l) => i.delete(l)),
      i
    );
  }
  function lh(t, e) {
    const {
      checkedKeys: n,
      keysToCheck: r,
      keysToUncheck: i,
      indeterminateKeys: o,
      cascade: s,
      leafOnly: a,
      checkStrategy: l,
      allowNotLoaded: c,
    } = t;
    if (!s)
      return r !== void 0
        ? { checkedKeys: H3(n, r), indeterminateKeys: Array.from(o) }
        : i !== void 0
        ? { checkedKeys: W3(n, i), indeterminateKeys: Array.from(o) }
        : { checkedKeys: Array.from(n), indeterminateKeys: Array.from(o) };
    const { levelTreeNodeMap: u } = e;
    let d;
    i !== void 0
      ? (d = K3(i, n, e, c))
      : r !== void 0
      ? (d = G3(r, n, e, c))
      : (d = au(n, e, c, !1));
    const h = l === "parent",
      g = l === "child" || a,
      f = d,
      p = new Set(),
      b = Math.max.apply(null, Array.from(u.keys()));
    for (let m = b; m >= 0; m -= 1) {
      const _ = m === 0,
        R = u.get(m);
      for (const S of R) {
        if (S.isLeaf) continue;
        const { key: x, shallowLoaded: E } = S;
        if (
          (g &&
            E &&
            S.children.forEach((T) => {
              !T.disabled &&
                !T.isLeaf &&
                T.shallowLoaded &&
                f.has(T.key) &&
                f.delete(T.key);
            }),
          S.disabled || !E)
        )
          continue;
        let w = !0,
          v = !1,
          y = !0;
        for (const T of S.children) {
          const A = T.key;
          if (!T.disabled) {
            if ((y && (y = !1), f.has(A))) v = !0;
            else if (p.has(A)) {
              (v = !0), (w = !1);
              break;
            } else if (((w = !1), v)) break;
          }
        }
        w && !y
          ? (h &&
              S.children.forEach((T) => {
                !T.disabled && f.has(T.key) && f.delete(T.key);
              }),
            f.add(x))
          : v && p.add(x),
          _ && g && f.has(x) && f.delete(x);
      }
    }
    return { checkedKeys: Array.from(f), indeterminateKeys: Array.from(p) };
  }
  function au(t, e, n, r) {
    const { treeNodeMap: i, getChildren: o } = e,
      s = new Set(),
      a = new Set(t);
    return (
      t.forEach((l) => {
        const c = i.get(l);
        c !== void 0 &&
          Px(c, (u) => {
            if (u.disabled) return uf.STOP;
            const { key: d } = u;
            if (!s.has(d) && (s.add(d), a.add(d), N3(u.rawNode, o))) {
              if (r) return uf.STOP;
              if (!n) throw new V3();
            }
          });
      }),
      a
    );
  }
  function Y3(t, { includeGroup: e = !1, includeSelf: n = !0 }, r) {
    var i;
    const o = r.treeNodeMap;
    let s =
      t == null ? null : (i = o.get(t)) !== null && i !== void 0 ? i : null;
    const a = { keyPath: [], treeNodePath: [], treeNode: s };
    if (s != null && s.ignored) return (a.treeNode = null), a;
    for (; s; )
      !s.ignored && (e || !s.isGroup) && a.treeNodePath.push(s), (s = s.parent);
    return (
      a.treeNodePath.reverse(),
      n || a.treeNodePath.pop(),
      (a.keyPath = a.treeNodePath.map((l) => l.key)),
      a
    );
  }
  function q3(t) {
    if (t.length === 0) return null;
    const e = t[0];
    return e.isGroup || e.ignored || e.disabled ? e.getNext() : e;
  }
  function Z3(t, e) {
    const n = t.siblings,
      r = n.length,
      { index: i } = t;
    return e ? n[(i + 1) % r] : i === n.length - 1 ? null : n[i + 1];
  }
  function iv(t, e, { loop: n = !1, includeDisabled: r = !1 } = {}) {
    const i = e === "prev" ? J3 : Z3,
      o = { reverse: e === "prev" };
    let s = !1,
      a = null;
    function l(c) {
      if (c !== null) {
        if (c === t) {
          if (!s) s = !0;
          else if (!t.disabled && !t.isGroup) {
            a = t;
            return;
          }
        } else if ((!c.disabled || r) && !c.ignored && !c.isGroup) {
          a = c;
          return;
        }
        if (c.isGroup) {
          const u = $g(c, o);
          u !== null ? (a = u) : l(i(c, n));
        } else {
          const u = i(c, !1);
          if (u !== null) l(u);
          else {
            const d = Q3(c);
            d != null && d.isGroup ? l(i(d, n)) : n && l(i(c, !0));
          }
        }
      }
    }
    return l(t), a;
  }
  function J3(t, e) {
    const n = t.siblings,
      r = n.length,
      { index: i } = t;
    return e ? n[(i - 1 + r) % r] : i === 0 ? null : n[i - 1];
  }
  function Q3(t) {
    return t.parent;
  }
  function $g(t, e = {}) {
    const { reverse: n = !1 } = e,
      { children: r } = t;
    if (r) {
      const { length: i } = r,
        o = n ? i - 1 : 0,
        s = n ? -1 : i,
        a = n ? -1 : 1;
      for (let l = o; l !== s; l += a) {
        const c = r[l];
        if (!c.disabled && !c.ignored)
          if (c.isGroup) {
            const u = $g(c, e);
            if (u !== null) return u;
          } else return c;
      }
    }
    return null;
  }
  const eL = {
    getChild() {
      return this.ignored ? null : $g(this);
    },
    getParent() {
      const { parent: t } = this;
      return t != null && t.isGroup ? t.getParent() : t;
    },
    getNext(t = {}) {
      return iv(this, "next", t);
    },
    getPrev(t = {}) {
      return iv(this, "prev", t);
    },
  };
  function tL(t, e) {
    const n = e ? new Set(e) : void 0,
      r = [];
    function i(o) {
      o.forEach((s) => {
        r.push(s),
          !(s.isLeaf || !s.children || s.ignored) &&
            (s.isGroup || n === void 0 || n.has(s.key)) &&
            i(s.children);
      });
    }
    return i(t), r;
  }
  function nL(t, e) {
    const n = t.key;
    for (; e; ) {
      if (e.key === n) return !0;
      e = e.parent;
    }
    return !1;
  }
  function Ax(t, e, n, r, i, o = null, s = 0) {
    const a = [];
    return (
      t.forEach((l, c) => {
        var u;
        const d = Object.create(r);
        if (
          ((d.rawNode = l),
          (d.siblings = a),
          (d.level = s),
          (d.index = c),
          (d.isFirstChild = c === 0),
          (d.isLastChild = c + 1 === t.length),
          (d.parent = o),
          !d.ignored)
        ) {
          const h = i(l);
          Array.isArray(h) && (d.children = Ax(h, e, n, r, i, d, s + 1));
        }
        a.push(d),
          e.set(d.key, d),
          n.has(s) || n.set(s, []),
          (u = n.get(s)) === null || u === void 0 || u.push(d);
      }),
      a
    );
  }
  function rL(t, e = {}) {
    var n;
    const r = new Map(),
      i = new Map(),
      {
        getDisabled: o = B3,
        getIgnored: s = z3,
        getIsGroup: a = j3,
        getKey: l = D3,
      } = e,
      c = (n = e.getChildren) !== null && n !== void 0 ? n : $3,
      u = e.ignoreEmptyChildren
        ? (S) => {
            const x = c(S);
            return Array.isArray(x) ? (x.length ? x : null) : x;
          }
        : c,
      d = Object.assign(
        {
          get key() {
            return l(this.rawNode);
          },
          get disabled() {
            return o(this.rawNode);
          },
          get isGroup() {
            return a(this.rawNode);
          },
          get isLeaf() {
            return L3(this.rawNode, u);
          },
          get shallowLoaded() {
            return F3(this.rawNode, u);
          },
          get ignored() {
            return s(this.rawNode);
          },
          contains(S) {
            return nL(this, S);
          },
        },
        eL
      ),
      h = Ax(t, r, i, d, u);
    function g(S) {
      if (S == null) return null;
      const x = r.get(S);
      return x && !x.isGroup && !x.ignored ? x : null;
    }
    function f(S) {
      if (S == null) return null;
      const x = r.get(S);
      return x && !x.ignored ? x : null;
    }
    function p(S, x) {
      const E = f(S);
      return E ? E.getPrev(x) : null;
    }
    function b(S, x) {
      const E = f(S);
      return E ? E.getNext(x) : null;
    }
    function m(S) {
      const x = f(S);
      return x ? x.getParent() : null;
    }
    function _(S) {
      const x = f(S);
      return x ? x.getChild() : null;
    }
    const R = {
      treeNodes: h,
      treeNodeMap: r,
      levelTreeNodeMap: i,
      maxLevel: Math.max(...i.keys()),
      getChildren: u,
      getFlattenedNodes(S) {
        return tL(h, S);
      },
      getNode: g,
      getPrev: p,
      getNext: b,
      getParent: m,
      getChild: _,
      getFirstAvailableNode() {
        return q3(h);
      },
      getPath(S, x = {}) {
        return Y3(S, x, R);
      },
      getCheckedKeys(S, x = {}) {
        const {
          cascade: E = !0,
          leafOnly: w = !1,
          checkStrategy: v = "all",
          allowNotLoaded: y = !1,
        } = x;
        return lh(
          {
            checkedKeys: sh(S),
            indeterminateKeys: ah(S),
            cascade: E,
            leafOnly: w,
            checkStrategy: v,
            allowNotLoaded: y,
          },
          R
        );
      },
      check(S, x, E = {}) {
        const {
          cascade: w = !0,
          leafOnly: v = !1,
          checkStrategy: y = "all",
          allowNotLoaded: T = !1,
        } = E;
        return lh(
          {
            checkedKeys: sh(x),
            indeterminateKeys: ah(x),
            keysToCheck: S == null ? [] : rv(S),
            cascade: w,
            leafOnly: v,
            checkStrategy: y,
            allowNotLoaded: T,
          },
          R
        );
      },
      uncheck(S, x, E = {}) {
        const {
          cascade: w = !0,
          leafOnly: v = !1,
          checkStrategy: y = "all",
          allowNotLoaded: T = !1,
        } = E;
        return lh(
          {
            checkedKeys: sh(x),
            indeterminateKeys: ah(x),
            keysToUncheck: S == null ? [] : rv(S),
            cascade: w,
            leafOnly: v,
            checkStrategy: y,
            allowNotLoaded: T,
          },
          R
        );
      },
      getNonLeafKeys(S = {}) {
        return M3(h, S);
      },
    };
    return R;
  }
  const Be = {
      neutralBase: "#000",
      neutralInvertBase: "#fff",
      neutralTextBase: "#fff",
      neutralPopover: "rgb(72, 72, 78)",
      neutralCard: "rgb(24, 24, 28)",
      neutralModal: "rgb(44, 44, 50)",
      neutralBody: "rgb(16, 16, 20)",
      alpha1: "0.9",
      alpha2: "0.82",
      alpha3: "0.52",
      alpha4: "0.38",
      alpha5: "0.28",
      alphaClose: "0.52",
      alphaDisabled: "0.38",
      alphaDisabledInput: "0.06",
      alphaPending: "0.09",
      alphaTablePending: "0.06",
      alphaTableStriped: "0.05",
      alphaPressed: "0.05",
      alphaAvatar: "0.18",
      alphaRail: "0.2",
      alphaProgressRail: "0.12",
      alphaBorder: "0.24",
      alphaDivider: "0.09",
      alphaInput: "0.1",
      alphaAction: "0.06",
      alphaTab: "0.04",
      alphaScrollbar: "0.2",
      alphaScrollbarHover: "0.3",
      alphaCode: "0.12",
      alphaTag: "0.2",
      primaryHover: "#7fe7c4",
      primaryDefault: "#63e2b7",
      primaryActive: "#5acea7",
      primarySuppl: "rgb(42, 148, 125)",
      infoHover: "#8acbec",
      infoDefault: "#70c0e8",
      infoActive: "#66afd3",
      infoSuppl: "rgb(56, 137, 197)",
      errorHover: "#e98b8b",
      errorDefault: "#e88080",
      errorActive: "#e57272",
      errorSuppl: "rgb(208, 58, 82)",
      warningHover: "#f5d599",
      warningDefault: "#f2c97d",
      warningActive: "#e6c260",
      warningSuppl: "rgb(240, 138, 0)",
      successHover: "#7fe7c4",
      successDefault: "#63e2b7",
      successActive: "#5acea7",
      successSuppl: "rgb(42, 148, 125)",
    },
    iL = ni(Be.neutralBase),
    kx = ni(Be.neutralInvertBase),
    oL = "rgba(" + kx.slice(0, 3).join(", ") + ", ";
  function lt(t) {
    return oL + String(t) + ")";
  }
  function sL(t) {
    const e = Array.from(kx);
    return (e[3] = Number(t)), Ue(iL, e);
  }
  const aL = Object.assign(Object.assign({ name: "common" }, to), {
      baseColor: Be.neutralBase,
      primaryColor: Be.primaryDefault,
      primaryColorHover: Be.primaryHover,
      primaryColorPressed: Be.primaryActive,
      primaryColorSuppl: Be.primarySuppl,
      infoColor: Be.infoDefault,
      infoColorHover: Be.infoHover,
      infoColorPressed: Be.infoActive,
      infoColorSuppl: Be.infoSuppl,
      successColor: Be.successDefault,
      successColorHover: Be.successHover,
      successColorPressed: Be.successActive,
      successColorSuppl: Be.successSuppl,
      warningColor: Be.warningDefault,
      warningColorHover: Be.warningHover,
      warningColorPressed: Be.warningActive,
      warningColorSuppl: Be.warningSuppl,
      errorColor: Be.errorDefault,
      errorColorHover: Be.errorHover,
      errorColorPressed: Be.errorActive,
      errorColorSuppl: Be.errorSuppl,
      textColorBase: Be.neutralTextBase,
      textColor1: lt(Be.alpha1),
      textColor2: lt(Be.alpha2),
      textColor3: lt(Be.alpha3),
      textColorDisabled: lt(Be.alpha4),
      placeholderColor: lt(Be.alpha4),
      placeholderColorDisabled: lt(Be.alpha5),
      iconColor: lt(Be.alpha4),
      iconColorDisabled: lt(Be.alpha5),
      iconColorHover: lt(Number(Be.alpha4) * 1.25),
      iconColorPressed: lt(Number(Be.alpha4) * 0.8),
      opacity1: Be.alpha1,
      opacity2: Be.alpha2,
      opacity3: Be.alpha3,
      opacity4: Be.alpha4,
      opacity5: Be.alpha5,
      dividerColor: lt(Be.alphaDivider),
      borderColor: lt(Be.alphaBorder),
      closeIconColorHover: lt(Number(Be.alphaClose)),
      closeIconColor: lt(Number(Be.alphaClose)),
      closeIconColorPressed: lt(Number(Be.alphaClose)),
      closeColorHover: "rgba(255, 255, 255, .12)",
      closeColorPressed: "rgba(255, 255, 255, .08)",
      clearColor: lt(Be.alpha4),
      clearColorHover: Yt(lt(Be.alpha4), { alpha: 1.25 }),
      clearColorPressed: Yt(lt(Be.alpha4), { alpha: 0.8 }),
      scrollbarColor: lt(Be.alphaScrollbar),
      scrollbarColorHover: lt(Be.alphaScrollbarHover),
      scrollbarWidth: "5px",
      scrollbarHeight: "5px",
      scrollbarBorderRadius: "5px",
      progressRailColor: lt(Be.alphaProgressRail),
      railColor: lt(Be.alphaRail),
      popoverColor: Be.neutralPopover,
      tableColor: Be.neutralCard,
      cardColor: Be.neutralCard,
      modalColor: Be.neutralModal,
      bodyColor: Be.neutralBody,
      tagColor: sL(Be.alphaTag),
      avatarColor: lt(Be.alphaAvatar),
      invertedColor: Be.neutralBase,
      inputColor: lt(Be.alphaInput),
      codeColor: lt(Be.alphaCode),
      tabColor: lt(Be.alphaTab),
      actionColor: lt(Be.alphaAction),
      tableHeaderColor: lt(Be.alphaAction),
      hoverColor: lt(Be.alphaPending),
      tableColorHover: lt(Be.alphaTablePending),
      tableColorStriped: lt(Be.alphaTableStriped),
      pressedColor: lt(Be.alphaPressed),
      opacityDisabled: Be.alphaDisabled,
      inputColorDisabled: lt(Be.alphaDisabledInput),
      buttonColor2: "rgba(255, 255, 255, .08)",
      buttonColor2Hover: "rgba(255, 255, 255, .12)",
      buttonColor2Pressed: "rgba(255, 255, 255, .08)",
      boxShadow1:
        "0 1px 2px -2px rgba(0, 0, 0, .24), 0 3px 6px 0 rgba(0, 0, 0, .18), 0 5px 12px 4px rgba(0, 0, 0, .12)",
      boxShadow2:
        "0 3px 6px -4px rgba(0, 0, 0, .24), 0 6px 12px 0 rgba(0, 0, 0, .16), 0 9px 18px 8px rgba(0, 0, 0, .10)",
      boxShadow3:
        "0 6px 16px -9px rgba(0, 0, 0, .08), 0 9px 28px 0 rgba(0, 0, 0, .05), 0 12px 48px 16px rgba(0, 0, 0, .03)",
    }),
    Oe = aL,
    Ge = {
      neutralBase: "#FFF",
      neutralInvertBase: "#000",
      neutralTextBase: "#000",
      neutralPopover: "#fff",
      neutralCard: "#fff",
      neutralModal: "#fff",
      neutralBody: "#fff",
      alpha1: "0.82",
      alpha2: "0.72",
      alpha3: "0.38",
      alpha4: "0.24",
      alpha5: "0.18",
      alphaClose: "0.6",
      alphaDisabled: "0.5",
      alphaDisabledInput: "0.02",
      alphaPending: "0.05",
      alphaTablePending: "0.02",
      alphaPressed: "0.07",
      alphaAvatar: "0.2",
      alphaRail: "0.14",
      alphaProgressRail: ".08",
      alphaBorder: "0.12",
      alphaDivider: "0.06",
      alphaInput: "0",
      alphaAction: "0.02",
      alphaTab: "0.04",
      alphaScrollbar: "0.25",
      alphaScrollbarHover: "0.4",
      alphaCode: "0.05",
      alphaTag: "0.02",
      primaryHover: "#36ad6a",
      primaryDefault: "#18a058",
      primaryActive: "#0c7a43",
      primarySuppl: "#36ad6a",
      infoHover: "#4098fc",
      infoDefault: "#2080f0",
      infoActive: "#1060c9",
      infoSuppl: "#4098fc",
      errorHover: "#de576d",
      errorDefault: "#d03050",
      errorActive: "#ab1f3f",
      errorSuppl: "#de576d",
      warningHover: "#fcb040",
      warningDefault: "#f0a020",
      warningActive: "#c97c10",
      warningSuppl: "#fcb040",
      successHover: "#36ad6a",
      successDefault: "#18a058",
      successActive: "#0c7a43",
      successSuppl: "#36ad6a",
    },
    lL = ni(Ge.neutralBase),
    Ix = ni(Ge.neutralInvertBase),
    cL = "rgba(" + Ix.slice(0, 3).join(", ") + ", ";
  function ov(t) {
    return cL + String(t) + ")";
  }
  function yn(t) {
    const e = Array.from(Ix);
    return (e[3] = Number(t)), Ue(lL, e);
  }
  const uL = Object.assign(Object.assign({ name: "common" }, to), {
      baseColor: Ge.neutralBase,
      primaryColor: Ge.primaryDefault,
      primaryColorHover: Ge.primaryHover,
      primaryColorPressed: Ge.primaryActive,
      primaryColorSuppl: Ge.primarySuppl,
      infoColor: Ge.infoDefault,
      infoColorHover: Ge.infoHover,
      infoColorPressed: Ge.infoActive,
      infoColorSuppl: Ge.infoSuppl,
      successColor: Ge.successDefault,
      successColorHover: Ge.successHover,
      successColorPressed: Ge.successActive,
      successColorSuppl: Ge.successSuppl,
      warningColor: Ge.warningDefault,
      warningColorHover: Ge.warningHover,
      warningColorPressed: Ge.warningActive,
      warningColorSuppl: Ge.warningSuppl,
      errorColor: Ge.errorDefault,
      errorColorHover: Ge.errorHover,
      errorColorPressed: Ge.errorActive,
      errorColorSuppl: Ge.errorSuppl,
      textColorBase: Ge.neutralTextBase,
      textColor1: "rgb(31, 34, 37)",
      textColor2: "rgb(51, 54, 57)",
      textColor3: "rgb(118, 124, 130)",
      textColorDisabled: yn(Ge.alpha4),
      placeholderColor: yn(Ge.alpha4),
      placeholderColorDisabled: yn(Ge.alpha5),
      iconColor: yn(Ge.alpha4),
      iconColorHover: Yt(yn(Ge.alpha4), { lightness: 0.75 }),
      iconColorPressed: Yt(yn(Ge.alpha4), { lightness: 0.9 }),
      iconColorDisabled: yn(Ge.alpha5),
      opacity1: Ge.alpha1,
      opacity2: Ge.alpha2,
      opacity3: Ge.alpha3,
      opacity4: Ge.alpha4,
      opacity5: Ge.alpha5,
      dividerColor: "rgb(239, 239, 245)",
      borderColor: "rgb(224, 224, 230)",
      closeIconColor: yn(Number(Ge.alphaClose)),
      closeIconColorHover: yn(Number(Ge.alphaClose)),
      closeIconColorPressed: yn(Number(Ge.alphaClose)),
      closeColorHover: "rgba(0, 0, 0, .09)",
      closeColorPressed: "rgba(0, 0, 0, .13)",
      clearColor: yn(Ge.alpha4),
      clearColorHover: Yt(yn(Ge.alpha4), { lightness: 0.75 }),
      clearColorPressed: Yt(yn(Ge.alpha4), { lightness: 0.9 }),
      scrollbarColor: ov(Ge.alphaScrollbar),
      scrollbarColorHover: ov(Ge.alphaScrollbarHover),
      scrollbarWidth: "5px",
      scrollbarHeight: "5px",
      scrollbarBorderRadius: "5px",
      progressRailColor: yn(Ge.alphaProgressRail),
      railColor: "rgb(219, 219, 223)",
      popoverColor: Ge.neutralPopover,
      tableColor: Ge.neutralCard,
      cardColor: Ge.neutralCard,
      modalColor: Ge.neutralModal,
      bodyColor: Ge.neutralBody,
      tagColor: "#eee",
      avatarColor: yn(Ge.alphaAvatar),
      invertedColor: "rgb(0, 20, 40)",
      inputColor: yn(Ge.alphaInput),
      codeColor: "rgb(244, 244, 248)",
      tabColor: "rgb(247, 247, 250)",
      actionColor: "rgb(250, 250, 252)",
      tableHeaderColor: "rgb(250, 250, 252)",
      hoverColor: "rgb(243, 243, 245)",
      tableColorHover: "rgba(0, 0, 100, 0.03)",
      tableColorStriped: "rgba(0, 0, 100, 0.02)",
      pressedColor: "rgb(237, 237, 239)",
      opacityDisabled: Ge.alphaDisabled,
      inputColorDisabled: "rgb(250, 250, 252)",
      buttonColor2: "rgba(46, 51, 56, .05)",
      buttonColor2Hover: "rgba(46, 51, 56, .09)",
      buttonColor2Pressed: "rgba(46, 51, 56, .13)",
      boxShadow1:
        "0 1px 2px -2px rgba(0, 0, 0, .08), 0 3px 6px 0 rgba(0, 0, 0, .06), 0 5px 12px 4px rgba(0, 0, 0, .04)",
      boxShadow2:
        "0 3px 6px -4px rgba(0, 0, 0, .12), 0 6px 16px 0 rgba(0, 0, 0, .08), 0 9px 28px 8px rgba(0, 0, 0, .05)",
      boxShadow3:
        "0 6px 16px -9px rgba(0, 0, 0, .08), 0 9px 28px 0 rgba(0, 0, 0, .05), 0 12px 48px 16px rgba(0, 0, 0, .03)",
    }),
    Ut = uL,
    dL = {
      iconSizeSmall: "34px",
      iconSizeMedium: "40px",
      iconSizeLarge: "46px",
      iconSizeHuge: "52px",
    },
    Ox = (t) => {
      const {
        textColorDisabled: e,
        iconColor: n,
        textColor2: r,
        fontSizeSmall: i,
        fontSizeMedium: o,
        fontSizeLarge: s,
        fontSizeHuge: a,
      } = t;
      return Object.assign(Object.assign({}, dL), {
        fontSizeSmall: i,
        fontSizeMedium: o,
        fontSizeLarge: s,
        fontSizeHuge: a,
        textColor: e,
        iconColor: n,
        extraTextColor: r,
      });
    },
    hL = { name: "Empty", common: Ut, self: Ox },
    Dg = hL,
    fL = { name: "Empty", common: Oe, self: Ox },
    qo = fL,
    gL = M(
      "empty",
      `
 display: flex;
 flex-direction: column;
 align-items: center;
 font-size: var(--n-font-size);
`,
      [
        ne(
          "icon",
          `
 width: var(--n-icon-size);
 height: var(--n-icon-size);
 font-size: var(--n-icon-size);
 line-height: var(--n-icon-size);
 color: var(--n-icon-color);
 transition:
 color .3s var(--n-bezier);
 `,
          [
            q("+", [
              ne(
                "description",
                `
 margin-top: 8px;
 `
              ),
            ]),
          ]
        ),
        ne(
          "description",
          `
 transition: color .3s var(--n-bezier);
 color: var(--n-text-color);
 `
        ),
        ne(
          "extra",
          `
 text-align: center;
 transition: color .3s var(--n-bezier);
 margin-top: 12px;
 color: var(--n-extra-text-color);
 `
        ),
      ]
    ),
    pL = Object.assign(Object.assign({}, Ye.props), {
      description: String,
      showDescription: { type: Boolean, default: !0 },
      showIcon: { type: Boolean, default: !0 },
      size: { type: String, default: "medium" },
      renderIcon: Function,
    }),
    mL = $e({
      name: "Empty",
      props: pL,
      setup(t) {
        const { mergedClsPrefixRef: e, inlineThemeDisabled: n } = Ct(t),
          r = Ye("Empty", "-empty", gL, Dg, t, e),
          { localeRef: i } = Xu("Empty"),
          o = Ve(ri, null),
          s = ce(() => {
            var u, d, h;
            return (u = t.description) !== null && u !== void 0
              ? u
              : (h =
                  (d = o == null ? void 0 : o.mergedComponentPropsRef.value) ===
                    null || d === void 0
                    ? void 0
                    : d.Empty) === null || h === void 0
              ? void 0
              : h.description;
          }),
          a = ce(() => {
            var u, d;
            return (
              ((d =
                (u = o == null ? void 0 : o.mergedComponentPropsRef.value) ===
                  null || u === void 0
                  ? void 0
                  : u.Empty) === null || d === void 0
                ? void 0
                : d.renderIcon) || (() => C(v3, null))
            );
          }),
          l = ce(() => {
            const { size: u } = t,
              {
                common: { cubicBezierEaseInOut: d },
                self: {
                  [Te("iconSize", u)]: h,
                  [Te("fontSize", u)]: g,
                  textColor: f,
                  iconColor: p,
                  extraTextColor: b,
                },
              } = r.value;
            return {
              "--n-icon-size": h,
              "--n-font-size": g,
              "--n-bezier": d,
              "--n-text-color": f,
              "--n-icon-color": p,
              "--n-extra-text-color": b,
            };
          }),
          c = n
            ? jt(
                "empty",
                ce(() => {
                  let u = "";
                  const { size: d } = t;
                  return (u += d[0]), u;
                }),
                l,
                t
              )
            : void 0;
        return {
          mergedClsPrefix: e,
          mergedRenderIcon: a,
          localizedDescription: ce(() => s.value || i.value.description),
          cssVars: n ? void 0 : l,
          themeClass: c == null ? void 0 : c.themeClass,
          onRender: c == null ? void 0 : c.onRender,
        };
      },
      render() {
        const { $slots: t, mergedClsPrefix: e, onRender: n } = this;
        return (
          n == null || n(),
          C(
            "div",
            { class: [`${e}-empty`, this.themeClass], style: this.cssVars },
            this.showIcon
              ? C(
                  "div",
                  { class: `${e}-empty__icon` },
                  t.icon
                    ? t.icon()
                    : C(
                        ht,
                        { clsPrefix: e },
                        { default: this.mergedRenderIcon }
                      )
                )
              : null,
            this.showDescription
              ? C(
                  "div",
                  { class: `${e}-empty__description` },
                  t.default ? t.default() : this.localizedDescription
                )
              : null,
            t.extra ? C("div", { class: `${e}-empty__extra` }, t.extra()) : null
          )
        );
      },
    }),
    Mx = (t) => {
      const { scrollbarColor: e, scrollbarColorHover: n } = t;
      return { color: e, colorHover: n };
    },
    vL = { name: "Scrollbar", common: Ut, self: Mx },
    Yu = vL,
    bL = { name: "Scrollbar", common: Oe, self: Mx },
    jn = bL,
    { cubicBezierEaseInOut: sv } = to;
  function ll({
    name: t = "fade-in",
    enterDuration: e = "0.2s",
    leaveDuration: n = "0.2s",
    enterCubicBezier: r = sv,
    leaveCubicBezier: i = sv,
  } = {}) {
    return [
      q(`&.${t}-transition-enter-active`, {
        transition: `all ${e} ${r}!important`,
      }),
      q(`&.${t}-transition-leave-active`, {
        transition: `all ${n} ${i}!important`,
      }),
      q(`&.${t}-transition-enter-from, &.${t}-transition-leave-to`, {
        opacity: 0,
      }),
      q(`&.${t}-transition-leave-from, &.${t}-transition-enter-to`, {
        opacity: 1,
      }),
    ];
  }
  const yL = M(
      "scrollbar",
      `
 overflow: hidden;
 position: relative;
 z-index: auto;
 height: 100%;
 width: 100%;
`,
      [
        q(">", [
          M(
            "scrollbar-container",
            `
 width: 100%;
 overflow: scroll;
 height: 100%;
 min-height: inherit;
 max-height: inherit;
 scrollbar-width: none;
 `,
            [
              q(
                "&::-webkit-scrollbar, &::-webkit-scrollbar-track-piece, &::-webkit-scrollbar-thumb",
                `
 width: 0;
 height: 0;
 display: none;
 `
              ),
              q(">", [
                M(
                  "scrollbar-content",
                  `
 box-sizing: border-box;
 min-width: 100%;
 `
                ),
              ]),
            ]
          ),
        ]),
        q(">, +", [
          M(
            "scrollbar-rail",
            `
 position: absolute;
 pointer-events: none;
 user-select: none;
 -webkit-user-select: none;
 `,
            [
              te(
                "horizontal",
                `
 left: 2px;
 right: 2px;
 bottom: 4px;
 height: var(--n-scrollbar-height);
 `,
                [
                  q(">", [
                    ne(
                      "scrollbar",
                      `
 height: var(--n-scrollbar-height);
 border-radius: var(--n-scrollbar-border-radius);
 right: 0;
 `
                    ),
                  ]),
                ]
              ),
              te(
                "vertical",
                `
 right: 4px;
 top: 2px;
 bottom: 2px;
 width: var(--n-scrollbar-width);
 `,
                [
                  q(">", [
                    ne(
                      "scrollbar",
                      `
 width: var(--n-scrollbar-width);
 border-radius: var(--n-scrollbar-border-radius);
 bottom: 0;
 `
                    ),
                  ]),
                ]
              ),
              te("disabled", [
                q(">", [ne("scrollbar", "pointer-events: none;")]),
              ]),
              q(">", [
                ne(
                  "scrollbar",
                  `
 z-index: 1;
 position: absolute;
 cursor: pointer;
 pointer-events: all;
 background-color: var(--n-scrollbar-color);
 transition: background-color .2s var(--n-scrollbar-bezier);
 `,
                  [
                    ll(),
                    q(
                      "&:hover",
                      "background-color: var(--n-scrollbar-color-hover);"
                    ),
                  ]
                ),
              ]),
            ]
          ),
        ]),
      ]
    ),
    xL = Object.assign(Object.assign({}, Ye.props), {
      size: { type: Number, default: 5 },
      duration: { type: Number, default: 0 },
      scrollable: { type: Boolean, default: !0 },
      xScrollable: Boolean,
      trigger: { type: String, default: "hover" },
      useUnifiedContainer: Boolean,
      triggerDisplayManually: Boolean,
      container: Function,
      content: Function,
      containerClass: String,
      containerStyle: [String, Object],
      contentClass: [String, Array],
      contentStyle: [String, Object],
      horizontalRailStyle: [String, Object],
      verticalRailStyle: [String, Object],
      onScroll: Function,
      onWheel: Function,
      onResize: Function,
      internalOnUpdateScrollLeft: Function,
      internalHoistYRail: Boolean,
    }),
    Lx = $e({
      name: "Scrollbar",
      props: xL,
      inheritAttrs: !1,
      setup(t) {
        const {
            mergedClsPrefixRef: e,
            inlineThemeDisabled: n,
            mergedRtlRef: r,
          } = Ct(t),
          i = Cr("Scrollbar", r, e),
          o = U(null),
          s = U(null),
          a = U(null),
          l = U(null),
          c = U(null),
          u = U(null),
          d = U(null),
          h = U(null),
          g = U(null),
          f = U(null),
          p = U(null),
          b = U(0),
          m = U(0),
          _ = U(!1),
          R = U(!1);
        let S = !1,
          x = !1,
          E,
          w,
          v = 0,
          y = 0,
          T = 0,
          A = 0;
        const I = GT(),
          L = ce(() => {
            const { value: ve } = h,
              { value: Le } = u,
              { value: Re } = f;
            return ve === null || Le === null || Re === null
              ? 0
              : Math.min(ve, (Re * ve) / Le + t.size * 1.5);
          }),
          j = ce(() => `${L.value}px`),
          k = ce(() => {
            const { value: ve } = g,
              { value: Le } = d,
              { value: Re } = p;
            return ve === null || Le === null || Re === null
              ? 0
              : (Re * ve) / Le + t.size * 1.5;
          }),
          O = ce(() => `${k.value}px`),
          D = ce(() => {
            const { value: ve } = h,
              { value: Le } = b,
              { value: Re } = u,
              { value: st } = f;
            if (ve === null || Re === null || st === null) return 0;
            {
              const bt = Re - ve;
              return bt ? (Le / bt) * (st - L.value) : 0;
            }
          }),
          Y = ce(() => `${D.value}px`),
          se = ce(() => {
            const { value: ve } = g,
              { value: Le } = m,
              { value: Re } = d,
              { value: st } = p;
            if (ve === null || Re === null || st === null) return 0;
            {
              const bt = Re - ve;
              return bt ? (Le / bt) * (st - k.value) : 0;
            }
          }),
          de = ce(() => `${se.value}px`),
          fe = ce(() => {
            const { value: ve } = h,
              { value: Le } = u;
            return ve !== null && Le !== null && Le > ve;
          }),
          z = ce(() => {
            const { value: ve } = g,
              { value: Le } = d;
            return ve !== null && Le !== null && Le > ve;
          }),
          ee = ce(() => {
            const { trigger: ve } = t;
            return ve === "none" || _.value;
          }),
          ue = ce(() => {
            const { trigger: ve } = t;
            return ve === "none" || R.value;
          }),
          K = ce(() => {
            const { container: ve } = t;
            return ve ? ve() : s.value;
          }),
          _e = ce(() => {
            const { content: ve } = t;
            return ve ? ve() : a.value;
          }),
          ie = UP(() => {
            t.container || ge({ top: b.value, left: m.value });
          }),
          pe = () => {
            ie.isDeactivated || X();
          },
          re = (ve) => {
            if (ie.isDeactivated) return;
            const { onResize: Le } = t;
            Le && Le(ve), X();
          },
          ge = (ve, Le) => {
            if (!t.scrollable) return;
            if (typeof ve == "number") {
              Me(Le ?? 0, ve, 0, !1, "auto");
              return;
            }
            const {
              left: Re,
              top: st,
              index: bt,
              elSize: Rt,
              position: Kt,
              behavior: _t,
              el: en,
              debounce: Ft = !0,
            } = ve;
            (Re !== void 0 || st !== void 0) && Me(Re ?? 0, st ?? 0, 0, !1, _t),
              en !== void 0
                ? Me(0, en.offsetTop, en.offsetHeight, Ft, _t)
                : bt !== void 0 && Rt !== void 0
                ? Me(0, bt * Rt, Rt, Ft, _t)
                : Kt === "bottom"
                ? Me(0, Number.MAX_SAFE_INTEGER, 0, !1, _t)
                : Kt === "top" && Me(0, 0, 0, !1, _t);
          },
          ke = (ve, Le) => {
            if (!t.scrollable) return;
            const { value: Re } = K;
            Re &&
              (typeof ve == "object"
                ? Re.scrollBy(ve)
                : Re.scrollBy(ve, Le || 0));
          };
        function Me(ve, Le, Re, st, bt) {
          const { value: Rt } = K;
          if (Rt) {
            if (st) {
              const { scrollTop: Kt, offsetHeight: _t } = Rt;
              if (Le > Kt) {
                Le + Re <= Kt + _t ||
                  Rt.scrollTo({ left: ve, top: Le + Re - _t, behavior: bt });
                return;
              }
            }
            Rt.scrollTo({ left: ve, top: Le, behavior: bt });
          }
        }
        function P() {
          he(), Z(), X();
        }
        function $() {
          H();
        }
        function H() {
          ae(), le();
        }
        function ae() {
          w !== void 0 && window.clearTimeout(w),
            (w = window.setTimeout(() => {
              R.value = !1;
            }, t.duration));
        }
        function le() {
          E !== void 0 && window.clearTimeout(E),
            (E = window.setTimeout(() => {
              _.value = !1;
            }, t.duration));
        }
        function he() {
          E !== void 0 && window.clearTimeout(E), (_.value = !0);
        }
        function Z() {
          w !== void 0 && window.clearTimeout(w), (R.value = !0);
        }
        function W(ve) {
          const { onScroll: Le } = t;
          Le && Le(ve), Q();
        }
        function Q() {
          const { value: ve } = K;
          ve &&
            ((b.value = ve.scrollTop),
            (m.value = ve.scrollLeft * (i != null && i.value ? -1 : 1)));
        }
        function J() {
          const { value: ve } = _e;
          ve && ((u.value = ve.offsetHeight), (d.value = ve.offsetWidth));
          const { value: Le } = K;
          Le && ((h.value = Le.offsetHeight), (g.value = Le.offsetWidth));
          const { value: Re } = c,
            { value: st } = l;
          Re && (p.value = Re.offsetWidth), st && (f.value = st.offsetHeight);
        }
        function G() {
          const { value: ve } = K;
          ve &&
            ((b.value = ve.scrollTop),
            (m.value = ve.scrollLeft * (i != null && i.value ? -1 : 1)),
            (h.value = ve.offsetHeight),
            (g.value = ve.offsetWidth),
            (u.value = ve.scrollHeight),
            (d.value = ve.scrollWidth));
          const { value: Le } = c,
            { value: Re } = l;
          Le && (p.value = Le.offsetWidth), Re && (f.value = Re.offsetHeight);
        }
        function X() {
          t.scrollable && (t.useUnifiedContainer ? G() : (J(), Q()));
        }
        function V(ve) {
          var Le;
          return !(
            !((Le = o.value) === null || Le === void 0) && Le.contains(Fs(ve))
          );
        }
        function me(ve) {
          ve.preventDefault(),
            ve.stopPropagation(),
            (x = !0),
            kt("mousemove", window, we, !0),
            kt("mouseup", window, Pe, !0),
            (y = m.value),
            (T =
              i != null && i.value
                ? window.innerWidth - ve.clientX
                : ve.clientX);
        }
        function we(ve) {
          if (!x) return;
          E !== void 0 && window.clearTimeout(E),
            w !== void 0 && window.clearTimeout(w);
          const { value: Le } = g,
            { value: Re } = d,
            { value: st } = k;
          if (Le === null || Re === null) return;
          const Rt =
              ((i != null && i.value
                ? window.innerWidth - ve.clientX - T
                : ve.clientX - T) *
                (Re - Le)) /
              (Le - st),
            Kt = Re - Le;
          let _t = y + Rt;
          (_t = Math.min(Kt, _t)), (_t = Math.max(_t, 0));
          const { value: en } = K;
          if (en) {
            en.scrollLeft = _t * (i != null && i.value ? -1 : 1);
            const { internalOnUpdateScrollLeft: Ft } = t;
            Ft && Ft(_t);
          }
        }
        function Pe(ve) {
          ve.preventDefault(),
            ve.stopPropagation(),
            mt("mousemove", window, we, !0),
            mt("mouseup", window, Pe, !0),
            (x = !1),
            X(),
            V(ve) && H();
        }
        function ze(ve) {
          ve.preventDefault(),
            ve.stopPropagation(),
            (S = !0),
            kt("mousemove", window, Ne, !0),
            kt("mouseup", window, Fe, !0),
            (v = b.value),
            (A = ve.clientY);
        }
        function Ne(ve) {
          if (!S) return;
          E !== void 0 && window.clearTimeout(E),
            w !== void 0 && window.clearTimeout(w);
          const { value: Le } = h,
            { value: Re } = u,
            { value: st } = L;
          if (Le === null || Re === null) return;
          const Rt = ((ve.clientY - A) * (Re - Le)) / (Le - st),
            Kt = Re - Le;
          let _t = v + Rt;
          (_t = Math.min(Kt, _t)), (_t = Math.max(_t, 0));
          const { value: en } = K;
          en && (en.scrollTop = _t);
        }
        function Fe(ve) {
          ve.preventDefault(),
            ve.stopPropagation(),
            mt("mousemove", window, Ne, !0),
            mt("mouseup", window, Fe, !0),
            (S = !1),
            X(),
            V(ve) && H();
        }
        or(() => {
          const { value: ve } = z,
            { value: Le } = fe,
            { value: Re } = e,
            { value: st } = c,
            { value: bt } = l;
          st &&
            (ve
              ? st.classList.remove(`${Re}-scrollbar-rail--disabled`)
              : st.classList.add(`${Re}-scrollbar-rail--disabled`)),
            bt &&
              (Le
                ? bt.classList.remove(`${Re}-scrollbar-rail--disabled`)
                : bt.classList.add(`${Re}-scrollbar-rail--disabled`));
        }),
          Vt(() => {
            t.container || X();
          }),
          Qt(() => {
            E !== void 0 && window.clearTimeout(E),
              w !== void 0 && window.clearTimeout(w),
              mt("mousemove", window, Ne, !0),
              mt("mouseup", window, Fe, !0);
          });
        const Qe = Ye("Scrollbar", "-scrollbar", yL, Yu, t, e),
          It = ce(() => {
            const {
              common: {
                cubicBezierEaseInOut: ve,
                scrollbarBorderRadius: Le,
                scrollbarHeight: Re,
                scrollbarWidth: st,
              },
              self: { color: bt, colorHover: Rt },
            } = Qe.value;
            return {
              "--n-scrollbar-bezier": ve,
              "--n-scrollbar-color": bt,
              "--n-scrollbar-color-hover": Rt,
              "--n-scrollbar-border-radius": Le,
              "--n-scrollbar-width": st,
              "--n-scrollbar-height": Re,
            };
          }),
          rt = n ? jt("scrollbar", void 0, It, t) : void 0;
        return Object.assign(
          Object.assign(
            {},
            {
              scrollTo: ge,
              scrollBy: ke,
              sync: X,
              syncUnifiedContainer: G,
              handleMouseEnterWrapper: P,
              handleMouseLeaveWrapper: $,
            }
          ),
          {
            mergedClsPrefix: e,
            rtlEnabled: i,
            containerScrollTop: b,
            wrapperRef: o,
            containerRef: s,
            contentRef: a,
            yRailRef: l,
            xRailRef: c,
            needYBar: fe,
            needXBar: z,
            yBarSizePx: j,
            xBarSizePx: O,
            yBarTopPx: Y,
            xBarLeftPx: de,
            isShowXBar: ee,
            isShowYBar: ue,
            isIos: I,
            handleScroll: W,
            handleContentResize: pe,
            handleContainerResize: re,
            handleYScrollMouseDown: ze,
            handleXScrollMouseDown: me,
            cssVars: n ? void 0 : It,
            themeClass: rt == null ? void 0 : rt.themeClass,
            onRender: rt == null ? void 0 : rt.onRender,
          }
        );
      },
      render() {
        var t;
        const {
          $slots: e,
          mergedClsPrefix: n,
          triggerDisplayManually: r,
          rtlEnabled: i,
          internalHoistYRail: o,
        } = this;
        if (!this.scrollable)
          return (t = e.default) === null || t === void 0 ? void 0 : t.call(e);
        const s = this.trigger === "none",
          a = (u, d) =>
            C(
              "div",
              {
                ref: "yRailRef",
                class: [
                  `${n}-scrollbar-rail`,
                  `${n}-scrollbar-rail--vertical`,
                  u,
                ],
                "data-scrollbar-rail": !0,
                style: [d || "", this.verticalRailStyle],
                "aria-hiddens": !0,
              },
              C(s ? Vm : vn, s ? null : { name: "fade-in-transition" }, {
                default: () =>
                  this.needYBar && this.isShowYBar && !this.isIos
                    ? C("div", {
                        class: `${n}-scrollbar-rail__scrollbar`,
                        style: { height: this.yBarSizePx, top: this.yBarTopPx },
                        onMousedown: this.handleYScrollMouseDown,
                      })
                    : null,
              })
            ),
          l = () => {
            var u, d;
            return (
              (u = this.onRender) === null || u === void 0 || u.call(this),
              C(
                "div",
                qs(this.$attrs, {
                  role: "none",
                  ref: "wrapperRef",
                  class: [
                    `${n}-scrollbar`,
                    this.themeClass,
                    i && `${n}-scrollbar--rtl`,
                  ],
                  style: this.cssVars,
                  onMouseenter: r ? void 0 : this.handleMouseEnterWrapper,
                  onMouseleave: r ? void 0 : this.handleMouseLeaveWrapper,
                }),
                [
                  this.container
                    ? (d = e.default) === null || d === void 0
                      ? void 0
                      : d.call(e)
                    : C(
                        "div",
                        {
                          role: "none",
                          ref: "containerRef",
                          class: [
                            `${n}-scrollbar-container`,
                            this.containerClass,
                          ],
                          style: this.containerStyle,
                          onScroll: this.handleScroll,
                          onWheel: this.onWheel,
                        },
                        C(
                          $o,
                          { onResize: this.handleContentResize },
                          {
                            default: () =>
                              C(
                                "div",
                                {
                                  ref: "contentRef",
                                  role: "none",
                                  style: [
                                    {
                                      width: this.xScrollable
                                        ? "fit-content"
                                        : null,
                                    },
                                    this.contentStyle,
                                  ],
                                  class: [
                                    `${n}-scrollbar-content`,
                                    this.contentClass,
                                  ],
                                },
                                e
                              ),
                          }
                        )
                      ),
                  o ? null : a(void 0, void 0),
                  this.xScrollable &&
                    C(
                      "div",
                      {
                        ref: "xRailRef",
                        class: [
                          `${n}-scrollbar-rail`,
                          `${n}-scrollbar-rail--horizontal`,
                        ],
                        style: this.horizontalRailStyle,
                        "data-scrollbar-rail": !0,
                        "aria-hidden": !0,
                      },
                      C(
                        s ? Vm : vn,
                        s ? null : { name: "fade-in-transition" },
                        {
                          default: () =>
                            this.needXBar && this.isShowXBar && !this.isIos
                              ? C("div", {
                                  class: `${n}-scrollbar-rail__scrollbar`,
                                  style: {
                                    width: this.xBarSizePx,
                                    right: i ? this.xBarLeftPx : void 0,
                                    left: i ? void 0 : this.xBarLeftPx,
                                  },
                                  onMousedown: this.handleXScrollMouseDown,
                                })
                              : null,
                        }
                      )
                    ),
                ]
              )
            );
          },
          c = this.container
            ? l()
            : C($o, { onResize: this.handleContainerResize }, { default: l });
        return o ? C(pt, null, c, a(this.themeClass, this.cssVars)) : c;
      },
    }),
    Ll = Lx,
    CL = Lx,
    _L = {
      height: "calc(var(--n-option-height) * 7.6)",
      paddingSmall: "4px 0",
      paddingMedium: "4px 0",
      paddingLarge: "4px 0",
      paddingHuge: "4px 0",
      optionPaddingSmall: "0 12px",
      optionPaddingMedium: "0 12px",
      optionPaddingLarge: "0 12px",
      optionPaddingHuge: "0 12px",
      loadingSize: "18px",
    },
    $x = (t) => {
      const {
        borderRadius: e,
        popoverColor: n,
        textColor3: r,
        dividerColor: i,
        textColor2: o,
        primaryColorPressed: s,
        textColorDisabled: a,
        primaryColor: l,
        opacityDisabled: c,
        hoverColor: u,
        fontSizeSmall: d,
        fontSizeMedium: h,
        fontSizeLarge: g,
        fontSizeHuge: f,
        heightSmall: p,
        heightMedium: b,
        heightLarge: m,
        heightHuge: _,
      } = t;
      return Object.assign(Object.assign({}, _L), {
        optionFontSizeSmall: d,
        optionFontSizeMedium: h,
        optionFontSizeLarge: g,
        optionFontSizeHuge: f,
        optionHeightSmall: p,
        optionHeightMedium: b,
        optionHeightLarge: m,
        optionHeightHuge: _,
        borderRadius: e,
        color: n,
        groupHeaderTextColor: r,
        actionDividerColor: i,
        optionTextColor: o,
        optionTextColorPressed: s,
        optionTextColorDisabled: a,
        optionTextColorActive: l,
        optionOpacityDisabled: c,
        optionCheckColor: l,
        optionColorPending: u,
        optionColorActive: "rgba(0, 0, 0, 0)",
        optionColorActivePending: u,
        actionTextColor: o,
        loadingColor: l,
      });
    },
    wL = {
      name: "InternalSelectMenu",
      common: Ut,
      peers: { Scrollbar: Yu, Empty: Dg },
      self: $x,
    },
    Dx = wL,
    SL = {
      name: "InternalSelectMenu",
      common: Oe,
      peers: { Scrollbar: jn, Empty: qo },
      self: $x,
    },
    $l = SL;
  function EL(t, e) {
    return C(
      vn,
      { name: "fade-in-scale-up-transition" },
      {
        default: () =>
          t
            ? C(
                ht,
                { clsPrefix: e, class: `${e}-base-select-option__check` },
                { default: () => C(h3) }
              )
            : null,
      }
    );
  }
  const av = $e({
      name: "NBaseSelectOption",
      props: {
        clsPrefix: { type: String, required: !0 },
        tmNode: { type: Object, required: !0 },
      },
      setup(t) {
        const {
            valueRef: e,
            pendingTmNodeRef: n,
            multipleRef: r,
            valueSetRef: i,
            renderLabelRef: o,
            renderOptionRef: s,
            labelFieldRef: a,
            valueFieldRef: l,
            showCheckmarkRef: c,
            nodePropsRef: u,
            handleOptionClick: d,
            handleOptionMouseEnter: h,
          } = Ve(hg),
          g = Tn(() => {
            const { value: m } = n;
            return m ? t.tmNode.key === m.key : !1;
          });
        function f(m) {
          const { tmNode: _ } = t;
          _.disabled || d(m, _);
        }
        function p(m) {
          const { tmNode: _ } = t;
          _.disabled || h(m, _);
        }
        function b(m) {
          const { tmNode: _ } = t,
            { value: R } = g;
          _.disabled || R || h(m, _);
        }
        return {
          multiple: r,
          isGrouped: Tn(() => {
            const { tmNode: m } = t,
              { parent: _ } = m;
            return _ && _.rawNode.type === "group";
          }),
          showCheckmark: c,
          nodeProps: u,
          isPending: g,
          isSelected: Tn(() => {
            const { value: m } = e,
              { value: _ } = r;
            if (m === null) return !1;
            const R = t.tmNode.rawNode[l.value];
            if (_) {
              const { value: S } = i;
              return S.has(R);
            } else return m === R;
          }),
          labelField: a,
          renderLabel: o,
          renderOption: s,
          handleMouseMove: b,
          handleMouseEnter: p,
          handleClick: f,
        };
      },
      render() {
        const {
            clsPrefix: t,
            tmNode: { rawNode: e },
            isSelected: n,
            isPending: r,
            isGrouped: i,
            showCheckmark: o,
            nodeProps: s,
            renderOption: a,
            renderLabel: l,
            handleClick: c,
            handleMouseEnter: u,
            handleMouseMove: d,
          } = this,
          h = EL(n, t),
          g = l ? [l(e, n), o && h] : [wn(e[this.labelField], e, n), o && h],
          f = s == null ? void 0 : s(e),
          p = C(
            "div",
            Object.assign({}, f, {
              class: [
                `${t}-base-select-option`,
                e.class,
                f == null ? void 0 : f.class,
                {
                  [`${t}-base-select-option--disabled`]: e.disabled,
                  [`${t}-base-select-option--selected`]: n,
                  [`${t}-base-select-option--grouped`]: i,
                  [`${t}-base-select-option--pending`]: r,
                  [`${t}-base-select-option--show-checkmark`]: o,
                },
              ],
              style: [(f == null ? void 0 : f.style) || "", e.style || ""],
              onClick: Vd([c, f == null ? void 0 : f.onClick]),
              onMouseenter: Vd([u, f == null ? void 0 : f.onMouseenter]),
              onMousemove: Vd([d, f == null ? void 0 : f.onMousemove]),
            }),
            C("div", { class: `${t}-base-select-option__content` }, g)
          );
        return e.render
          ? e.render({ node: p, option: e, selected: n })
          : a
          ? a({ node: p, option: e, selected: n })
          : p;
      },
    }),
    lv = $e({
      name: "NBaseSelectGroupHeader",
      props: {
        clsPrefix: { type: String, required: !0 },
        tmNode: { type: Object, required: !0 },
      },
      setup() {
        const {
          renderLabelRef: t,
          renderOptionRef: e,
          labelFieldRef: n,
          nodePropsRef: r,
        } = Ve(hg);
        return { labelField: n, nodeProps: r, renderLabel: t, renderOption: e };
      },
      render() {
        const {
            clsPrefix: t,
            renderLabel: e,
            renderOption: n,
            nodeProps: r,
            tmNode: { rawNode: i },
          } = this,
          o = r == null ? void 0 : r(i),
          s = e ? e(i, !1) : wn(i[this.labelField], i, !1),
          a = C(
            "div",
            Object.assign({}, o, {
              class: [
                `${t}-base-select-group-header`,
                o == null ? void 0 : o.class,
              ],
            }),
            s
          );
        return i.render
          ? i.render({ node: a, option: i })
          : n
          ? n({ node: a, option: i, selected: !1 })
          : a;
      },
    }),
    { cubicBezierEaseIn: cv, cubicBezierEaseOut: uv } = to;
  function Hs({
    transformOrigin: t = "inherit",
    duration: e = ".2s",
    enterScale: n = ".9",
    originalTransform: r = "",
    originalTransition: i = "",
  } = {}) {
    return [
      q("&.fade-in-scale-up-transition-leave-active", {
        transformOrigin: t,
        transition: `opacity ${e} ${cv}, transform ${e} ${cv} ${i && "," + i}`,
      }),
      q("&.fade-in-scale-up-transition-enter-active", {
        transformOrigin: t,
        transition: `opacity ${e} ${uv}, transform ${e} ${uv} ${i && "," + i}`,
      }),
      q(
        "&.fade-in-scale-up-transition-enter-from, &.fade-in-scale-up-transition-leave-to",
        { opacity: 0, transform: `${r} scale(${n})` }
      ),
      q(
        "&.fade-in-scale-up-transition-leave-from, &.fade-in-scale-up-transition-enter-to",
        { opacity: 1, transform: `${r} scale(1)` }
      ),
    ];
  }
  const RL = M(
      "base-select-menu",
      `
 line-height: 1.5;
 outline: none;
 z-index: 0;
 position: relative;
 border-radius: var(--n-border-radius);
 transition:
 background-color .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier);
 background-color: var(--n-color);
`,
      [
        M(
          "scrollbar",
          `
 max-height: var(--n-height);
 `
        ),
        M(
          "virtual-list",
          `
 max-height: var(--n-height);
 `
        ),
        M(
          "base-select-option",
          `
 min-height: var(--n-option-height);
 font-size: var(--n-option-font-size);
 display: flex;
 align-items: center;
 `,
          [
            ne(
              "content",
              `
 z-index: 1;
 white-space: nowrap;
 text-overflow: ellipsis;
 overflow: hidden;
 `
            ),
          ]
        ),
        M(
          "base-select-group-header",
          `
 min-height: var(--n-option-height);
 font-size: .93em;
 display: flex;
 align-items: center;
 `
        ),
        M(
          "base-select-menu-option-wrapper",
          `
 position: relative;
 width: 100%;
 `
        ),
        ne(
          "loading, empty",
          `
 display: flex;
 padding: 12px 32px;
 flex: 1;
 justify-content: center;
 `
        ),
        ne(
          "loading",
          `
 color: var(--n-loading-color);
 font-size: var(--n-loading-size);
 `
        ),
        ne(
          "header",
          `
 padding: 8px var(--n-option-padding-left);
 font-size: var(--n-option-font-size);
 transition:
 color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 border-bottom: 1px solid var(--n-action-divider-color);
 color: var(--n-action-text-color);
 `
        ),
        ne(
          "action",
          `
 padding: 8px var(--n-option-padding-left);
 font-size: var(--n-option-font-size);
 transition:
 color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 border-top: 1px solid var(--n-action-divider-color);
 color: var(--n-action-text-color);
 `
        ),
        M(
          "base-select-group-header",
          `
 position: relative;
 cursor: default;
 padding: var(--n-option-padding);
 color: var(--n-group-header-text-color);
 `
        ),
        M(
          "base-select-option",
          `
 cursor: pointer;
 position: relative;
 padding: var(--n-option-padding);
 transition:
 color .3s var(--n-bezier),
 opacity .3s var(--n-bezier);
 box-sizing: border-box;
 color: var(--n-option-text-color);
 opacity: 1;
 `,
          [
            te(
              "show-checkmark",
              `
 padding-right: calc(var(--n-option-padding-right) + 20px);
 `
            ),
            q(
              "&::before",
              `
 content: "";
 position: absolute;
 left: 4px;
 right: 4px;
 top: 0;
 bottom: 0;
 border-radius: var(--n-border-radius);
 transition: background-color .3s var(--n-bezier);
 `
            ),
            q(
              "&:active",
              `
 color: var(--n-option-text-color-pressed);
 `
            ),
            te(
              "grouped",
              `
 padding-left: calc(var(--n-option-padding-left) * 1.5);
 `
            ),
            te("pending", [
              q(
                "&::before",
                `
 background-color: var(--n-option-color-pending);
 `
              ),
            ]),
            te(
              "selected",
              `
 color: var(--n-option-text-color-active);
 `,
              [
                q(
                  "&::before",
                  `
 background-color: var(--n-option-color-active);
 `
                ),
                te("pending", [
                  q(
                    "&::before",
                    `
 background-color: var(--n-option-color-active-pending);
 `
                  ),
                ]),
              ]
            ),
            te(
              "disabled",
              `
 cursor: not-allowed;
 `,
              [
                Zt(
                  "selected",
                  `
 color: var(--n-option-text-color-disabled);
 `
                ),
                te(
                  "selected",
                  `
 opacity: var(--n-option-opacity-disabled);
 `
                ),
              ]
            ),
            ne(
              "check",
              `
 font-size: 16px;
 position: absolute;
 right: calc(var(--n-option-padding-right) - 4px);
 top: calc(50% - 7px);
 color: var(--n-option-check-color);
 transition: color .3s var(--n-bezier);
 `,
              [Hs({ enterScale: "0.5" })]
            ),
          ]
        ),
      ]
    ),
    TL = $e({
      name: "InternalSelectMenu",
      props: Object.assign(Object.assign({}, Ye.props), {
        clsPrefix: { type: String, required: !0 },
        scrollable: { type: Boolean, default: !0 },
        treeMate: { type: Object, required: !0 },
        multiple: Boolean,
        size: { type: String, default: "medium" },
        value: { type: [String, Number, Array], default: null },
        autoPending: Boolean,
        virtualScroll: { type: Boolean, default: !0 },
        show: { type: Boolean, default: !0 },
        labelField: { type: String, default: "label" },
        valueField: { type: String, default: "value" },
        loading: Boolean,
        focusable: Boolean,
        renderLabel: Function,
        renderOption: Function,
        nodeProps: Function,
        showCheckmark: { type: Boolean, default: !0 },
        onMousedown: Function,
        onScroll: Function,
        onFocus: Function,
        onBlur: Function,
        onKeyup: Function,
        onKeydown: Function,
        onTabOut: Function,
        onMouseenter: Function,
        onMouseleave: Function,
        onResize: Function,
        resetMenuOnOptionsChange: { type: Boolean, default: !0 },
        inlineThemeDisabled: Boolean,
        onToggle: Function,
      }),
      setup(t) {
        const { mergedClsPrefixRef: e, mergedRtlRef: n } = Ct(t),
          r = Cr("InternalSelectMenu", n, e),
          i = Ye(
            "InternalSelectMenu",
            "-internal-select-menu",
            RL,
            Dx,
            t,
            We(t, "clsPrefix")
          ),
          o = U(null),
          s = U(null),
          a = U(null),
          l = ce(() => t.treeMate.getFlattenedNodes()),
          c = ce(() => U3(l.value)),
          u = U(null);
        function d() {
          const { treeMate: z } = t;
          let ee = null;
          const { value: ue } = t;
          ue === null
            ? (ee = z.getFirstAvailableNode())
            : (t.multiple
                ? (ee = z.getNode((ue || [])[(ue || []).length - 1]))
                : (ee = z.getNode(ue)),
              (!ee || ee.disabled) && (ee = z.getFirstAvailableNode())),
            j(ee || null);
        }
        function h() {
          const { value: z } = u;
          z && !t.treeMate.getNode(z.key) && (u.value = null);
        }
        let g;
        Et(
          () => t.show,
          (z) => {
            z
              ? (g = Et(
                  () => t.treeMate,
                  () => {
                    t.resetMenuOnOptionsChange
                      ? (t.autoPending ? d() : h(), Ht(k))
                      : h();
                  },
                  { immediate: !0 }
                ))
              : g == null || g();
          },
          { immediate: !0 }
        ),
          Qt(() => {
            g == null || g();
          });
        const f = ce(() => kn(i.value.self[Te("optionHeight", t.size)])),
          p = ce(() => nr(i.value.self[Te("padding", t.size)])),
          b = ce(() =>
            t.multiple && Array.isArray(t.value) ? new Set(t.value) : new Set()
          ),
          m = ce(() => {
            const z = l.value;
            return z && z.length === 0;
          });
        function _(z) {
          const { onToggle: ee } = t;
          ee && ee(z);
        }
        function R(z) {
          const { onScroll: ee } = t;
          ee && ee(z);
        }
        function S(z) {
          var ee;
          (ee = a.value) === null || ee === void 0 || ee.sync(), R(z);
        }
        function x() {
          var z;
          (z = a.value) === null || z === void 0 || z.sync();
        }
        function E() {
          const { value: z } = u;
          return z || null;
        }
        function w(z, ee) {
          ee.disabled || j(ee, !1);
        }
        function v(z, ee) {
          ee.disabled || _(ee);
        }
        function y(z) {
          var ee;
          Wm(z, "action") ||
            (ee = t.onKeyup) === null ||
            ee === void 0 ||
            ee.call(t, z);
        }
        function T(z) {
          var ee;
          Wm(z, "action") ||
            (ee = t.onKeydown) === null ||
            ee === void 0 ||
            ee.call(t, z);
        }
        function A(z) {
          var ee;
          (ee = t.onMousedown) === null || ee === void 0 || ee.call(t, z),
            !t.focusable && z.preventDefault();
        }
        function I() {
          const { value: z } = u;
          z && j(z.getNext({ loop: !0 }), !0);
        }
        function L() {
          const { value: z } = u;
          z && j(z.getPrev({ loop: !0 }), !0);
        }
        function j(z, ee = !1) {
          (u.value = z), ee && k();
        }
        function k() {
          var z, ee;
          const ue = u.value;
          if (!ue) return;
          const K = c.value(ue.key);
          K !== null &&
            (t.virtualScroll
              ? (z = s.value) === null ||
                z === void 0 ||
                z.scrollTo({ index: K })
              : (ee = a.value) === null ||
                ee === void 0 ||
                ee.scrollTo({ index: K, elSize: f.value }));
        }
        function O(z) {
          var ee, ue;
          !((ee = o.value) === null || ee === void 0) &&
            ee.contains(z.target) &&
            ((ue = t.onFocus) === null || ue === void 0 || ue.call(t, z));
        }
        function D(z) {
          var ee, ue;
          (!((ee = o.value) === null || ee === void 0) &&
            ee.contains(z.relatedTarget)) ||
            (ue = t.onBlur) === null ||
            ue === void 0 ||
            ue.call(t, z);
        }
        vt(hg, {
          handleOptionMouseEnter: w,
          handleOptionClick: v,
          valueSetRef: b,
          pendingTmNodeRef: u,
          nodePropsRef: We(t, "nodeProps"),
          showCheckmarkRef: We(t, "showCheckmark"),
          multipleRef: We(t, "multiple"),
          valueRef: We(t, "value"),
          renderLabelRef: We(t, "renderLabel"),
          renderOptionRef: We(t, "renderOption"),
          labelFieldRef: We(t, "labelField"),
          valueFieldRef: We(t, "valueField"),
        }),
          vt(_y, o),
          Vt(() => {
            const { value: z } = a;
            z && z.sync();
          });
        const Y = ce(() => {
            const { size: z } = t,
              {
                common: { cubicBezierEaseInOut: ee },
                self: {
                  height: ue,
                  borderRadius: K,
                  color: _e,
                  groupHeaderTextColor: ie,
                  actionDividerColor: pe,
                  optionTextColorPressed: re,
                  optionTextColor: ge,
                  optionTextColorDisabled: ke,
                  optionTextColorActive: Me,
                  optionOpacityDisabled: P,
                  optionCheckColor: $,
                  actionTextColor: H,
                  optionColorPending: ae,
                  optionColorActive: le,
                  loadingColor: he,
                  loadingSize: Z,
                  optionColorActivePending: W,
                  [Te("optionFontSize", z)]: Q,
                  [Te("optionHeight", z)]: J,
                  [Te("optionPadding", z)]: G,
                },
              } = i.value;
            return {
              "--n-height": ue,
              "--n-action-divider-color": pe,
              "--n-action-text-color": H,
              "--n-bezier": ee,
              "--n-border-radius": K,
              "--n-color": _e,
              "--n-option-font-size": Q,
              "--n-group-header-text-color": ie,
              "--n-option-check-color": $,
              "--n-option-color-pending": ae,
              "--n-option-color-active": le,
              "--n-option-color-active-pending": W,
              "--n-option-height": J,
              "--n-option-opacity-disabled": P,
              "--n-option-text-color": ge,
              "--n-option-text-color-active": Me,
              "--n-option-text-color-disabled": ke,
              "--n-option-text-color-pressed": re,
              "--n-option-padding": G,
              "--n-option-padding-left": nr(G, "left"),
              "--n-option-padding-right": nr(G, "right"),
              "--n-loading-color": he,
              "--n-loading-size": Z,
            };
          }),
          { inlineThemeDisabled: se } = t,
          de = se
            ? jt(
                "internal-select-menu",
                ce(() => t.size[0]),
                Y,
                t
              )
            : void 0,
          fe = { selfRef: o, next: I, prev: L, getPendingTmNode: E };
        return (
          HP(o, t.onResize),
          Object.assign(
            {
              mergedTheme: i,
              mergedClsPrefix: e,
              rtlEnabled: r,
              virtualListRef: s,
              scrollbarRef: a,
              itemSize: f,
              padding: p,
              flattenedNodes: l,
              empty: m,
              virtualListContainer() {
                const { value: z } = s;
                return z == null ? void 0 : z.listElRef;
              },
              virtualListContent() {
                const { value: z } = s;
                return z == null ? void 0 : z.itemsElRef;
              },
              doScroll: R,
              handleFocusin: O,
              handleFocusout: D,
              handleKeyUp: y,
              handleKeyDown: T,
              handleMouseDown: A,
              handleVirtualListResize: x,
              handleVirtualListScroll: S,
              cssVars: se ? void 0 : Y,
              themeClass: de == null ? void 0 : de.themeClass,
              onRender: de == null ? void 0 : de.onRender,
            },
            fe
          )
        );
      },
      render() {
        const {
          $slots: t,
          virtualScroll: e,
          clsPrefix: n,
          mergedTheme: r,
          themeClass: i,
          onRender: o,
        } = this;
        return (
          o == null || o(),
          C(
            "div",
            {
              ref: "selfRef",
              tabindex: this.focusable ? 0 : -1,
              class: [
                `${n}-base-select-menu`,
                this.rtlEnabled && `${n}-base-select-menu--rtl`,
                i,
                this.multiple && `${n}-base-select-menu--multiple`,
              ],
              style: this.cssVars,
              onFocusin: this.handleFocusin,
              onFocusout: this.handleFocusout,
              onKeyup: this.handleKeyUp,
              onKeydown: this.handleKeyDown,
              onMousedown: this.handleMouseDown,
              onMouseenter: this.onMouseenter,
              onMouseleave: this.onMouseleave,
            },
            gt(
              t.header,
              (s) =>
                s &&
                C(
                  "div",
                  {
                    class: `${n}-base-select-menu__header`,
                    "data-header": !0,
                    key: "header",
                  },
                  s
                )
            ),
            this.loading
              ? C(
                  "div",
                  { class: `${n}-base-select-menu__loading` },
                  C(Ml, { clsPrefix: n, strokeWidth: 20 })
                )
              : this.empty
              ? C(
                  "div",
                  { class: `${n}-base-select-menu__empty`, "data-empty": !0 },
                  Lr(t.empty, () => [
                    C(mL, {
                      theme: r.peers.Empty,
                      themeOverrides: r.peerOverrides.Empty,
                    }),
                  ])
                )
              : C(
                  Ll,
                  {
                    ref: "scrollbarRef",
                    theme: r.peers.Scrollbar,
                    themeOverrides: r.peerOverrides.Scrollbar,
                    scrollable: this.scrollable,
                    container: e ? this.virtualListContainer : void 0,
                    content: e ? this.virtualListContent : void 0,
                    onScroll: e ? void 0 : this.doScroll,
                  },
                  {
                    default: () =>
                      e
                        ? C(
                            zP,
                            {
                              ref: "virtualListRef",
                              class: `${n}-virtual-list`,
                              items: this.flattenedNodes,
                              itemSize: this.itemSize,
                              showScrollbar: !1,
                              paddingTop: this.padding.top,
                              paddingBottom: this.padding.bottom,
                              onResize: this.handleVirtualListResize,
                              onScroll: this.handleVirtualListScroll,
                              itemResizable: !0,
                            },
                            {
                              default: ({ item: s }) =>
                                s.isGroup
                                  ? C(lv, {
                                      key: s.key,
                                      clsPrefix: n,
                                      tmNode: s,
                                    })
                                  : s.ignored
                                  ? null
                                  : C(av, {
                                      clsPrefix: n,
                                      key: s.key,
                                      tmNode: s,
                                    }),
                            }
                          )
                        : C(
                            "div",
                            {
                              class: `${n}-base-select-menu-option-wrapper`,
                              style: {
                                paddingTop: this.padding.top,
                                paddingBottom: this.padding.bottom,
                              },
                            },
                            this.flattenedNodes.map((s) =>
                              s.isGroup
                                ? C(lv, { key: s.key, clsPrefix: n, tmNode: s })
                                : C(av, { clsPrefix: n, key: s.key, tmNode: s })
                            )
                          ),
                  }
                ),
            gt(
              t.action,
              (s) =>
                s && [
                  C(
                    "div",
                    {
                      class: `${n}-base-select-menu__action`,
                      "data-action": !0,
                      key: "action",
                    },
                    s
                  ),
                  C(A3, { onFocus: this.onTabOut, key: "focus-detector" }),
                ]
            )
          )
        );
      },
    }),
    PL = M(
      "base-wave",
      `
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 border-radius: inherit;
`
    ),
    AL = $e({
      name: "BaseWave",
      props: { clsPrefix: { type: String, required: !0 } },
      setup(t) {
        Ko("-base-wave", PL, We(t, "clsPrefix"));
        const e = U(null),
          n = U(!1);
        let r = null;
        return (
          Qt(() => {
            r !== null && window.clearTimeout(r);
          }),
          {
            active: n,
            selfRef: e,
            play() {
              r !== null &&
                (window.clearTimeout(r), (n.value = !1), (r = null)),
                Ht(() => {
                  var i;
                  (i = e.value) === null || i === void 0 || i.offsetHeight,
                    (n.value = !0),
                    (r = window.setTimeout(() => {
                      (n.value = !1), (r = null);
                    }, 1e3));
                });
            },
          }
        );
      },
      render() {
        const { clsPrefix: t } = this;
        return C("div", {
          ref: "selfRef",
          "aria-hidden": !0,
          class: [`${t}-base-wave`, this.active && `${t}-base-wave--active`],
        });
      },
    }),
    kL = {
      space: "6px",
      spaceArrow: "10px",
      arrowOffset: "10px",
      arrowOffsetVertical: "10px",
      arrowHeight: "6px",
      padding: "8px 14px",
    },
    zx = (t) => {
      const {
        boxShadow2: e,
        popoverColor: n,
        textColor2: r,
        borderRadius: i,
        fontSize: o,
        dividerColor: s,
      } = t;
      return Object.assign(Object.assign({}, kL), {
        fontSize: o,
        borderRadius: i,
        color: n,
        dividerColor: s,
        textColor: r,
        boxShadow: e,
      });
    },
    Fx = { name: "Popover", common: Ut, self: zx },
    IL = { name: "Popover", common: Oe, self: zx },
    Zo = IL,
    ch = { top: "bottom", bottom: "top", left: "right", right: "left" },
    un = "var(--n-arrow-height) * 1.414",
    OL = q([
      M(
        "popover",
        `
 transition:
 box-shadow .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 position: relative;
 font-size: var(--n-font-size);
 color: var(--n-text-color);
 box-shadow: var(--n-box-shadow);
 word-break: break-word;
 `,
        [
          q(">", [
            M(
              "scrollbar",
              `
 height: inherit;
 max-height: inherit;
 `
            ),
          ]),
          Zt(
            "raw",
            `
 background-color: var(--n-color);
 border-radius: var(--n-border-radius);
 `,
            [
              Zt("scrollable", [
                Zt("show-header-or-footer", "padding: var(--n-padding);"),
              ]),
            ]
          ),
          ne(
            "header",
            `
 padding: var(--n-padding);
 border-bottom: 1px solid var(--n-divider-color);
 transition: border-color .3s var(--n-bezier);
 `
          ),
          ne(
            "footer",
            `
 padding: var(--n-padding);
 border-top: 1px solid var(--n-divider-color);
 transition: border-color .3s var(--n-bezier);
 `
          ),
          te("scrollable, show-header-or-footer", [
            ne(
              "content",
              `
 padding: var(--n-padding);
 `
            ),
          ]),
        ]
      ),
      M(
        "popover-shared",
        `
 transform-origin: inherit;
 `,
        [
          M(
            "popover-arrow-wrapper",
            `
 position: absolute;
 overflow: hidden;
 pointer-events: none;
 `,
            [
              M(
                "popover-arrow",
                `
 transition: background-color .3s var(--n-bezier);
 position: absolute;
 display: block;
 width: calc(${un});
 height: calc(${un});
 box-shadow: 0 0 8px 0 rgba(0, 0, 0, .12);
 transform: rotate(45deg);
 background-color: var(--n-color);
 pointer-events: all;
 `
              ),
            ]
          ),
          q(
            "&.popover-transition-enter-from, &.popover-transition-leave-to",
            `
 opacity: 0;
 transform: scale(.85);
 `
          ),
          q(
            "&.popover-transition-enter-to, &.popover-transition-leave-from",
            `
 transform: scale(1);
 opacity: 1;
 `
          ),
          q(
            "&.popover-transition-enter-active",
            `
 transition:
 box-shadow .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier),
 opacity .15s var(--n-bezier-ease-out),
 transform .15s var(--n-bezier-ease-out);
 `
          ),
          q(
            "&.popover-transition-leave-active",
            `
 transition:
 box-shadow .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier),
 opacity .15s var(--n-bezier-ease-in),
 transform .15s var(--n-bezier-ease-in);
 `
          ),
        ]
      ),
      Jn(
        "top-start",
        `
 top: calc(${un} / -2);
 left: calc(${Wr("top-start")} - var(--v-offset-left));
 `
      ),
      Jn(
        "top",
        `
 top: calc(${un} / -2);
 transform: translateX(calc(${un} / -2)) rotate(45deg);
 left: 50%;
 `
      ),
      Jn(
        "top-end",
        `
 top: calc(${un} / -2);
 right: calc(${Wr("top-end")} + var(--v-offset-left));
 `
      ),
      Jn(
        "bottom-start",
        `
 bottom: calc(${un} / -2);
 left: calc(${Wr("bottom-start")} - var(--v-offset-left));
 `
      ),
      Jn(
        "bottom",
        `
 bottom: calc(${un} / -2);
 transform: translateX(calc(${un} / -2)) rotate(45deg);
 left: 50%;
 `
      ),
      Jn(
        "bottom-end",
        `
 bottom: calc(${un} / -2);
 right: calc(${Wr("bottom-end")} + var(--v-offset-left));
 `
      ),
      Jn(
        "left-start",
        `
 left: calc(${un} / -2);
 top: calc(${Wr("left-start")} - var(--v-offset-top));
 `
      ),
      Jn(
        "left",
        `
 left: calc(${un} / -2);
 transform: translateY(calc(${un} / -2)) rotate(45deg);
 top: 50%;
 `
      ),
      Jn(
        "left-end",
        `
 left: calc(${un} / -2);
 bottom: calc(${Wr("left-end")} + var(--v-offset-top));
 `
      ),
      Jn(
        "right-start",
        `
 right: calc(${un} / -2);
 top: calc(${Wr("right-start")} - var(--v-offset-top));
 `
      ),
      Jn(
        "right",
        `
 right: calc(${un} / -2);
 transform: translateY(calc(${un} / -2)) rotate(45deg);
 top: 50%;
 `
      ),
      Jn(
        "right-end",
        `
 right: calc(${un} / -2);
 bottom: calc(${Wr("right-end")} + var(--v-offset-top));
 `
      ),
      ...mM(
        {
          top: ["right-start", "left-start"],
          right: ["top-end", "bottom-end"],
          bottom: ["right-end", "left-end"],
          left: ["top-start", "bottom-start"],
        },
        (t, e) => {
          const n = ["right", "left"].includes(e),
            r = n ? "width" : "height";
          return t.map((i) => {
            const o = i.split("-")[1] === "end",
              a = `calc((${`var(--v-target-${r}, 0px)`} - ${un}) / 2)`,
              l = Wr(i);
            return q(`[v-placement="${i}"] >`, [
              M("popover-shared", [
                te("center-arrow", [
                  M(
                    "popover-arrow",
                    `${e}: calc(max(${a}, ${l}) ${
                      o ? "+" : "-"
                    } var(--v-offset-${n ? "left" : "top"}));`
                  ),
                ]),
              ]),
            ]);
          });
        }
      ),
    ]);
  function Wr(t) {
    return ["top", "bottom"].includes(t.split("-")[0])
      ? "var(--n-arrow-offset)"
      : "var(--n-arrow-offset-vertical)";
  }
  function Jn(t, e) {
    const n = t.split("-")[0],
      r = ["top", "bottom"].includes(n)
        ? "height: var(--n-space-arrow);"
        : "width: var(--n-space-arrow);";
    return q(`[v-placement="${t}"] >`, [
      M(
        "popover-shared",
        `
 margin-${ch[n]}: var(--n-space);
 `,
        [
          te(
            "show-arrow",
            `
 margin-${ch[n]}: var(--n-space-arrow);
 `
          ),
          te(
            "overlap",
            `
 margin: 0;
 `
          ),
          MT(
            "popover-arrow-wrapper",
            `
 right: 0;
 left: 0;
 top: 0;
 bottom: 0;
 ${n}: 100%;
 ${ch[n]}: auto;
 ${r}
 `,
            [M("popover-arrow", e)]
          ),
        ]
      ),
    ]);
  }
  const Bx = Object.assign(Object.assign({}, Ye.props), {
      to: ar.propTo,
      show: Boolean,
      trigger: String,
      showArrow: Boolean,
      delay: Number,
      duration: Number,
      raw: Boolean,
      arrowPointToCenter: Boolean,
      arrowClass: String,
      arrowStyle: [String, Object],
      arrowWrapperClass: String,
      arrowWrapperStyle: [String, Object],
      displayDirective: String,
      x: Number,
      y: Number,
      flip: Boolean,
      overlap: Boolean,
      placement: String,
      width: [Number, String],
      keepAliveOnHover: Boolean,
      scrollable: Boolean,
      contentClass: String,
      contentStyle: [Object, String],
      headerClass: String,
      headerStyle: [Object, String],
      footerClass: String,
      footerStyle: [Object, String],
      internalDeactivateImmediately: Boolean,
      animated: Boolean,
      onClickoutside: Function,
      internalTrapFocus: Boolean,
      internalOnAfterLeave: Function,
      minWidth: Number,
      maxWidth: Number,
    }),
    ML = ({
      arrowClass: t,
      arrowStyle: e,
      arrowWrapperClass: n,
      arrowWrapperStyle: r,
      clsPrefix: i,
    }) =>
      C(
        "div",
        {
          key: "__popover-arrow__",
          style: r,
          class: [`${i}-popover-arrow-wrapper`, n],
        },
        C("div", { class: [`${i}-popover-arrow`, t], style: e })
      ),
    LL = $e({
      name: "PopoverBody",
      inheritAttrs: !1,
      props: Bx,
      setup(t, { slots: e, attrs: n }) {
        const {
            namespaceRef: r,
            mergedClsPrefixRef: i,
            inlineThemeDisabled: o,
          } = Ct(t),
          s = Ye("Popover", "-popover", OL, Fx, t, i),
          a = U(null),
          l = Ve("NPopover"),
          c = U(null),
          u = U(t.show),
          d = U(!1);
        or(() => {
          const { show: w } = t;
          w && !LT() && !t.internalDeactivateImmediately && (d.value = !0);
        });
        const h = ce(() => {
            const { trigger: w, onClickoutside: v } = t,
              y = [],
              {
                positionManuallyRef: { value: T },
              } = l;
            return (
              T ||
                (w === "click" &&
                  !v &&
                  y.push([Qc, S, void 0, { capture: !0 }]),
                w === "hover" && y.push([ZT, R])),
              v && y.push([Qc, S, void 0, { capture: !0 }]),
              (t.displayDirective === "show" || (t.animated && d.value)) &&
                y.push([$s, t.show]),
              y
            );
          }),
          g = ce(() => {
            const w = t.width === "trigger" ? void 0 : Kr(t.width),
              v = [];
            w && v.push({ width: w });
            const { maxWidth: y, minWidth: T } = t;
            return (
              y && v.push({ maxWidth: Kr(y) }),
              T && v.push({ maxWidth: Kr(T) }),
              o || v.push(f.value),
              v
            );
          }),
          f = ce(() => {
            const {
              common: {
                cubicBezierEaseInOut: w,
                cubicBezierEaseIn: v,
                cubicBezierEaseOut: y,
              },
              self: {
                space: T,
                spaceArrow: A,
                padding: I,
                fontSize: L,
                textColor: j,
                dividerColor: k,
                color: O,
                boxShadow: D,
                borderRadius: Y,
                arrowHeight: se,
                arrowOffset: de,
                arrowOffsetVertical: fe,
              },
            } = s.value;
            return {
              "--n-box-shadow": D,
              "--n-bezier": w,
              "--n-bezier-ease-in": v,
              "--n-bezier-ease-out": y,
              "--n-font-size": L,
              "--n-text-color": j,
              "--n-color": O,
              "--n-divider-color": k,
              "--n-border-radius": Y,
              "--n-arrow-height": se,
              "--n-arrow-offset": de,
              "--n-arrow-offset-vertical": fe,
              "--n-padding": I,
              "--n-space": T,
              "--n-space-arrow": A,
            };
          }),
          p = o ? jt("popover", void 0, f, t) : void 0;
        l.setBodyInstance({ syncPosition: b }),
          Qt(() => {
            l.setBodyInstance(null);
          }),
          Et(We(t, "show"), (w) => {
            t.animated || (w ? (u.value = !0) : (u.value = !1));
          });
        function b() {
          var w;
          (w = a.value) === null || w === void 0 || w.syncPosition();
        }
        function m(w) {
          t.trigger === "hover" &&
            t.keepAliveOnHover &&
            t.show &&
            l.handleMouseEnter(w);
        }
        function _(w) {
          t.trigger === "hover" && t.keepAliveOnHover && l.handleMouseLeave(w);
        }
        function R(w) {
          t.trigger === "hover" &&
            !x().contains(Fs(w)) &&
            l.handleMouseMoveOutside(w);
        }
        function S(w) {
          ((t.trigger === "click" && !x().contains(Fs(w))) ||
            t.onClickoutside) &&
            l.handleClickOutside(w);
        }
        function x() {
          return l.getTriggerElement();
        }
        vt(pg, c), vt(gg, null), vt(fg, null);
        function E() {
          if (
            (p == null || p.onRender(),
            !(
              t.displayDirective === "show" ||
              t.show ||
              (t.animated && d.value)
            ))
          )
            return null;
          let v;
          const y = l.internalRenderBodyRef.value,
            { value: T } = i;
          if (y)
            v = y(
              [
                `${T}-popover-shared`,
                p == null ? void 0 : p.themeClass.value,
                t.overlap && `${T}-popover-shared--overlap`,
                t.showArrow && `${T}-popover-shared--show-arrow`,
                t.arrowPointToCenter && `${T}-popover-shared--center-arrow`,
              ],
              c,
              g.value,
              m,
              _
            );
          else {
            const { value: A } = l.extraClassRef,
              { internalTrapFocus: I } = t,
              L = !Es(e.header) || !Es(e.footer),
              j = () => {
                var k, O;
                const D = L
                    ? C(
                        pt,
                        null,
                        gt(e.header, (de) =>
                          de
                            ? C(
                                "div",
                                {
                                  class: [
                                    `${T}-popover__header`,
                                    t.headerClass,
                                  ],
                                  style: t.headerStyle,
                                },
                                de
                              )
                            : null
                        ),
                        gt(e.default, (de) =>
                          de
                            ? C(
                                "div",
                                {
                                  class: [
                                    `${T}-popover__content`,
                                    t.contentClass,
                                  ],
                                  style: t.contentStyle,
                                },
                                e
                              )
                            : null
                        ),
                        gt(e.footer, (de) =>
                          de
                            ? C(
                                "div",
                                {
                                  class: [
                                    `${T}-popover__footer`,
                                    t.footerClass,
                                  ],
                                  style: t.footerStyle,
                                },
                                de
                              )
                            : null
                        )
                      )
                    : t.scrollable
                    ? (k = e.default) === null || k === void 0
                      ? void 0
                      : k.call(e)
                    : C(
                        "div",
                        {
                          class: [`${T}-popover__content`, t.contentClass],
                          style: t.contentStyle,
                        },
                        e
                      ),
                  Y = t.scrollable
                    ? C(
                        CL,
                        {
                          contentClass: L
                            ? void 0
                            : `${T}-popover__content ${
                                (O = t.contentClass) !== null && O !== void 0
                                  ? O
                                  : ""
                              }`,
                          contentStyle: L ? void 0 : t.contentStyle,
                        },
                        { default: () => D }
                      )
                    : D,
                  se = t.showArrow
                    ? ML({
                        arrowClass: t.arrowClass,
                        arrowStyle: t.arrowStyle,
                        arrowWrapperClass: t.arrowWrapperClass,
                        arrowWrapperStyle: t.arrowWrapperStyle,
                        clsPrefix: T,
                      })
                    : null;
                return [Y, se];
              };
            v = C(
              "div",
              qs(
                {
                  class: [
                    `${T}-popover`,
                    `${T}-popover-shared`,
                    p == null ? void 0 : p.themeClass.value,
                    A.map((k) => `${T}-${k}`),
                    {
                      [`${T}-popover--scrollable`]: t.scrollable,
                      [`${T}-popover--show-header-or-footer`]: L,
                      [`${T}-popover--raw`]: t.raw,
                      [`${T}-popover-shared--overlap`]: t.overlap,
                      [`${T}-popover-shared--show-arrow`]: t.showArrow,
                      [`${T}-popover-shared--center-arrow`]:
                        t.arrowPointToCenter,
                    },
                  ],
                  ref: c,
                  style: g.value,
                  onKeydown: l.handleKeydown,
                  onMouseenter: m,
                  onMouseleave: _,
                },
                n
              ),
              I ? C(Fy, { active: t.show, autoFocus: !0 }, { default: j }) : j()
            );
          }
          return sr(v, h.value);
        }
        return {
          displayed: d,
          namespace: r,
          isMounted: l.isMountedRef,
          zIndex: l.zIndexRef,
          followerRef: a,
          adjustedTo: ar(t),
          followerEnabled: u,
          renderContentNode: E,
        };
      },
      render() {
        return C(
          xg,
          {
            ref: "followerRef",
            zIndex: this.zIndex,
            show: this.show,
            enabled: this.followerEnabled,
            to: this.adjustedTo,
            x: this.x,
            y: this.y,
            flip: this.flip,
            placement: this.placement,
            containerClass: this.namespace,
            overlap: this.overlap,
            width: this.width === "trigger" ? "target" : void 0,
            teleportDisabled: this.adjustedTo === ar.tdkey,
          },
          {
            default: () =>
              this.animated
                ? C(
                    vn,
                    {
                      name: "popover-transition",
                      appear: this.isMounted,
                      onEnter: () => {
                        this.followerEnabled = !0;
                      },
                      onAfterLeave: () => {
                        var t;
                        (t = this.internalOnAfterLeave) === null ||
                          t === void 0 ||
                          t.call(this),
                          (this.followerEnabled = !1),
                          (this.displayed = !1);
                      },
                    },
                    { default: this.renderContentNode }
                  )
                : this.renderContentNode(),
          }
        );
      },
    }),
    $L = Object.keys(Bx),
    DL = {
      focus: ["onFocus", "onBlur"],
      click: ["onClick"],
      hover: ["onMouseenter", "onMouseleave"],
      manual: [],
      nested: ["onFocus", "onBlur", "onMouseenter", "onMouseleave", "onClick"],
    };
  function zL(t, e, n) {
    DL[e].forEach((r) => {
      t.props ? (t.props = Object.assign({}, t.props)) : (t.props = {});
      const i = t.props[r],
        o = n[r];
      i
        ? (t.props[r] = (...s) => {
            i(...s), o(...s);
          })
        : (t.props[r] = o);
    });
  }
  const Nx = {
      show: { type: Boolean, default: void 0 },
      defaultShow: Boolean,
      showArrow: { type: Boolean, default: !0 },
      trigger: { type: String, default: "hover" },
      delay: { type: Number, default: 100 },
      duration: { type: Number, default: 100 },
      raw: Boolean,
      placement: { type: String, default: "top" },
      x: Number,
      y: Number,
      arrowPointToCenter: Boolean,
      disabled: Boolean,
      getDisabled: Function,
      displayDirective: { type: String, default: "if" },
      arrowClass: String,
      arrowStyle: [String, Object],
      arrowWrapperClass: String,
      arrowWrapperStyle: [String, Object],
      flip: { type: Boolean, default: !0 },
      animated: { type: Boolean, default: !0 },
      width: { type: [Number, String], default: void 0 },
      overlap: Boolean,
      keepAliveOnHover: { type: Boolean, default: !0 },
      zIndex: Number,
      to: ar.propTo,
      scrollable: Boolean,
      contentClass: String,
      contentStyle: [Object, String],
      headerClass: String,
      headerStyle: [Object, String],
      footerClass: String,
      footerStyle: [Object, String],
      onClickoutside: Function,
      "onUpdate:show": [Function, Array],
      onUpdateShow: [Function, Array],
      internalDeactivateImmediately: Boolean,
      internalSyncTargetWithParent: Boolean,
      internalInheritedEventHandlers: { type: Array, default: () => [] },
      internalTrapFocus: Boolean,
      internalExtraClass: { type: Array, default: () => [] },
      onShow: [Function, Array],
      onHide: [Function, Array],
      arrow: { type: Boolean, default: void 0 },
      minWidth: Number,
      maxWidth: Number,
    },
    FL = Object.assign(Object.assign(Object.assign({}, Ye.props), Nx), {
      internalOnAfterLeave: Function,
      internalRenderBody: Function,
    }),
    BL = $e({
      name: "Popover",
      inheritAttrs: !1,
      props: FL,
      __popover__: !0,
      setup(t) {
        const e = Qi(),
          n = U(null),
          r = ce(() => t.show),
          i = U(t.defaultShow),
          o = li(r, i),
          s = Tn(() => (t.disabled ? !1 : o.value)),
          a = () => {
            if (t.disabled) return !0;
            const { getDisabled: k } = t;
            return !!(k != null && k());
          },
          l = () => (a() ? !1 : o.value),
          c = Jc(t, ["arrow", "showArrow"]),
          u = ce(() => (t.overlap ? !1 : c.value));
        let d = null;
        const h = U(null),
          g = U(null),
          f = Tn(() => t.x !== void 0 && t.y !== void 0);
        function p(k) {
          const {
            "onUpdate:show": O,
            onUpdateShow: D,
            onShow: Y,
            onHide: se,
          } = t;
          (i.value = k),
            O && Ke(O, k),
            D && Ke(D, k),
            k && Y && Ke(Y, !0),
            k && se && Ke(se, !1);
        }
        function b() {
          d && d.syncPosition();
        }
        function m() {
          const { value: k } = h;
          k && (window.clearTimeout(k), (h.value = null));
        }
        function _() {
          const { value: k } = g;
          k && (window.clearTimeout(k), (g.value = null));
        }
        function R() {
          const k = a();
          if (t.trigger === "focus" && !k) {
            if (l()) return;
            p(!0);
          }
        }
        function S() {
          const k = a();
          if (t.trigger === "focus" && !k) {
            if (!l()) return;
            p(!1);
          }
        }
        function x() {
          const k = a();
          if (t.trigger === "hover" && !k) {
            if ((_(), h.value !== null || l())) return;
            const O = () => {
                p(!0), (h.value = null);
              },
              { delay: D } = t;
            D === 0 ? O() : (h.value = window.setTimeout(O, D));
          }
        }
        function E() {
          const k = a();
          if (t.trigger === "hover" && !k) {
            if ((m(), g.value !== null || !l())) return;
            const O = () => {
                p(!1), (g.value = null);
              },
              { duration: D } = t;
            D === 0 ? O() : (g.value = window.setTimeout(O, D));
          }
        }
        function w() {
          E();
        }
        function v(k) {
          var O;
          l() &&
            (t.trigger === "click" && (m(), _(), p(!1)),
            (O = t.onClickoutside) === null || O === void 0 || O.call(t, k));
        }
        function y() {
          if (t.trigger === "click" && !a()) {
            m(), _();
            const k = !l();
            p(k);
          }
        }
        function T(k) {
          t.internalTrapFocus && k.key === "Escape" && (m(), _(), p(!1));
        }
        function A(k) {
          i.value = k;
        }
        function I() {
          var k;
          return (k = n.value) === null || k === void 0 ? void 0 : k.targetRef;
        }
        function L(k) {
          d = k;
        }
        return (
          vt("NPopover", {
            getTriggerElement: I,
            handleKeydown: T,
            handleMouseEnter: x,
            handleMouseLeave: E,
            handleClickOutside: v,
            handleMouseMoveOutside: w,
            setBodyInstance: L,
            positionManuallyRef: f,
            isMountedRef: e,
            zIndexRef: We(t, "zIndex"),
            extraClassRef: We(t, "internalExtraClass"),
            internalRenderBodyRef: We(t, "internalRenderBody"),
          }),
          or(() => {
            o.value && a() && p(!1);
          }),
          {
            binderInstRef: n,
            positionManually: f,
            mergedShowConsideringDisabledProp: s,
            uncontrolledShow: i,
            mergedShowArrow: u,
            getMergedShow: l,
            setShow: A,
            handleClick: y,
            handleMouseEnter: x,
            handleMouseLeave: E,
            handleFocus: R,
            handleBlur: S,
            syncPosition: b,
          }
        );
      },
      render() {
        var t;
        const { positionManually: e, $slots: n } = this;
        let r,
          i = !1;
        if (
          !e &&
          (n.activator ? (r = qc(n, "activator")) : (r = qc(n, "trigger")), r)
        ) {
          (r = br(r)), (r = r.type === El ? C("span", [r]) : r);
          const o = {
            onClick: this.handleClick,
            onMouseenter: this.handleMouseEnter,
            onMouseleave: this.handleMouseLeave,
            onFocus: this.handleFocus,
            onBlur: this.handleBlur,
          };
          if (!((t = r.type) === null || t === void 0) && t.__popover__)
            (i = !0),
              r.props ||
                (r.props = {
                  internalSyncTargetWithParent: !0,
                  internalInheritedEventHandlers: [],
                }),
              (r.props.internalSyncTargetWithParent = !0),
              r.props.internalInheritedEventHandlers
                ? (r.props.internalInheritedEventHandlers = [
                    o,
                    ...r.props.internalInheritedEventHandlers,
                  ])
                : (r.props.internalInheritedEventHandlers = [o]);
          else {
            const { internalInheritedEventHandlers: s } = this,
              a = [o, ...s],
              l = {
                onBlur: (c) => {
                  a.forEach((u) => {
                    u.onBlur(c);
                  });
                },
                onFocus: (c) => {
                  a.forEach((u) => {
                    u.onFocus(c);
                  });
                },
                onClick: (c) => {
                  a.forEach((u) => {
                    u.onClick(c);
                  });
                },
                onMouseenter: (c) => {
                  a.forEach((u) => {
                    u.onMouseenter(c);
                  });
                },
                onMouseleave: (c) => {
                  a.forEach((u) => {
                    u.onMouseleave(c);
                  });
                },
              };
            zL(r, s ? "nested" : e ? "manual" : this.trigger, l);
          }
        }
        return C(
          mg,
          {
            ref: "binderInstRef",
            syncTarget: !i,
            syncTargetWithParent: this.internalSyncTargetWithParent,
          },
          {
            default: () => {
              this.mergedShowConsideringDisabledProp;
              const o = this.getMergedShow();
              return [
                this.internalTrapFocus && o
                  ? sr(C("div", { style: { position: "fixed", inset: 0 } }), [
                      [Hu, { enabled: o, zIndex: this.zIndex }],
                    ])
                  : null,
                e ? null : C(vg, null, { default: () => r }),
                C(
                  LL,
                  Bs(
                    this.$props,
                    $L,
                    Object.assign(Object.assign({}, this.$attrs), {
                      showArrow: this.mergedShowArrow,
                      show: o,
                    })
                  ),
                  {
                    default: () => {
                      var s, a;
                      return (a = (s = this.$slots).default) === null ||
                        a === void 0
                        ? void 0
                        : a.call(s);
                    },
                    header: () => {
                      var s, a;
                      return (a = (s = this.$slots).header) === null ||
                        a === void 0
                        ? void 0
                        : a.call(s);
                    },
                    footer: () => {
                      var s, a;
                      return (a = (s = this.$slots).footer) === null ||
                        a === void 0
                        ? void 0
                        : a.call(s);
                    },
                  }
                ),
              ];
            },
          }
        );
      },
    }),
    Hx = {
      closeIconSizeTiny: "12px",
      closeIconSizeSmall: "12px",
      closeIconSizeMedium: "14px",
      closeIconSizeLarge: "14px",
      closeSizeTiny: "16px",
      closeSizeSmall: "16px",
      closeSizeMedium: "18px",
      closeSizeLarge: "18px",
      padding: "0 7px",
      closeMargin: "0 0 0 4px",
    },
    NL = {
      name: "Tag",
      common: Oe,
      self(t) {
        const {
          textColor2: e,
          primaryColorHover: n,
          primaryColorPressed: r,
          primaryColor: i,
          infoColor: o,
          successColor: s,
          warningColor: a,
          errorColor: l,
          baseColor: c,
          borderColor: u,
          tagColor: d,
          opacityDisabled: h,
          closeIconColor: g,
          closeIconColorHover: f,
          closeIconColorPressed: p,
          closeColorHover: b,
          closeColorPressed: m,
          borderRadiusSmall: _,
          fontSizeMini: R,
          fontSizeTiny: S,
          fontSizeSmall: x,
          fontSizeMedium: E,
          heightMini: w,
          heightTiny: v,
          heightSmall: y,
          heightMedium: T,
          buttonColor2Hover: A,
          buttonColor2Pressed: I,
          fontWeightStrong: L,
        } = t;
        return Object.assign(Object.assign({}, Hx), {
          closeBorderRadius: _,
          heightTiny: w,
          heightSmall: v,
          heightMedium: y,
          heightLarge: T,
          borderRadius: _,
          opacityDisabled: h,
          fontSizeTiny: R,
          fontSizeSmall: S,
          fontSizeMedium: x,
          fontSizeLarge: E,
          fontWeightStrong: L,
          textColorCheckable: e,
          textColorHoverCheckable: e,
          textColorPressedCheckable: e,
          textColorChecked: c,
          colorCheckable: "#0000",
          colorHoverCheckable: A,
          colorPressedCheckable: I,
          colorChecked: i,
          colorCheckedHover: n,
          colorCheckedPressed: r,
          border: `1px solid ${u}`,
          textColor: e,
          color: d,
          colorBordered: "#0000",
          closeIconColor: g,
          closeIconColorHover: f,
          closeIconColorPressed: p,
          closeColorHover: b,
          closeColorPressed: m,
          borderPrimary: `1px solid ${Ae(i, { alpha: 0.3 })}`,
          textColorPrimary: i,
          colorPrimary: Ae(i, { alpha: 0.16 }),
          colorBorderedPrimary: "#0000",
          closeIconColorPrimary: Yt(i, { lightness: 0.7 }),
          closeIconColorHoverPrimary: Yt(i, { lightness: 0.7 }),
          closeIconColorPressedPrimary: Yt(i, { lightness: 0.7 }),
          closeColorHoverPrimary: Ae(i, { alpha: 0.16 }),
          closeColorPressedPrimary: Ae(i, { alpha: 0.12 }),
          borderInfo: `1px solid ${Ae(o, { alpha: 0.3 })}`,
          textColorInfo: o,
          colorInfo: Ae(o, { alpha: 0.16 }),
          colorBorderedInfo: "#0000",
          closeIconColorInfo: Yt(o, { alpha: 0.7 }),
          closeIconColorHoverInfo: Yt(o, { alpha: 0.7 }),
          closeIconColorPressedInfo: Yt(o, { alpha: 0.7 }),
          closeColorHoverInfo: Ae(o, { alpha: 0.16 }),
          closeColorPressedInfo: Ae(o, { alpha: 0.12 }),
          borderSuccess: `1px solid ${Ae(s, { alpha: 0.3 })}`,
          textColorSuccess: s,
          colorSuccess: Ae(s, { alpha: 0.16 }),
          colorBorderedSuccess: "#0000",
          closeIconColorSuccess: Yt(s, { alpha: 0.7 }),
          closeIconColorHoverSuccess: Yt(s, { alpha: 0.7 }),
          closeIconColorPressedSuccess: Yt(s, { alpha: 0.7 }),
          closeColorHoverSuccess: Ae(s, { alpha: 0.16 }),
          closeColorPressedSuccess: Ae(s, { alpha: 0.12 }),
          borderWarning: `1px solid ${Ae(a, { alpha: 0.3 })}`,
          textColorWarning: a,
          colorWarning: Ae(a, { alpha: 0.16 }),
          colorBorderedWarning: "#0000",
          closeIconColorWarning: Yt(a, { alpha: 0.7 }),
          closeIconColorHoverWarning: Yt(a, { alpha: 0.7 }),
          closeIconColorPressedWarning: Yt(a, { alpha: 0.7 }),
          closeColorHoverWarning: Ae(a, { alpha: 0.16 }),
          closeColorPressedWarning: Ae(a, { alpha: 0.11 }),
          borderError: `1px solid ${Ae(l, { alpha: 0.3 })}`,
          textColorError: l,
          colorError: Ae(l, { alpha: 0.16 }),
          colorBorderedError: "#0000",
          closeIconColorError: Yt(l, { alpha: 0.7 }),
          closeIconColorHoverError: Yt(l, { alpha: 0.7 }),
          closeIconColorPressedError: Yt(l, { alpha: 0.7 }),
          closeColorHoverError: Ae(l, { alpha: 0.16 }),
          closeColorPressedError: Ae(l, { alpha: 0.12 }),
        });
      },
    },
    Wx = NL,
    HL = (t) => {
      const {
        textColor2: e,
        primaryColorHover: n,
        primaryColorPressed: r,
        primaryColor: i,
        infoColor: o,
        successColor: s,
        warningColor: a,
        errorColor: l,
        baseColor: c,
        borderColor: u,
        opacityDisabled: d,
        tagColor: h,
        closeIconColor: g,
        closeIconColorHover: f,
        closeIconColorPressed: p,
        borderRadiusSmall: b,
        fontSizeMini: m,
        fontSizeTiny: _,
        fontSizeSmall: R,
        fontSizeMedium: S,
        heightMini: x,
        heightTiny: E,
        heightSmall: w,
        heightMedium: v,
        closeColorHover: y,
        closeColorPressed: T,
        buttonColor2Hover: A,
        buttonColor2Pressed: I,
        fontWeightStrong: L,
      } = t;
      return Object.assign(Object.assign({}, Hx), {
        closeBorderRadius: b,
        heightTiny: x,
        heightSmall: E,
        heightMedium: w,
        heightLarge: v,
        borderRadius: b,
        opacityDisabled: d,
        fontSizeTiny: m,
        fontSizeSmall: _,
        fontSizeMedium: R,
        fontSizeLarge: S,
        fontWeightStrong: L,
        textColorCheckable: e,
        textColorHoverCheckable: e,
        textColorPressedCheckable: e,
        textColorChecked: c,
        colorCheckable: "#0000",
        colorHoverCheckable: A,
        colorPressedCheckable: I,
        colorChecked: i,
        colorCheckedHover: n,
        colorCheckedPressed: r,
        border: `1px solid ${u}`,
        textColor: e,
        color: h,
        colorBordered: "rgb(250, 250, 252)",
        closeIconColor: g,
        closeIconColorHover: f,
        closeIconColorPressed: p,
        closeColorHover: y,
        closeColorPressed: T,
        borderPrimary: `1px solid ${Ae(i, { alpha: 0.3 })}`,
        textColorPrimary: i,
        colorPrimary: Ae(i, { alpha: 0.12 }),
        colorBorderedPrimary: Ae(i, { alpha: 0.1 }),
        closeIconColorPrimary: i,
        closeIconColorHoverPrimary: i,
        closeIconColorPressedPrimary: i,
        closeColorHoverPrimary: Ae(i, { alpha: 0.12 }),
        closeColorPressedPrimary: Ae(i, { alpha: 0.18 }),
        borderInfo: `1px solid ${Ae(o, { alpha: 0.3 })}`,
        textColorInfo: o,
        colorInfo: Ae(o, { alpha: 0.12 }),
        colorBorderedInfo: Ae(o, { alpha: 0.1 }),
        closeIconColorInfo: o,
        closeIconColorHoverInfo: o,
        closeIconColorPressedInfo: o,
        closeColorHoverInfo: Ae(o, { alpha: 0.12 }),
        closeColorPressedInfo: Ae(o, { alpha: 0.18 }),
        borderSuccess: `1px solid ${Ae(s, { alpha: 0.3 })}`,
        textColorSuccess: s,
        colorSuccess: Ae(s, { alpha: 0.12 }),
        colorBorderedSuccess: Ae(s, { alpha: 0.1 }),
        closeIconColorSuccess: s,
        closeIconColorHoverSuccess: s,
        closeIconColorPressedSuccess: s,
        closeColorHoverSuccess: Ae(s, { alpha: 0.12 }),
        closeColorPressedSuccess: Ae(s, { alpha: 0.18 }),
        borderWarning: `1px solid ${Ae(a, { alpha: 0.35 })}`,
        textColorWarning: a,
        colorWarning: Ae(a, { alpha: 0.15 }),
        colorBorderedWarning: Ae(a, { alpha: 0.12 }),
        closeIconColorWarning: a,
        closeIconColorHoverWarning: a,
        closeIconColorPressedWarning: a,
        closeColorHoverWarning: Ae(a, { alpha: 0.12 }),
        closeColorPressedWarning: Ae(a, { alpha: 0.18 }),
        borderError: `1px solid ${Ae(l, { alpha: 0.23 })}`,
        textColorError: l,
        colorError: Ae(l, { alpha: 0.1 }),
        colorBorderedError: Ae(l, { alpha: 0.08 }),
        closeIconColorError: l,
        closeIconColorHoverError: l,
        closeIconColorPressedError: l,
        closeColorHoverError: Ae(l, { alpha: 0.12 }),
        closeColorPressedError: Ae(l, { alpha: 0.18 }),
      });
    },
    WL = { name: "Tag", common: Ut, self: HL },
    jx = WL,
    Ux = {
      color: Object,
      type: { type: String, default: "default" },
      round: Boolean,
      size: { type: String, default: "medium" },
      closable: Boolean,
      disabled: { type: Boolean, default: void 0 },
    },
    jL = M(
      "tag",
      `
 --n-close-margin: var(--n-close-margin-top) var(--n-close-margin-right) var(--n-close-margin-bottom) var(--n-close-margin-left);
 white-space: nowrap;
 position: relative;
 box-sizing: border-box;
 cursor: default;
 display: inline-flex;
 align-items: center;
 flex-wrap: nowrap;
 padding: var(--n-padding);
 border-radius: var(--n-border-radius);
 color: var(--n-text-color);
 background-color: var(--n-color);
 transition:
 border-color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier),
 opacity .3s var(--n-bezier);
 line-height: 1;
 height: var(--n-height);
 font-size: var(--n-font-size);
`,
      [
        te(
          "strong",
          `
 font-weight: var(--n-font-weight-strong);
 `
        ),
        ne(
          "border",
          `
 pointer-events: none;
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 border-radius: inherit;
 border: var(--n-border);
 transition: border-color .3s var(--n-bezier);
 `
        ),
        ne(
          "icon",
          `
 display: flex;
 margin: 0 4px 0 0;
 color: var(--n-text-color);
 transition: color .3s var(--n-bezier);
 font-size: var(--n-avatar-size-override);
 `
        ),
        ne(
          "avatar",
          `
 display: flex;
 margin: 0 6px 0 0;
 `
        ),
        ne(
          "close",
          `
 margin: var(--n-close-margin);
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 `
        ),
        te(
          "round",
          `
 padding: 0 calc(var(--n-height) / 3);
 border-radius: calc(var(--n-height) / 2);
 `,
          [
            ne(
              "icon",
              `
 margin: 0 4px 0 calc((var(--n-height) - 8px) / -2);
 `
            ),
            ne(
              "avatar",
              `
 margin: 0 6px 0 calc((var(--n-height) - 8px) / -2);
 `
            ),
            te(
              "closable",
              `
 padding: 0 calc(var(--n-height) / 4) 0 calc(var(--n-height) / 3);
 `
            ),
          ]
        ),
        te("icon, avatar", [
          te(
            "round",
            `
 padding: 0 calc(var(--n-height) / 3) 0 calc(var(--n-height) / 2);
 `
          ),
        ]),
        te(
          "disabled",
          `
 cursor: not-allowed !important;
 opacity: var(--n-opacity-disabled);
 `
        ),
        te(
          "checkable",
          `
 cursor: pointer;
 box-shadow: none;
 color: var(--n-text-color-checkable);
 background-color: var(--n-color-checkable);
 `,
          [
            Zt("disabled", [
              q(
                "&:hover",
                "background-color: var(--n-color-hover-checkable);",
                [Zt("checked", "color: var(--n-text-color-hover-checkable);")]
              ),
              q(
                "&:active",
                "background-color: var(--n-color-pressed-checkable);",
                [Zt("checked", "color: var(--n-text-color-pressed-checkable);")]
              ),
            ]),
            te(
              "checked",
              `
 color: var(--n-text-color-checked);
 background-color: var(--n-color-checked);
 `,
              [
                Zt("disabled", [
                  q(
                    "&:hover",
                    "background-color: var(--n-color-checked-hover);"
                  ),
                  q(
                    "&:active",
                    "background-color: var(--n-color-checked-pressed);"
                  ),
                ]),
              ]
            ),
          ]
        ),
      ]
    ),
    UL = Object.assign(Object.assign(Object.assign({}, Ye.props), Ux), {
      bordered: { type: Boolean, default: void 0 },
      checked: Boolean,
      checkable: Boolean,
      strong: Boolean,
      triggerClickOnClose: Boolean,
      onClose: [Array, Function],
      onMouseenter: Function,
      onMouseleave: Function,
      "onUpdate:checked": Function,
      onUpdateChecked: Function,
      internalCloseFocusable: { type: Boolean, default: !0 },
      internalCloseIsButtonTag: { type: Boolean, default: !0 },
      onCheckedChange: Function,
    }),
    VL = "n-tag",
    zg = $e({
      name: "Tag",
      props: UL,
      setup(t) {
        const e = U(null),
          {
            mergedBorderedRef: n,
            mergedClsPrefixRef: r,
            inlineThemeDisabled: i,
            mergedRtlRef: o,
          } = Ct(t),
          s = Ye("Tag", "-tag", jL, jx, t, r);
        vt(VL, { roundRef: We(t, "round") });
        function a(g) {
          if (!t.disabled && t.checkable) {
            const {
              checked: f,
              onCheckedChange: p,
              onUpdateChecked: b,
              "onUpdate:checked": m,
            } = t;
            b && b(!f), m && m(!f), p && p(!f);
          }
        }
        function l(g) {
          if ((t.triggerClickOnClose || g.stopPropagation(), !t.disabled)) {
            const { onClose: f } = t;
            f && Ke(f, g);
          }
        }
        const c = {
            setTextContent(g) {
              const { value: f } = e;
              f && (f.textContent = g);
            },
          },
          u = Cr("Tag", o, r),
          d = ce(() => {
            const {
                type: g,
                size: f,
                color: { color: p, textColor: b } = {},
              } = t,
              {
                common: { cubicBezierEaseInOut: m },
                self: {
                  padding: _,
                  closeMargin: R,
                  borderRadius: S,
                  opacityDisabled: x,
                  textColorCheckable: E,
                  textColorHoverCheckable: w,
                  textColorPressedCheckable: v,
                  textColorChecked: y,
                  colorCheckable: T,
                  colorHoverCheckable: A,
                  colorPressedCheckable: I,
                  colorChecked: L,
                  colorCheckedHover: j,
                  colorCheckedPressed: k,
                  closeBorderRadius: O,
                  fontWeightStrong: D,
                  [Te("colorBordered", g)]: Y,
                  [Te("closeSize", f)]: se,
                  [Te("closeIconSize", f)]: de,
                  [Te("fontSize", f)]: fe,
                  [Te("height", f)]: z,
                  [Te("color", g)]: ee,
                  [Te("textColor", g)]: ue,
                  [Te("border", g)]: K,
                  [Te("closeIconColor", g)]: _e,
                  [Te("closeIconColorHover", g)]: ie,
                  [Te("closeIconColorPressed", g)]: pe,
                  [Te("closeColorHover", g)]: re,
                  [Te("closeColorPressed", g)]: ge,
                },
              } = s.value,
              ke = nr(R);
            return {
              "--n-font-weight-strong": D,
              "--n-avatar-size-override": `calc(${z} - 8px)`,
              "--n-bezier": m,
              "--n-border-radius": S,
              "--n-border": K,
              "--n-close-icon-size": de,
              "--n-close-color-pressed": ge,
              "--n-close-color-hover": re,
              "--n-close-border-radius": O,
              "--n-close-icon-color": _e,
              "--n-close-icon-color-hover": ie,
              "--n-close-icon-color-pressed": pe,
              "--n-close-icon-color-disabled": _e,
              "--n-close-margin-top": ke.top,
              "--n-close-margin-right": ke.right,
              "--n-close-margin-bottom": ke.bottom,
              "--n-close-margin-left": ke.left,
              "--n-close-size": se,
              "--n-color": p || (n.value ? Y : ee),
              "--n-color-checkable": T,
              "--n-color-checked": L,
              "--n-color-checked-hover": j,
              "--n-color-checked-pressed": k,
              "--n-color-hover-checkable": A,
              "--n-color-pressed-checkable": I,
              "--n-font-size": fe,
              "--n-height": z,
              "--n-opacity-disabled": x,
              "--n-padding": _,
              "--n-text-color": b || ue,
              "--n-text-color-checkable": E,
              "--n-text-color-checked": y,
              "--n-text-color-hover-checkable": w,
              "--n-text-color-pressed-checkable": v,
            };
          }),
          h = i
            ? jt(
                "tag",
                ce(() => {
                  let g = "";
                  const {
                    type: f,
                    size: p,
                    color: { color: b, textColor: m } = {},
                  } = t;
                  return (
                    (g += f[0]),
                    (g += p[0]),
                    b && (g += `a${Zc(b)}`),
                    m && (g += `b${Zc(m)}`),
                    n.value && (g += "c"),
                    g
                  );
                }),
                d,
                t
              )
            : void 0;
        return Object.assign(Object.assign({}, c), {
          rtlEnabled: u,
          mergedClsPrefix: r,
          contentRef: e,
          mergedBordered: n,
          handleClick: a,
          handleCloseClick: l,
          cssVars: i ? void 0 : d,
          themeClass: h == null ? void 0 : h.themeClass,
          onRender: h == null ? void 0 : h.onRender,
        });
      },
      render() {
        var t, e;
        const {
          mergedClsPrefix: n,
          rtlEnabled: r,
          closable: i,
          color: { borderColor: o } = {},
          round: s,
          onRender: a,
          $slots: l,
        } = this;
        a == null || a();
        const c = gt(
            l.avatar,
            (d) => d && C("div", { class: `${n}-tag__avatar` }, d)
          ),
          u = gt(l.icon, (d) => d && C("div", { class: `${n}-tag__icon` }, d));
        return C(
          "div",
          {
            class: [
              `${n}-tag`,
              this.themeClass,
              {
                [`${n}-tag--rtl`]: r,
                [`${n}-tag--strong`]: this.strong,
                [`${n}-tag--disabled`]: this.disabled,
                [`${n}-tag--checkable`]: this.checkable,
                [`${n}-tag--checked`]: this.checkable && this.checked,
                [`${n}-tag--round`]: s,
                [`${n}-tag--avatar`]: c,
                [`${n}-tag--icon`]: u,
                [`${n}-tag--closable`]: i,
              },
            ],
            style: this.cssVars,
            onClick: this.handleClick,
            onMouseenter: this.onMouseenter,
            onMouseleave: this.onMouseleave,
          },
          u || c,
          C(
            "span",
            { class: `${n}-tag__content`, ref: "contentRef" },
            (e = (t = this.$slots).default) === null || e === void 0
              ? void 0
              : e.call(t)
          ),
          !this.checkable && i
            ? C(ta, {
                clsPrefix: n,
                class: `${n}-tag__close`,
                disabled: this.disabled,
                onClick: this.handleCloseClick,
                focusable: this.internalCloseFocusable,
                round: s,
                isButtonTag: this.internalCloseIsButtonTag,
                absolute: !0,
              })
            : null,
          !this.checkable && this.mergedBordered
            ? C("div", { class: `${n}-tag__border`, style: { borderColor: o } })
            : null
        );
      },
    }),
    GL = M(
      "base-clear",
      `
 flex-shrink: 0;
 height: 1em;
 width: 1em;
 position: relative;
`,
      [
        q(">", [
          ne(
            "clear",
            `
 font-size: var(--n-clear-size);
 height: 1em;
 width: 1em;
 cursor: pointer;
 color: var(--n-clear-color);
 transition: color .3s var(--n-bezier);
 display: flex;
 `,
            [
              q(
                "&:hover",
                `
 color: var(--n-clear-color-hover)!important;
 `
              ),
              q(
                "&:active",
                `
 color: var(--n-clear-color-pressed)!important;
 `
              ),
            ]
          ),
          ne(
            "placeholder",
            `
 display: flex;
 `
          ),
          ne(
            "clear, placeholder",
            `
 position: absolute;
 left: 50%;
 top: 50%;
 transform: translateX(-50%) translateY(-50%);
 `,
            [
              ii({
                originalTransform: "translateX(-50%) translateY(-50%)",
                left: "50%",
                top: "50%",
              }),
            ]
          ),
        ]),
      ]
    ),
    df = $e({
      name: "BaseClear",
      props: {
        clsPrefix: { type: String, required: !0 },
        show: Boolean,
        onClear: Function,
      },
      setup(t) {
        return (
          Ko("-base-clear", GL, We(t, "clsPrefix")),
          {
            handleMouseDown(e) {
              e.preventDefault();
            },
          }
        );
      },
      render() {
        const { clsPrefix: t } = this;
        return C(
          "div",
          { class: `${t}-base-clear` },
          C(Yo, null, {
            default: () => {
              var e, n;
              return this.show
                ? C(
                    "div",
                    {
                      key: "dismiss",
                      class: `${t}-base-clear__clear`,
                      onClick: this.onClear,
                      onMousedown: this.handleMouseDown,
                      "data-clear": !0,
                    },
                    Lr(this.$slots.icon, () => [
                      C(ht, { clsPrefix: t }, { default: () => C(x3, null) }),
                    ])
                  )
                : C(
                    "div",
                    { key: "icon", class: `${t}-base-clear__placeholder` },
                    (n = (e = this.$slots).placeholder) === null || n === void 0
                      ? void 0
                      : n.call(e)
                  );
            },
          })
        );
      },
    }),
    XL = $e({
      name: "InternalSelectionSuffix",
      props: {
        clsPrefix: { type: String, required: !0 },
        showArrow: { type: Boolean, default: void 0 },
        showClear: { type: Boolean, default: void 0 },
        loading: { type: Boolean, default: !1 },
        onClear: Function,
      },
      setup(t, { slots: e }) {
        return () => {
          const { clsPrefix: n } = t;
          return C(
            Ml,
            {
              clsPrefix: n,
              class: `${n}-base-suffix`,
              strokeWidth: 24,
              scale: 0.85,
              show: t.loading,
            },
            {
              default: () =>
                t.showArrow
                  ? C(
                      df,
                      { clsPrefix: n, show: t.showClear, onClear: t.onClear },
                      {
                        placeholder: () =>
                          C(
                            ht,
                            { clsPrefix: n, class: `${n}-base-suffix__arrow` },
                            {
                              default: () => Lr(e.default, () => [C(y3, null)]),
                            }
                          ),
                      }
                    )
                  : null,
            }
          );
        };
      },
    }),
    KL = {
      paddingSingle: "0 26px 0 12px",
      paddingMultiple: "3px 26px 0 12px",
      clearSize: "16px",
      arrowSize: "16px",
    },
    YL = {
      name: "InternalSelection",
      common: Oe,
      peers: { Popover: Zo },
      self(t) {
        const {
          borderRadius: e,
          textColor2: n,
          textColorDisabled: r,
          inputColor: i,
          inputColorDisabled: o,
          primaryColor: s,
          primaryColorHover: a,
          warningColor: l,
          warningColorHover: c,
          errorColor: u,
          errorColorHover: d,
          iconColor: h,
          iconColorDisabled: g,
          clearColor: f,
          clearColorHover: p,
          clearColorPressed: b,
          placeholderColor: m,
          placeholderColorDisabled: _,
          fontSizeTiny: R,
          fontSizeSmall: S,
          fontSizeMedium: x,
          fontSizeLarge: E,
          heightTiny: w,
          heightSmall: v,
          heightMedium: y,
          heightLarge: T,
        } = t;
        return Object.assign(Object.assign({}, KL), {
          fontSizeTiny: R,
          fontSizeSmall: S,
          fontSizeMedium: x,
          fontSizeLarge: E,
          heightTiny: w,
          heightSmall: v,
          heightMedium: y,
          heightLarge: T,
          borderRadius: e,
          textColor: n,
          textColorDisabled: r,
          placeholderColor: m,
          placeholderColorDisabled: _,
          color: i,
          colorDisabled: o,
          colorActive: Ae(s, { alpha: 0.1 }),
          border: "1px solid #0000",
          borderHover: `1px solid ${a}`,
          borderActive: `1px solid ${s}`,
          borderFocus: `1px solid ${a}`,
          boxShadowHover: "none",
          boxShadowActive: `0 0 8px 0 ${Ae(s, { alpha: 0.4 })}`,
          boxShadowFocus: `0 0 8px 0 ${Ae(s, { alpha: 0.4 })}`,
          caretColor: s,
          arrowColor: h,
          arrowColorDisabled: g,
          loadingColor: s,
          borderWarning: `1px solid ${l}`,
          borderHoverWarning: `1px solid ${c}`,
          borderActiveWarning: `1px solid ${l}`,
          borderFocusWarning: `1px solid ${c}`,
          boxShadowHoverWarning: "none",
          boxShadowActiveWarning: `0 0 8px 0 ${Ae(l, { alpha: 0.4 })}`,
          boxShadowFocusWarning: `0 0 8px 0 ${Ae(l, { alpha: 0.4 })}`,
          colorActiveWarning: Ae(l, { alpha: 0.1 }),
          caretColorWarning: l,
          borderError: `1px solid ${u}`,
          borderHoverError: `1px solid ${d}`,
          borderActiveError: `1px solid ${u}`,
          borderFocusError: `1px solid ${d}`,
          boxShadowHoverError: "none",
          boxShadowActiveError: `0 0 8px 0 ${Ae(u, { alpha: 0.4 })}`,
          boxShadowFocusError: `0 0 8px 0 ${Ae(u, { alpha: 0.4 })}`,
          colorActiveError: Ae(u, { alpha: 0.1 }),
          caretColorError: u,
          clearColor: f,
          clearColorHover: p,
          clearColorPressed: b,
        });
      },
    },
    Fg = YL,
    { cubicBezierEaseInOut: xi } = to;
  function qL({ duration: t = ".2s", delay: e = ".1s" } = {}) {
    return [
      q(
        "&.fade-in-width-expand-transition-leave-from, &.fade-in-width-expand-transition-enter-to",
        { opacity: 1 }
      ),
      q(
        "&.fade-in-width-expand-transition-leave-to, &.fade-in-width-expand-transition-enter-from",
        `
 opacity: 0!important;
 margin-left: 0!important;
 margin-right: 0!important;
 `
      ),
      q(
        "&.fade-in-width-expand-transition-leave-active",
        `
 overflow: hidden;
 transition:
 opacity ${t} ${xi},
 max-width ${t} ${xi} ${e},
 margin-left ${t} ${xi} ${e},
 margin-right ${t} ${xi} ${e};
 `
      ),
      q(
        "&.fade-in-width-expand-transition-enter-active",
        `
 overflow: hidden;
 transition:
 opacity ${t} ${xi} ${e},
 max-width ${t} ${xi},
 margin-left ${t} ${xi},
 margin-right ${t} ${xi};
 `
      ),
    ];
  }
  const ZL = {
      iconMargin: "11px 8px 0 12px",
      iconMarginRtl: "11px 12px 0 8px",
      iconSize: "24px",
      closeIconSize: "16px",
      closeSize: "20px",
      closeMargin: "13px 14px 0 0",
      closeMarginRtl: "13px 0 0 14px",
      padding: "13px",
    },
    JL = {
      name: "Alert",
      common: Oe,
      self(t) {
        const {
          lineHeight: e,
          borderRadius: n,
          fontWeightStrong: r,
          dividerColor: i,
          inputColor: o,
          textColor1: s,
          textColor2: a,
          closeColorHover: l,
          closeColorPressed: c,
          closeIconColor: u,
          closeIconColorHover: d,
          closeIconColorPressed: h,
          infoColorSuppl: g,
          successColorSuppl: f,
          warningColorSuppl: p,
          errorColorSuppl: b,
          fontSize: m,
        } = t;
        return Object.assign(Object.assign({}, ZL), {
          fontSize: m,
          lineHeight: e,
          titleFontWeight: r,
          borderRadius: n,
          border: `1px solid ${i}`,
          color: o,
          titleTextColor: s,
          iconColor: a,
          contentTextColor: a,
          closeBorderRadius: n,
          closeColorHover: l,
          closeColorPressed: c,
          closeIconColor: u,
          closeIconColorHover: d,
          closeIconColorPressed: h,
          borderInfo: `1px solid ${Ae(g, { alpha: 0.35 })}`,
          colorInfo: Ae(g, { alpha: 0.25 }),
          titleTextColorInfo: s,
          iconColorInfo: g,
          contentTextColorInfo: a,
          closeColorHoverInfo: l,
          closeColorPressedInfo: c,
          closeIconColorInfo: u,
          closeIconColorHoverInfo: d,
          closeIconColorPressedInfo: h,
          borderSuccess: `1px solid ${Ae(f, { alpha: 0.35 })}`,
          colorSuccess: Ae(f, { alpha: 0.25 }),
          titleTextColorSuccess: s,
          iconColorSuccess: f,
          contentTextColorSuccess: a,
          closeColorHoverSuccess: l,
          closeColorPressedSuccess: c,
          closeIconColorSuccess: u,
          closeIconColorHoverSuccess: d,
          closeIconColorPressedSuccess: h,
          borderWarning: `1px solid ${Ae(p, { alpha: 0.35 })}`,
          colorWarning: Ae(p, { alpha: 0.25 }),
          titleTextColorWarning: s,
          iconColorWarning: p,
          contentTextColorWarning: a,
          closeColorHoverWarning: l,
          closeColorPressedWarning: c,
          closeIconColorWarning: u,
          closeIconColorHoverWarning: d,
          closeIconColorPressedWarning: h,
          borderError: `1px solid ${Ae(b, { alpha: 0.35 })}`,
          colorError: Ae(b, { alpha: 0.25 }),
          titleTextColorError: s,
          iconColorError: b,
          contentTextColorError: a,
          closeColorHoverError: l,
          closeColorPressedError: c,
          closeIconColorError: u,
          closeIconColorHoverError: d,
          closeIconColorPressedError: h,
        });
      },
    },
    QL = JL,
    {
      cubicBezierEaseInOut: Er,
      cubicBezierEaseOut: e$,
      cubicBezierEaseIn: t$,
    } = to;
  function hf({
    overflow: t = "hidden",
    duration: e = ".3s",
    originalTransition: n = "",
    leavingDelay: r = "0s",
    foldPadding: i = !1,
    enterToProps: o = void 0,
    leaveToProps: s = void 0,
    reverse: a = !1,
  } = {}) {
    const l = a ? "leave" : "enter",
      c = a ? "enter" : "leave";
    return [
      q(
        `&.fade-in-height-expand-transition-${c}-from,
 &.fade-in-height-expand-transition-${l}-to`,
        Object.assign(Object.assign({}, o), { opacity: 1 })
      ),
      q(
        `&.fade-in-height-expand-transition-${c}-to,
 &.fade-in-height-expand-transition-${l}-from`,
        Object.assign(Object.assign({}, s), {
          opacity: 0,
          marginTop: "0 !important",
          marginBottom: "0 !important",
          paddingTop: i ? "0 !important" : void 0,
          paddingBottom: i ? "0 !important" : void 0,
        })
      ),
      q(
        `&.fade-in-height-expand-transition-${c}-active`,
        `
 overflow: ${t};
 transition:
 max-height ${e} ${Er} ${r},
 opacity ${e} ${e$} ${r},
 margin-top ${e} ${Er} ${r},
 margin-bottom ${e} ${Er} ${r},
 padding-top ${e} ${Er} ${r},
 padding-bottom ${e} ${Er} ${r}
 ${n ? "," + n : ""}
 `
      ),
      q(
        `&.fade-in-height-expand-transition-${l}-active`,
        `
 overflow: ${t};
 transition:
 max-height ${e} ${Er},
 opacity ${e} ${t$},
 margin-top ${e} ${Er},
 margin-bottom ${e} ${Er},
 padding-top ${e} ${Er},
 padding-bottom ${e} ${Er}
 ${n ? "," + n : ""}
 `
      ),
    ];
  }
  const n$ = {
      linkFontSize: "13px",
      linkPadding: "0 0 0 16px",
      railWidth: "4px",
    },
    r$ = (t) => {
      const {
        borderRadius: e,
        railColor: n,
        primaryColor: r,
        primaryColorHover: i,
        primaryColorPressed: o,
        textColor2: s,
      } = t;
      return Object.assign(Object.assign({}, n$), {
        borderRadius: e,
        railColor: n,
        railColorActive: r,
        linkColor: Ae(r, { alpha: 0.15 }),
        linkTextColor: s,
        linkTextColorHover: i,
        linkTextColorPressed: o,
        linkTextColorActive: r,
      });
    },
    i$ = { name: "Anchor", common: Oe, self: r$ },
    o$ = i$;
  function dv(t) {
    return t.type === "group";
  }
  function s$(t) {
    return t.type === "ignored";
  }
  function a$(t, e) {
    return {
      getIsGroup: dv,
      getIgnored: s$,
      getKey(r) {
        return dv(r) ? r.name || r.key || "key-required" : r[t];
      },
      getChildren(r) {
        return r[e];
      },
    };
  }
  const l$ = Ji && "chrome" in window;
  Ji && navigator.userAgent.includes("Firefox");
  const Vx = Ji && navigator.userAgent.includes("Safari") && !l$,
    Gx = {
      paddingTiny: "0 8px",
      paddingSmall: "0 10px",
      paddingMedium: "0 12px",
      paddingLarge: "0 14px",
      clearSize: "16px",
    },
    c$ = {
      name: "Input",
      common: Oe,
      self(t) {
        const {
          textColor2: e,
          textColor3: n,
          textColorDisabled: r,
          primaryColor: i,
          primaryColorHover: o,
          inputColor: s,
          inputColorDisabled: a,
          warningColor: l,
          warningColorHover: c,
          errorColor: u,
          errorColorHover: d,
          borderRadius: h,
          lineHeight: g,
          fontSizeTiny: f,
          fontSizeSmall: p,
          fontSizeMedium: b,
          fontSizeLarge: m,
          heightTiny: _,
          heightSmall: R,
          heightMedium: S,
          heightLarge: x,
          clearColor: E,
          clearColorHover: w,
          clearColorPressed: v,
          placeholderColor: y,
          placeholderColorDisabled: T,
          iconColor: A,
          iconColorDisabled: I,
          iconColorHover: L,
          iconColorPressed: j,
        } = t;
        return Object.assign(Object.assign({}, Gx), {
          countTextColorDisabled: r,
          countTextColor: n,
          heightTiny: _,
          heightSmall: R,
          heightMedium: S,
          heightLarge: x,
          fontSizeTiny: f,
          fontSizeSmall: p,
          fontSizeMedium: b,
          fontSizeLarge: m,
          lineHeight: g,
          lineHeightTextarea: g,
          borderRadius: h,
          iconSize: "16px",
          groupLabelColor: s,
          textColor: e,
          textColorDisabled: r,
          textDecorationColor: e,
          groupLabelTextColor: e,
          caretColor: i,
          placeholderColor: y,
          placeholderColorDisabled: T,
          color: s,
          colorDisabled: a,
          colorFocus: Ae(i, { alpha: 0.1 }),
          groupLabelBorder: "1px solid #0000",
          border: "1px solid #0000",
          borderHover: `1px solid ${o}`,
          borderDisabled: "1px solid #0000",
          borderFocus: `1px solid ${o}`,
          boxShadowFocus: `0 0 8px 0 ${Ae(i, { alpha: 0.3 })}`,
          loadingColor: i,
          loadingColorWarning: l,
          borderWarning: `1px solid ${l}`,
          borderHoverWarning: `1px solid ${c}`,
          colorFocusWarning: Ae(l, { alpha: 0.1 }),
          borderFocusWarning: `1px solid ${c}`,
          boxShadowFocusWarning: `0 0 8px 0 ${Ae(l, { alpha: 0.3 })}`,
          caretColorWarning: l,
          loadingColorError: u,
          borderError: `1px solid ${u}`,
          borderHoverError: `1px solid ${d}`,
          colorFocusError: Ae(u, { alpha: 0.1 }),
          borderFocusError: `1px solid ${d}`,
          boxShadowFocusError: `0 0 8px 0 ${Ae(u, { alpha: 0.3 })}`,
          caretColorError: u,
          clearColor: E,
          clearColorHover: w,
          clearColorPressed: v,
          iconColor: A,
          iconColorDisabled: I,
          iconColorHover: L,
          iconColorPressed: j,
          suffixTextColor: e,
        });
      },
    },
    hr = c$,
    u$ = (t) => {
      const {
        textColor2: e,
        textColor3: n,
        textColorDisabled: r,
        primaryColor: i,
        primaryColorHover: o,
        inputColor: s,
        inputColorDisabled: a,
        borderColor: l,
        warningColor: c,
        warningColorHover: u,
        errorColor: d,
        errorColorHover: h,
        borderRadius: g,
        lineHeight: f,
        fontSizeTiny: p,
        fontSizeSmall: b,
        fontSizeMedium: m,
        fontSizeLarge: _,
        heightTiny: R,
        heightSmall: S,
        heightMedium: x,
        heightLarge: E,
        actionColor: w,
        clearColor: v,
        clearColorHover: y,
        clearColorPressed: T,
        placeholderColor: A,
        placeholderColorDisabled: I,
        iconColor: L,
        iconColorDisabled: j,
        iconColorHover: k,
        iconColorPressed: O,
      } = t;
      return Object.assign(Object.assign({}, Gx), {
        countTextColorDisabled: r,
        countTextColor: n,
        heightTiny: R,
        heightSmall: S,
        heightMedium: x,
        heightLarge: E,
        fontSizeTiny: p,
        fontSizeSmall: b,
        fontSizeMedium: m,
        fontSizeLarge: _,
        lineHeight: f,
        lineHeightTextarea: f,
        borderRadius: g,
        iconSize: "16px",
        groupLabelColor: w,
        groupLabelTextColor: e,
        textColor: e,
        textColorDisabled: r,
        textDecorationColor: e,
        caretColor: i,
        placeholderColor: A,
        placeholderColorDisabled: I,
        color: s,
        colorDisabled: a,
        colorFocus: s,
        groupLabelBorder: `1px solid ${l}`,
        border: `1px solid ${l}`,
        borderHover: `1px solid ${o}`,
        borderDisabled: `1px solid ${l}`,
        borderFocus: `1px solid ${o}`,
        boxShadowFocus: `0 0 0 2px ${Ae(i, { alpha: 0.2 })}`,
        loadingColor: i,
        loadingColorWarning: c,
        borderWarning: `1px solid ${c}`,
        borderHoverWarning: `1px solid ${u}`,
        colorFocusWarning: s,
        borderFocusWarning: `1px solid ${u}`,
        boxShadowFocusWarning: `0 0 0 2px ${Ae(c, { alpha: 0.2 })}`,
        caretColorWarning: c,
        loadingColorError: d,
        borderError: `1px solid ${d}`,
        borderHoverError: `1px solid ${h}`,
        colorFocusError: s,
        borderFocusError: `1px solid ${h}`,
        boxShadowFocusError: `0 0 0 2px ${Ae(d, { alpha: 0.2 })}`,
        caretColorError: d,
        clearColor: v,
        clearColorHover: y,
        clearColorPressed: T,
        iconColor: L,
        iconColorDisabled: j,
        iconColorHover: k,
        iconColorPressed: O,
        suffixTextColor: e,
      });
    },
    d$ = { name: "Input", common: Ut, self: u$ },
    Bg = d$,
    Xx = "n-input";
  function h$(t) {
    let e = 0;
    for (const n of t) e++;
    return e;
  }
  function hc(t) {
    return t === "" || t == null;
  }
  function f$(t) {
    const e = U(null);
    function n() {
      const { value: o } = t;
      if (!(o != null && o.focus)) {
        i();
        return;
      }
      const { selectionStart: s, selectionEnd: a, value: l } = o;
      if (s == null || a == null) {
        i();
        return;
      }
      e.value = {
        start: s,
        end: a,
        beforeText: l.slice(0, s),
        afterText: l.slice(a),
      };
    }
    function r() {
      var o;
      const { value: s } = e,
        { value: a } = t;
      if (!s || !a) return;
      const { value: l } = a,
        { start: c, beforeText: u, afterText: d } = s;
      let h = l.length;
      if (l.endsWith(d)) h = l.length - d.length;
      else if (l.startsWith(u)) h = u.length;
      else {
        const g = u[c - 1],
          f = l.indexOf(g, c - 1);
        f !== -1 && (h = f + 1);
      }
      (o = a.setSelectionRange) === null || o === void 0 || o.call(a, h, h);
    }
    function i() {
      e.value = null;
    }
    return Et(t, i), { recordCursor: n, restoreCursor: r };
  }
  const hv = $e({
      name: "InputWordCount",
      setup(t, { slots: e }) {
        const {
            mergedValueRef: n,
            maxlengthRef: r,
            mergedClsPrefixRef: i,
            countGraphemesRef: o,
          } = Ve(Xx),
          s = ce(() => {
            const { value: a } = n;
            return a === null || Array.isArray(a) ? 0 : (o.value || h$)(a);
          });
        return () => {
          const { value: a } = r,
            { value: l } = n;
          return C(
            "span",
            { class: `${i.value}-input-word-count` },
            dT(
              e.default,
              { value: l === null || Array.isArray(l) ? "" : l },
              () => [a === void 0 ? s.value : `${s.value} / ${a}`]
            )
          );
        };
      },
    }),
    g$ = M(
      "input",
      `
 max-width: 100%;
 cursor: text;
 line-height: 1.5;
 z-index: auto;
 outline: none;
 box-sizing: border-box;
 position: relative;
 display: inline-flex;
 border-radius: var(--n-border-radius);
 background-color: var(--n-color);
 transition: background-color .3s var(--n-bezier);
 font-size: var(--n-font-size);
 --n-padding-vertical: calc((var(--n-height) - 1.5 * var(--n-font-size)) / 2);
`,
      [
        ne(
          "input, textarea",
          `
 overflow: hidden;
 flex-grow: 1;
 position: relative;
 `
        ),
        ne(
          "input-el, textarea-el, input-mirror, textarea-mirror, separator, placeholder",
          `
 box-sizing: border-box;
 font-size: inherit;
 line-height: 1.5;
 font-family: inherit;
 border: none;
 outline: none;
 background-color: #0000;
 text-align: inherit;
 transition:
 -webkit-text-fill-color .3s var(--n-bezier),
 caret-color .3s var(--n-bezier),
 color .3s var(--n-bezier),
 text-decoration-color .3s var(--n-bezier);
 `
        ),
        ne(
          "input-el, textarea-el",
          `
 -webkit-appearance: none;
 scrollbar-width: none;
 width: 100%;
 min-width: 0;
 text-decoration-color: var(--n-text-decoration-color);
 color: var(--n-text-color);
 caret-color: var(--n-caret-color);
 background-color: transparent;
 `,
          [
            q(
              "&::-webkit-scrollbar, &::-webkit-scrollbar-track-piece, &::-webkit-scrollbar-thumb",
              `
 width: 0;
 height: 0;
 display: none;
 `
            ),
            q(
              "&::placeholder",
              `
 color: #0000;
 -webkit-text-fill-color: transparent !important;
 `
            ),
            q("&:-webkit-autofill ~", [ne("placeholder", "display: none;")]),
          ]
        ),
        te("round", [
          Zt("textarea", "border-radius: calc(var(--n-height) / 2);"),
        ]),
        ne(
          "placeholder",
          `
 pointer-events: none;
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 overflow: hidden;
 color: var(--n-placeholder-color);
 `,
          [
            q(
              "span",
              `
 width: 100%;
 display: inline-block;
 `
            ),
          ]
        ),
        te("textarea", [ne("placeholder", "overflow: visible;")]),
        Zt("autosize", "width: 100%;"),
        te("autosize", [
          ne(
            "textarea-el, input-el",
            `
 position: absolute;
 top: 0;
 left: 0;
 height: 100%;
 `
          ),
        ]),
        M(
          "input-wrapper",
          `
 overflow: hidden;
 display: inline-flex;
 flex-grow: 1;
 position: relative;
 padding-left: var(--n-padding-left);
 padding-right: var(--n-padding-right);
 `
        ),
        ne(
          "input-mirror",
          `
 padding: 0;
 height: var(--n-height);
 line-height: var(--n-height);
 overflow: hidden;
 visibility: hidden;
 position: static;
 white-space: pre;
 pointer-events: none;
 `
        ),
        ne(
          "input-el",
          `
 padding: 0;
 height: var(--n-height);
 line-height: var(--n-height);
 `,
          [
            q("&[type=password]::-ms-reveal", "display: none;"),
            q("+", [
              ne(
                "placeholder",
                `
 display: flex;
 align-items: center;
 `
              ),
            ]),
          ]
        ),
        Zt("textarea", [ne("placeholder", "white-space: nowrap;")]),
        ne(
          "eye",
          `
 display: flex;
 align-items: center;
 justify-content: center;
 transition: color .3s var(--n-bezier);
 `
        ),
        te("textarea", "width: 100%;", [
          M(
            "input-word-count",
            `
 position: absolute;
 right: var(--n-padding-right);
 bottom: var(--n-padding-vertical);
 `
          ),
          te("resizable", [
            M(
              "input-wrapper",
              `
 resize: vertical;
 min-height: var(--n-height);
 `
            ),
          ]),
          ne(
            "textarea-el, textarea-mirror, placeholder",
            `
 height: 100%;
 padding-left: 0;
 padding-right: 0;
 padding-top: var(--n-padding-vertical);
 padding-bottom: var(--n-padding-vertical);
 word-break: break-word;
 display: inline-block;
 vertical-align: bottom;
 box-sizing: border-box;
 line-height: var(--n-line-height-textarea);
 margin: 0;
 resize: none;
 white-space: pre-wrap;
 scroll-padding-block-end: var(--n-padding-vertical);
 `
          ),
          ne(
            "textarea-mirror",
            `
 width: 100%;
 pointer-events: none;
 overflow: hidden;
 visibility: hidden;
 position: static;
 white-space: pre-wrap;
 overflow-wrap: break-word;
 `
          ),
        ]),
        te("pair", [
          ne("input-el, placeholder", "text-align: center;"),
          ne(
            "separator",
            `
 display: flex;
 align-items: center;
 transition: color .3s var(--n-bezier);
 color: var(--n-text-color);
 white-space: nowrap;
 `,
            [
              M(
                "icon",
                `
 color: var(--n-icon-color);
 `
              ),
              M(
                "base-icon",
                `
 color: var(--n-icon-color);
 `
              ),
            ]
          ),
        ]),
        te(
          "disabled",
          `
 cursor: not-allowed;
 background-color: var(--n-color-disabled);
 `,
          [
            ne("border", "border: var(--n-border-disabled);"),
            ne(
              "input-el, textarea-el",
              `
 cursor: not-allowed;
 color: var(--n-text-color-disabled);
 text-decoration-color: var(--n-text-color-disabled);
 `
            ),
            ne("placeholder", "color: var(--n-placeholder-color-disabled);"),
            ne("separator", "color: var(--n-text-color-disabled);", [
              M(
                "icon",
                `
 color: var(--n-icon-color-disabled);
 `
              ),
              M(
                "base-icon",
                `
 color: var(--n-icon-color-disabled);
 `
              ),
            ]),
            M(
              "input-word-count",
              `
 color: var(--n-count-text-color-disabled);
 `
            ),
            ne("suffix, prefix", "color: var(--n-text-color-disabled);", [
              M(
                "icon",
                `
 color: var(--n-icon-color-disabled);
 `
              ),
              M(
                "internal-icon",
                `
 color: var(--n-icon-color-disabled);
 `
              ),
            ]),
          ]
        ),
        Zt("disabled", [
          ne(
            "eye",
            `
 color: var(--n-icon-color);
 cursor: pointer;
 `,
            [
              q(
                "&:hover",
                `
 color: var(--n-icon-color-hover);
 `
              ),
              q(
                "&:active",
                `
 color: var(--n-icon-color-pressed);
 `
              ),
            ]
          ),
          q("&:hover", [ne("state-border", "border: var(--n-border-hover);")]),
          te("focus", "background-color: var(--n-color-focus);", [
            ne(
              "state-border",
              `
 border: var(--n-border-focus);
 box-shadow: var(--n-box-shadow-focus);
 `
            ),
          ]),
        ]),
        ne(
          "border, state-border",
          `
 box-sizing: border-box;
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 pointer-events: none;
 border-radius: inherit;
 border: var(--n-border);
 transition:
 box-shadow .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 `
        ),
        ne(
          "state-border",
          `
 border-color: #0000;
 z-index: 1;
 `
        ),
        ne("prefix", "margin-right: 4px;"),
        ne(
          "suffix",
          `
 margin-left: 4px;
 `
        ),
        ne(
          "suffix, prefix",
          `
 transition: color .3s var(--n-bezier);
 flex-wrap: nowrap;
 flex-shrink: 0;
 line-height: var(--n-height);
 white-space: nowrap;
 display: inline-flex;
 align-items: center;
 justify-content: center;
 color: var(--n-suffix-text-color);
 `,
          [
            M(
              "base-loading",
              `
 font-size: var(--n-icon-size);
 margin: 0 2px;
 color: var(--n-loading-color);
 `
            ),
            M(
              "base-clear",
              `
 font-size: var(--n-icon-size);
 `,
              [
                ne("placeholder", [
                  M(
                    "base-icon",
                    `
 transition: color .3s var(--n-bezier);
 color: var(--n-icon-color);
 font-size: var(--n-icon-size);
 `
                  ),
                ]),
              ]
            ),
            q(">", [
              M(
                "icon",
                `
 transition: color .3s var(--n-bezier);
 color: var(--n-icon-color);
 font-size: var(--n-icon-size);
 `
              ),
            ]),
            M(
              "base-icon",
              `
 font-size: var(--n-icon-size);
 `
            ),
          ]
        ),
        M(
          "input-word-count",
          `
 pointer-events: none;
 line-height: 1.5;
 font-size: .85em;
 color: var(--n-count-text-color);
 transition: color .3s var(--n-bezier);
 margin-left: 4px;
 font-variant: tabular-nums;
 `
        ),
        ["warning", "error"].map((t) =>
          te(`${t}-status`, [
            Zt("disabled", [
              M(
                "base-loading",
                `
 color: var(--n-loading-color-${t})
 `
              ),
              ne(
                "input-el, textarea-el",
                `
 caret-color: var(--n-caret-color-${t});
 `
              ),
              ne(
                "state-border",
                `
 border: var(--n-border-${t});
 `
              ),
              q("&:hover", [
                ne(
                  "state-border",
                  `
 border: var(--n-border-hover-${t});
 `
                ),
              ]),
              q(
                "&:focus",
                `
 background-color: var(--n-color-focus-${t});
 `,
                [
                  ne(
                    "state-border",
                    `
 box-shadow: var(--n-box-shadow-focus-${t});
 border: var(--n-border-focus-${t});
 `
                  ),
                ]
              ),
              te(
                "focus",
                `
 background-color: var(--n-color-focus-${t});
 `,
                [
                  ne(
                    "state-border",
                    `
 box-shadow: var(--n-box-shadow-focus-${t});
 border: var(--n-border-focus-${t});
 `
                  ),
                ]
              ),
            ]),
          ])
        ),
      ]
    ),
    p$ = M("input", [
      te("disabled", [
        ne(
          "input-el, textarea-el",
          `
 -webkit-text-fill-color: var(--n-text-color-disabled);
 `
        ),
      ]),
    ]),
    m$ = Object.assign(Object.assign({}, Ye.props), {
      bordered: { type: Boolean, default: void 0 },
      type: { type: String, default: "text" },
      placeholder: [Array, String],
      defaultValue: { type: [String, Array], default: null },
      value: [String, Array],
      disabled: { type: Boolean, default: void 0 },
      size: String,
      rows: { type: [Number, String], default: 3 },
      round: Boolean,
      minlength: [String, Number],
      maxlength: [String, Number],
      clearable: Boolean,
      autosize: { type: [Boolean, Object], default: !1 },
      pair: Boolean,
      separator: String,
      readonly: { type: [String, Boolean], default: !1 },
      passivelyActivated: Boolean,
      showPasswordOn: String,
      stateful: { type: Boolean, default: !0 },
      autofocus: Boolean,
      inputProps: Object,
      resizable: { type: Boolean, default: !0 },
      showCount: Boolean,
      loading: { type: Boolean, default: void 0 },
      allowInput: Function,
      renderCount: Function,
      onMousedown: Function,
      onKeydown: Function,
      onKeyup: [Function, Array],
      onInput: [Function, Array],
      onFocus: [Function, Array],
      onBlur: [Function, Array],
      onClick: [Function, Array],
      onChange: [Function, Array],
      onClear: [Function, Array],
      countGraphemes: Function,
      status: String,
      "onUpdate:value": [Function, Array],
      onUpdateValue: [Function, Array],
      textDecoration: [String, Array],
      attrSize: { type: Number, default: 20 },
      onInputBlur: [Function, Array],
      onInputFocus: [Function, Array],
      onDeactivate: [Function, Array],
      onActivate: [Function, Array],
      onWrapperFocus: [Function, Array],
      onWrapperBlur: [Function, Array],
      internalDeactivateOnEnter: Boolean,
      internalForceFocus: Boolean,
      internalLoadingBeforeSuffix: { type: Boolean, default: !0 },
      showPasswordToggle: Boolean,
    }),
    qu = $e({
      name: "Input",
      props: m$,
      setup(t) {
        const {
            mergedClsPrefixRef: e,
            mergedBorderedRef: n,
            inlineThemeDisabled: r,
            mergedRtlRef: i,
          } = Ct(t),
          o = Ye("Input", "-input", g$, Bg, t, e);
        Vx && Ko("-input-safari", p$, e);
        const s = U(null),
          a = U(null),
          l = U(null),
          c = U(null),
          u = U(null),
          d = U(null),
          h = U(null),
          g = f$(h),
          f = U(null),
          { localeRef: p } = Xu("Input"),
          b = U(t.defaultValue),
          m = We(t, "value"),
          _ = li(m, b),
          R = eo(t),
          { mergedSizeRef: S, mergedDisabledRef: x, mergedStatusRef: E } = R,
          w = U(!1),
          v = U(!1),
          y = U(!1),
          T = U(!1);
        let A = null;
        const I = ce(() => {
            const { placeholder: oe, pair: Ce } = t;
            return Ce
              ? Array.isArray(oe)
                ? oe
                : oe === void 0
                ? ["", ""]
                : [oe, oe]
              : oe === void 0
              ? [p.value.placeholder]
              : [oe];
          }),
          L = ce(() => {
            const { value: oe } = y,
              { value: Ce } = _,
              { value: Ze } = I;
            return !oe && (hc(Ce) || (Array.isArray(Ce) && hc(Ce[0]))) && Ze[0];
          }),
          j = ce(() => {
            const { value: oe } = y,
              { value: Ce } = _,
              { value: Ze } = I;
            return !oe && Ze[1] && (hc(Ce) || (Array.isArray(Ce) && hc(Ce[1])));
          }),
          k = Tn(() => t.internalForceFocus || w.value),
          O = Tn(() => {
            if (x.value || t.readonly || !t.clearable || (!k.value && !v.value))
              return !1;
            const { value: oe } = _,
              { value: Ce } = k;
            return t.pair
              ? !!(Array.isArray(oe) && (oe[0] || oe[1])) && (v.value || Ce)
              : !!oe && (v.value || Ce);
          }),
          D = ce(() => {
            const { showPasswordOn: oe } = t;
            if (oe) return oe;
            if (t.showPasswordToggle) return "click";
          }),
          Y = U(!1),
          se = ce(() => {
            const { textDecoration: oe } = t;
            return oe
              ? Array.isArray(oe)
                ? oe.map((Ce) => ({ textDecoration: Ce }))
                : [{ textDecoration: oe }]
              : ["", ""];
          }),
          de = U(void 0),
          fe = () => {
            var oe, Ce;
            if (t.type === "textarea") {
              const { autosize: Ze } = t;
              if (
                (Ze &&
                  (de.value =
                    (Ce =
                      (oe = f.value) === null || oe === void 0
                        ? void 0
                        : oe.$el) === null || Ce === void 0
                      ? void 0
                      : Ce.offsetWidth),
                !a.value || typeof Ze == "boolean")
              )
                return;
              const {
                  paddingTop: Mt,
                  paddingBottom: Gt,
                  lineHeight: Ot,
                } = window.getComputedStyle(a.value),
                io = Number(Mt.slice(0, -2)),
                oo = Number(Gt.slice(0, -2)),
                so = Number(Ot.slice(0, -2)),
                { value: ua } = l;
              if (!ua) return;
              if (Ze.minRows) {
                const da = Math.max(Ze.minRows, 1),
                  Ad = `${io + oo + so * da}px`;
                ua.style.minHeight = Ad;
              }
              if (Ze.maxRows) {
                const da = `${io + oo + so * Ze.maxRows}px`;
                ua.style.maxHeight = da;
              }
            }
          },
          z = ce(() => {
            const { maxlength: oe } = t;
            return oe === void 0 ? void 0 : Number(oe);
          });
        Vt(() => {
          const { value: oe } = _;
          Array.isArray(oe) || en(oe);
        });
        const ee = Wo().proxy;
        function ue(oe, Ce) {
          const { onUpdateValue: Ze, "onUpdate:value": Mt, onInput: Gt } = t,
            { nTriggerFormInput: Ot } = R;
          Ze && Ke(Ze, oe, Ce),
            Mt && Ke(Mt, oe, Ce),
            Gt && Ke(Gt, oe, Ce),
            (b.value = oe),
            Ot();
        }
        function K(oe, Ce) {
          const { onChange: Ze } = t,
            { nTriggerFormChange: Mt } = R;
          Ze && Ke(Ze, oe, Ce), (b.value = oe), Mt();
        }
        function _e(oe) {
          const { onBlur: Ce } = t,
            { nTriggerFormBlur: Ze } = R;
          Ce && Ke(Ce, oe), Ze();
        }
        function ie(oe) {
          const { onFocus: Ce } = t,
            { nTriggerFormFocus: Ze } = R;
          Ce && Ke(Ce, oe), Ze();
        }
        function pe(oe) {
          const { onClear: Ce } = t;
          Ce && Ke(Ce, oe);
        }
        function re(oe) {
          const { onInputBlur: Ce } = t;
          Ce && Ke(Ce, oe);
        }
        function ge(oe) {
          const { onInputFocus: Ce } = t;
          Ce && Ke(Ce, oe);
        }
        function ke() {
          const { onDeactivate: oe } = t;
          oe && Ke(oe);
        }
        function Me() {
          const { onActivate: oe } = t;
          oe && Ke(oe);
        }
        function P(oe) {
          const { onClick: Ce } = t;
          Ce && Ke(Ce, oe);
        }
        function $(oe) {
          const { onWrapperFocus: Ce } = t;
          Ce && Ke(Ce, oe);
        }
        function H(oe) {
          const { onWrapperBlur: Ce } = t;
          Ce && Ke(Ce, oe);
        }
        function ae() {
          y.value = !0;
        }
        function le(oe) {
          (y.value = !1), oe.target === d.value ? he(oe, 1) : he(oe, 0);
        }
        function he(oe, Ce = 0, Ze = "input") {
          const Mt = oe.target.value;
          if (
            (en(Mt),
            oe instanceof InputEvent && !oe.isComposing && (y.value = !1),
            t.type === "textarea")
          ) {
            const { value: Ot } = f;
            Ot && Ot.syncUnifiedContainer();
          }
          if (((A = Mt), y.value)) return;
          g.recordCursor();
          const Gt = Z(Mt);
          if (Gt)
            if (!t.pair)
              Ze === "input" ? ue(Mt, { source: Ce }) : K(Mt, { source: Ce });
            else {
              let { value: Ot } = _;
              Array.isArray(Ot) ? (Ot = [Ot[0], Ot[1]]) : (Ot = ["", ""]),
                (Ot[Ce] = Mt),
                Ze === "input" ? ue(Ot, { source: Ce }) : K(Ot, { source: Ce });
            }
          ee.$forceUpdate(), Gt || Ht(g.restoreCursor);
        }
        function Z(oe) {
          const { countGraphemes: Ce, maxlength: Ze, minlength: Mt } = t;
          if (Ce) {
            let Ot;
            if (
              (Ze !== void 0 &&
                (Ot === void 0 && (Ot = Ce(oe)), Ot > Number(Ze))) ||
              (Mt !== void 0 &&
                (Ot === void 0 && (Ot = Ce(oe)), Ot < Number(Ze)))
            )
              return !1;
          }
          const { allowInput: Gt } = t;
          return typeof Gt == "function" ? Gt(oe) : !0;
        }
        function W(oe) {
          re(oe),
            oe.relatedTarget === s.value && ke(),
            (oe.relatedTarget !== null &&
              (oe.relatedTarget === u.value ||
                oe.relatedTarget === d.value ||
                oe.relatedTarget === a.value)) ||
              (T.value = !1),
            X(oe, "blur"),
            (h.value = null);
        }
        function Q(oe, Ce) {
          ge(oe),
            (w.value = !0),
            (T.value = !0),
            Me(),
            X(oe, "focus"),
            Ce === 0
              ? (h.value = u.value)
              : Ce === 1
              ? (h.value = d.value)
              : Ce === 2 && (h.value = a.value);
        }
        function J(oe) {
          t.passivelyActivated && (H(oe), X(oe, "blur"));
        }
        function G(oe) {
          t.passivelyActivated && ((w.value = !0), $(oe), X(oe, "focus"));
        }
        function X(oe, Ce) {
          (oe.relatedTarget !== null &&
            (oe.relatedTarget === u.value ||
              oe.relatedTarget === d.value ||
              oe.relatedTarget === a.value ||
              oe.relatedTarget === s.value)) ||
            (Ce === "focus"
              ? (ie(oe), (w.value = !0))
              : Ce === "blur" && (_e(oe), (w.value = !1)));
        }
        function V(oe, Ce) {
          he(oe, Ce, "change");
        }
        function me(oe) {
          P(oe);
        }
        function we(oe) {
          pe(oe), Pe();
        }
        function Pe() {
          t.pair
            ? (ue(["", ""], { source: "clear" }),
              K(["", ""], { source: "clear" }))
            : (ue("", { source: "clear" }), K("", { source: "clear" }));
        }
        function ze(oe) {
          const { onMousedown: Ce } = t;
          Ce && Ce(oe);
          const { tagName: Ze } = oe.target;
          if (Ze !== "INPUT" && Ze !== "TEXTAREA") {
            if (t.resizable) {
              const { value: Mt } = s;
              if (Mt) {
                const {
                    left: Gt,
                    top: Ot,
                    width: io,
                    height: oo,
                  } = Mt.getBoundingClientRect(),
                  so = 14;
                if (
                  Gt + io - so < oe.clientX &&
                  oe.clientX < Gt + io &&
                  Ot + oo - so < oe.clientY &&
                  oe.clientY < Ot + oo
                )
                  return;
              }
            }
            oe.preventDefault(), w.value || Re();
          }
        }
        function Ne() {
          var oe;
          (v.value = !0),
            t.type === "textarea" &&
              ((oe = f.value) === null ||
                oe === void 0 ||
                oe.handleMouseEnterWrapper());
        }
        function Fe() {
          var oe;
          (v.value = !1),
            t.type === "textarea" &&
              ((oe = f.value) === null ||
                oe === void 0 ||
                oe.handleMouseLeaveWrapper());
        }
        function Qe() {
          x.value || (D.value === "click" && (Y.value = !Y.value));
        }
        function It(oe) {
          if (x.value) return;
          oe.preventDefault();
          const Ce = (Mt) => {
            Mt.preventDefault(), mt("mouseup", document, Ce);
          };
          if ((kt("mouseup", document, Ce), D.value !== "mousedown")) return;
          Y.value = !0;
          const Ze = () => {
            (Y.value = !1), mt("mouseup", document, Ze);
          };
          kt("mouseup", document, Ze);
        }
        function rt(oe) {
          t.onKeyup && Ke(t.onKeyup, oe);
        }
        function ln(oe) {
          switch ((t.onKeydown && Ke(t.onKeydown, oe), oe.key)) {
            case "Escape":
              Le();
              break;
            case "Enter":
              ve(oe);
              break;
          }
        }
        function ve(oe) {
          var Ce, Ze;
          if (t.passivelyActivated) {
            const { value: Mt } = T;
            if (Mt) {
              t.internalDeactivateOnEnter && Le();
              return;
            }
            oe.preventDefault(),
              t.type === "textarea"
                ? (Ce = a.value) === null || Ce === void 0 || Ce.focus()
                : (Ze = u.value) === null || Ze === void 0 || Ze.focus();
          }
        }
        function Le() {
          t.passivelyActivated &&
            ((T.value = !1),
            Ht(() => {
              var oe;
              (oe = s.value) === null || oe === void 0 || oe.focus();
            }));
        }
        function Re() {
          var oe, Ce, Ze;
          x.value ||
            (t.passivelyActivated
              ? (oe = s.value) === null || oe === void 0 || oe.focus()
              : ((Ce = a.value) === null || Ce === void 0 || Ce.focus(),
                (Ze = u.value) === null || Ze === void 0 || Ze.focus()));
        }
        function st() {
          var oe;
          !((oe = s.value) === null || oe === void 0) &&
            oe.contains(document.activeElement) &&
            document.activeElement.blur();
        }
        function bt() {
          var oe, Ce;
          (oe = a.value) === null || oe === void 0 || oe.select(),
            (Ce = u.value) === null || Ce === void 0 || Ce.select();
        }
        function Rt() {
          x.value || (a.value ? a.value.focus() : u.value && u.value.focus());
        }
        function Kt() {
          const { value: oe } = s;
          oe != null &&
            oe.contains(document.activeElement) &&
            oe !== document.activeElement &&
            Le();
        }
        function _t(oe) {
          if (t.type === "textarea") {
            const { value: Ce } = a;
            Ce == null || Ce.scrollTo(oe);
          } else {
            const { value: Ce } = u;
            Ce == null || Ce.scrollTo(oe);
          }
        }
        function en(oe) {
          const { type: Ce, pair: Ze, autosize: Mt } = t;
          if (!Ze && Mt)
            if (Ce === "textarea") {
              const { value: Gt } = l;
              Gt &&
                (Gt.textContent =
                  (oe ?? "") +
                  `\r
`);
            } else {
              const { value: Gt } = c;
              Gt && (oe ? (Gt.textContent = oe) : (Gt.innerHTML = "&nbsp;"));
            }
        }
        function Ft() {
          fe();
        }
        const Vn = U({ top: "0" });
        function dn(oe) {
          var Ce;
          const { scrollTop: Ze } = oe.target;
          (Vn.value.top = `${-Ze}px`),
            (Ce = f.value) === null ||
              Ce === void 0 ||
              Ce.syncUnifiedContainer();
        }
        let bn = null;
        or(() => {
          const { autosize: oe, type: Ce } = t;
          oe && Ce === "textarea"
            ? (bn = Et(_, (Ze) => {
                !Array.isArray(Ze) && Ze !== A && en(Ze);
              }))
            : bn == null || bn();
        });
        let tn = null;
        or(() => {
          t.type === "textarea"
            ? (tn = Et(_, (oe) => {
                var Ce;
                !Array.isArray(oe) &&
                  oe !== A &&
                  ((Ce = f.value) === null ||
                    Ce === void 0 ||
                    Ce.syncUnifiedContainer());
              }))
            : tn == null || tn();
        }),
          vt(Xx, {
            mergedValueRef: _,
            maxlengthRef: z,
            mergedClsPrefixRef: e,
            countGraphemesRef: We(t, "countGraphemes"),
          });
        const gi = {
            wrapperElRef: s,
            inputElRef: u,
            textareaElRef: a,
            isCompositing: y,
            clear: Pe,
            focus: Re,
            blur: st,
            select: bt,
            deactivate: Kt,
            activate: Rt,
            scrollTo: _t,
          },
          pi = Cr("Input", i, e),
          pn = ce(() => {
            const { value: oe } = S,
              {
                common: { cubicBezierEaseInOut: Ce },
                self: {
                  color: Ze,
                  borderRadius: Mt,
                  textColor: Gt,
                  caretColor: Ot,
                  caretColorError: io,
                  caretColorWarning: oo,
                  textDecorationColor: so,
                  border: ua,
                  borderDisabled: da,
                  borderHover: Ad,
                  borderFocus: Bw,
                  placeholderColor: Nw,
                  placeholderColorDisabled: Hw,
                  lineHeightTextarea: Ww,
                  colorDisabled: jw,
                  colorFocus: Uw,
                  textColorDisabled: Vw,
                  boxShadowFocus: Gw,
                  iconSize: Xw,
                  colorFocusWarning: Kw,
                  boxShadowFocusWarning: Yw,
                  borderWarning: qw,
                  borderFocusWarning: Zw,
                  borderHoverWarning: Jw,
                  colorFocusError: Qw,
                  boxShadowFocusError: eS,
                  borderError: tS,
                  borderFocusError: nS,
                  borderHoverError: rS,
                  clearSize: iS,
                  clearColor: oS,
                  clearColorHover: sS,
                  clearColorPressed: aS,
                  iconColor: lS,
                  iconColorDisabled: cS,
                  suffixTextColor: uS,
                  countTextColor: dS,
                  countTextColorDisabled: hS,
                  iconColorHover: fS,
                  iconColorPressed: gS,
                  loadingColor: pS,
                  loadingColorError: mS,
                  loadingColorWarning: vS,
                  [Te("padding", oe)]: bS,
                  [Te("fontSize", oe)]: yS,
                  [Te("height", oe)]: xS,
                },
              } = o.value,
              { left: CS, right: _S } = nr(bS);
            return {
              "--n-bezier": Ce,
              "--n-count-text-color": dS,
              "--n-count-text-color-disabled": hS,
              "--n-color": Ze,
              "--n-font-size": yS,
              "--n-border-radius": Mt,
              "--n-height": xS,
              "--n-padding-left": CS,
              "--n-padding-right": _S,
              "--n-text-color": Gt,
              "--n-caret-color": Ot,
              "--n-text-decoration-color": so,
              "--n-border": ua,
              "--n-border-disabled": da,
              "--n-border-hover": Ad,
              "--n-border-focus": Bw,
              "--n-placeholder-color": Nw,
              "--n-placeholder-color-disabled": Hw,
              "--n-icon-size": Xw,
              "--n-line-height-textarea": Ww,
              "--n-color-disabled": jw,
              "--n-color-focus": Uw,
              "--n-text-color-disabled": Vw,
              "--n-box-shadow-focus": Gw,
              "--n-loading-color": pS,
              "--n-caret-color-warning": oo,
              "--n-color-focus-warning": Kw,
              "--n-box-shadow-focus-warning": Yw,
              "--n-border-warning": qw,
              "--n-border-focus-warning": Zw,
              "--n-border-hover-warning": Jw,
              "--n-loading-color-warning": vS,
              "--n-caret-color-error": io,
              "--n-color-focus-error": Qw,
              "--n-box-shadow-focus-error": eS,
              "--n-border-error": tS,
              "--n-border-focus-error": nS,
              "--n-border-hover-error": rS,
              "--n-loading-color-error": mS,
              "--n-clear-color": oS,
              "--n-clear-size": iS,
              "--n-clear-color-hover": sS,
              "--n-clear-color-pressed": aS,
              "--n-icon-color": lS,
              "--n-icon-color-hover": fS,
              "--n-icon-color-pressed": gS,
              "--n-icon-color-disabled": cS,
              "--n-suffix-text-color": uS,
            };
          }),
          cn = r
            ? jt(
                "input",
                ce(() => {
                  const { value: oe } = S;
                  return oe[0];
                }),
                pn,
                t
              )
            : void 0;
        return Object.assign(Object.assign({}, gi), {
          wrapperElRef: s,
          inputElRef: u,
          inputMirrorElRef: c,
          inputEl2Ref: d,
          textareaElRef: a,
          textareaMirrorElRef: l,
          textareaScrollbarInstRef: f,
          rtlEnabled: pi,
          uncontrolledValue: b,
          mergedValue: _,
          passwordVisible: Y,
          mergedPlaceholder: I,
          showPlaceholder1: L,
          showPlaceholder2: j,
          mergedFocus: k,
          isComposing: y,
          activated: T,
          showClearButton: O,
          mergedSize: S,
          mergedDisabled: x,
          textDecorationStyle: se,
          mergedClsPrefix: e,
          mergedBordered: n,
          mergedShowPasswordOn: D,
          placeholderStyle: Vn,
          mergedStatus: E,
          textAreaScrollContainerWidth: de,
          handleTextAreaScroll: dn,
          handleCompositionStart: ae,
          handleCompositionEnd: le,
          handleInput: he,
          handleInputBlur: W,
          handleInputFocus: Q,
          handleWrapperBlur: J,
          handleWrapperFocus: G,
          handleMouseEnter: Ne,
          handleMouseLeave: Fe,
          handleMouseDown: ze,
          handleChange: V,
          handleClick: me,
          handleClear: we,
          handlePasswordToggleClick: Qe,
          handlePasswordToggleMousedown: It,
          handleWrapperKeydown: ln,
          handleWrapperKeyup: rt,
          handleTextAreaMirrorResize: Ft,
          getTextareaScrollContainer: () => a.value,
          mergedTheme: o,
          cssVars: r ? void 0 : pn,
          themeClass: cn == null ? void 0 : cn.themeClass,
          onRender: cn == null ? void 0 : cn.onRender,
        });
      },
      render() {
        var t, e;
        const {
            mergedClsPrefix: n,
            mergedStatus: r,
            themeClass: i,
            type: o,
            countGraphemes: s,
            onRender: a,
          } = this,
          l = this.$slots;
        return (
          a == null || a(),
          C(
            "div",
            {
              ref: "wrapperElRef",
              class: [
                `${n}-input`,
                i,
                r && `${n}-input--${r}-status`,
                {
                  [`${n}-input--rtl`]: this.rtlEnabled,
                  [`${n}-input--disabled`]: this.mergedDisabled,
                  [`${n}-input--textarea`]: o === "textarea",
                  [`${n}-input--resizable`]: this.resizable && !this.autosize,
                  [`${n}-input--autosize`]: this.autosize,
                  [`${n}-input--round`]: this.round && o !== "textarea",
                  [`${n}-input--pair`]: this.pair,
                  [`${n}-input--focus`]: this.mergedFocus,
                  [`${n}-input--stateful`]: this.stateful,
                },
              ],
              style: this.cssVars,
              tabindex:
                !this.mergedDisabled &&
                this.passivelyActivated &&
                !this.activated
                  ? 0
                  : void 0,
              onFocus: this.handleWrapperFocus,
              onBlur: this.handleWrapperBlur,
              onClick: this.handleClick,
              onMousedown: this.handleMouseDown,
              onMouseenter: this.handleMouseEnter,
              onMouseleave: this.handleMouseLeave,
              onCompositionstart: this.handleCompositionStart,
              onCompositionend: this.handleCompositionEnd,
              onKeyup: this.handleWrapperKeyup,
              onKeydown: this.handleWrapperKeydown,
            },
            C(
              "div",
              { class: `${n}-input-wrapper` },
              gt(
                l.prefix,
                (c) => c && C("div", { class: `${n}-input__prefix` }, c)
              ),
              o === "textarea"
                ? C(
                    Ll,
                    {
                      ref: "textareaScrollbarInstRef",
                      class: `${n}-input__textarea`,
                      container: this.getTextareaScrollContainer,
                      triggerDisplayManually: !0,
                      useUnifiedContainer: !0,
                      internalHoistYRail: !0,
                    },
                    {
                      default: () => {
                        var c, u;
                        const { textAreaScrollContainerWidth: d } = this,
                          h = { width: this.autosize && d && `${d}px` };
                        return C(
                          pt,
                          null,
                          C(
                            "textarea",
                            Object.assign({}, this.inputProps, {
                              ref: "textareaElRef",
                              class: [
                                `${n}-input__textarea-el`,
                                (c = this.inputProps) === null || c === void 0
                                  ? void 0
                                  : c.class,
                              ],
                              autofocus: this.autofocus,
                              rows: Number(this.rows),
                              placeholder: this.placeholder,
                              value: this.mergedValue,
                              disabled: this.mergedDisabled,
                              maxlength: s ? void 0 : this.maxlength,
                              minlength: s ? void 0 : this.minlength,
                              readonly: this.readonly,
                              tabindex:
                                this.passivelyActivated && !this.activated
                                  ? -1
                                  : void 0,
                              style: [
                                this.textDecorationStyle[0],
                                (u = this.inputProps) === null || u === void 0
                                  ? void 0
                                  : u.style,
                                h,
                              ],
                              onBlur: this.handleInputBlur,
                              onFocus: (g) => {
                                this.handleInputFocus(g, 2);
                              },
                              onInput: this.handleInput,
                              onChange: this.handleChange,
                              onScroll: this.handleTextAreaScroll,
                            })
                          ),
                          this.showPlaceholder1
                            ? C(
                                "div",
                                {
                                  class: `${n}-input__placeholder`,
                                  style: [this.placeholderStyle, h],
                                  key: "placeholder",
                                },
                                this.mergedPlaceholder[0]
                              )
                            : null,
                          this.autosize
                            ? C(
                                $o,
                                { onResize: this.handleTextAreaMirrorResize },
                                {
                                  default: () =>
                                    C("div", {
                                      ref: "textareaMirrorElRef",
                                      class: `${n}-input__textarea-mirror`,
                                      key: "mirror",
                                    }),
                                }
                              )
                            : null
                        );
                      },
                    }
                  )
                : C(
                    "div",
                    { class: `${n}-input__input` },
                    C(
                      "input",
                      Object.assign(
                        {
                          type:
                            o === "password" &&
                            this.mergedShowPasswordOn &&
                            this.passwordVisible
                              ? "text"
                              : o,
                        },
                        this.inputProps,
                        {
                          ref: "inputElRef",
                          class: [
                            `${n}-input__input-el`,
                            (t = this.inputProps) === null || t === void 0
                              ? void 0
                              : t.class,
                          ],
                          style: [
                            this.textDecorationStyle[0],
                            (e = this.inputProps) === null || e === void 0
                              ? void 0
                              : e.style,
                          ],
                          tabindex:
                            this.passivelyActivated && !this.activated
                              ? -1
                              : void 0,
                          placeholder: this.mergedPlaceholder[0],
                          disabled: this.mergedDisabled,
                          maxlength: s ? void 0 : this.maxlength,
                          minlength: s ? void 0 : this.minlength,
                          value: Array.isArray(this.mergedValue)
                            ? this.mergedValue[0]
                            : this.mergedValue,
                          readonly: this.readonly,
                          autofocus: this.autofocus,
                          size: this.attrSize,
                          onBlur: this.handleInputBlur,
                          onFocus: (c) => {
                            this.handleInputFocus(c, 0);
                          },
                          onInput: (c) => {
                            this.handleInput(c, 0);
                          },
                          onChange: (c) => {
                            this.handleChange(c, 0);
                          },
                        }
                      )
                    ),
                    this.showPlaceholder1
                      ? C(
                          "div",
                          { class: `${n}-input__placeholder` },
                          C("span", null, this.mergedPlaceholder[0])
                        )
                      : null,
                    this.autosize
                      ? C(
                          "div",
                          {
                            class: `${n}-input__input-mirror`,
                            key: "mirror",
                            ref: "inputMirrorElRef",
                          },
                          " "
                        )
                      : null
                  ),
              !this.pair &&
                gt(l.suffix, (c) =>
                  c ||
                  this.clearable ||
                  this.showCount ||
                  this.mergedShowPasswordOn ||
                  this.loading !== void 0
                    ? C("div", { class: `${n}-input__suffix` }, [
                        gt(
                          l["clear-icon-placeholder"],
                          (u) =>
                            (this.clearable || u) &&
                            C(
                              df,
                              {
                                clsPrefix: n,
                                show: this.showClearButton,
                                onClear: this.handleClear,
                              },
                              {
                                placeholder: () => u,
                                icon: () => {
                                  var d, h;
                                  return (h = (d = this.$slots)[
                                    "clear-icon"
                                  ]) === null || h === void 0
                                    ? void 0
                                    : h.call(d);
                                },
                              }
                            )
                        ),
                        this.internalLoadingBeforeSuffix ? null : c,
                        this.loading !== void 0
                          ? C(XL, {
                              clsPrefix: n,
                              loading: this.loading,
                              showArrow: !1,
                              showClear: !1,
                              style: this.cssVars,
                            })
                          : null,
                        this.internalLoadingBeforeSuffix ? c : null,
                        this.showCount && this.type !== "textarea"
                          ? C(hv, null, {
                              default: (u) => {
                                var d;
                                return (d = l.count) === null || d === void 0
                                  ? void 0
                                  : d.call(l, u);
                              },
                            })
                          : null,
                        this.mergedShowPasswordOn && this.type === "password"
                          ? C(
                              "div",
                              {
                                class: `${n}-input__eye`,
                                onMousedown: this.handlePasswordToggleMousedown,
                                onClick: this.handlePasswordToggleClick,
                              },
                              this.passwordVisible
                                ? Lr(l["password-visible-icon"], () => [
                                    C(
                                      ht,
                                      { clsPrefix: n },
                                      { default: () => C(Tx, null) }
                                    ),
                                  ])
                                : Lr(l["password-invisible-icon"], () => [
                                    C(
                                      ht,
                                      { clsPrefix: n },
                                      { default: () => C(g3, null) }
                                    ),
                                  ])
                            )
                          : null,
                      ])
                    : null
                )
            ),
            this.pair
              ? C(
                  "span",
                  { class: `${n}-input__separator` },
                  Lr(l.separator, () => [this.separator])
                )
              : null,
            this.pair
              ? C(
                  "div",
                  { class: `${n}-input-wrapper` },
                  C(
                    "div",
                    { class: `${n}-input__input` },
                    C("input", {
                      ref: "inputEl2Ref",
                      type: this.type,
                      class: `${n}-input__input-el`,
                      tabindex:
                        this.passivelyActivated && !this.activated
                          ? -1
                          : void 0,
                      placeholder: this.mergedPlaceholder[1],
                      disabled: this.mergedDisabled,
                      maxlength: s ? void 0 : this.maxlength,
                      minlength: s ? void 0 : this.minlength,
                      value: Array.isArray(this.mergedValue)
                        ? this.mergedValue[1]
                        : void 0,
                      readonly: this.readonly,
                      style: this.textDecorationStyle[1],
                      onBlur: this.handleInputBlur,
                      onFocus: (c) => {
                        this.handleInputFocus(c, 1);
                      },
                      onInput: (c) => {
                        this.handleInput(c, 1);
                      },
                      onChange: (c) => {
                        this.handleChange(c, 1);
                      },
                    }),
                    this.showPlaceholder2
                      ? C(
                          "div",
                          { class: `${n}-input__placeholder` },
                          C("span", null, this.mergedPlaceholder[1])
                        )
                      : null
                  ),
                  gt(
                    l.suffix,
                    (c) =>
                      (this.clearable || c) &&
                      C("div", { class: `${n}-input__suffix` }, [
                        this.clearable &&
                          C(
                            df,
                            {
                              clsPrefix: n,
                              show: this.showClearButton,
                              onClear: this.handleClear,
                            },
                            {
                              icon: () => {
                                var u;
                                return (u = l["clear-icon"]) === null ||
                                  u === void 0
                                  ? void 0
                                  : u.call(l);
                              },
                              placeholder: () => {
                                var u;
                                return (u = l["clear-icon-placeholder"]) ===
                                  null || u === void 0
                                  ? void 0
                                  : u.call(l);
                              },
                            }
                          ),
                        c,
                      ])
                  )
                )
              : null,
            this.mergedBordered
              ? C("div", { class: `${n}-input__border` })
              : null,
            this.mergedBordered
              ? C("div", { class: `${n}-input__state-border` })
              : null,
            this.showCount && o === "textarea"
              ? C(hv, null, {
                  default: (c) => {
                    var u;
                    const { renderCount: d } = this;
                    return d
                      ? d(c)
                      : (u = l.count) === null || u === void 0
                      ? void 0
                      : u.call(l, c);
                  },
                })
              : null
          )
        );
      },
    }),
    v$ = M(
      "input-group",
      `
 display: inline-flex;
 width: 100%;
 flex-wrap: nowrap;
 vertical-align: bottom;
`,
      [
        q(">", [
          M("input", [
            q(
              "&:not(:last-child)",
              `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `
            ),
            q(
              "&:not(:first-child)",
              `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 margin-left: -1px!important;
 `
            ),
          ]),
          M("button", [
            q(
              "&:not(:last-child)",
              `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `,
              [
                ne(
                  "state-border, border",
                  `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `
                ),
              ]
            ),
            q(
              "&:not(:first-child)",
              `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `,
              [
                ne(
                  "state-border, border",
                  `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `
                ),
              ]
            ),
          ]),
          q("*", [
            q(
              "&:not(:last-child)",
              `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `,
              [
                q(">", [
                  M(
                    "input",
                    `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `
                  ),
                  M("base-selection", [
                    M(
                      "base-selection-label",
                      `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `
                    ),
                    M(
                      "base-selection-tags",
                      `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `
                    ),
                    ne(
                      "box-shadow, border, state-border",
                      `
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `
                    ),
                  ]),
                ]),
              ]
            ),
            q(
              "&:not(:first-child)",
              `
 margin-left: -1px!important;
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `,
              [
                q(">", [
                  M(
                    "input",
                    `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `
                  ),
                  M("base-selection", [
                    M(
                      "base-selection-label",
                      `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `
                    ),
                    M(
                      "base-selection-tags",
                      `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `
                    ),
                    ne(
                      "box-shadow, border, state-border",
                      `
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `
                    ),
                  ]),
                ]),
              ]
            ),
          ]),
        ]),
      ]
    ),
    b$ = {},
    Jo = $e({
      name: "InputGroup",
      props: b$,
      setup(t) {
        const { mergedClsPrefixRef: e } = Ct(t);
        return Ko("-input-group", v$, e), { mergedClsPrefix: e };
      },
      render() {
        const { mergedClsPrefix: t } = this;
        return C("div", { class: `${t}-input-group` }, this.$slots);
      },
    });
  function Kx(t) {
    const { boxShadow2: e } = t;
    return { menuBoxShadow: e };
  }
  const y$ = {
      name: "AutoComplete",
      common: Ut,
      peers: { InternalSelectMenu: Dx, Input: Bg },
      self: Kx,
    },
    x$ = y$,
    C$ = {
      name: "AutoComplete",
      common: Oe,
      peers: { InternalSelectMenu: $l, Input: hr },
      self: Kx,
    },
    _$ = C$;
  function w$(t) {
    return t.map(Yx);
  }
  function Yx(t) {
    var e, n;
    return typeof t == "string"
      ? { label: t, value: t }
      : t.type === "group"
      ? {
          type: "group",
          label: (e = t.label) !== null && e !== void 0 ? e : t.name,
          value: (n = t.value) !== null && n !== void 0 ? n : t.name,
          key: t.key || t.name,
          children: t.children.map((i) => Yx(i)),
        }
      : t;
  }
  const S$ = q([
      M(
        "auto-complete",
        `
 z-index: auto;
 position: relative;
 display: inline-flex;
 width: 100%;
 `
      ),
      M(
        "auto-complete-menu",
        `
 margin: 4px 0;
 box-shadow: var(--n-menu-box-shadow);
 `,
        [
          Hs({
            originalTransition:
              "background-color .3s var(--n-bezier), box-shadow .3s var(--n-bezier)",
          }),
        ]
      ),
    ]),
    E$ = Object.assign(Object.assign({}, Ye.props), {
      to: ar.propTo,
      menuProps: Object,
      bordered: { type: Boolean, default: void 0 },
      clearable: { type: Boolean, default: void 0 },
      defaultValue: { type: String, default: null },
      loading: { type: Boolean, default: void 0 },
      disabled: { type: Boolean, default: void 0 },
      placeholder: String,
      placement: { type: String, default: "bottom-start" },
      value: String,
      blurAfterSelect: Boolean,
      clearAfterSelect: Boolean,
      getShow: Function,
      showEmpty: Boolean,
      inputProps: Object,
      renderOption: Function,
      renderLabel: Function,
      size: String,
      options: { type: Array, default: () => [] },
      zIndex: Number,
      status: String,
      "onUpdate:value": [Function, Array],
      onUpdateValue: [Function, Array],
      onSelect: [Function, Array],
      onBlur: [Function, Array],
      onFocus: [Function, Array],
      onInput: [Function, Array],
    }),
    R$ = $e({
      name: "AutoComplete",
      props: E$,
      setup(t) {
        const {
            mergedBorderedRef: e,
            namespaceRef: n,
            mergedClsPrefixRef: r,
            inlineThemeDisabled: i,
          } = Ct(t),
          o = eo(t),
          { mergedSizeRef: s, mergedDisabledRef: a, mergedStatusRef: l } = o,
          c = U(null),
          u = U(null),
          d = U(t.defaultValue),
          h = We(t, "value"),
          g = li(h, d),
          f = U(!1),
          p = U(!1),
          b = Ye("AutoComplete", "-auto-complete", S$, x$, t, r),
          m = ce(() => w$(t.options)),
          _ = ce(() => {
            const { getShow: ue } = t;
            return ue ? ue(g.value || "") : !!g.value;
          }),
          R = ce(
            () => _.value && f.value && (t.showEmpty ? !0 : !!m.value.length)
          ),
          S = ce(() => rL(m.value, a$("value", "children")));
        function x(ue) {
          const { "onUpdate:value": K, onUpdateValue: _e, onInput: ie } = t,
            { nTriggerFormInput: pe, nTriggerFormChange: re } = o;
          _e && Ke(_e, ue),
            K && Ke(K, ue),
            ie && Ke(ie, ue),
            (d.value = ue),
            pe(),
            re();
        }
        function E(ue) {
          const { onSelect: K } = t,
            { nTriggerFormInput: _e, nTriggerFormChange: ie } = o;
          K && Ke(K, ue), _e(), ie();
        }
        function w(ue) {
          const { onBlur: K } = t,
            { nTriggerFormBlur: _e } = o;
          K && Ke(K, ue), _e();
        }
        function v(ue) {
          const { onFocus: K } = t,
            { nTriggerFormFocus: _e } = o;
          K && Ke(K, ue), _e();
        }
        function y() {
          p.value = !0;
        }
        function T() {
          window.setTimeout(() => {
            p.value = !1;
          }, 0);
        }
        function A(ue) {
          var K, _e, ie;
          switch (ue.key) {
            case "Enter":
              if (!p.value) {
                const pe =
                  (K = u.value) === null || K === void 0
                    ? void 0
                    : K.getPendingTmNode();
                pe && (I(pe.rawNode), ue.preventDefault());
              }
              break;
            case "ArrowDown":
              (_e = u.value) === null || _e === void 0 || _e.next();
              break;
            case "ArrowUp":
              (ie = u.value) === null || ie === void 0 || ie.prev();
              break;
          }
        }
        function I(ue) {
          (ue == null ? void 0 : ue.value) !== void 0 &&
            (E(ue.value),
            t.clearAfterSelect ? x(null) : ue.label !== void 0 && x(ue.label),
            (f.value = !1),
            t.blurAfterSelect && se());
        }
        function L() {
          x(null);
        }
        function j(ue) {
          (f.value = !0), v(ue);
        }
        function k(ue) {
          (f.value = !1), w(ue);
        }
        function O(ue) {
          (f.value = !0), x(ue);
        }
        function D(ue) {
          I(ue.rawNode);
        }
        function Y(ue) {
          var K;
          (!((K = c.value) === null || K === void 0) && K.contains(Fs(ue))) ||
            (f.value = !1);
        }
        function se() {
          var ue, K;
          !((ue = c.value) === null || ue === void 0) &&
            ue.contains(document.activeElement) &&
            ((K = document.activeElement) === null || K === void 0 || K.blur());
        }
        const de = ce(() => {
            const {
              common: { cubicBezierEaseInOut: ue },
              self: { menuBoxShadow: K },
            } = b.value;
            return { "--n-menu-box-shadow": K, "--n-bezier": ue };
          }),
          fe = i ? jt("auto-complete", void 0, de, t) : void 0,
          z = U(null),
          ee = {
            focus: () => {
              var ue;
              (ue = z.value) === null || ue === void 0 || ue.focus();
            },
            blur: () => {
              var ue;
              (ue = z.value) === null || ue === void 0 || ue.blur();
            },
          };
        return {
          focus: ee.focus,
          blur: ee.blur,
          inputInstRef: z,
          uncontrolledValue: d,
          mergedValue: g,
          isMounted: Qi(),
          adjustedTo: ar(t),
          menuInstRef: u,
          triggerElRef: c,
          treeMate: S,
          mergedSize: s,
          mergedDisabled: a,
          active: R,
          mergedStatus: l,
          handleClear: L,
          handleFocus: j,
          handleBlur: k,
          handleInput: O,
          handleToggle: D,
          handleClickOutsideMenu: Y,
          handleCompositionStart: y,
          handleCompositionEnd: T,
          handleKeyDown: A,
          mergedTheme: b,
          cssVars: i ? void 0 : de,
          themeClass: fe == null ? void 0 : fe.themeClass,
          onRender: fe == null ? void 0 : fe.onRender,
          mergedBordered: e,
          namespace: n,
          mergedClsPrefix: r,
        };
      },
      render() {
        const { mergedClsPrefix: t } = this;
        return C(
          "div",
          {
            class: `${t}-auto-complete`,
            ref: "triggerElRef",
            onKeydown: this.handleKeyDown,
            onCompositionstart: this.handleCompositionStart,
            onCompositionend: this.handleCompositionEnd,
          },
          C(mg, null, {
            default: () => [
              C(vg, null, {
                default: () => {
                  if (this.$slots.default)
                    return qc(this.$slots, "default", {
                      handleInput: this.handleInput,
                      handleFocus: this.handleFocus,
                      handleBlur: this.handleBlur,
                      value: this.mergedValue,
                    });
                  const { mergedTheme: n } = this;
                  return C(
                    qu,
                    {
                      ref: "inputInstRef",
                      status: this.mergedStatus,
                      theme: n.peers.Input,
                      themeOverrides: n.peerOverrides.Input,
                      bordered: this.mergedBordered,
                      value: this.mergedValue,
                      placeholder: this.placeholder,
                      size: this.mergedSize,
                      disabled: this.mergedDisabled,
                      clearable: this.clearable,
                      loading: this.loading,
                      inputProps: this.inputProps,
                      onClear: this.handleClear,
                      onFocus: this.handleFocus,
                      onUpdateValue: this.handleInput,
                      onBlur: this.handleBlur,
                    },
                    {
                      suffix: () => {
                        var r, i;
                        return (i = (r = this.$slots).suffix) === null ||
                          i === void 0
                          ? void 0
                          : i.call(r);
                      },
                      prefix: () => {
                        var r, i;
                        return (i = (r = this.$slots).prefix) === null ||
                          i === void 0
                          ? void 0
                          : i.call(r);
                      },
                    }
                  );
                },
              }),
              C(
                xg,
                {
                  show: this.active,
                  to: this.adjustedTo,
                  containerClass: this.namespace,
                  zIndex: this.zIndex,
                  teleportDisabled: this.adjustedTo === ar.tdkey,
                  placement: this.placement,
                  width: "target",
                },
                {
                  default: () =>
                    C(
                      vn,
                      {
                        name: "fade-in-scale-up-transition",
                        appear: this.isMounted,
                      },
                      {
                        default: () => {
                          var e;
                          if (
                            ((e = this.onRender) === null ||
                              e === void 0 ||
                              e.call(this),
                            !this.active)
                          )
                            return null;
                          const { menuProps: n } = this;
                          return sr(
                            C(
                              TL,
                              Object.assign({}, n, {
                                clsPrefix: t,
                                ref: "menuInstRef",
                                theme:
                                  this.mergedTheme.peers.InternalSelectMenu,
                                themeOverrides:
                                  this.mergedTheme.peerOverrides
                                    .InternalSelectMenu,
                                "auto-pending": !0,
                                class: [
                                  `${t}-auto-complete-menu`,
                                  this.themeClass,
                                  n == null ? void 0 : n.class,
                                ],
                                style: [
                                  n == null ? void 0 : n.style,
                                  this.cssVars,
                                ],
                                treeMate: this.treeMate,
                                multiple: !1,
                                renderLabel: this.renderLabel,
                                renderOption: this.renderOption,
                                size: "medium",
                                onToggle: this.handleToggle,
                              }),
                              {
                                empty: () => {
                                  var r, i;
                                  return (i = (r = this.$slots).empty) ===
                                    null || i === void 0
                                    ? void 0
                                    : i.call(r);
                                },
                              }
                            ),
                            [
                              [
                                Qc,
                                this.handleClickOutsideMenu,
                                void 0,
                                { capture: !0 },
                              ],
                            ]
                          );
                        },
                      }
                    ),
                }
              ),
            ],
          })
        );
      },
    }),
    T$ = Ji && "loading" in document.createElement("img"),
    P$ = (t = {}) => {
      var e;
      const { root: n = null } = t;
      return {
        hash: `${t.rootMargin || "0px 0px 0px 0px"}-${
          Array.isArray(t.threshold)
            ? t.threshold.join(",")
            : (e = t.threshold) !== null && e !== void 0
            ? e
            : "0"
        }`,
        options: Object.assign(Object.assign({}, t), {
          root:
            (typeof n == "string" ? document.querySelector(n) : n) ||
            document.documentElement,
        }),
      };
    },
    uh = new WeakMap(),
    dh = new WeakMap(),
    hh = new WeakMap(),
    A$ = (t, e, n) => {
      if (!t) return () => {};
      const r = P$(e),
        { root: i } = r.options;
      let o;
      const s = uh.get(i);
      s ? (o = s) : ((o = new Map()), uh.set(i, o));
      let a, l;
      o.has(r.hash)
        ? ((l = o.get(r.hash)),
          l[1].has(t) || ((a = l[0]), l[1].add(t), a.observe(t)))
        : ((a = new IntersectionObserver((d) => {
            d.forEach((h) => {
              if (h.isIntersecting) {
                const g = dh.get(h.target),
                  f = hh.get(h.target);
                g && g(), f && (f.value = !0);
              }
            });
          }, r.options)),
          a.observe(t),
          (l = [a, new Set([t])]),
          o.set(r.hash, l));
      let c = !1;
      const u = () => {
        c ||
          (dh.delete(t),
          hh.delete(t),
          (c = !0),
          l[1].has(t) && (l[0].unobserve(t), l[1].delete(t)),
          l[1].size <= 0 && o.delete(r.hash),
          o.size || uh.delete(i));
      };
      return dh.set(t, u), hh.set(t, n), u;
    },
    k$ = (t) => {
      const {
        borderRadius: e,
        avatarColor: n,
        cardColor: r,
        fontSize: i,
        heightTiny: o,
        heightSmall: s,
        heightMedium: a,
        heightLarge: l,
        heightHuge: c,
        modalColor: u,
        popoverColor: d,
      } = t;
      return {
        borderRadius: e,
        fontSize: i,
        border: `2px solid ${r}`,
        heightTiny: o,
        heightSmall: s,
        heightMedium: a,
        heightLarge: l,
        heightHuge: c,
        color: Ue(r, n),
        colorModal: Ue(u, n),
        colorPopover: Ue(d, n),
      };
    },
    I$ = { name: "Avatar", common: Oe, self: k$ },
    qx = I$,
    O$ = () => ({ gap: "-12px" }),
    M$ = { name: "AvatarGroup", common: Oe, peers: { Avatar: qx }, self: O$ },
    L$ = M$,
    $$ = {
      width: "44px",
      height: "44px",
      borderRadius: "22px",
      iconSize: "26px",
    },
    D$ = {
      name: "BackTop",
      common: Oe,
      self(t) {
        const {
          popoverColor: e,
          textColor2: n,
          primaryColorHover: r,
          primaryColorPressed: i,
        } = t;
        return Object.assign(Object.assign({}, $$), {
          color: e,
          textColor: n,
          iconColor: n,
          iconColorHover: r,
          iconColorPressed: i,
          boxShadow: "0 2px 8px 0px rgba(0, 0, 0, .12)",
          boxShadowHover: "0 2px 12px 0px rgba(0, 0, 0, .18)",
          boxShadowPressed: "0 2px 12px 0px rgba(0, 0, 0, .18)",
        });
      },
    },
    z$ = D$,
    F$ = {
      name: "Badge",
      common: Oe,
      self(t) {
        const {
          errorColorSuppl: e,
          infoColorSuppl: n,
          successColorSuppl: r,
          warningColorSuppl: i,
          fontFamily: o,
        } = t;
        return {
          color: e,
          colorInfo: n,
          colorSuccess: r,
          colorError: e,
          colorWarning: i,
          fontSize: "12px",
          fontFamily: o,
        };
      },
    },
    B$ = F$,
    N$ = { fontWeightActive: "400" },
    H$ = (t) => {
      const {
        fontSize: e,
        textColor3: n,
        textColor2: r,
        borderRadius: i,
        buttonColor2Hover: o,
        buttonColor2Pressed: s,
      } = t;
      return Object.assign(Object.assign({}, N$), {
        fontSize: e,
        itemLineHeight: "1.25",
        itemTextColor: n,
        itemTextColorHover: r,
        itemTextColorPressed: r,
        itemTextColorActive: r,
        itemBorderRadius: i,
        itemColorHover: o,
        itemColorPressed: s,
        separatorColor: n,
      });
    },
    W$ = { name: "Breadcrumb", common: Oe, self: H$ },
    j$ = W$;
  function uo(t) {
    return Ue(t, [255, 255, 255, 0.16]);
  }
  function fc(t) {
    return Ue(t, [0, 0, 0, 0.12]);
  }
  const U$ = "n-button-group",
    V$ = {
      paddingTiny: "0 6px",
      paddingSmall: "0 10px",
      paddingMedium: "0 14px",
      paddingLarge: "0 18px",
      paddingRoundTiny: "0 10px",
      paddingRoundSmall: "0 14px",
      paddingRoundMedium: "0 18px",
      paddingRoundLarge: "0 22px",
      iconMarginTiny: "6px",
      iconMarginSmall: "6px",
      iconMarginMedium: "6px",
      iconMarginLarge: "6px",
      iconSizeTiny: "14px",
      iconSizeSmall: "18px",
      iconSizeMedium: "18px",
      iconSizeLarge: "20px",
      rippleDuration: ".6s",
    },
    Zx = (t) => {
      const {
        heightTiny: e,
        heightSmall: n,
        heightMedium: r,
        heightLarge: i,
        borderRadius: o,
        fontSizeTiny: s,
        fontSizeSmall: a,
        fontSizeMedium: l,
        fontSizeLarge: c,
        opacityDisabled: u,
        textColor2: d,
        textColor3: h,
        primaryColorHover: g,
        primaryColorPressed: f,
        borderColor: p,
        primaryColor: b,
        baseColor: m,
        infoColor: _,
        infoColorHover: R,
        infoColorPressed: S,
        successColor: x,
        successColorHover: E,
        successColorPressed: w,
        warningColor: v,
        warningColorHover: y,
        warningColorPressed: T,
        errorColor: A,
        errorColorHover: I,
        errorColorPressed: L,
        fontWeight: j,
        buttonColor2: k,
        buttonColor2Hover: O,
        buttonColor2Pressed: D,
        fontWeightStrong: Y,
      } = t;
      return Object.assign(Object.assign({}, V$), {
        heightTiny: e,
        heightSmall: n,
        heightMedium: r,
        heightLarge: i,
        borderRadiusTiny: o,
        borderRadiusSmall: o,
        borderRadiusMedium: o,
        borderRadiusLarge: o,
        fontSizeTiny: s,
        fontSizeSmall: a,
        fontSizeMedium: l,
        fontSizeLarge: c,
        opacityDisabled: u,
        colorOpacitySecondary: "0.16",
        colorOpacitySecondaryHover: "0.22",
        colorOpacitySecondaryPressed: "0.28",
        colorSecondary: k,
        colorSecondaryHover: O,
        colorSecondaryPressed: D,
        colorTertiary: k,
        colorTertiaryHover: O,
        colorTertiaryPressed: D,
        colorQuaternary: "#0000",
        colorQuaternaryHover: O,
        colorQuaternaryPressed: D,
        color: "#0000",
        colorHover: "#0000",
        colorPressed: "#0000",
        colorFocus: "#0000",
        colorDisabled: "#0000",
        textColor: d,
        textColorTertiary: h,
        textColorHover: g,
        textColorPressed: f,
        textColorFocus: g,
        textColorDisabled: d,
        textColorText: d,
        textColorTextHover: g,
        textColorTextPressed: f,
        textColorTextFocus: g,
        textColorTextDisabled: d,
        textColorGhost: d,
        textColorGhostHover: g,
        textColorGhostPressed: f,
        textColorGhostFocus: g,
        textColorGhostDisabled: d,
        border: `1px solid ${p}`,
        borderHover: `1px solid ${g}`,
        borderPressed: `1px solid ${f}`,
        borderFocus: `1px solid ${g}`,
        borderDisabled: `1px solid ${p}`,
        rippleColor: b,
        colorPrimary: b,
        colorHoverPrimary: g,
        colorPressedPrimary: f,
        colorFocusPrimary: g,
        colorDisabledPrimary: b,
        textColorPrimary: m,
        textColorHoverPrimary: m,
        textColorPressedPrimary: m,
        textColorFocusPrimary: m,
        textColorDisabledPrimary: m,
        textColorTextPrimary: b,
        textColorTextHoverPrimary: g,
        textColorTextPressedPrimary: f,
        textColorTextFocusPrimary: g,
        textColorTextDisabledPrimary: d,
        textColorGhostPrimary: b,
        textColorGhostHoverPrimary: g,
        textColorGhostPressedPrimary: f,
        textColorGhostFocusPrimary: g,
        textColorGhostDisabledPrimary: b,
        borderPrimary: `1px solid ${b}`,
        borderHoverPrimary: `1px solid ${g}`,
        borderPressedPrimary: `1px solid ${f}`,
        borderFocusPrimary: `1px solid ${g}`,
        borderDisabledPrimary: `1px solid ${b}`,
        rippleColorPrimary: b,
        colorInfo: _,
        colorHoverInfo: R,
        colorPressedInfo: S,
        colorFocusInfo: R,
        colorDisabledInfo: _,
        textColorInfo: m,
        textColorHoverInfo: m,
        textColorPressedInfo: m,
        textColorFocusInfo: m,
        textColorDisabledInfo: m,
        textColorTextInfo: _,
        textColorTextHoverInfo: R,
        textColorTextPressedInfo: S,
        textColorTextFocusInfo: R,
        textColorTextDisabledInfo: d,
        textColorGhostInfo: _,
        textColorGhostHoverInfo: R,
        textColorGhostPressedInfo: S,
        textColorGhostFocusInfo: R,
        textColorGhostDisabledInfo: _,
        borderInfo: `1px solid ${_}`,
        borderHoverInfo: `1px solid ${R}`,
        borderPressedInfo: `1px solid ${S}`,
        borderFocusInfo: `1px solid ${R}`,
        borderDisabledInfo: `1px solid ${_}`,
        rippleColorInfo: _,
        colorSuccess: x,
        colorHoverSuccess: E,
        colorPressedSuccess: w,
        colorFocusSuccess: E,
        colorDisabledSuccess: x,
        textColorSuccess: m,
        textColorHoverSuccess: m,
        textColorPressedSuccess: m,
        textColorFocusSuccess: m,
        textColorDisabledSuccess: m,
        textColorTextSuccess: x,
        textColorTextHoverSuccess: E,
        textColorTextPressedSuccess: w,
        textColorTextFocusSuccess: E,
        textColorTextDisabledSuccess: d,
        textColorGhostSuccess: x,
        textColorGhostHoverSuccess: E,
        textColorGhostPressedSuccess: w,
        textColorGhostFocusSuccess: E,
        textColorGhostDisabledSuccess: x,
        borderSuccess: `1px solid ${x}`,
        borderHoverSuccess: `1px solid ${E}`,
        borderPressedSuccess: `1px solid ${w}`,
        borderFocusSuccess: `1px solid ${E}`,
        borderDisabledSuccess: `1px solid ${x}`,
        rippleColorSuccess: x,
        colorWarning: v,
        colorHoverWarning: y,
        colorPressedWarning: T,
        colorFocusWarning: y,
        colorDisabledWarning: v,
        textColorWarning: m,
        textColorHoverWarning: m,
        textColorPressedWarning: m,
        textColorFocusWarning: m,
        textColorDisabledWarning: m,
        textColorTextWarning: v,
        textColorTextHoverWarning: y,
        textColorTextPressedWarning: T,
        textColorTextFocusWarning: y,
        textColorTextDisabledWarning: d,
        textColorGhostWarning: v,
        textColorGhostHoverWarning: y,
        textColorGhostPressedWarning: T,
        textColorGhostFocusWarning: y,
        textColorGhostDisabledWarning: v,
        borderWarning: `1px solid ${v}`,
        borderHoverWarning: `1px solid ${y}`,
        borderPressedWarning: `1px solid ${T}`,
        borderFocusWarning: `1px solid ${y}`,
        borderDisabledWarning: `1px solid ${v}`,
        rippleColorWarning: v,
        colorError: A,
        colorHoverError: I,
        colorPressedError: L,
        colorFocusError: I,
        colorDisabledError: A,
        textColorError: m,
        textColorHoverError: m,
        textColorPressedError: m,
        textColorFocusError: m,
        textColorDisabledError: m,
        textColorTextError: A,
        textColorTextHoverError: I,
        textColorTextPressedError: L,
        textColorTextFocusError: I,
        textColorTextDisabledError: d,
        textColorGhostError: A,
        textColorGhostHoverError: I,
        textColorGhostPressedError: L,
        textColorGhostFocusError: I,
        textColorGhostDisabledError: A,
        borderError: `1px solid ${A}`,
        borderHoverError: `1px solid ${I}`,
        borderPressedError: `1px solid ${L}`,
        borderFocusError: `1px solid ${I}`,
        borderDisabledError: `1px solid ${A}`,
        rippleColorError: A,
        waveOpacity: "0.6",
        fontWeight: j,
        fontWeightStrong: Y,
      });
    },
    G$ = { name: "Button", common: Ut, self: Zx },
    Zu = G$,
    X$ = {
      name: "Button",
      common: Oe,
      self(t) {
        const e = Zx(t);
        return (
          (e.waveOpacity = "0.8"),
          (e.colorOpacitySecondary = "0.16"),
          (e.colorOpacitySecondaryHover = "0.2"),
          (e.colorOpacitySecondaryPressed = "0.12"),
          e
        );
      },
    },
    Un = X$,
    K$ = q([
      M(
        "button",
        `
 margin: 0;
 font-weight: var(--n-font-weight);
 line-height: 1;
 font-family: inherit;
 padding: var(--n-padding);
 height: var(--n-height);
 font-size: var(--n-font-size);
 border-radius: var(--n-border-radius);
 color: var(--n-text-color);
 background-color: var(--n-color);
 width: var(--n-width);
 white-space: nowrap;
 outline: none;
 position: relative;
 z-index: auto;
 border: none;
 display: inline-flex;
 flex-wrap: nowrap;
 flex-shrink: 0;
 align-items: center;
 justify-content: center;
 user-select: none;
 -webkit-user-select: none;
 text-align: center;
 cursor: pointer;
 text-decoration: none;
 transition:
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 opacity .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 `,
        [
          te("color", [
            ne("border", { borderColor: "var(--n-border-color)" }),
            te("disabled", [
              ne("border", { borderColor: "var(--n-border-color-disabled)" }),
            ]),
            Zt("disabled", [
              q("&:focus", [
                ne("state-border", {
                  borderColor: "var(--n-border-color-focus)",
                }),
              ]),
              q("&:hover", [
                ne("state-border", {
                  borderColor: "var(--n-border-color-hover)",
                }),
              ]),
              q("&:active", [
                ne("state-border", {
                  borderColor: "var(--n-border-color-pressed)",
                }),
              ]),
              te("pressed", [
                ne("state-border", {
                  borderColor: "var(--n-border-color-pressed)",
                }),
              ]),
            ]),
          ]),
          te(
            "disabled",
            {
              backgroundColor: "var(--n-color-disabled)",
              color: "var(--n-text-color-disabled)",
            },
            [ne("border", { border: "var(--n-border-disabled)" })]
          ),
          Zt("disabled", [
            q(
              "&:focus",
              {
                backgroundColor: "var(--n-color-focus)",
                color: "var(--n-text-color-focus)",
              },
              [ne("state-border", { border: "var(--n-border-focus)" })]
            ),
            q(
              "&:hover",
              {
                backgroundColor: "var(--n-color-hover)",
                color: "var(--n-text-color-hover)",
              },
              [ne("state-border", { border: "var(--n-border-hover)" })]
            ),
            q(
              "&:active",
              {
                backgroundColor: "var(--n-color-pressed)",
                color: "var(--n-text-color-pressed)",
              },
              [ne("state-border", { border: "var(--n-border-pressed)" })]
            ),
            te(
              "pressed",
              {
                backgroundColor: "var(--n-color-pressed)",
                color: "var(--n-text-color-pressed)",
              },
              [ne("state-border", { border: "var(--n-border-pressed)" })]
            ),
          ]),
          te("loading", "cursor: wait;"),
          M(
            "base-wave",
            `
 pointer-events: none;
 top: 0;
 right: 0;
 bottom: 0;
 left: 0;
 animation-iteration-count: 1;
 animation-duration: var(--n-ripple-duration);
 animation-timing-function: var(--n-bezier-ease-out), var(--n-bezier-ease-out);
 `,
            [
              te("active", {
                zIndex: 1,
                animationName: "button-wave-spread, button-wave-opacity",
              }),
            ]
          ),
          Ji && "MozBoxSizing" in document.createElement("div").style
            ? q("&::moz-focus-inner", { border: 0 })
            : null,
          ne(
            "border, state-border",
            `
 position: absolute;
 left: 0;
 top: 0;
 right: 0;
 bottom: 0;
 border-radius: inherit;
 transition: border-color .3s var(--n-bezier);
 pointer-events: none;
 `
          ),
          ne("border", { border: "var(--n-border)" }),
          ne("state-border", {
            border: "var(--n-border)",
            borderColor: "#0000",
            zIndex: 1,
          }),
          ne(
            "icon",
            `
 margin: var(--n-icon-margin);
 margin-left: 0;
 height: var(--n-icon-size);
 width: var(--n-icon-size);
 max-width: var(--n-icon-size);
 font-size: var(--n-icon-size);
 position: relative;
 flex-shrink: 0;
 `,
            [
              M(
                "icon-slot",
                `
 height: var(--n-icon-size);
 width: var(--n-icon-size);
 position: absolute;
 left: 0;
 top: 50%;
 transform: translateY(-50%);
 display: flex;
 align-items: center;
 justify-content: center;
 `,
                [ii({ top: "50%", originalTransform: "translateY(-50%)" })]
              ),
              qL(),
            ]
          ),
          ne(
            "content",
            `
 display: flex;
 align-items: center;
 flex-wrap: nowrap;
 min-width: 0;
 `,
            [
              q("~", [
                ne("icon", { margin: "var(--n-icon-margin)", marginRight: 0 }),
              ]),
            ]
          ),
          te(
            "block",
            `
 display: flex;
 width: 100%;
 `
          ),
          te("dashed", [
            ne("border, state-border", { borderStyle: "dashed !important" }),
          ]),
          te("disabled", {
            cursor: "not-allowed",
            opacity: "var(--n-opacity-disabled)",
          }),
        ]
      ),
      q("@keyframes button-wave-spread", {
        from: { boxShadow: "0 0 0.5px 0 var(--n-ripple-color)" },
        to: { boxShadow: "0 0 0.5px 4.5px var(--n-ripple-color)" },
      }),
      q("@keyframes button-wave-opacity", {
        from: { opacity: "var(--n-wave-opacity)" },
        to: { opacity: 0 },
      }),
    ]),
    Y$ = Object.assign(Object.assign({}, Ye.props), {
      color: String,
      textColor: String,
      text: Boolean,
      block: Boolean,
      loading: Boolean,
      disabled: Boolean,
      circle: Boolean,
      size: String,
      ghost: Boolean,
      round: Boolean,
      secondary: Boolean,
      tertiary: Boolean,
      quaternary: Boolean,
      strong: Boolean,
      focusable: { type: Boolean, default: !0 },
      keyboard: { type: Boolean, default: !0 },
      tag: { type: String, default: "button" },
      type: { type: String, default: "default" },
      dashed: Boolean,
      renderIcon: Function,
      iconPlacement: { type: String, default: "left" },
      attrType: { type: String, default: "button" },
      bordered: { type: Boolean, default: !0 },
      onClick: [Function, Array],
      nativeFocusBehavior: { type: Boolean, default: !Vx },
    }),
    q$ = $e({
      name: "Button",
      props: Y$,
      setup(t) {
        const e = U(null),
          n = U(null),
          r = U(!1),
          i = Tn(
            () =>
              !t.quaternary &&
              !t.tertiary &&
              !t.secondary &&
              !t.text &&
              (!t.color || t.ghost || t.dashed) &&
              t.bordered
          ),
          o = Ve(U$, {}),
          { mergedSizeRef: s } = eo(
            {},
            {
              defaultSize: "medium",
              mergedSize: (S) => {
                const { size: x } = t;
                if (x) return x;
                const { size: E } = o;
                if (E) return E;
                const { mergedSize: w } = S || {};
                return w ? w.value : "medium";
              },
            }
          ),
          a = ce(() => t.focusable && !t.disabled),
          l = (S) => {
            var x;
            a.value || S.preventDefault(),
              !t.nativeFocusBehavior &&
                (S.preventDefault(),
                !t.disabled &&
                  a.value &&
                  ((x = e.value) === null ||
                    x === void 0 ||
                    x.focus({ preventScroll: !0 })));
          },
          c = (S) => {
            var x;
            if (!t.disabled && !t.loading) {
              const { onClick: E } = t;
              E && Ke(E, S),
                t.text || (x = n.value) === null || x === void 0 || x.play();
            }
          },
          u = (S) => {
            switch (S.key) {
              case "Enter":
                if (!t.keyboard) return;
                r.value = !1;
            }
          },
          d = (S) => {
            switch (S.key) {
              case "Enter":
                if (!t.keyboard || t.loading) {
                  S.preventDefault();
                  return;
                }
                r.value = !0;
            }
          },
          h = () => {
            r.value = !1;
          },
          {
            inlineThemeDisabled: g,
            mergedClsPrefixRef: f,
            mergedRtlRef: p,
          } = Ct(t),
          b = Ye("Button", "-button", K$, Zu, t, f),
          m = Cr("Button", p, f),
          _ = ce(() => {
            const S = b.value,
              {
                common: { cubicBezierEaseInOut: x, cubicBezierEaseOut: E },
                self: w,
              } = S,
              {
                rippleDuration: v,
                opacityDisabled: y,
                fontWeight: T,
                fontWeightStrong: A,
              } = w,
              I = s.value,
              {
                dashed: L,
                type: j,
                ghost: k,
                text: O,
                color: D,
                round: Y,
                circle: se,
                textColor: de,
                secondary: fe,
                tertiary: z,
                quaternary: ee,
                strong: ue,
              } = t,
              K = { "font-weight": ue ? A : T };
            let _e = {
              "--n-color": "initial",
              "--n-color-hover": "initial",
              "--n-color-pressed": "initial",
              "--n-color-focus": "initial",
              "--n-color-disabled": "initial",
              "--n-ripple-color": "initial",
              "--n-text-color": "initial",
              "--n-text-color-hover": "initial",
              "--n-text-color-pressed": "initial",
              "--n-text-color-focus": "initial",
              "--n-text-color-disabled": "initial",
            };
            const ie = j === "tertiary",
              pe = j === "default",
              re = ie ? "default" : j;
            if (O) {
              const W = de || D;
              _e = {
                "--n-color": "#0000",
                "--n-color-hover": "#0000",
                "--n-color-pressed": "#0000",
                "--n-color-focus": "#0000",
                "--n-color-disabled": "#0000",
                "--n-ripple-color": "#0000",
                "--n-text-color": W || w[Te("textColorText", re)],
                "--n-text-color-hover": W
                  ? uo(W)
                  : w[Te("textColorTextHover", re)],
                "--n-text-color-pressed": W
                  ? fc(W)
                  : w[Te("textColorTextPressed", re)],
                "--n-text-color-focus": W
                  ? uo(W)
                  : w[Te("textColorTextHover", re)],
                "--n-text-color-disabled":
                  W || w[Te("textColorTextDisabled", re)],
              };
            } else if (k || L) {
              const W = de || D;
              _e = {
                "--n-color": "#0000",
                "--n-color-hover": "#0000",
                "--n-color-pressed": "#0000",
                "--n-color-focus": "#0000",
                "--n-color-disabled": "#0000",
                "--n-ripple-color": D || w[Te("rippleColor", re)],
                "--n-text-color": W || w[Te("textColorGhost", re)],
                "--n-text-color-hover": W
                  ? uo(W)
                  : w[Te("textColorGhostHover", re)],
                "--n-text-color-pressed": W
                  ? fc(W)
                  : w[Te("textColorGhostPressed", re)],
                "--n-text-color-focus": W
                  ? uo(W)
                  : w[Te("textColorGhostHover", re)],
                "--n-text-color-disabled":
                  W || w[Te("textColorGhostDisabled", re)],
              };
            } else if (fe) {
              const W = pe
                  ? w.textColor
                  : ie
                  ? w.textColorTertiary
                  : w[Te("color", re)],
                Q = D || W,
                J = j !== "default" && j !== "tertiary";
              _e = {
                "--n-color": J
                  ? Ae(Q, { alpha: Number(w.colorOpacitySecondary) })
                  : w.colorSecondary,
                "--n-color-hover": J
                  ? Ae(Q, { alpha: Number(w.colorOpacitySecondaryHover) })
                  : w.colorSecondaryHover,
                "--n-color-pressed": J
                  ? Ae(Q, { alpha: Number(w.colorOpacitySecondaryPressed) })
                  : w.colorSecondaryPressed,
                "--n-color-focus": J
                  ? Ae(Q, { alpha: Number(w.colorOpacitySecondaryHover) })
                  : w.colorSecondaryHover,
                "--n-color-disabled": w.colorSecondary,
                "--n-ripple-color": "#0000",
                "--n-text-color": Q,
                "--n-text-color-hover": Q,
                "--n-text-color-pressed": Q,
                "--n-text-color-focus": Q,
                "--n-text-color-disabled": Q,
              };
            } else if (z || ee) {
              const W = pe
                  ? w.textColor
                  : ie
                  ? w.textColorTertiary
                  : w[Te("color", re)],
                Q = D || W;
              z
                ? ((_e["--n-color"] = w.colorTertiary),
                  (_e["--n-color-hover"] = w.colorTertiaryHover),
                  (_e["--n-color-pressed"] = w.colorTertiaryPressed),
                  (_e["--n-color-focus"] = w.colorSecondaryHover),
                  (_e["--n-color-disabled"] = w.colorTertiary))
                : ((_e["--n-color"] = w.colorQuaternary),
                  (_e["--n-color-hover"] = w.colorQuaternaryHover),
                  (_e["--n-color-pressed"] = w.colorQuaternaryPressed),
                  (_e["--n-color-focus"] = w.colorQuaternaryHover),
                  (_e["--n-color-disabled"] = w.colorQuaternary)),
                (_e["--n-ripple-color"] = "#0000"),
                (_e["--n-text-color"] = Q),
                (_e["--n-text-color-hover"] = Q),
                (_e["--n-text-color-pressed"] = Q),
                (_e["--n-text-color-focus"] = Q),
                (_e["--n-text-color-disabled"] = Q);
            } else
              _e = {
                "--n-color": D || w[Te("color", re)],
                "--n-color-hover": D ? uo(D) : w[Te("colorHover", re)],
                "--n-color-pressed": D ? fc(D) : w[Te("colorPressed", re)],
                "--n-color-focus": D ? uo(D) : w[Te("colorFocus", re)],
                "--n-color-disabled": D || w[Te("colorDisabled", re)],
                "--n-ripple-color": D || w[Te("rippleColor", re)],
                "--n-text-color":
                  de ||
                  (D
                    ? w.textColorPrimary
                    : ie
                    ? w.textColorTertiary
                    : w[Te("textColor", re)]),
                "--n-text-color-hover":
                  de ||
                  (D ? w.textColorHoverPrimary : w[Te("textColorHover", re)]),
                "--n-text-color-pressed":
                  de ||
                  (D
                    ? w.textColorPressedPrimary
                    : w[Te("textColorPressed", re)]),
                "--n-text-color-focus":
                  de ||
                  (D ? w.textColorFocusPrimary : w[Te("textColorFocus", re)]),
                "--n-text-color-disabled":
                  de ||
                  (D
                    ? w.textColorDisabledPrimary
                    : w[Te("textColorDisabled", re)]),
              };
            let ge = {
              "--n-border": "initial",
              "--n-border-hover": "initial",
              "--n-border-pressed": "initial",
              "--n-border-focus": "initial",
              "--n-border-disabled": "initial",
            };
            O
              ? (ge = {
                  "--n-border": "none",
                  "--n-border-hover": "none",
                  "--n-border-pressed": "none",
                  "--n-border-focus": "none",
                  "--n-border-disabled": "none",
                })
              : (ge = {
                  "--n-border": w[Te("border", re)],
                  "--n-border-hover": w[Te("borderHover", re)],
                  "--n-border-pressed": w[Te("borderPressed", re)],
                  "--n-border-focus": w[Te("borderFocus", re)],
                  "--n-border-disabled": w[Te("borderDisabled", re)],
                });
            const {
                [Te("height", I)]: ke,
                [Te("fontSize", I)]: Me,
                [Te("padding", I)]: P,
                [Te("paddingRound", I)]: $,
                [Te("iconSize", I)]: H,
                [Te("borderRadius", I)]: ae,
                [Te("iconMargin", I)]: le,
                waveOpacity: he,
              } = w,
              Z = {
                "--n-width": se && !O ? ke : "initial",
                "--n-height": O ? "initial" : ke,
                "--n-font-size": Me,
                "--n-padding": se || O ? "initial" : Y ? $ : P,
                "--n-icon-size": H,
                "--n-icon-margin": le,
                "--n-border-radius": O ? "initial" : se || Y ? ke : ae,
              };
            return Object.assign(
              Object.assign(
                Object.assign(
                  Object.assign(
                    {
                      "--n-bezier": x,
                      "--n-bezier-ease-out": E,
                      "--n-ripple-duration": v,
                      "--n-opacity-disabled": y,
                      "--n-wave-opacity": he,
                    },
                    K
                  ),
                  _e
                ),
                ge
              ),
              Z
            );
          }),
          R = g
            ? jt(
                "button",
                ce(() => {
                  let S = "";
                  const {
                    dashed: x,
                    type: E,
                    ghost: w,
                    text: v,
                    color: y,
                    round: T,
                    circle: A,
                    textColor: I,
                    secondary: L,
                    tertiary: j,
                    quaternary: k,
                    strong: O,
                  } = t;
                  x && (S += "a"),
                    w && (S += "b"),
                    v && (S += "c"),
                    T && (S += "d"),
                    A && (S += "e"),
                    L && (S += "f"),
                    j && (S += "g"),
                    k && (S += "h"),
                    O && (S += "i"),
                    y && (S += "j" + Zc(y)),
                    I && (S += "k" + Zc(I));
                  const { value: D } = s;
                  return (S += "l" + D[0]), (S += "m" + E[0]), S;
                }),
                _,
                t
              )
            : void 0;
        return {
          selfElRef: e,
          waveElRef: n,
          mergedClsPrefix: f,
          mergedFocusable: a,
          mergedSize: s,
          showBorder: i,
          enterPressed: r,
          rtlEnabled: m,
          handleMousedown: l,
          handleKeydown: d,
          handleBlur: h,
          handleKeyup: u,
          handleClick: c,
          customColorCssVars: ce(() => {
            const { color: S } = t;
            if (!S) return null;
            const x = uo(S);
            return {
              "--n-border-color": S,
              "--n-border-color-hover": x,
              "--n-border-color-pressed": fc(S),
              "--n-border-color-focus": x,
              "--n-border-color-disabled": S,
            };
          }),
          cssVars: g ? void 0 : _,
          themeClass: R == null ? void 0 : R.themeClass,
          onRender: R == null ? void 0 : R.onRender,
        };
      },
      render() {
        const { mergedClsPrefix: t, tag: e, onRender: n } = this;
        n == null || n();
        const r = gt(
          this.$slots.default,
          (i) => i && C("span", { class: `${t}-button__content` }, i)
        );
        return C(
          e,
          {
            ref: "selfElRef",
            class: [
              this.themeClass,
              `${t}-button`,
              `${t}-button--${this.type}-type`,
              `${t}-button--${this.mergedSize}-type`,
              this.rtlEnabled && `${t}-button--rtl`,
              this.disabled && `${t}-button--disabled`,
              this.block && `${t}-button--block`,
              this.enterPressed && `${t}-button--pressed`,
              !this.text && this.dashed && `${t}-button--dashed`,
              this.color && `${t}-button--color`,
              this.secondary && `${t}-button--secondary`,
              this.loading && `${t}-button--loading`,
              this.ghost && `${t}-button--ghost`,
            ],
            tabindex: this.mergedFocusable ? 0 : -1,
            type: this.attrType,
            style: this.cssVars,
            disabled: this.disabled,
            onClick: this.handleClick,
            onBlur: this.handleBlur,
            onMousedown: this.handleMousedown,
            onKeyup: this.handleKeyup,
            onKeydown: this.handleKeydown,
          },
          this.iconPlacement === "right" && r,
          C(
            Ku,
            { width: !0 },
            {
              default: () =>
                gt(
                  this.$slots.icon,
                  (i) =>
                    (this.loading || this.renderIcon || i) &&
                    C(
                      "span",
                      {
                        class: `${t}-button__icon`,
                        style: { margin: Es(this.$slots.default) ? "0" : "" },
                      },
                      C(Yo, null, {
                        default: () =>
                          this.loading
                            ? C(Ml, {
                                clsPrefix: t,
                                key: "loading",
                                class: `${t}-icon-slot`,
                                strokeWidth: 20,
                              })
                            : C(
                                "div",
                                {
                                  key: "icon",
                                  class: `${t}-icon-slot`,
                                  role: "none",
                                },
                                this.renderIcon ? this.renderIcon() : i
                              ),
                      })
                    )
                ),
            }
          ),
          this.iconPlacement === "left" && r,
          this.text ? null : C(AL, { ref: "waveElRef", clsPrefix: t }),
          this.showBorder
            ? C("div", {
                "aria-hidden": !0,
                class: `${t}-button__border`,
                style: this.customColorCssVars,
              })
            : null,
          this.showBorder
            ? C("div", {
                "aria-hidden": !0,
                class: `${t}-button__state-border`,
                style: this.customColorCssVars,
              })
            : null
        );
      },
    }),
    Xn = q$,
    Z$ = { titleFontSize: "22px" },
    J$ = (t) => {
      const {
        borderRadius: e,
        fontSize: n,
        lineHeight: r,
        textColor2: i,
        textColor1: o,
        textColorDisabled: s,
        dividerColor: a,
        fontWeightStrong: l,
        primaryColor: c,
        baseColor: u,
        hoverColor: d,
        cardColor: h,
        modalColor: g,
        popoverColor: f,
      } = t;
      return Object.assign(Object.assign({}, Z$), {
        borderRadius: e,
        borderColor: Ue(h, a),
        borderColorModal: Ue(g, a),
        borderColorPopover: Ue(f, a),
        textColor: i,
        titleFontWeight: l,
        titleTextColor: o,
        dayTextColor: s,
        fontSize: n,
        lineHeight: r,
        dateColorCurrent: c,
        dateTextColorCurrent: u,
        cellColorHover: Ue(h, d),
        cellColorHoverModal: Ue(g, d),
        cellColorHoverPopover: Ue(f, d),
        cellColor: h,
        cellColorModal: g,
        cellColorPopover: f,
        barColor: c,
      });
    },
    Q$ = { name: "Calendar", common: Oe, peers: { Button: Un }, self: J$ },
    eD = Q$,
    tD = (t) => {
      const {
        fontSize: e,
        boxShadow2: n,
        popoverColor: r,
        textColor2: i,
        borderRadius: o,
        borderColor: s,
        heightSmall: a,
        heightMedium: l,
        heightLarge: c,
        fontSizeSmall: u,
        fontSizeMedium: d,
        fontSizeLarge: h,
        dividerColor: g,
      } = t;
      return {
        panelFontSize: e,
        boxShadow: n,
        color: r,
        textColor: i,
        borderRadius: o,
        border: `1px solid ${s}`,
        heightSmall: a,
        heightMedium: l,
        heightLarge: c,
        fontSizeSmall: u,
        fontSizeMedium: d,
        fontSizeLarge: h,
        dividerColor: g,
      };
    },
    nD = {
      name: "ColorPicker",
      common: Oe,
      peers: { Input: hr, Button: Un },
      self: tD,
    },
    rD = nD,
    iD = {
      paddingSmall: "12px 16px 12px",
      paddingMedium: "19px 24px 20px",
      paddingLarge: "23px 32px 24px",
      paddingHuge: "27px 40px 28px",
      titleFontSizeSmall: "16px",
      titleFontSizeMedium: "18px",
      titleFontSizeLarge: "18px",
      titleFontSizeHuge: "18px",
      closeIconSize: "18px",
      closeSize: "22px",
    },
    Jx = (t) => {
      const {
        primaryColor: e,
        borderRadius: n,
        lineHeight: r,
        fontSize: i,
        cardColor: o,
        textColor2: s,
        textColor1: a,
        dividerColor: l,
        fontWeightStrong: c,
        closeIconColor: u,
        closeIconColorHover: d,
        closeIconColorPressed: h,
        closeColorHover: g,
        closeColorPressed: f,
        modalColor: p,
        boxShadow1: b,
        popoverColor: m,
        actionColor: _,
      } = t;
      return Object.assign(Object.assign({}, iD), {
        lineHeight: r,
        color: o,
        colorModal: p,
        colorPopover: m,
        colorTarget: e,
        colorEmbedded: _,
        colorEmbeddedModal: _,
        colorEmbeddedPopover: _,
        textColor: s,
        titleTextColor: a,
        borderColor: l,
        actionColor: _,
        titleFontWeight: c,
        closeColorHover: g,
        closeColorPressed: f,
        closeBorderRadius: n,
        closeIconColor: u,
        closeIconColorHover: d,
        closeIconColorPressed: h,
        fontSizeSmall: i,
        fontSizeMedium: i,
        fontSizeLarge: i,
        fontSizeHuge: i,
        boxShadow: b,
        borderRadius: n,
      });
    },
    oD = { name: "Card", common: Ut, self: Jx },
    Qx = oD,
    sD = {
      name: "Card",
      common: Oe,
      self(t) {
        const e = Jx(t),
          { cardColor: n, modalColor: r, popoverColor: i } = t;
        return (
          (e.colorEmbedded = n),
          (e.colorEmbeddedModal = r),
          (e.colorEmbeddedPopover = i),
          e
        );
      },
    },
    eC = sD,
    aD = q([
      M(
        "card",
        `
 font-size: var(--n-font-size);
 line-height: var(--n-line-height);
 display: flex;
 flex-direction: column;
 width: 100%;
 box-sizing: border-box;
 position: relative;
 border-radius: var(--n-border-radius);
 background-color: var(--n-color);
 color: var(--n-text-color);
 word-break: break-word;
 transition:
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 `,
        [
          my({ background: "var(--n-color-modal)" }),
          te("hoverable", [q("&:hover", "box-shadow: var(--n-box-shadow);")]),
          te("content-segmented", [
            q(">", [ne("content", { paddingTop: "var(--n-padding-bottom)" })]),
          ]),
          te("content-soft-segmented", [
            q(">", [
              ne(
                "content",
                `
 margin: 0 var(--n-padding-left);
 padding: var(--n-padding-bottom) 0;
 `
              ),
            ]),
          ]),
          te("footer-segmented", [
            q(">", [ne("footer", { paddingTop: "var(--n-padding-bottom)" })]),
          ]),
          te("footer-soft-segmented", [
            q(">", [
              ne(
                "footer",
                `
 padding: var(--n-padding-bottom) 0;
 margin: 0 var(--n-padding-left);
 `
              ),
            ]),
          ]),
          q(">", [
            M(
              "card-header",
              `
 box-sizing: border-box;
 display: flex;
 align-items: center;
 font-size: var(--n-title-font-size);
 padding:
 var(--n-padding-top)
 var(--n-padding-left)
 var(--n-padding-bottom)
 var(--n-padding-left);
 `,
              [
                ne(
                  "main",
                  `
 font-weight: var(--n-title-font-weight);
 transition: color .3s var(--n-bezier);
 flex: 1;
 min-width: 0;
 color: var(--n-title-text-color);
 `
                ),
                ne(
                  "extra",
                  `
 display: flex;
 align-items: center;
 font-size: var(--n-font-size);
 font-weight: 400;
 transition: color .3s var(--n-bezier);
 color: var(--n-text-color);
 `
                ),
                ne(
                  "close",
                  `
 margin: 0 0 0 8px;
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 `
                ),
              ]
            ),
            ne(
              "action",
              `
 box-sizing: border-box;
 transition:
 background-color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 background-clip: padding-box;
 background-color: var(--n-action-color);
 `
            ),
            ne("content", "flex: 1; min-width: 0;"),
            ne(
              "content, footer",
              `
 box-sizing: border-box;
 padding: 0 var(--n-padding-left) var(--n-padding-bottom) var(--n-padding-left);
 font-size: var(--n-font-size);
 `,
              [q("&:first-child", { paddingTop: "var(--n-padding-bottom)" })]
            ),
            ne(
              "action",
              `
 background-color: var(--n-action-color);
 padding: var(--n-padding-bottom) var(--n-padding-left);
 border-bottom-left-radius: var(--n-border-radius);
 border-bottom-right-radius: var(--n-border-radius);
 `
            ),
          ]),
          M(
            "card-cover",
            `
 overflow: hidden;
 width: 100%;
 border-radius: var(--n-border-radius) var(--n-border-radius) 0 0;
 `,
            [
              q(
                "img",
                `
 display: block;
 width: 100%;
 `
              ),
            ]
          ),
          te(
            "bordered",
            `
 border: 1px solid var(--n-border-color);
 `,
            [q("&:target", "border-color: var(--n-color-target);")]
          ),
          te("action-segmented", [
            q(">", [
              ne("action", [
                q("&:not(:first-child)", {
                  borderTop: "1px solid var(--n-border-color)",
                }),
              ]),
            ]),
          ]),
          te("content-segmented, content-soft-segmented", [
            q(">", [
              ne(
                "content",
                { transition: "border-color 0.3s var(--n-bezier)" },
                [
                  q("&:not(:first-child)", {
                    borderTop: "1px solid var(--n-border-color)",
                  }),
                ]
              ),
            ]),
          ]),
          te("footer-segmented, footer-soft-segmented", [
            q(">", [
              ne(
                "footer",
                { transition: "border-color 0.3s var(--n-bezier)" },
                [
                  q("&:not(:first-child)", {
                    borderTop: "1px solid var(--n-border-color)",
                  }),
                ]
              ),
            ]),
          ]),
          te(
            "embedded",
            `
 background-color: var(--n-color-embedded);
 `
          ),
        ]
      ),
      Pl(
        M(
          "card",
          `
 background: var(--n-color-modal);
 `,
          [
            te(
              "embedded",
              `
 background-color: var(--n-color-embedded-modal);
 `
            ),
          ]
        )
      ),
      Nu(
        M(
          "card",
          `
 background: var(--n-color-popover);
 `,
          [
            te(
              "embedded",
              `
 background-color: var(--n-color-embedded-popover);
 `
            ),
          ]
        )
      ),
    ]),
    Ng = {
      title: String,
      contentClass: String,
      contentStyle: [Object, String],
      headerClass: String,
      headerStyle: [Object, String],
      headerExtraClass: String,
      headerExtraStyle: [Object, String],
      footerClass: String,
      footerStyle: [Object, String],
      embedded: Boolean,
      segmented: { type: [Boolean, Object], default: !1 },
      size: { type: String, default: "medium" },
      bordered: { type: Boolean, default: !0 },
      closable: Boolean,
      hoverable: Boolean,
      role: String,
      onClose: [Function, Array],
      tag: { type: String, default: "div" },
    },
    lD = Fu(Ng),
    cD = Object.assign(Object.assign({}, Ye.props), Ng),
    Hg = $e({
      name: "Card",
      props: cD,
      setup(t) {
        const e = () => {
            const { onClose: c } = t;
            c && Ke(c);
          },
          {
            inlineThemeDisabled: n,
            mergedClsPrefixRef: r,
            mergedRtlRef: i,
          } = Ct(t),
          o = Ye("Card", "-card", aD, Qx, t, r),
          s = Cr("Card", i, r),
          a = ce(() => {
            const { size: c } = t,
              {
                self: {
                  color: u,
                  colorModal: d,
                  colorTarget: h,
                  textColor: g,
                  titleTextColor: f,
                  titleFontWeight: p,
                  borderColor: b,
                  actionColor: m,
                  borderRadius: _,
                  lineHeight: R,
                  closeIconColor: S,
                  closeIconColorHover: x,
                  closeIconColorPressed: E,
                  closeColorHover: w,
                  closeColorPressed: v,
                  closeBorderRadius: y,
                  closeIconSize: T,
                  closeSize: A,
                  boxShadow: I,
                  colorPopover: L,
                  colorEmbedded: j,
                  colorEmbeddedModal: k,
                  colorEmbeddedPopover: O,
                  [Te("padding", c)]: D,
                  [Te("fontSize", c)]: Y,
                  [Te("titleFontSize", c)]: se,
                },
                common: { cubicBezierEaseInOut: de },
              } = o.value,
              { top: fe, left: z, bottom: ee } = nr(D);
            return {
              "--n-bezier": de,
              "--n-border-radius": _,
              "--n-color": u,
              "--n-color-modal": d,
              "--n-color-popover": L,
              "--n-color-embedded": j,
              "--n-color-embedded-modal": k,
              "--n-color-embedded-popover": O,
              "--n-color-target": h,
              "--n-text-color": g,
              "--n-line-height": R,
              "--n-action-color": m,
              "--n-title-text-color": f,
              "--n-title-font-weight": p,
              "--n-close-icon-color": S,
              "--n-close-icon-color-hover": x,
              "--n-close-icon-color-pressed": E,
              "--n-close-color-hover": w,
              "--n-close-color-pressed": v,
              "--n-border-color": b,
              "--n-box-shadow": I,
              "--n-padding-top": fe,
              "--n-padding-bottom": ee,
              "--n-padding-left": z,
              "--n-font-size": Y,
              "--n-title-font-size": se,
              "--n-close-size": A,
              "--n-close-icon-size": T,
              "--n-close-border-radius": y,
            };
          }),
          l = n
            ? jt(
                "card",
                ce(() => t.size[0]),
                a,
                t
              )
            : void 0;
        return {
          rtlEnabled: s,
          mergedClsPrefix: r,
          mergedTheme: o,
          handleCloseClick: e,
          cssVars: n ? void 0 : a,
          themeClass: l == null ? void 0 : l.themeClass,
          onRender: l == null ? void 0 : l.onRender,
        };
      },
      render() {
        const {
          segmented: t,
          bordered: e,
          hoverable: n,
          mergedClsPrefix: r,
          rtlEnabled: i,
          onRender: o,
          embedded: s,
          tag: a,
          $slots: l,
        } = this;
        return (
          o == null || o(),
          C(
            a,
            {
              class: [
                `${r}-card`,
                this.themeClass,
                s && `${r}-card--embedded`,
                {
                  [`${r}-card--rtl`]: i,
                  [`${r}-card--content${
                    typeof t != "boolean" && t.content === "soft" ? "-soft" : ""
                  }-segmented`]: t === !0 || (t !== !1 && t.content),
                  [`${r}-card--footer${
                    typeof t != "boolean" && t.footer === "soft" ? "-soft" : ""
                  }-segmented`]: t === !0 || (t !== !1 && t.footer),
                  [`${r}-card--action-segmented`]:
                    t === !0 || (t !== !1 && t.action),
                  [`${r}-card--bordered`]: e,
                  [`${r}-card--hoverable`]: n,
                },
              ],
              style: this.cssVars,
              role: this.role,
            },
            gt(
              l.cover,
              (c) =>
                c && C("div", { class: `${r}-card-cover`, role: "none" }, c)
            ),
            gt(l.header, (c) =>
              c || this.title || this.closable
                ? C(
                    "div",
                    {
                      class: [`${r}-card-header`, this.headerClass],
                      style: this.headerStyle,
                    },
                    C(
                      "div",
                      { class: `${r}-card-header__main`, role: "heading" },
                      c || this.title
                    ),
                    gt(
                      l["header-extra"],
                      (u) =>
                        u &&
                        C(
                          "div",
                          {
                            class: [
                              `${r}-card-header__extra`,
                              this.headerExtraClass,
                            ],
                            style: this.headerExtraStyle,
                          },
                          u
                        )
                    ),
                    this.closable
                      ? C(ta, {
                          clsPrefix: r,
                          class: `${r}-card-header__close`,
                          onClick: this.handleCloseClick,
                          absolute: !0,
                        })
                      : null
                  )
                : null
            ),
            gt(
              l.default,
              (c) =>
                c &&
                C(
                  "div",
                  {
                    class: [`${r}-card__content`, this.contentClass],
                    style: this.contentStyle,
                    role: "none",
                  },
                  c
                )
            ),
            gt(
              l.footer,
              (c) =>
                c && [
                  C(
                    "div",
                    {
                      class: [`${r}-card__footer`, this.footerClass],
                      style: this.footerStyle,
                      role: "none",
                    },
                    c
                  ),
                ]
            ),
            gt(
              l.action,
              (c) =>
                c && C("div", { class: `${r}-card__action`, role: "none" }, c)
            )
          )
        );
      },
    }),
    uD = (t) => ({
      dotSize: "8px",
      dotColor: "rgba(255, 255, 255, .3)",
      dotColorActive: "rgba(255, 255, 255, 1)",
      dotColorFocus: "rgba(255, 255, 255, .5)",
      dotLineWidth: "16px",
      dotLineWidthActive: "24px",
      arrowColor: "#eee",
    }),
    dD = { name: "Carousel", common: Oe, self: uD },
    hD = dD,
    fD = {
      sizeSmall: "14px",
      sizeMedium: "16px",
      sizeLarge: "18px",
      labelPadding: "0 8px",
      labelFontWeight: "400",
    },
    tC = (t) => {
      const {
        baseColor: e,
        inputColorDisabled: n,
        cardColor: r,
        modalColor: i,
        popoverColor: o,
        textColorDisabled: s,
        borderColor: a,
        primaryColor: l,
        textColor2: c,
        fontSizeSmall: u,
        fontSizeMedium: d,
        fontSizeLarge: h,
        borderRadiusSmall: g,
        lineHeight: f,
      } = t;
      return Object.assign(Object.assign({}, fD), {
        labelLineHeight: f,
        fontSizeSmall: u,
        fontSizeMedium: d,
        fontSizeLarge: h,
        borderRadius: g,
        color: e,
        colorChecked: l,
        colorDisabled: n,
        colorDisabledChecked: n,
        colorTableHeader: r,
        colorTableHeaderModal: i,
        colorTableHeaderPopover: o,
        checkMarkColor: e,
        checkMarkColorDisabled: s,
        checkMarkColorDisabledChecked: s,
        border: `1px solid ${a}`,
        borderDisabled: `1px solid ${a}`,
        borderDisabledChecked: `1px solid ${a}`,
        borderChecked: `1px solid ${l}`,
        borderFocus: `1px solid ${l}`,
        boxShadowFocus: `0 0 0 2px ${Ae(l, { alpha: 0.3 })}`,
        textColor: c,
        textColorDisabled: s,
      });
    },
    gD = { name: "Checkbox", common: Ut, self: tC },
    pD = gD,
    mD = {
      name: "Checkbox",
      common: Oe,
      self(t) {
        const { cardColor: e } = t,
          n = tC(t);
        return (n.color = "#0000"), (n.checkMarkColor = e), n;
      },
    },
    na = mD,
    vD = (t) => {
      const {
        borderRadius: e,
        boxShadow2: n,
        popoverColor: r,
        textColor2: i,
        textColor3: o,
        primaryColor: s,
        textColorDisabled: a,
        dividerColor: l,
        hoverColor: c,
        fontSizeMedium: u,
        heightMedium: d,
      } = t;
      return {
        menuBorderRadius: e,
        menuColor: r,
        menuBoxShadow: n,
        menuDividerColor: l,
        menuHeight: "calc(var(--n-option-height) * 6.6)",
        optionArrowColor: o,
        optionHeight: d,
        optionFontSize: u,
        optionColorHover: c,
        optionTextColor: i,
        optionTextColorActive: s,
        optionTextColorDisabled: a,
        optionCheckMarkColor: s,
        loadingColor: s,
        columnWidth: "180px",
      };
    },
    bD = {
      name: "Cascader",
      common: Oe,
      peers: {
        InternalSelectMenu: $l,
        InternalSelection: Fg,
        Scrollbar: jn,
        Checkbox: na,
        Empty: Dg,
      },
      self: vD,
    },
    yD = bD,
    xD = C(
      "svg",
      { viewBox: "0 0 64 64", class: "check-icon" },
      C("path", {
        d: "M50.42,16.76L22.34,39.45l-8.1-11.46c-1.12-1.58-3.3-1.96-4.88-0.84c-1.58,1.12-1.95,3.3-0.84,4.88l10.26,14.51  c0.56,0.79,1.42,1.31,2.38,1.45c0.16,0.02,0.32,0.03,0.48,0.03c0.8,0,1.57-0.27,2.2-0.78l30.99-25.03c1.5-1.21,1.74-3.42,0.52-4.92  C54.13,15.78,51.93,15.55,50.42,16.76z",
      })
    ),
    CD = C(
      "svg",
      { viewBox: "0 0 100 100", class: "line-icon" },
      C("path", {
        d: "M80.2,55.5H21.4c-2.8,0-5.1-2.5-5.1-5.5l0,0c0-3,2.3-5.5,5.1-5.5h58.7c2.8,0,5.1,2.5,5.1,5.5l0,0C85.2,53.1,82.9,55.5,80.2,55.5z",
      })
    ),
    _D = "n-checkbox-group",
    wD = q([
      M(
        "checkbox",
        `
 font-size: var(--n-font-size);
 outline: none;
 cursor: pointer;
 display: inline-flex;
 flex-wrap: nowrap;
 align-items: flex-start;
 word-break: break-word;
 line-height: var(--n-size);
 --n-merged-color-table: var(--n-color-table);
 `,
        [
          te("show-label", "line-height: var(--n-label-line-height);"),
          q("&:hover", [
            M("checkbox-box", [
              ne("border", "border: var(--n-border-checked);"),
            ]),
          ]),
          q("&:focus:not(:active)", [
            M("checkbox-box", [
              ne(
                "border",
                `
 border: var(--n-border-focus);
 box-shadow: var(--n-box-shadow-focus);
 `
              ),
            ]),
          ]),
          te("inside-table", [
            M(
              "checkbox-box",
              `
 background-color: var(--n-merged-color-table);
 `
            ),
          ]),
          te("checked", [
            M(
              "checkbox-box",
              `
 background-color: var(--n-color-checked);
 `,
              [
                M("checkbox-icon", [
                  q(
                    ".check-icon",
                    `
 opacity: 1;
 transform: scale(1);
 `
                  ),
                ]),
              ]
            ),
          ]),
          te("indeterminate", [
            M("checkbox-box", [
              M("checkbox-icon", [
                q(
                  ".check-icon",
                  `
 opacity: 0;
 transform: scale(.5);
 `
                ),
                q(
                  ".line-icon",
                  `
 opacity: 1;
 transform: scale(1);
 `
                ),
              ]),
            ]),
          ]),
          te("checked, indeterminate", [
            q("&:focus:not(:active)", [
              M("checkbox-box", [
                ne(
                  "border",
                  `
 border: var(--n-border-checked);
 box-shadow: var(--n-box-shadow-focus);
 `
                ),
              ]),
            ]),
            M(
              "checkbox-box",
              `
 background-color: var(--n-color-checked);
 border-left: 0;
 border-top: 0;
 `,
              [ne("border", { border: "var(--n-border-checked)" })]
            ),
          ]),
          te("disabled", { cursor: "not-allowed" }, [
            te("checked", [
              M(
                "checkbox-box",
                `
 background-color: var(--n-color-disabled-checked);
 `,
                [
                  ne("border", { border: "var(--n-border-disabled-checked)" }),
                  M("checkbox-icon", [
                    q(".check-icon, .line-icon", {
                      fill: "var(--n-check-mark-color-disabled-checked)",
                    }),
                  ]),
                ]
              ),
            ]),
            M(
              "checkbox-box",
              `
 background-color: var(--n-color-disabled);
 `,
              [
                ne(
                  "border",
                  `
 border: var(--n-border-disabled);
 `
                ),
                M("checkbox-icon", [
                  q(
                    ".check-icon, .line-icon",
                    `
 fill: var(--n-check-mark-color-disabled);
 `
                  ),
                ]),
              ]
            ),
            ne(
              "label",
              `
 color: var(--n-text-color-disabled);
 `
            ),
          ]),
          M(
            "checkbox-box-wrapper",
            `
 position: relative;
 width: var(--n-size);
 flex-shrink: 0;
 flex-grow: 0;
 user-select: none;
 -webkit-user-select: none;
 `
          ),
          M(
            "checkbox-box",
            `
 position: absolute;
 left: 0;
 top: 50%;
 transform: translateY(-50%);
 height: var(--n-size);
 width: var(--n-size);
 display: inline-block;
 box-sizing: border-box;
 border-radius: var(--n-border-radius);
 background-color: var(--n-color);
 transition: background-color 0.3s var(--n-bezier);
 `,
            [
              ne(
                "border",
                `
 transition:
 border-color .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier);
 border-radius: inherit;
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 border: var(--n-border);
 `
              ),
              M(
                "checkbox-icon",
                `
 display: flex;
 align-items: center;
 justify-content: center;
 position: absolute;
 left: 1px;
 right: 1px;
 top: 1px;
 bottom: 1px;
 `,
                [
                  q(
                    ".check-icon, .line-icon",
                    `
 width: 100%;
 fill: var(--n-check-mark-color);
 opacity: 0;
 transform: scale(0.5);
 transform-origin: center;
 transition:
 fill 0.3s var(--n-bezier),
 transform 0.3s var(--n-bezier),
 opacity 0.3s var(--n-bezier),
 border-color 0.3s var(--n-bezier);
 `
                  ),
                  ii({ left: "1px", top: "1px" }),
                ]
              ),
            ]
          ),
          ne(
            "label",
            `
 color: var(--n-text-color);
 transition: color .3s var(--n-bezier);
 user-select: none;
 -webkit-user-select: none;
 padding: var(--n-label-padding);
 font-weight: var(--n-label-font-weight);
 `,
            [q("&:empty", { display: "none" })]
          ),
        ]
      ),
      Pl(
        M(
          "checkbox",
          `
 --n-merged-color-table: var(--n-color-table-modal);
 `
        )
      ),
      Nu(
        M(
          "checkbox",
          `
 --n-merged-color-table: var(--n-color-table-popover);
 `
        )
      ),
    ]),
    SD = Object.assign(Object.assign({}, Ye.props), {
      size: String,
      checked: { type: [Boolean, String, Number], default: void 0 },
      defaultChecked: { type: [Boolean, String, Number], default: !1 },
      value: [String, Number],
      disabled: { type: Boolean, default: void 0 },
      indeterminate: Boolean,
      label: String,
      focusable: { type: Boolean, default: !0 },
      checkedValue: { type: [Boolean, String, Number], default: !0 },
      uncheckedValue: { type: [Boolean, String, Number], default: !1 },
      "onUpdate:checked": [Function, Array],
      onUpdateChecked: [Function, Array],
      privateInsideTable: Boolean,
      onChange: [Function, Array],
    }),
    Ju = $e({
      name: "Checkbox",
      props: SD,
      setup(t) {
        const e = U(null),
          {
            mergedClsPrefixRef: n,
            inlineThemeDisabled: r,
            mergedRtlRef: i,
          } = Ct(t),
          o = eo(t, {
            mergedSize(E) {
              const { size: w } = t;
              if (w !== void 0) return w;
              if (l) {
                const { value: v } = l.mergedSizeRef;
                if (v !== void 0) return v;
              }
              if (E) {
                const { mergedSize: v } = E;
                if (v !== void 0) return v.value;
              }
              return "medium";
            },
            mergedDisabled(E) {
              const { disabled: w } = t;
              if (w !== void 0) return w;
              if (l) {
                if (l.disabledRef.value) return !0;
                const {
                  maxRef: { value: v },
                  checkedCountRef: y,
                } = l;
                if (v !== void 0 && y.value >= v && !h.value) return !0;
                const {
                  minRef: { value: T },
                } = l;
                if (T !== void 0 && y.value <= T && h.value) return !0;
              }
              return E ? E.disabled.value : !1;
            },
          }),
          { mergedDisabledRef: s, mergedSizeRef: a } = o,
          l = Ve(_D, null),
          c = U(t.defaultChecked),
          u = We(t, "checked"),
          d = li(u, c),
          h = Tn(() => {
            if (l) {
              const E = l.valueSetRef.value;
              return E && t.value !== void 0 ? E.has(t.value) : !1;
            } else return d.value === t.checkedValue;
          }),
          g = Ye("Checkbox", "-checkbox", wD, pD, t, n);
        function f(E) {
          if (l && t.value !== void 0) l.toggleCheckbox(!h.value, t.value);
          else {
            const {
                onChange: w,
                "onUpdate:checked": v,
                onUpdateChecked: y,
              } = t,
              { nTriggerFormInput: T, nTriggerFormChange: A } = o,
              I = h.value ? t.uncheckedValue : t.checkedValue;
            v && Ke(v, I, E),
              y && Ke(y, I, E),
              w && Ke(w, I, E),
              T(),
              A(),
              (c.value = I);
          }
        }
        function p(E) {
          s.value || f(E);
        }
        function b(E) {
          if (!s.value)
            switch (E.key) {
              case " ":
              case "Enter":
                f(E);
            }
        }
        function m(E) {
          switch (E.key) {
            case " ":
              E.preventDefault();
          }
        }
        const _ = {
            focus: () => {
              var E;
              (E = e.value) === null || E === void 0 || E.focus();
            },
            blur: () => {
              var E;
              (E = e.value) === null || E === void 0 || E.blur();
            },
          },
          R = Cr("Checkbox", i, n),
          S = ce(() => {
            const { value: E } = a,
              {
                common: { cubicBezierEaseInOut: w },
                self: {
                  borderRadius: v,
                  color: y,
                  colorChecked: T,
                  colorDisabled: A,
                  colorTableHeader: I,
                  colorTableHeaderModal: L,
                  colorTableHeaderPopover: j,
                  checkMarkColor: k,
                  checkMarkColorDisabled: O,
                  border: D,
                  borderFocus: Y,
                  borderDisabled: se,
                  borderChecked: de,
                  boxShadowFocus: fe,
                  textColor: z,
                  textColorDisabled: ee,
                  checkMarkColorDisabledChecked: ue,
                  colorDisabledChecked: K,
                  borderDisabledChecked: _e,
                  labelPadding: ie,
                  labelLineHeight: pe,
                  labelFontWeight: re,
                  [Te("fontSize", E)]: ge,
                  [Te("size", E)]: ke,
                },
              } = g.value;
            return {
              "--n-label-line-height": pe,
              "--n-label-font-weight": re,
              "--n-size": ke,
              "--n-bezier": w,
              "--n-border-radius": v,
              "--n-border": D,
              "--n-border-checked": de,
              "--n-border-focus": Y,
              "--n-border-disabled": se,
              "--n-border-disabled-checked": _e,
              "--n-box-shadow-focus": fe,
              "--n-color": y,
              "--n-color-checked": T,
              "--n-color-table": I,
              "--n-color-table-modal": L,
              "--n-color-table-popover": j,
              "--n-color-disabled": A,
              "--n-color-disabled-checked": K,
              "--n-text-color": z,
              "--n-text-color-disabled": ee,
              "--n-check-mark-color": k,
              "--n-check-mark-color-disabled": O,
              "--n-check-mark-color-disabled-checked": ue,
              "--n-font-size": ge,
              "--n-label-padding": ie,
            };
          }),
          x = r
            ? jt(
                "checkbox",
                ce(() => a.value[0]),
                S,
                t
              )
            : void 0;
        return Object.assign(o, _, {
          rtlEnabled: R,
          selfRef: e,
          mergedClsPrefix: n,
          mergedDisabled: s,
          renderedChecked: h,
          mergedTheme: g,
          labelId: Ui(),
          handleClick: p,
          handleKeyUp: b,
          handleKeyDown: m,
          cssVars: r ? void 0 : S,
          themeClass: x == null ? void 0 : x.themeClass,
          onRender: x == null ? void 0 : x.onRender,
        });
      },
      render() {
        var t;
        const {
          $slots: e,
          renderedChecked: n,
          mergedDisabled: r,
          indeterminate: i,
          privateInsideTable: o,
          cssVars: s,
          labelId: a,
          label: l,
          mergedClsPrefix: c,
          focusable: u,
          handleKeyUp: d,
          handleKeyDown: h,
          handleClick: g,
        } = this;
        (t = this.onRender) === null || t === void 0 || t.call(this);
        const f = gt(e.default, (p) =>
          l || p
            ? C("span", { class: `${c}-checkbox__label`, id: a }, l || p)
            : null
        );
        return C(
          "div",
          {
            ref: "selfRef",
            class: [
              `${c}-checkbox`,
              this.themeClass,
              this.rtlEnabled && `${c}-checkbox--rtl`,
              n && `${c}-checkbox--checked`,
              r && `${c}-checkbox--disabled`,
              i && `${c}-checkbox--indeterminate`,
              o && `${c}-checkbox--inside-table`,
              f && `${c}-checkbox--show-label`,
            ],
            tabindex: r || !u ? void 0 : 0,
            role: "checkbox",
            "aria-checked": i ? "mixed" : n,
            "aria-labelledby": a,
            style: s,
            onKeyup: d,
            onKeydown: h,
            onClick: g,
            onMousedown: () => {
              kt(
                "selectstart",
                window,
                (p) => {
                  p.preventDefault();
                },
                { once: !0 }
              );
            },
          },
          C(
            "div",
            { class: `${c}-checkbox-box-wrapper` },
            " ",
            C(
              "div",
              { class: `${c}-checkbox-box` },
              C(Yo, null, {
                default: () =>
                  this.indeterminate
                    ? C(
                        "div",
                        { key: "indeterminate", class: `${c}-checkbox-icon` },
                        CD
                      )
                    : C(
                        "div",
                        { key: "check", class: `${c}-checkbox-icon` },
                        xD
                      ),
              }),
              C("div", { class: `${c}-checkbox-box__border` })
            )
          ),
          f
        );
      },
    }),
    ED = {
      name: "Code",
      common: Oe,
      self(t) {
        const {
          textColor2: e,
          fontSize: n,
          fontWeightStrong: r,
          textColor3: i,
        } = t;
        return {
          textColor: e,
          fontSize: n,
          fontWeightStrong: r,
          "mono-3": "#5c6370",
          "hue-1": "#56b6c2",
          "hue-2": "#61aeee",
          "hue-3": "#c678dd",
          "hue-4": "#98c379",
          "hue-5": "#e06c75",
          "hue-5-2": "#be5046",
          "hue-6": "#d19a66",
          "hue-6-2": "#e6c07b",
          lineNumberTextColor: i,
        };
      },
    },
    nC = ED,
    RD = (t) => {
      const {
        fontWeight: e,
        textColor1: n,
        textColor2: r,
        textColorDisabled: i,
        dividerColor: o,
        fontSize: s,
      } = t;
      return {
        titleFontSize: s,
        titleFontWeight: e,
        dividerColor: o,
        titleTextColor: n,
        titleTextColorDisabled: i,
        fontSize: s,
        textColor: r,
        arrowColor: r,
        arrowColorDisabled: i,
        itemMargin: "16px 0 0 0",
        titlePadding: "16px 0 0 0",
      };
    },
    TD = { name: "Collapse", common: Oe, self: RD },
    PD = TD,
    AD = (t) => {
      const { cubicBezierEaseInOut: e } = t;
      return { bezier: e };
    },
    kD = { name: "CollapseTransition", common: Oe, self: AD },
    ID = kD,
    OD = {
      abstract: Boolean,
      bordered: { type: Boolean, default: void 0 },
      clsPrefix: { type: String, default: su },
      locale: Object,
      dateLocale: Object,
      namespace: String,
      rtl: Array,
      tag: { type: String, default: "div" },
      hljs: Object,
      katex: Object,
      theme: Object,
      themeOverrides: Object,
      componentOptions: Object,
      icons: Object,
      breakpoints: Object,
      preflightStyleDisabled: Boolean,
      inlineThemeDisabled: { type: Boolean, default: void 0 },
      as: {
        type: String,
        validator: () => (
          tl(
            "config-provider",
            "`as` is deprecated, please use `tag` instead."
          ),
          !0
        ),
        default: void 0,
      },
    },
    MD = $e({
      name: "ConfigProvider",
      alias: ["App"],
      props: OD,
      setup(t) {
        const e = Ve(ri, null),
          n = ce(() => {
            const { theme: f } = t;
            if (f === null) return;
            const p = e == null ? void 0 : e.mergedThemeRef.value;
            return f === void 0
              ? p
              : p === void 0
              ? f
              : Object.assign({}, p, f);
          }),
          r = ce(() => {
            const { themeOverrides: f } = t;
            if (f !== null) {
              if (f === void 0)
                return e == null ? void 0 : e.mergedThemeOverridesRef.value;
              {
                const p = e == null ? void 0 : e.mergedThemeOverridesRef.value;
                return p === void 0 ? f : Pa({}, p, f);
              }
            }
          }),
          i = Tn(() => {
            const { namespace: f } = t;
            return f === void 0
              ? e == null
                ? void 0
                : e.mergedNamespaceRef.value
              : f;
          }),
          o = Tn(() => {
            const { bordered: f } = t;
            return f === void 0
              ? e == null
                ? void 0
                : e.mergedBorderedRef.value
              : f;
          }),
          s = ce(() => {
            const { icons: f } = t;
            return f === void 0
              ? e == null
                ? void 0
                : e.mergedIconsRef.value
              : f;
          }),
          a = ce(() => {
            const { componentOptions: f } = t;
            return f !== void 0
              ? f
              : e == null
              ? void 0
              : e.mergedComponentPropsRef.value;
          }),
          l = ce(() => {
            const { clsPrefix: f } = t;
            return f !== void 0 ? f : e ? e.mergedClsPrefixRef.value : su;
          }),
          c = ce(() => {
            var f;
            const { rtl: p } = t;
            if (p === void 0) return e == null ? void 0 : e.mergedRtlRef.value;
            const b = {};
            for (const m of p)
              (b[m.name] = Ms(m)),
                (f = m.peers) === null ||
                  f === void 0 ||
                  f.forEach((_) => {
                    _.name in b || (b[_.name] = Ms(_));
                  });
            return b;
          }),
          u = ce(
            () =>
              t.breakpoints ||
              (e == null ? void 0 : e.mergedBreakpointsRef.value)
          ),
          d =
            t.inlineThemeDisabled ||
            (e == null ? void 0 : e.inlineThemeDisabled),
          h =
            t.preflightStyleDisabled ||
            (e == null ? void 0 : e.preflightStyleDisabled),
          g = ce(() => {
            const { value: f } = n,
              { value: p } = r,
              b = p && Object.keys(p).length !== 0,
              m = f == null ? void 0 : f.name;
            return m
              ? b
                ? `${m}-${nl(JSON.stringify(r.value))}`
                : m
              : b
              ? nl(JSON.stringify(r.value))
              : "";
          });
        return (
          vt(ri, {
            mergedThemeHashRef: g,
            mergedBreakpointsRef: u,
            mergedRtlRef: c,
            mergedIconsRef: s,
            mergedComponentPropsRef: a,
            mergedBorderedRef: o,
            mergedNamespaceRef: i,
            mergedClsPrefixRef: l,
            mergedLocaleRef: ce(() => {
              const { locale: f } = t;
              if (f !== null)
                return f === void 0
                  ? e == null
                    ? void 0
                    : e.mergedLocaleRef.value
                  : f;
            }),
            mergedDateLocaleRef: ce(() => {
              const { dateLocale: f } = t;
              if (f !== null)
                return f === void 0
                  ? e == null
                    ? void 0
                    : e.mergedDateLocaleRef.value
                  : f;
            }),
            mergedHljsRef: ce(() => {
              const { hljs: f } = t;
              return f === void 0
                ? e == null
                  ? void 0
                  : e.mergedHljsRef.value
                : f;
            }),
            mergedKatexRef: ce(() => {
              const { katex: f } = t;
              return f === void 0
                ? e == null
                  ? void 0
                  : e.mergedKatexRef.value
                : f;
            }),
            mergedThemeRef: n,
            mergedThemeOverridesRef: r,
            inlineThemeDisabled: d || !1,
            preflightStyleDisabled: h || !1,
          }),
          {
            mergedClsPrefix: l,
            mergedBordered: o,
            mergedNamespace: i,
            mergedTheme: n,
            mergedThemeOverrides: r,
          }
        );
      },
      render() {
        var t, e, n, r;
        return this.abstract
          ? (r = (n = this.$slots).default) === null || r === void 0
            ? void 0
            : r.call(n)
          : C(
              this.as || this.tag,
              { class: `${this.mergedClsPrefix || su}-config-provider` },
              (e = (t = this.$slots).default) === null || e === void 0
                ? void 0
                : e.call(t)
            );
      },
    }),
    LD = {
      name: "Popselect",
      common: Oe,
      peers: { Popover: Zo, InternalSelectMenu: $l },
    },
    rC = LD;
  function $D(t) {
    const { boxShadow2: e } = t;
    return { menuBoxShadow: e };
  }
  const DD = {
      name: "Select",
      common: Oe,
      peers: { InternalSelection: Fg, InternalSelectMenu: $l },
      self: $D,
    },
    iC = DD,
    zD = {
      itemPaddingSmall: "0 4px",
      itemMarginSmall: "0 0 0 8px",
      itemMarginSmallRtl: "0 8px 0 0",
      itemPaddingMedium: "0 4px",
      itemMarginMedium: "0 0 0 8px",
      itemMarginMediumRtl: "0 8px 0 0",
      itemPaddingLarge: "0 4px",
      itemMarginLarge: "0 0 0 8px",
      itemMarginLargeRtl: "0 8px 0 0",
      buttonIconSizeSmall: "14px",
      buttonIconSizeMedium: "16px",
      buttonIconSizeLarge: "18px",
      inputWidthSmall: "60px",
      selectWidthSmall: "unset",
      inputMarginSmall: "0 0 0 8px",
      inputMarginSmallRtl: "0 8px 0 0",
      selectMarginSmall: "0 0 0 8px",
      prefixMarginSmall: "0 8px 0 0",
      suffixMarginSmall: "0 0 0 8px",
      inputWidthMedium: "60px",
      selectWidthMedium: "unset",
      inputMarginMedium: "0 0 0 8px",
      inputMarginMediumRtl: "0 8px 0 0",
      selectMarginMedium: "0 0 0 8px",
      prefixMarginMedium: "0 8px 0 0",
      suffixMarginMedium: "0 0 0 8px",
      inputWidthLarge: "60px",
      selectWidthLarge: "unset",
      inputMarginLarge: "0 0 0 8px",
      inputMarginLargeRtl: "0 8px 0 0",
      selectMarginLarge: "0 0 0 8px",
      prefixMarginLarge: "0 8px 0 0",
      suffixMarginLarge: "0 0 0 8px",
    },
    FD = (t) => {
      const {
        textColor2: e,
        primaryColor: n,
        primaryColorHover: r,
        primaryColorPressed: i,
        inputColorDisabled: o,
        textColorDisabled: s,
        borderColor: a,
        borderRadius: l,
        fontSizeTiny: c,
        fontSizeSmall: u,
        fontSizeMedium: d,
        heightTiny: h,
        heightSmall: g,
        heightMedium: f,
      } = t;
      return Object.assign(Object.assign({}, zD), {
        buttonColor: "#0000",
        buttonColorHover: "#0000",
        buttonColorPressed: "#0000",
        buttonBorder: `1px solid ${a}`,
        buttonBorderHover: `1px solid ${a}`,
        buttonBorderPressed: `1px solid ${a}`,
        buttonIconColor: e,
        buttonIconColorHover: e,
        buttonIconColorPressed: e,
        itemTextColor: e,
        itemTextColorHover: r,
        itemTextColorPressed: i,
        itemTextColorActive: n,
        itemTextColorDisabled: s,
        itemColor: "#0000",
        itemColorHover: "#0000",
        itemColorPressed: "#0000",
        itemColorActive: "#0000",
        itemColorActiveHover: "#0000",
        itemColorDisabled: o,
        itemBorder: "1px solid #0000",
        itemBorderHover: "1px solid #0000",
        itemBorderPressed: "1px solid #0000",
        itemBorderActive: `1px solid ${n}`,
        itemBorderDisabled: `1px solid ${a}`,
        itemBorderRadius: l,
        itemSizeSmall: h,
        itemSizeMedium: g,
        itemSizeLarge: f,
        itemFontSizeSmall: c,
        itemFontSizeMedium: u,
        itemFontSizeLarge: d,
        jumperFontSizeSmall: c,
        jumperFontSizeMedium: u,
        jumperFontSizeLarge: d,
        jumperTextColor: e,
        jumperTextColorDisabled: s,
      });
    },
    BD = {
      name: "Pagination",
      common: Oe,
      peers: { Select: iC, Input: hr, Popselect: rC },
      self(t) {
        const { primaryColor: e, opacity3: n } = t,
          r = Ae(e, { alpha: Number(n) }),
          i = FD(t);
        return (
          (i.itemBorderActive = `1px solid ${r}`),
          (i.itemBorderDisabled = "1px solid #0000"),
          i
        );
      },
    },
    oC = BD,
    sC = { padding: "8px 14px" },
    ND = {
      name: "Tooltip",
      common: Oe,
      peers: { Popover: Zo },
      self(t) {
        const {
          borderRadius: e,
          boxShadow2: n,
          popoverColor: r,
          textColor2: i,
        } = t;
        return Object.assign(Object.assign({}, sC), {
          borderRadius: e,
          boxShadow: n,
          color: r,
          textColor: i,
        });
      },
    },
    Qu = ND,
    HD = (t) => {
      const { borderRadius: e, boxShadow2: n, baseColor: r } = t;
      return Object.assign(Object.assign({}, sC), {
        borderRadius: e,
        boxShadow: n,
        color: Ue(r, "rgba(0, 0, 0, .85)"),
        textColor: r,
      });
    },
    WD = { name: "Tooltip", common: Ut, peers: { Popover: Fx }, self: HD },
    aC = WD,
    jD = { name: "Ellipsis", common: Oe, peers: { Tooltip: Qu } },
    lC = jD,
    UD = {
      radioSizeSmall: "14px",
      radioSizeMedium: "16px",
      radioSizeLarge: "18px",
      labelPadding: "0 8px",
      labelFontWeight: "400",
    },
    VD = {
      name: "Radio",
      common: Oe,
      self(t) {
        const {
          borderColor: e,
          primaryColor: n,
          baseColor: r,
          textColorDisabled: i,
          inputColorDisabled: o,
          textColor2: s,
          opacityDisabled: a,
          borderRadius: l,
          fontSizeSmall: c,
          fontSizeMedium: u,
          fontSizeLarge: d,
          heightSmall: h,
          heightMedium: g,
          heightLarge: f,
          lineHeight: p,
        } = t;
        return Object.assign(Object.assign({}, UD), {
          labelLineHeight: p,
          buttonHeightSmall: h,
          buttonHeightMedium: g,
          buttonHeightLarge: f,
          fontSizeSmall: c,
          fontSizeMedium: u,
          fontSizeLarge: d,
          boxShadow: `inset 0 0 0 1px ${e}`,
          boxShadowActive: `inset 0 0 0 1px ${n}`,
          boxShadowFocus: `inset 0 0 0 1px ${n}, 0 0 0 2px ${Ae(n, {
            alpha: 0.3,
          })}`,
          boxShadowHover: `inset 0 0 0 1px ${n}`,
          boxShadowDisabled: `inset 0 0 0 1px ${e}`,
          color: "#0000",
          colorDisabled: o,
          colorActive: "#0000",
          textColor: s,
          textColorDisabled: i,
          dotColorActive: n,
          dotColorDisabled: e,
          buttonBorderColor: e,
          buttonBorderColorActive: n,
          buttonBorderColorHover: n,
          buttonColor: "#0000",
          buttonColorActive: n,
          buttonTextColor: s,
          buttonTextColorActive: r,
          buttonTextColorHover: n,
          opacityDisabled: a,
          buttonBoxShadowFocus: `inset 0 0 0 1px ${n}, 0 0 0 2px ${Ae(n, {
            alpha: 0.3,
          })}`,
          buttonBoxShadowHover: `inset 0 0 0 1px ${n}`,
          buttonBoxShadow: "inset 0 0 0 1px #0000",
          buttonBorderRadius: l,
        });
      },
    },
    cC = VD,
    GD = {
      padding: "4px 0",
      optionIconSizeSmall: "14px",
      optionIconSizeMedium: "16px",
      optionIconSizeLarge: "16px",
      optionIconSizeHuge: "18px",
      optionSuffixWidthSmall: "14px",
      optionSuffixWidthMedium: "14px",
      optionSuffixWidthLarge: "16px",
      optionSuffixWidthHuge: "16px",
      optionIconSuffixWidthSmall: "32px",
      optionIconSuffixWidthMedium: "32px",
      optionIconSuffixWidthLarge: "36px",
      optionIconSuffixWidthHuge: "36px",
      optionPrefixWidthSmall: "14px",
      optionPrefixWidthMedium: "14px",
      optionPrefixWidthLarge: "16px",
      optionPrefixWidthHuge: "16px",
      optionIconPrefixWidthSmall: "36px",
      optionIconPrefixWidthMedium: "36px",
      optionIconPrefixWidthLarge: "40px",
      optionIconPrefixWidthHuge: "40px",
    },
    XD = (t) => {
      const {
        primaryColor: e,
        textColor2: n,
        dividerColor: r,
        hoverColor: i,
        popoverColor: o,
        invertedColor: s,
        borderRadius: a,
        fontSizeSmall: l,
        fontSizeMedium: c,
        fontSizeLarge: u,
        fontSizeHuge: d,
        heightSmall: h,
        heightMedium: g,
        heightLarge: f,
        heightHuge: p,
        textColor3: b,
        opacityDisabled: m,
      } = t;
      return Object.assign(Object.assign({}, GD), {
        optionHeightSmall: h,
        optionHeightMedium: g,
        optionHeightLarge: f,
        optionHeightHuge: p,
        borderRadius: a,
        fontSizeSmall: l,
        fontSizeMedium: c,
        fontSizeLarge: u,
        fontSizeHuge: d,
        optionTextColor: n,
        optionTextColorHover: n,
        optionTextColorActive: e,
        optionTextColorChildActive: e,
        color: o,
        dividerColor: r,
        suffixColor: n,
        prefixColor: n,
        optionColorHover: i,
        optionColorActive: Ae(e, { alpha: 0.1 }),
        groupHeaderTextColor: b,
        optionTextColorInverted: "#BBB",
        optionTextColorHoverInverted: "#FFF",
        optionTextColorActiveInverted: "#FFF",
        optionTextColorChildActiveInverted: "#FFF",
        colorInverted: s,
        dividerColorInverted: "#BBB",
        suffixColorInverted: "#BBB",
        prefixColorInverted: "#BBB",
        optionColorHoverInverted: e,
        optionColorActiveInverted: e,
        groupHeaderTextColorInverted: "#AAA",
        optionOpacityDisabled: m,
      });
    },
    KD = {
      name: "Dropdown",
      common: Oe,
      peers: { Popover: Zo },
      self(t) {
        const { primaryColorSuppl: e, primaryColor: n, popoverColor: r } = t,
          i = XD(t);
        return (
          (i.colorInverted = r),
          (i.optionColorActive = Ae(n, { alpha: 0.15 })),
          (i.optionColorActiveInverted = e),
          (i.optionColorHoverInverted = e),
          i
        );
      },
    },
    Wg = KD,
    YD = {
      thPaddingSmall: "8px",
      thPaddingMedium: "12px",
      thPaddingLarge: "12px",
      tdPaddingSmall: "8px",
      tdPaddingMedium: "12px",
      tdPaddingLarge: "12px",
      sorterSize: "15px",
      resizableContainerSize: "8px",
      resizableSize: "2px",
      filterSize: "15px",
      paginationMargin: "12px 0 0 0",
      emptyPadding: "48px 0",
      actionPadding: "8px 12px",
      actionButtonMargin: "0 8px 0 0",
    },
    qD = (t) => {
      const {
        cardColor: e,
        modalColor: n,
        popoverColor: r,
        textColor2: i,
        textColor1: o,
        tableHeaderColor: s,
        tableColorHover: a,
        iconColor: l,
        primaryColor: c,
        fontWeightStrong: u,
        borderRadius: d,
        lineHeight: h,
        fontSizeSmall: g,
        fontSizeMedium: f,
        fontSizeLarge: p,
        dividerColor: b,
        heightSmall: m,
        opacityDisabled: _,
        tableColorStriped: R,
      } = t;
      return Object.assign(Object.assign({}, YD), {
        actionDividerColor: b,
        lineHeight: h,
        borderRadius: d,
        fontSizeSmall: g,
        fontSizeMedium: f,
        fontSizeLarge: p,
        borderColor: Ue(e, b),
        tdColorHover: Ue(e, a),
        tdColorStriped: Ue(e, R),
        thColor: Ue(e, s),
        thColorHover: Ue(Ue(e, s), a),
        tdColor: e,
        tdTextColor: i,
        thTextColor: o,
        thFontWeight: u,
        thButtonColorHover: a,
        thIconColor: l,
        thIconColorActive: c,
        borderColorModal: Ue(n, b),
        tdColorHoverModal: Ue(n, a),
        tdColorStripedModal: Ue(n, R),
        thColorModal: Ue(n, s),
        thColorHoverModal: Ue(Ue(n, s), a),
        tdColorModal: n,
        borderColorPopover: Ue(r, b),
        tdColorHoverPopover: Ue(r, a),
        tdColorStripedPopover: Ue(r, R),
        thColorPopover: Ue(r, s),
        thColorHoverPopover: Ue(Ue(r, s), a),
        tdColorPopover: r,
        boxShadowBefore: "inset -12px 0 8px -12px rgba(0, 0, 0, .18)",
        boxShadowAfter: "inset 12px 0 8px -12px rgba(0, 0, 0, .18)",
        loadingColor: c,
        loadingSize: m,
        opacityLoading: _,
      });
    },
    ZD = {
      name: "DataTable",
      common: Oe,
      peers: {
        Button: Un,
        Checkbox: na,
        Radio: cC,
        Pagination: oC,
        Scrollbar: jn,
        Empty: qo,
        Popover: Zo,
        Ellipsis: lC,
        Dropdown: Wg,
      },
      self(t) {
        const e = qD(t);
        return (
          (e.boxShadowAfter = "inset 12px 0 8px -12px rgba(0, 0, 0, .36)"),
          (e.boxShadowBefore = "inset -12px 0 8px -12px rgba(0, 0, 0, .36)"),
          e
        );
      },
    },
    JD = ZD,
    QD = Object.assign(Object.assign({}, Nx), Ye.props),
    Dl = $e({
      name: "Tooltip",
      props: QD,
      __popover__: !0,
      setup(t) {
        const { mergedClsPrefixRef: e } = Ct(t),
          n = Ye("Tooltip", "-tooltip", void 0, aC, t, e),
          r = U(null);
        return Object.assign(
          Object.assign(
            {},
            {
              syncPosition() {
                r.value.syncPosition();
              },
              setShow(o) {
                r.value.setShow(o);
              },
            }
          ),
          {
            popoverRef: r,
            mergedTheme: n,
            popoverThemeOverrides: ce(() => n.value.self),
          }
        );
      },
      render() {
        const { mergedTheme: t, internalExtraClass: e } = this;
        return C(
          BL,
          Object.assign(Object.assign({}, this.$props), {
            theme: t.peers.Popover,
            themeOverrides: t.peerOverrides.Popover,
            builtinThemeOverrides: this.popoverThemeOverrides,
            internalExtraClass: e.concat("tooltip"),
            ref: "popoverRef",
          }),
          this.$slots
        );
      },
    }),
    e8 = (t) => {
      const {
        textColorBase: e,
        opacity1: n,
        opacity2: r,
        opacity3: i,
        opacity4: o,
        opacity5: s,
      } = t;
      return {
        color: e,
        opacity1Depth: n,
        opacity2Depth: r,
        opacity3Depth: i,
        opacity4Depth: o,
        opacity5Depth: s,
      };
    },
    t8 = { name: "Icon", common: Oe, self: e8 },
    n8 = t8,
    r8 = {
      itemFontSize: "12px",
      itemHeight: "36px",
      itemWidth: "52px",
      panelActionPadding: "8px 0",
    },
    i8 = (t) => {
      const {
        popoverColor: e,
        textColor2: n,
        primaryColor: r,
        hoverColor: i,
        dividerColor: o,
        opacityDisabled: s,
        boxShadow2: a,
        borderRadius: l,
        iconColor: c,
        iconColorDisabled: u,
      } = t;
      return Object.assign(Object.assign({}, r8), {
        panelColor: e,
        panelBoxShadow: a,
        panelDividerColor: o,
        itemTextColor: n,
        itemTextColorActive: r,
        itemColorHover: i,
        itemOpacityDisabled: s,
        itemBorderRadius: l,
        borderRadius: l,
        iconColor: c,
        iconColorDisabled: u,
      });
    },
    o8 = {
      name: "TimePicker",
      common: Oe,
      peers: { Scrollbar: jn, Button: Un, Input: hr },
      self: i8,
    },
    uC = o8,
    s8 = {
      itemSize: "24px",
      itemCellWidth: "38px",
      itemCellHeight: "32px",
      scrollItemWidth: "80px",
      scrollItemHeight: "40px",
      panelExtraFooterPadding: "8px 12px",
      panelActionPadding: "8px 12px",
      calendarTitlePadding: "0",
      calendarTitleHeight: "28px",
      arrowSize: "14px",
      panelHeaderPadding: "8px 12px",
      calendarDaysHeight: "32px",
      calendarTitleGridTempateColumns: "28px 28px 1fr 28px 28px",
      calendarLeftPaddingDate: "6px 12px 4px 12px",
      calendarLeftPaddingDatetime: "4px 12px",
      calendarLeftPaddingDaterange: "6px 12px 4px 12px",
      calendarLeftPaddingDatetimerange: "4px 12px",
      calendarLeftPaddingMonth: "0",
      calendarLeftPaddingYear: "0",
      calendarLeftPaddingQuarter: "0",
      calendarLeftPaddingMonthrange: "0",
      calendarLeftPaddingQuarterrange: "0",
      calendarLeftPaddingYearrange: "0",
      calendarLeftPaddingWeek: "6px 12px 4px 12px",
      calendarRightPaddingDate: "6px 12px 4px 12px",
      calendarRightPaddingDatetime: "4px 12px",
      calendarRightPaddingDaterange: "6px 12px 4px 12px",
      calendarRightPaddingDatetimerange: "4px 12px",
      calendarRightPaddingMonth: "0",
      calendarRightPaddingYear: "0",
      calendarRightPaddingQuarter: "0",
      calendarRightPaddingMonthrange: "0",
      calendarRightPaddingQuarterrange: "0",
      calendarRightPaddingYearrange: "0",
      calendarRightPaddingWeek: "0",
    },
    a8 = (t) => {
      const {
        hoverColor: e,
        fontSize: n,
        textColor2: r,
        textColorDisabled: i,
        popoverColor: o,
        primaryColor: s,
        borderRadiusSmall: a,
        iconColor: l,
        iconColorDisabled: c,
        textColor1: u,
        dividerColor: d,
        boxShadow2: h,
        borderRadius: g,
        fontWeightStrong: f,
      } = t;
      return Object.assign(Object.assign({}, s8), {
        itemFontSize: n,
        calendarDaysFontSize: n,
        calendarTitleFontSize: n,
        itemTextColor: r,
        itemTextColorDisabled: i,
        itemTextColorActive: o,
        itemTextColorCurrent: s,
        itemColorIncluded: Ae(s, { alpha: 0.1 }),
        itemColorHover: e,
        itemColorDisabled: e,
        itemColorActive: s,
        itemBorderRadius: a,
        panelColor: o,
        panelTextColor: r,
        arrowColor: l,
        calendarTitleTextColor: u,
        calendarTitleColorHover: e,
        calendarDaysTextColor: r,
        panelHeaderDividerColor: d,
        calendarDaysDividerColor: d,
        calendarDividerColor: d,
        panelActionDividerColor: d,
        panelBoxShadow: h,
        panelBorderRadius: g,
        calendarTitleFontWeight: f,
        scrollItemBorderRadius: g,
        iconColor: l,
        iconColorDisabled: c,
      });
    },
    l8 = {
      name: "DatePicker",
      common: Oe,
      peers: { Input: hr, Button: Un, TimePicker: uC, Scrollbar: jn },
      self(t) {
        const { popoverColor: e, hoverColor: n, primaryColor: r } = t,
          i = a8(t);
        return (
          (i.itemColorDisabled = Ue(e, n)),
          (i.itemColorIncluded = Ae(r, { alpha: 0.15 })),
          (i.itemColorHover = Ue(e, n)),
          i
        );
      },
    },
    c8 = l8,
    u8 = {
      thPaddingBorderedSmall: "8px 12px",
      thPaddingBorderedMedium: "12px 16px",
      thPaddingBorderedLarge: "16px 24px",
      thPaddingSmall: "0",
      thPaddingMedium: "0",
      thPaddingLarge: "0",
      tdPaddingBorderedSmall: "8px 12px",
      tdPaddingBorderedMedium: "12px 16px",
      tdPaddingBorderedLarge: "16px 24px",
      tdPaddingSmall: "0 0 8px 0",
      tdPaddingMedium: "0 0 12px 0",
      tdPaddingLarge: "0 0 16px 0",
    },
    dC = (t) => {
      const {
        tableHeaderColor: e,
        textColor2: n,
        textColor1: r,
        cardColor: i,
        modalColor: o,
        popoverColor: s,
        dividerColor: a,
        borderRadius: l,
        fontWeightStrong: c,
        lineHeight: u,
        fontSizeSmall: d,
        fontSizeMedium: h,
        fontSizeLarge: g,
      } = t;
      return Object.assign(Object.assign({}, u8), {
        lineHeight: u,
        fontSizeSmall: d,
        fontSizeMedium: h,
        fontSizeLarge: g,
        titleTextColor: r,
        thColor: Ue(i, e),
        thColorModal: Ue(o, e),
        thColorPopover: Ue(s, e),
        thTextColor: r,
        thFontWeight: c,
        tdTextColor: n,
        tdColor: i,
        tdColorModal: o,
        tdColorPopover: s,
        borderColor: Ue(i, a),
        borderColorModal: Ue(o, a),
        borderColorPopover: Ue(s, a),
        borderRadius: l,
      });
    },
    d8 = { name: "Descriptions", common: Ut, self: dC },
    h8 = d8,
    f8 = { name: "Descriptions", common: Oe, self: dC },
    g8 = f8,
    hC = "DESCRIPTION_ITEM_FLAG";
  function p8(t) {
    return typeof t == "object" && t && !Array.isArray(t)
      ? t.type && t.type[hC]
      : !1;
  }
  const m8 = q([
      M("descriptions", { fontSize: "var(--n-font-size)" }, [
        M(
          "descriptions-separator",
          `
 display: inline-block;
 margin: 0 8px 0 2px;
 `
        ),
        M("descriptions-table-wrapper", [
          M("descriptions-table", [
            M("descriptions-table-row", [
              M("descriptions-table-header", {
                padding: "var(--n-th-padding)",
              }),
              M("descriptions-table-content", {
                padding: "var(--n-td-padding)",
              }),
            ]),
          ]),
        ]),
        Zt("bordered", [
          M("descriptions-table-wrapper", [
            M("descriptions-table", [
              M("descriptions-table-row", [
                q("&:last-child", [
                  M("descriptions-table-content", { paddingBottom: 0 }),
                ]),
              ]),
            ]),
          ]),
        ]),
        te("left-label-placement", [
          M("descriptions-table-content", [q("> *", { verticalAlign: "top" })]),
        ]),
        te("left-label-align", [q("th", { textAlign: "left" })]),
        te("center-label-align", [q("th", { textAlign: "center" })]),
        te("right-label-align", [q("th", { textAlign: "right" })]),
        te("bordered", [
          M(
            "descriptions-table-wrapper",
            `
 border-radius: var(--n-border-radius);
 overflow: hidden;
 background: var(--n-merged-td-color);
 border: 1px solid var(--n-merged-border-color);
 `,
            [
              M("descriptions-table", [
                M("descriptions-table-row", [
                  q("&:not(:last-child)", [
                    M("descriptions-table-content", {
                      borderBottom: "1px solid var(--n-merged-border-color)",
                    }),
                    M("descriptions-table-header", {
                      borderBottom: "1px solid var(--n-merged-border-color)",
                    }),
                  ]),
                  M(
                    "descriptions-table-header",
                    `
 font-weight: 400;
 background-clip: padding-box;
 background-color: var(--n-merged-th-color);
 `,
                    [
                      q("&:not(:last-child)", {
                        borderRight: "1px solid var(--n-merged-border-color)",
                      }),
                    ]
                  ),
                  M("descriptions-table-content", [
                    q("&:not(:last-child)", {
                      borderRight: "1px solid var(--n-merged-border-color)",
                    }),
                  ]),
                ]),
              ]),
            ]
          ),
        ]),
        M(
          "descriptions-header",
          `
 font-weight: var(--n-th-font-weight);
 font-size: 18px;
 transition: color .3s var(--n-bezier);
 line-height: var(--n-line-height);
 margin-bottom: 16px;
 color: var(--n-title-text-color);
 `
        ),
        M(
          "descriptions-table-wrapper",
          `
 transition:
 background-color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 `,
          [
            M(
              "descriptions-table",
              `
 width: 100%;
 border-collapse: separate;
 border-spacing: 0;
 box-sizing: border-box;
 `,
              [
                M(
                  "descriptions-table-row",
                  `
 box-sizing: border-box;
 transition: border-color .3s var(--n-bezier);
 `,
                  [
                    M(
                      "descriptions-table-header",
                      `
 font-weight: var(--n-th-font-weight);
 line-height: var(--n-line-height);
 display: table-cell;
 box-sizing: border-box;
 color: var(--n-th-text-color);
 transition:
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 `
                    ),
                    M(
                      "descriptions-table-content",
                      `
 vertical-align: top;
 line-height: var(--n-line-height);
 display: table-cell;
 box-sizing: border-box;
 color: var(--n-td-text-color);
 transition:
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 `,
                      [
                        ne(
                          "content",
                          `
 transition: color .3s var(--n-bezier);
 display: inline-block;
 color: var(--n-td-text-color);
 `
                        ),
                      ]
                    ),
                    ne(
                      "label",
                      `
 font-weight: var(--n-th-font-weight);
 transition: color .3s var(--n-bezier);
 display: inline-block;
 margin-right: 14px;
 color: var(--n-th-text-color);
 `
                    ),
                  ]
                ),
              ]
            ),
          ]
        ),
      ]),
      M(
        "descriptions-table-wrapper",
        `
 --n-merged-th-color: var(--n-th-color);
 --n-merged-td-color: var(--n-td-color);
 --n-merged-border-color: var(--n-border-color);
 `
      ),
      Pl(
        M(
          "descriptions-table-wrapper",
          `
 --n-merged-th-color: var(--n-th-color-modal);
 --n-merged-td-color: var(--n-td-color-modal);
 --n-merged-border-color: var(--n-border-color-modal);
 `
        )
      ),
      Nu(
        M(
          "descriptions-table-wrapper",
          `
 --n-merged-th-color: var(--n-th-color-popover);
 --n-merged-td-color: var(--n-td-color-popover);
 --n-merged-border-color: var(--n-border-color-popover);
 `
        )
      ),
    ]),
    v8 = Object.assign(Object.assign({}, Ye.props), {
      title: String,
      column: { type: Number, default: 3 },
      columns: Number,
      labelPlacement: { type: String, default: "top" },
      labelAlign: { type: String, default: "left" },
      separator: { type: String, default: ":" },
      size: { type: String, default: "medium" },
      bordered: Boolean,
      labelClass: String,
      labelStyle: [Object, String],
      contentClass: String,
      contentStyle: [Object, String],
    }),
    di = $e({
      name: "Descriptions",
      props: v8,
      setup(t) {
        const { mergedClsPrefixRef: e, inlineThemeDisabled: n } = Ct(t),
          r = Ye("Descriptions", "-descriptions", m8, h8, t, e),
          i = ce(() => {
            const { size: s, bordered: a } = t,
              {
                common: { cubicBezierEaseInOut: l },
                self: {
                  titleTextColor: c,
                  thColor: u,
                  thColorModal: d,
                  thColorPopover: h,
                  thTextColor: g,
                  thFontWeight: f,
                  tdTextColor: p,
                  tdColor: b,
                  tdColorModal: m,
                  tdColorPopover: _,
                  borderColor: R,
                  borderColorModal: S,
                  borderColorPopover: x,
                  borderRadius: E,
                  lineHeight: w,
                  [Te("fontSize", s)]: v,
                  [Te(a ? "thPaddingBordered" : "thPadding", s)]: y,
                  [Te(a ? "tdPaddingBordered" : "tdPadding", s)]: T,
                },
              } = r.value;
            return {
              "--n-title-text-color": c,
              "--n-th-padding": y,
              "--n-td-padding": T,
              "--n-font-size": v,
              "--n-bezier": l,
              "--n-th-font-weight": f,
              "--n-line-height": w,
              "--n-th-text-color": g,
              "--n-td-text-color": p,
              "--n-th-color": u,
              "--n-th-color-modal": d,
              "--n-th-color-popover": h,
              "--n-td-color": b,
              "--n-td-color-modal": m,
              "--n-td-color-popover": _,
              "--n-border-radius": E,
              "--n-border-color": R,
              "--n-border-color-modal": S,
              "--n-border-color-popover": x,
            };
          }),
          o = n
            ? jt(
                "descriptions",
                ce(() => {
                  let s = "";
                  const { size: a, bordered: l } = t;
                  return l && (s += "a"), (s += a[0]), s;
                }),
                i,
                t
              )
            : void 0;
        return {
          mergedClsPrefix: e,
          cssVars: n ? void 0 : i,
          themeClass: o == null ? void 0 : o.themeClass,
          onRender: o == null ? void 0 : o.onRender,
          compitableColumn: Jc(t, ["columns", "column"]),
          inlineThemeDisabled: n,
        };
      },
      render() {
        const t = this.$slots.default,
          e = t ? Hi(t()) : [];
        e.length;
        const {
          contentClass: n,
          labelClass: r,
          compitableColumn: i,
          labelPlacement: o,
          labelAlign: s,
          size: a,
          bordered: l,
          title: c,
          cssVars: u,
          mergedClsPrefix: d,
          separator: h,
          onRender: g,
        } = this;
        g == null || g();
        const f = e.filter((_) => p8(_)),
          p = { span: 0, row: [], secondRow: [], rows: [] },
          m = f
            .reduce((_, R, S) => {
              const x = R.props || {},
                E = f.length - 1 === S,
                w = ["label" in x ? x.label : Um(R, "label")],
                v = [Um(R)],
                y = x.span || 1,
                T = _.span;
              _.span += y;
              const A = x.labelStyle || x["label-style"] || this.labelStyle,
                I = x.contentStyle || x["content-style"] || this.contentStyle;
              if (o === "left")
                l
                  ? _.row.push(
                      C(
                        "th",
                        {
                          class: [`${d}-descriptions-table-header`, r],
                          colspan: 1,
                          style: A,
                        },
                        w
                      ),
                      C(
                        "td",
                        {
                          class: [`${d}-descriptions-table-content`, n],
                          colspan: E ? (i - T) * 2 + 1 : y * 2 - 1,
                          style: I,
                        },
                        v
                      )
                    )
                  : _.row.push(
                      C(
                        "td",
                        {
                          class: `${d}-descriptions-table-content`,
                          colspan: E ? (i - T) * 2 : y * 2,
                        },
                        C(
                          "span",
                          {
                            class: [
                              `${d}-descriptions-table-content__label`,
                              r,
                            ],
                            style: A,
                          },
                          [
                            ...w,
                            h &&
                              C(
                                "span",
                                { class: `${d}-descriptions-separator` },
                                h
                              ),
                          ]
                        ),
                        C(
                          "span",
                          {
                            class: [
                              `${d}-descriptions-table-content__content`,
                              n,
                            ],
                            style: I,
                          },
                          v
                        )
                      )
                    );
              else {
                const L = E ? (i - T) * 2 : y * 2;
                _.row.push(
                  C(
                    "th",
                    {
                      class: [`${d}-descriptions-table-header`, r],
                      colspan: L,
                      style: A,
                    },
                    w
                  )
                ),
                  _.secondRow.push(
                    C(
                      "td",
                      {
                        class: [`${d}-descriptions-table-content`, n],
                        colspan: L,
                        style: I,
                      },
                      v
                    )
                  );
              }
              return (
                (_.span >= i || E) &&
                  ((_.span = 0),
                  _.row.length && (_.rows.push(_.row), (_.row = [])),
                  o !== "left" &&
                    _.secondRow.length &&
                    (_.rows.push(_.secondRow), (_.secondRow = []))),
                _
              );
            }, p)
            .rows.map((_) =>
              C("tr", { class: `${d}-descriptions-table-row` }, _)
            );
        return C(
          "div",
          {
            style: u,
            class: [
              `${d}-descriptions`,
              this.themeClass,
              `${d}-descriptions--${o}-label-placement`,
              `${d}-descriptions--${s}-label-align`,
              `${d}-descriptions--${a}-size`,
              l && `${d}-descriptions--bordered`,
            ],
          },
          c || this.$slots.header
            ? C(
                "div",
                { class: `${d}-descriptions-header` },
                c || ly(this, "header")
              )
            : null,
          C(
            "div",
            { class: `${d}-descriptions-table-wrapper` },
            C(
              "table",
              { class: `${d}-descriptions-table` },
              C(
                "tbody",
                null,
                o === "top" &&
                  C(
                    "tr",
                    {
                      class: `${d}-descriptions-table-row`,
                      style: { visibility: "collapse" },
                    },
                    cT(i * 2, C("td", null))
                  ),
                m
              )
            )
          )
        );
      },
    }),
    b8 = {
      label: String,
      span: { type: Number, default: 1 },
      labelClass: String,
      labelStyle: [Object, String],
      contentClass: String,
      contentStyle: [Object, String],
    },
    hi = $e({
      name: "DescriptionsItem",
      [hC]: !0,
      props: b8,
      render() {
        return null;
      },
    }),
    y8 = {
      titleFontSize: "18px",
      padding: "16px 28px 20px 28px",
      iconSize: "28px",
      actionSpace: "12px",
      contentMargin: "8px 0 16px 0",
      iconMargin: "0 4px 0 0",
      iconMarginIconTop: "4px 0 8px 0",
      closeSize: "22px",
      closeIconSize: "18px",
      closeMargin: "20px 26px 0 0",
      closeMarginIconTop: "10px 16px 0 0",
    },
    fC = (t) => {
      const {
        textColor1: e,
        textColor2: n,
        modalColor: r,
        closeIconColor: i,
        closeIconColorHover: o,
        closeIconColorPressed: s,
        closeColorHover: a,
        closeColorPressed: l,
        infoColor: c,
        successColor: u,
        warningColor: d,
        errorColor: h,
        primaryColor: g,
        dividerColor: f,
        borderRadius: p,
        fontWeightStrong: b,
        lineHeight: m,
        fontSize: _,
      } = t;
      return Object.assign(Object.assign({}, y8), {
        fontSize: _,
        lineHeight: m,
        border: `1px solid ${f}`,
        titleTextColor: e,
        textColor: n,
        color: r,
        closeColorHover: a,
        closeColorPressed: l,
        closeIconColor: i,
        closeIconColorHover: o,
        closeIconColorPressed: s,
        closeBorderRadius: p,
        iconColor: g,
        iconColorInfo: c,
        iconColorSuccess: u,
        iconColorWarning: d,
        iconColorError: h,
        borderRadius: p,
        titleFontWeight: b,
      });
    },
    gC = { name: "Dialog", common: Ut, peers: { Button: Zu }, self: fC },
    x8 = { name: "Dialog", common: Oe, peers: { Button: Un }, self: fC },
    pC = x8,
    ed = {
      icon: Function,
      type: { type: String, default: "default" },
      title: [String, Function],
      closable: { type: Boolean, default: !0 },
      negativeText: String,
      positiveText: String,
      positiveButtonProps: Object,
      negativeButtonProps: Object,
      content: [String, Function],
      action: Function,
      showIcon: { type: Boolean, default: !0 },
      loading: Boolean,
      bordered: Boolean,
      iconPlacement: String,
      onPositiveClick: Function,
      onNegativeClick: Function,
      onClose: Function,
    },
    mC = Fu(ed),
    C8 = q([
      M(
        "dialog",
        `
 --n-icon-margin: var(--n-icon-margin-top) var(--n-icon-margin-right) var(--n-icon-margin-bottom) var(--n-icon-margin-left);
 word-break: break-word;
 line-height: var(--n-line-height);
 position: relative;
 background: var(--n-color);
 color: var(--n-text-color);
 box-sizing: border-box;
 margin: auto;
 border-radius: var(--n-border-radius);
 padding: var(--n-padding);
 transition:
 border-color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 `,
        [
          ne("icon", { color: "var(--n-icon-color)" }),
          te("bordered", { border: "var(--n-border)" }),
          te("icon-top", [
            ne("close", { margin: "var(--n-close-margin)" }),
            ne("icon", { margin: "var(--n-icon-margin)" }),
            ne("content", { textAlign: "center" }),
            ne("title", { justifyContent: "center" }),
            ne("action", { justifyContent: "center" }),
          ]),
          te("icon-left", [
            ne("icon", { margin: "var(--n-icon-margin)" }),
            te("closable", [
              ne(
                "title",
                `
 padding-right: calc(var(--n-close-size) + 6px);
 `
              ),
            ]),
          ]),
          ne(
            "close",
            `
 position: absolute;
 right: 0;
 top: 0;
 margin: var(--n-close-margin);
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 z-index: 1;
 `
          ),
          ne(
            "content",
            `
 font-size: var(--n-font-size);
 margin: var(--n-content-margin);
 position: relative;
 word-break: break-word;
 `,
            [te("last", "margin-bottom: 0;")]
          ),
          ne(
            "action",
            `
 display: flex;
 justify-content: flex-end;
 `,
            [
              q(
                "> *:not(:last-child)",
                `
 margin-right: var(--n-action-space);
 `
              ),
            ]
          ),
          ne(
            "icon",
            `
 font-size: var(--n-icon-size);
 transition: color .3s var(--n-bezier);
 `
          ),
          ne(
            "title",
            `
 transition: color .3s var(--n-bezier);
 display: flex;
 align-items: center;
 font-size: var(--n-title-font-size);
 font-weight: var(--n-title-font-weight);
 color: var(--n-title-text-color);
 `
          ),
          M(
            "dialog-icon-container",
            `
 display: flex;
 justify-content: center;
 `
          ),
        ]
      ),
      Pl(
        M(
          "dialog",
          `
 width: 446px;
 max-width: calc(100vw - 32px);
 `
        )
      ),
      M("dialog", [
        my(`
 width: 446px;
 max-width: calc(100vw - 32px);
 `),
      ]),
    ]),
    _8 = {
      default: () => C(Ns, null),
      info: () => C(Ns, null),
      success: () => C(Il, null),
      warning: () => C(Ol, null),
      error: () => C(kl, null),
    },
    vC = $e({
      name: "Dialog",
      alias: ["NimbusConfirmCard", "Confirm"],
      props: Object.assign(Object.assign({}, Ye.props), ed),
      setup(t) {
        const {
            mergedComponentPropsRef: e,
            mergedClsPrefixRef: n,
            inlineThemeDisabled: r,
            mergedRtlRef: i,
          } = Ct(t),
          o = Cr("Dialog", i, n),
          s = ce(() => {
            var g, f;
            const { iconPlacement: p } = t;
            return (
              p ||
              ((f =
                (g = e == null ? void 0 : e.value) === null || g === void 0
                  ? void 0
                  : g.Dialog) === null || f === void 0
                ? void 0
                : f.iconPlacement) ||
              "left"
            );
          });
        function a(g) {
          const { onPositiveClick: f } = t;
          f && f(g);
        }
        function l(g) {
          const { onNegativeClick: f } = t;
          f && f(g);
        }
        function c() {
          const { onClose: g } = t;
          g && g();
        }
        const u = Ye("Dialog", "-dialog", C8, gC, t, n),
          d = ce(() => {
            const { type: g } = t,
              f = s.value,
              {
                common: { cubicBezierEaseInOut: p },
                self: {
                  fontSize: b,
                  lineHeight: m,
                  border: _,
                  titleTextColor: R,
                  textColor: S,
                  color: x,
                  closeBorderRadius: E,
                  closeColorHover: w,
                  closeColorPressed: v,
                  closeIconColor: y,
                  closeIconColorHover: T,
                  closeIconColorPressed: A,
                  closeIconSize: I,
                  borderRadius: L,
                  titleFontWeight: j,
                  titleFontSize: k,
                  padding: O,
                  iconSize: D,
                  actionSpace: Y,
                  contentMargin: se,
                  closeSize: de,
                  [f === "top" ? "iconMarginIconTop" : "iconMargin"]: fe,
                  [f === "top" ? "closeMarginIconTop" : "closeMargin"]: z,
                  [Te("iconColor", g)]: ee,
                },
              } = u.value,
              ue = nr(fe);
            return {
              "--n-font-size": b,
              "--n-icon-color": ee,
              "--n-bezier": p,
              "--n-close-margin": z,
              "--n-icon-margin-top": ue.top,
              "--n-icon-margin-right": ue.right,
              "--n-icon-margin-bottom": ue.bottom,
              "--n-icon-margin-left": ue.left,
              "--n-icon-size": D,
              "--n-close-size": de,
              "--n-close-icon-size": I,
              "--n-close-border-radius": E,
              "--n-close-color-hover": w,
              "--n-close-color-pressed": v,
              "--n-close-icon-color": y,
              "--n-close-icon-color-hover": T,
              "--n-close-icon-color-pressed": A,
              "--n-color": x,
              "--n-text-color": S,
              "--n-border-radius": L,
              "--n-padding": O,
              "--n-line-height": m,
              "--n-border": _,
              "--n-content-margin": se,
              "--n-title-font-size": k,
              "--n-title-font-weight": j,
              "--n-title-text-color": R,
              "--n-action-space": Y,
            };
          }),
          h = r
            ? jt(
                "dialog",
                ce(() => `${t.type[0]}${s.value[0]}`),
                d,
                t
              )
            : void 0;
        return {
          mergedClsPrefix: n,
          rtlEnabled: o,
          mergedIconPlacement: s,
          mergedTheme: u,
          handlePositiveClick: a,
          handleNegativeClick: l,
          handleCloseClick: c,
          cssVars: r ? void 0 : d,
          themeClass: h == null ? void 0 : h.themeClass,
          onRender: h == null ? void 0 : h.onRender,
        };
      },
      render() {
        var t;
        const {
          bordered: e,
          mergedIconPlacement: n,
          cssVars: r,
          closable: i,
          showIcon: o,
          title: s,
          content: a,
          action: l,
          negativeText: c,
          positiveText: u,
          positiveButtonProps: d,
          negativeButtonProps: h,
          handlePositiveClick: g,
          handleNegativeClick: f,
          mergedTheme: p,
          loading: b,
          type: m,
          mergedClsPrefix: _,
        } = this;
        (t = this.onRender) === null || t === void 0 || t.call(this);
        const R = o
            ? C(
                ht,
                { clsPrefix: _, class: `${_}-dialog__icon` },
                {
                  default: () =>
                    gt(
                      this.$slots.icon,
                      (x) => x || (this.icon ? wn(this.icon) : _8[this.type]())
                    ),
                }
              )
            : null,
          S = gt(this.$slots.action, (x) =>
            x || u || c || l
              ? C(
                  "div",
                  { class: `${_}-dialog__action` },
                  x ||
                    (l
                      ? [wn(l)]
                      : [
                          this.negativeText &&
                            C(
                              Xn,
                              Object.assign(
                                {
                                  theme: p.peers.Button,
                                  themeOverrides: p.peerOverrides.Button,
                                  ghost: !0,
                                  size: "small",
                                  onClick: f,
                                },
                                h
                              ),
                              { default: () => wn(this.negativeText) }
                            ),
                          this.positiveText &&
                            C(
                              Xn,
                              Object.assign(
                                {
                                  theme: p.peers.Button,
                                  themeOverrides: p.peerOverrides.Button,
                                  size: "small",
                                  type: m === "default" ? "primary" : m,
                                  disabled: b,
                                  loading: b,
                                  onClick: g,
                                },
                                d
                              ),
                              { default: () => wn(this.positiveText) }
                            ),
                        ])
                )
              : null
          );
        return C(
          "div",
          {
            class: [
              `${_}-dialog`,
              this.themeClass,
              this.closable && `${_}-dialog--closable`,
              `${_}-dialog--icon-${n}`,
              e && `${_}-dialog--bordered`,
              this.rtlEnabled && `${_}-dialog--rtl`,
            ],
            style: r,
            role: "dialog",
          },
          i
            ? gt(this.$slots.close, (x) => {
                const E = [
                  `${_}-dialog__close`,
                  this.rtlEnabled && `${_}-dialog--rtl`,
                ];
                return x
                  ? C("div", { class: E }, x)
                  : C(ta, {
                      clsPrefix: _,
                      class: E,
                      onClick: this.handleCloseClick,
                    });
              })
            : null,
          o && n === "top"
            ? C("div", { class: `${_}-dialog-icon-container` }, R)
            : null,
          C(
            "div",
            { class: `${_}-dialog__title` },
            o && n === "left" ? R : null,
            Lr(this.$slots.header, () => [wn(s)])
          ),
          C(
            "div",
            {
              class: [
                `${_}-dialog__content`,
                S ? "" : `${_}-dialog__content--last`,
              ],
            },
            Lr(this.$slots.default, () => [wn(a)])
          ),
          S
        );
      },
    }),
    bC = "n-dialog-provider",
    w8 = "n-dialog-api",
    S8 = "n-dialog-reactive-list",
    yC = (t) => {
      const { modalColor: e, textColor2: n, boxShadow3: r } = t;
      return { color: e, textColor: n, boxShadow: r };
    },
    E8 = {
      name: "Modal",
      common: Ut,
      peers: { Scrollbar: Yu, Dialog: gC, Card: Qx },
      self: yC,
    },
    R8 = {
      name: "Modal",
      common: Oe,
      peers: { Scrollbar: jn, Dialog: pC, Card: eC },
      self: yC,
    },
    T8 = R8,
    jg = Object.assign(Object.assign({}, Ng), ed),
    P8 = Fu(jg),
    A8 = $e({
      name: "ModalBody",
      inheritAttrs: !1,
      props: Object.assign(
        Object.assign(
          {
            show: { type: Boolean, required: !0 },
            preset: String,
            displayDirective: { type: String, required: !0 },
            trapFocus: { type: Boolean, default: !0 },
            autoFocus: { type: Boolean, default: !0 },
            blockScroll: Boolean,
          },
          jg
        ),
        {
          renderMask: Function,
          onClickoutside: Function,
          onBeforeLeave: { type: Function, required: !0 },
          onAfterLeave: { type: Function, required: !0 },
          onPositiveClick: { type: Function, required: !0 },
          onNegativeClick: { type: Function, required: !0 },
          onClose: { type: Function, required: !0 },
          onAfterEnter: Function,
          onEsc: Function,
        }
      ),
      setup(t) {
        const e = U(null),
          n = U(null),
          r = U(t.show),
          i = U(null),
          o = U(null);
        Et(We(t, "show"), (b) => {
          b && (r.value = !0);
        }),
          WP(ce(() => t.blockScroll && r.value));
        const s = Ve(wy);
        function a() {
          if (s.transformOriginRef.value === "center") return "";
          const { value: b } = i,
            { value: m } = o;
          if (b === null || m === null) return "";
          if (n.value) {
            const _ = n.value.containerScrollTop;
            return `${b}px ${m + _}px`;
          }
          return "";
        }
        function l(b) {
          if (s.transformOriginRef.value === "center") return;
          const m = s.getMousePosition();
          if (!m || !n.value) return;
          const _ = n.value.containerScrollTop,
            { offsetLeft: R, offsetTop: S } = b;
          if (m) {
            const x = m.y,
              E = m.x;
            (i.value = -(R - E)), (o.value = -(S - x - _));
          }
          b.style.transformOrigin = a();
        }
        function c(b) {
          Ht(() => {
            l(b);
          });
        }
        function u(b) {
          (b.style.transformOrigin = a()), t.onBeforeLeave();
        }
        function d() {
          (r.value = !1), (i.value = null), (o.value = null), t.onAfterLeave();
        }
        function h() {
          const { onClose: b } = t;
          b && b();
        }
        function g() {
          t.onNegativeClick();
        }
        function f() {
          t.onPositiveClick();
        }
        const p = U(null);
        return (
          Et(p, (b) => {
            b &&
              Ht(() => {
                const m = b.el;
                m && e.value !== m && (e.value = m);
              });
          }),
          vt(fg, e),
          vt(gg, null),
          vt(pg, null),
          {
            mergedTheme: s.mergedThemeRef,
            appear: s.appearRef,
            isMounted: s.isMountedRef,
            mergedClsPrefix: s.mergedClsPrefixRef,
            bodyRef: e,
            scrollbarRef: n,
            displayed: r,
            childNodeRef: p,
            handlePositiveClick: f,
            handleNegativeClick: g,
            handleCloseClick: h,
            handleAfterLeave: d,
            handleBeforeLeave: u,
            handleEnter: c,
          }
        );
      },
      render() {
        const {
          $slots: t,
          $attrs: e,
          handleEnter: n,
          handleAfterLeave: r,
          handleBeforeLeave: i,
          preset: o,
          mergedClsPrefix: s,
        } = this;
        let a = null;
        if (!o) {
          if (((a = qc(t)), !a)) {
            tl("modal", "default slot is empty");
            return;
          }
          (a = br(a)),
            (a.props = qs({ class: `${s}-modal` }, e, a.props || {}));
        }
        return this.displayDirective === "show" || this.displayed || this.show
          ? sr(
              C(
                "div",
                { role: "none", class: `${s}-modal-body-wrapper` },
                C(
                  Ll,
                  {
                    ref: "scrollbarRef",
                    theme: this.mergedTheme.peers.Scrollbar,
                    themeOverrides: this.mergedTheme.peerOverrides.Scrollbar,
                    contentClass: `${s}-modal-scroll-content`,
                  },
                  {
                    default: () => {
                      var l;
                      return [
                        (l = this.renderMask) === null || l === void 0
                          ? void 0
                          : l.call(this),
                        C(
                          Fy,
                          {
                            disabled: !this.trapFocus,
                            active: this.show,
                            onEsc: this.onEsc,
                            autoFocus: this.autoFocus,
                          },
                          {
                            default: () => {
                              var c;
                              return C(
                                vn,
                                {
                                  name: "fade-in-scale-up-transition",
                                  appear:
                                    (c = this.appear) !== null && c !== void 0
                                      ? c
                                      : this.isMounted,
                                  onEnter: n,
                                  onAfterEnter: this.onAfterEnter,
                                  onAfterLeave: r,
                                  onBeforeLeave: i,
                                },
                                {
                                  default: () => {
                                    const u = [[$s, this.show]],
                                      { onClickoutside: d } = this;
                                    return (
                                      d &&
                                        u.push([
                                          Qc,
                                          this.onClickoutside,
                                          void 0,
                                          { capture: !0 },
                                        ]),
                                      sr(
                                        this.preset === "confirm" ||
                                          this.preset === "dialog"
                                          ? C(
                                              vC,
                                              Object.assign(
                                                {},
                                                this.$attrs,
                                                {
                                                  class: [
                                                    `${s}-modal`,
                                                    this.$attrs.class,
                                                  ],
                                                  ref: "bodyRef",
                                                  theme:
                                                    this.mergedTheme.peers
                                                      .Dialog,
                                                  themeOverrides:
                                                    this.mergedTheme
                                                      .peerOverrides.Dialog,
                                                },
                                                Bs(this.$props, mC),
                                                { "aria-modal": "true" }
                                              ),
                                              t
                                            )
                                          : this.preset === "card"
                                          ? C(
                                              Hg,
                                              Object.assign(
                                                {},
                                                this.$attrs,
                                                {
                                                  ref: "bodyRef",
                                                  class: [
                                                    `${s}-modal`,
                                                    this.$attrs.class,
                                                  ],
                                                  theme:
                                                    this.mergedTheme.peers.Card,
                                                  themeOverrides:
                                                    this.mergedTheme
                                                      .peerOverrides.Card,
                                                },
                                                Bs(this.$props, lD),
                                                {
                                                  "aria-modal": "true",
                                                  role: "dialog",
                                                }
                                              ),
                                              t
                                            )
                                          : (this.childNodeRef = a),
                                        u
                                      )
                                    );
                                  },
                                }
                              );
                            },
                          }
                        ),
                      ];
                    },
                  }
                )
              ),
              [
                [
                  $s,
                  this.displayDirective === "if" || this.displayed || this.show,
                ],
              ]
            )
          : null;
      },
    }),
    k8 = q([
      M(
        "modal-container",
        `
 position: fixed;
 left: 0;
 top: 0;
 height: 0;
 width: 0;
 display: flex;
 `
      ),
      M(
        "modal-mask",
        `
 position: fixed;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 background-color: rgba(0, 0, 0, .4);
 `,
        [
          ll({
            enterDuration: ".25s",
            leaveDuration: ".25s",
            enterCubicBezier: "var(--n-bezier-ease-out)",
            leaveCubicBezier: "var(--n-bezier-ease-out)",
          }),
        ]
      ),
      M(
        "modal-body-wrapper",
        `
 position: fixed;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 overflow: visible;
 `,
        [
          M(
            "modal-scroll-content",
            `
 min-height: 100%;
 display: flex;
 position: relative;
 `
          ),
        ]
      ),
      M(
        "modal",
        `
 position: relative;
 align-self: center;
 color: var(--n-text-color);
 margin: auto;
 box-shadow: var(--n-box-shadow);
 `,
        [Hs({ duration: ".25s", enterScale: ".5" })]
      ),
    ]),
    I8 = Object.assign(
      Object.assign(
        Object.assign(Object.assign({}, Ye.props), {
          show: Boolean,
          unstableShowMask: { type: Boolean, default: !0 },
          maskClosable: { type: Boolean, default: !0 },
          preset: String,
          to: [String, Object],
          displayDirective: { type: String, default: "if" },
          transformOrigin: { type: String, default: "mouse" },
          zIndex: Number,
          autoFocus: { type: Boolean, default: !0 },
          trapFocus: { type: Boolean, default: !0 },
          closeOnEsc: { type: Boolean, default: !0 },
          blockScroll: { type: Boolean, default: !0 },
        }),
        jg
      ),
      {
        onEsc: Function,
        "onUpdate:show": [Function, Array],
        onUpdateShow: [Function, Array],
        onAfterEnter: Function,
        onBeforeLeave: Function,
        onAfterLeave: Function,
        onClose: Function,
        onPositiveClick: Function,
        onNegativeClick: Function,
        onMaskClick: Function,
        internalDialog: Boolean,
        internalAppear: { type: Boolean, default: void 0 },
        overlayStyle: [String, Object],
        onBeforeHide: Function,
        onAfterHide: Function,
        onHide: Function,
      }
    ),
    O8 = $e({
      name: "Modal",
      inheritAttrs: !1,
      props: I8,
      setup(t) {
        const e = U(null),
          {
            mergedClsPrefixRef: n,
            namespaceRef: r,
            inlineThemeDisabled: i,
          } = Ct(t),
          o = Ye("Modal", "-modal", k8, E8, t, n),
          s = Cy(64),
          a = xy(),
          l = Qi(),
          c = t.internalDialog ? Ve(bC, null) : null,
          u = jP();
        function d(x) {
          const { onUpdateShow: E, "onUpdate:show": w, onHide: v } = t;
          E && Ke(E, x), w && Ke(w, x), v && !x && v(x);
        }
        function h() {
          const { onClose: x } = t;
          x
            ? Promise.resolve(x()).then((E) => {
                E !== !1 && d(!1);
              })
            : d(!1);
        }
        function g() {
          const { onPositiveClick: x } = t;
          x
            ? Promise.resolve(x()).then((E) => {
                E !== !1 && d(!1);
              })
            : d(!1);
        }
        function f() {
          const { onNegativeClick: x } = t;
          x
            ? Promise.resolve(x()).then((E) => {
                E !== !1 && d(!1);
              })
            : d(!1);
        }
        function p() {
          const { onBeforeLeave: x, onBeforeHide: E } = t;
          x && Ke(x), E && E();
        }
        function b() {
          const { onAfterLeave: x, onAfterHide: E } = t;
          x && Ke(x), E && E();
        }
        function m(x) {
          var E;
          const { onMaskClick: w } = t;
          w && w(x),
            t.maskClosable &&
              !((E = e.value) === null || E === void 0) &&
              E.contains(Fs(x)) &&
              d(!1);
        }
        function _(x) {
          var E;
          (E = t.onEsc) === null || E === void 0 || E.call(t),
            t.show && t.closeOnEsc && DT(x) && !u.value && d(!1);
        }
        vt(wy, {
          getMousePosition: () => {
            if (c) {
              const { clickedRef: x, clickPositionRef: E } = c;
              if (x.value && E.value) return E.value;
            }
            return s.value ? a.value : null;
          },
          mergedClsPrefixRef: n,
          mergedThemeRef: o,
          isMountedRef: l,
          appearRef: We(t, "internalAppear"),
          transformOriginRef: We(t, "transformOrigin"),
        });
        const R = ce(() => {
            const {
              common: { cubicBezierEaseOut: x },
              self: { boxShadow: E, color: w, textColor: v },
            } = o.value;
            return {
              "--n-bezier-ease-out": x,
              "--n-box-shadow": E,
              "--n-color": w,
              "--n-text-color": v,
            };
          }),
          S = i ? jt("theme-class", void 0, R, t) : void 0;
        return {
          mergedClsPrefix: n,
          namespace: r,
          isMounted: l,
          containerRef: e,
          presetProps: ce(() => Bs(t, P8)),
          handleEsc: _,
          handleAfterLeave: b,
          handleClickoutside: m,
          handleBeforeLeave: p,
          doUpdateShow: d,
          handleNegativeClick: f,
          handlePositiveClick: g,
          handleCloseClick: h,
          cssVars: i ? void 0 : R,
          themeClass: S == null ? void 0 : S.themeClass,
          onRender: S == null ? void 0 : S.onRender,
        };
      },
      render() {
        const { mergedClsPrefix: t } = this;
        return C(
          yg,
          { to: this.to, show: this.show },
          {
            default: () => {
              var e;
              (e = this.onRender) === null || e === void 0 || e.call(this);
              const { unstableShowMask: n } = this;
              return sr(
                C(
                  "div",
                  {
                    role: "none",
                    ref: "containerRef",
                    class: [
                      `${t}-modal-container`,
                      this.themeClass,
                      this.namespace,
                    ],
                    style: this.cssVars,
                  },
                  C(
                    A8,
                    Object.assign(
                      { style: this.overlayStyle },
                      this.$attrs,
                      {
                        ref: "bodyWrapper",
                        displayDirective: this.displayDirective,
                        show: this.show,
                        preset: this.preset,
                        autoFocus: this.autoFocus,
                        trapFocus: this.trapFocus,
                        blockScroll: this.blockScroll,
                      },
                      this.presetProps,
                      {
                        onEsc: this.handleEsc,
                        onClose: this.handleCloseClick,
                        onNegativeClick: this.handleNegativeClick,
                        onPositiveClick: this.handlePositiveClick,
                        onBeforeLeave: this.handleBeforeLeave,
                        onAfterEnter: this.onAfterEnter,
                        onAfterLeave: this.handleAfterLeave,
                        onClickoutside: n ? void 0 : this.handleClickoutside,
                        renderMask: n
                          ? () => {
                              var r;
                              return C(
                                vn,
                                {
                                  name: "fade-in-transition",
                                  key: "mask",
                                  appear:
                                    (r = this.internalAppear) !== null &&
                                    r !== void 0
                                      ? r
                                      : this.isMounted,
                                },
                                {
                                  default: () =>
                                    this.show
                                      ? C("div", {
                                          "aria-hidden": !0,
                                          ref: "containerRef",
                                          class: `${t}-modal-mask`,
                                          onClick: this.handleClickoutside,
                                        })
                                      : null,
                                }
                              );
                            }
                          : void 0,
                      }
                    ),
                    this.$slots
                  )
                ),
                [[Hu, { zIndex: this.zIndex, enabled: this.show }]]
              );
            },
          }
        );
      },
    }),
    M8 = Object.assign(Object.assign({}, ed), {
      onAfterEnter: Function,
      onAfterLeave: Function,
      transformOrigin: String,
      blockScroll: { type: Boolean, default: !0 },
      closeOnEsc: { type: Boolean, default: !0 },
      onEsc: Function,
      autoFocus: { type: Boolean, default: !0 },
      internalStyle: [String, Object],
      maskClosable: { type: Boolean, default: !0 },
      onPositiveClick: Function,
      onNegativeClick: Function,
      onClose: Function,
      onMaskClick: Function,
    }),
    L8 = $e({
      name: "DialogEnvironment",
      props: Object.assign(Object.assign({}, M8), {
        internalKey: { type: String, required: !0 },
        to: [String, Object],
        onInternalAfterLeave: { type: Function, required: !0 },
      }),
      setup(t) {
        const e = U(!0);
        function n() {
          const {
            onInternalAfterLeave: u,
            internalKey: d,
            onAfterLeave: h,
          } = t;
          u && u(d), h && h();
        }
        function r(u) {
          const { onPositiveClick: d } = t;
          d
            ? Promise.resolve(d(u)).then((h) => {
                h !== !1 && l();
              })
            : l();
        }
        function i(u) {
          const { onNegativeClick: d } = t;
          d
            ? Promise.resolve(d(u)).then((h) => {
                h !== !1 && l();
              })
            : l();
        }
        function o() {
          const { onClose: u } = t;
          u
            ? Promise.resolve(u()).then((d) => {
                d !== !1 && l();
              })
            : l();
        }
        function s(u) {
          const { onMaskClick: d, maskClosable: h } = t;
          d && (d(u), h && l());
        }
        function a() {
          const { onEsc: u } = t;
          u && u();
        }
        function l() {
          e.value = !1;
        }
        function c(u) {
          e.value = u;
        }
        return {
          show: e,
          hide: l,
          handleUpdateShow: c,
          handleAfterLeave: n,
          handleCloseClick: o,
          handleNegativeClick: i,
          handlePositiveClick: r,
          handleMaskClick: s,
          handleEsc: a,
        };
      },
      render() {
        const {
          handlePositiveClick: t,
          handleUpdateShow: e,
          handleNegativeClick: n,
          handleCloseClick: r,
          handleAfterLeave: i,
          handleMaskClick: o,
          handleEsc: s,
          to: a,
          maskClosable: l,
          show: c,
        } = this;
        return C(
          O8,
          {
            show: c,
            onUpdateShow: e,
            onMaskClick: o,
            onEsc: s,
            to: a,
            maskClosable: l,
            onAfterEnter: this.onAfterEnter,
            onAfterLeave: i,
            closeOnEsc: this.closeOnEsc,
            blockScroll: this.blockScroll,
            autoFocus: this.autoFocus,
            transformOrigin: this.transformOrigin,
            internalAppear: !0,
            internalDialog: !0,
          },
          {
            default: () =>
              C(
                vC,
                Object.assign({}, Bs(this.$props, mC), {
                  style: this.internalStyle,
                  onClose: r,
                  onNegativeClick: n,
                  onPositiveClick: t,
                })
              ),
          }
        );
      },
    }),
    $8 = { injectionKey: String, to: [String, Object] },
    D8 = $e({
      name: "DialogProvider",
      props: $8,
      setup() {
        const t = U([]),
          e = {};
        function n(a = {}) {
          const l = Ui(),
            c = Zi(
              Object.assign(Object.assign({}, a), {
                key: l,
                destroy: () => {
                  e[`n-dialog-${l}`].hide();
                },
              })
            );
          return t.value.push(c), c;
        }
        const r = ["info", "success", "warning", "error"].map(
          (a) => (l) => n(Object.assign(Object.assign({}, l), { type: a }))
        );
        function i(a) {
          const { value: l } = t;
          l.splice(
            l.findIndex((c) => c.key === a),
            1
          );
        }
        function o() {
          Object.values(e).forEach((a) => {
            a.hide();
          });
        }
        const s = {
          create: n,
          destroyAll: o,
          info: r[0],
          success: r[1],
          warning: r[2],
          error: r[3],
        };
        return (
          vt(w8, s),
          vt(bC, { clickedRef: Cy(64), clickPositionRef: xy() }),
          vt(S8, t),
          Object.assign(Object.assign({}, s), {
            dialogList: t,
            dialogInstRefs: e,
            handleAfterLeave: i,
          })
        );
      },
      render() {
        var t, e;
        return C(pt, null, [
          this.dialogList.map((n) =>
            C(
              L8,
              zu(n, ["destroy", "style"], {
                internalStyle: n.style,
                to: this.to,
                ref: (r) => {
                  r === null
                    ? delete this.dialogInstRefs[`n-dialog-${n.key}`]
                    : (this.dialogInstRefs[`n-dialog-${n.key}`] = r);
                },
                internalKey: n.key,
                onInternalAfterLeave: this.handleAfterLeave,
              })
            )
          ),
          (e = (t = this.$slots).default) === null || e === void 0
            ? void 0
            : e.call(t),
        ]);
      },
    }),
    z8 = (t) => {
      const { textColor1: e, dividerColor: n, fontWeightStrong: r } = t;
      return { textColor: e, color: n, fontWeight: r };
    },
    F8 = { name: "Divider", common: Oe, self: z8 },
    B8 = F8,
    N8 = (t) => {
      const {
        modalColor: e,
        textColor1: n,
        textColor2: r,
        boxShadow3: i,
        lineHeight: o,
        fontWeightStrong: s,
        dividerColor: a,
        closeColorHover: l,
        closeColorPressed: c,
        closeIconColor: u,
        closeIconColorHover: d,
        closeIconColorPressed: h,
        borderRadius: g,
        primaryColorHover: f,
      } = t;
      return {
        bodyPadding: "16px 24px",
        headerPadding: "16px 24px",
        footerPadding: "16px 24px",
        color: e,
        textColor: r,
        titleTextColor: n,
        titleFontSize: "18px",
        titleFontWeight: s,
        boxShadow: i,
        lineHeight: o,
        headerBorderBottom: `1px solid ${a}`,
        footerBorderTop: `1px solid ${a}`,
        closeIconColor: u,
        closeIconColorHover: d,
        closeIconColorPressed: h,
        closeSize: "22px",
        closeIconSize: "18px",
        closeColorHover: l,
        closeColorPressed: c,
        closeBorderRadius: g,
        resizableTriggerColorHover: f,
      };
    },
    H8 = { name: "Drawer", common: Oe, peers: { Scrollbar: jn }, self: N8 },
    W8 = H8,
    j8 = { actionMargin: "0 0 0 20px", actionMarginRtl: "0 20px 0 0" },
    U8 = {
      name: "DynamicInput",
      common: Oe,
      peers: { Input: hr, Button: Un },
      self() {
        return j8;
      },
    },
    V8 = U8,
    xC = { gapSmall: "4px 8px", gapMedium: "8px 12px", gapLarge: "12px 16px" },
    G8 = {
      name: "Space",
      self() {
        return xC;
      },
    },
    CC = G8,
    X8 = () => xC,
    K8 = { name: "Space", self: X8 },
    _C = K8;
  let fh;
  const Y8 = () => {
      if (!Ji) return !0;
      if (fh === void 0) {
        const t = document.createElement("div");
        (t.style.display = "flex"),
          (t.style.flexDirection = "column"),
          (t.style.rowGap = "1px"),
          t.appendChild(document.createElement("div")),
          t.appendChild(document.createElement("div")),
          document.body.appendChild(t);
        const e = t.scrollHeight === 1;
        return document.body.removeChild(t), (fh = e);
      }
      return fh;
    },
    q8 = Object.assign(Object.assign({}, Ye.props), {
      align: String,
      justify: { type: String, default: "start" },
      inline: Boolean,
      vertical: Boolean,
      reverse: Boolean,
      size: { type: [String, Number, Array], default: "medium" },
      wrapItem: { type: Boolean, default: !0 },
      itemClass: String,
      itemStyle: [String, Object],
      wrap: { type: Boolean, default: !0 },
      internalUseGap: { type: Boolean, default: void 0 },
    }),
    Qo = $e({
      name: "Space",
      props: q8,
      setup(t) {
        const { mergedClsPrefixRef: e, mergedRtlRef: n } = Ct(t),
          r = Ye("Space", "-space", void 0, _C, t, e),
          i = Cr("Space", n, e);
        return {
          useGap: Y8(),
          rtlEnabled: i,
          mergedClsPrefix: e,
          margin: ce(() => {
            const { size: o } = t;
            if (Array.isArray(o)) return { horizontal: o[0], vertical: o[1] };
            if (typeof o == "number") return { horizontal: o, vertical: o };
            const {
                self: { [Te("gap", o)]: s },
              } = r.value,
              { row: a, col: l } = eT(s);
            return { horizontal: kn(l), vertical: kn(a) };
          }),
        };
      },
      render() {
        const {
            vertical: t,
            reverse: e,
            align: n,
            inline: r,
            justify: i,
            itemClass: o,
            itemStyle: s,
            margin: a,
            wrap: l,
            mergedClsPrefix: c,
            rtlEnabled: u,
            useGap: d,
            wrapItem: h,
            internalUseGap: g,
          } = this,
          f = Hi(ly(this), !1);
        if (!f.length) return null;
        const p = `${a.horizontal}px`,
          b = `${a.horizontal / 2}px`,
          m = `${a.vertical}px`,
          _ = `${a.vertical / 2}px`,
          R = f.length - 1,
          S = i.startsWith("space-");
        return C(
          "div",
          {
            role: "none",
            class: [`${c}-space`, u && `${c}-space--rtl`],
            style: {
              display: r ? "inline-flex" : "flex",
              flexDirection:
                t && !e
                  ? "column"
                  : t && e
                  ? "column-reverse"
                  : !t && e
                  ? "row-reverse"
                  : "row",
              justifyContent: ["start", "end"].includes(i) ? "flex-" + i : i,
              flexWrap: !l || t ? "nowrap" : "wrap",
              marginTop: d || t ? "" : `-${_}`,
              marginBottom: d || t ? "" : `-${_}`,
              alignItems: n,
              gap: d ? `${a.vertical}px ${a.horizontal}px` : "",
            },
          },
          !h && (d || g)
            ? f
            : f.map((x, E) =>
                x.type === Rn
                  ? x
                  : C(
                      "div",
                      {
                        role: "none",
                        class: o,
                        style: [
                          s,
                          { maxWidth: "100%" },
                          d
                            ? ""
                            : t
                            ? { marginBottom: E !== R ? m : "" }
                            : u
                            ? {
                                marginLeft: S
                                  ? i === "space-between" && E === R
                                    ? ""
                                    : b
                                  : E !== R
                                  ? p
                                  : "",
                                marginRight: S
                                  ? i === "space-between" && E === 0
                                    ? ""
                                    : b
                                  : "",
                                paddingTop: _,
                                paddingBottom: _,
                              }
                            : {
                                marginRight: S
                                  ? i === "space-between" && E === R
                                    ? ""
                                    : b
                                  : E !== R
                                  ? p
                                  : "",
                                marginLeft: S
                                  ? i === "space-between" && E === 0
                                    ? ""
                                    : b
                                  : "",
                                paddingTop: _,
                                paddingBottom: _,
                              },
                        ],
                      },
                      x
                    )
              )
        );
      },
    }),
    Z8 = {
      name: "DynamicTags",
      common: Oe,
      peers: { Input: hr, Button: Un, Tag: Wx, Space: CC },
      self() {
        return { inputWidth: "64px" };
      },
    },
    J8 = Z8,
    Q8 = {
      name: "DynamicTags",
      common: Ut,
      peers: { Input: Bg, Button: Zu, Tag: jx, Space: _C },
      self() {
        return { inputWidth: "64px" };
      },
    },
    e4 = Q8,
    t4 = M("dynamic-tags", [M("input", { minWidth: "var(--n-input-width)" })]),
    n4 = Object.assign(Object.assign(Object.assign({}, Ye.props), Ux), {
      size: { type: String, default: "medium" },
      closable: { type: Boolean, default: !0 },
      defaultValue: { type: Array, default: () => [] },
      value: Array,
      inputClass: String,
      inputStyle: [String, Object],
      inputProps: Object,
      max: Number,
      tagClass: String,
      tagStyle: [String, Object],
      renderTag: Function,
      onCreate: { type: Function, default: (t) => t },
      "onUpdate:value": [Function, Array],
      onUpdateValue: [Function, Array],
      onChange: [Function, Array],
    }),
    td = $e({
      name: "DynamicTags",
      props: n4,
      setup(t) {
        const { mergedClsPrefixRef: e, inlineThemeDisabled: n } = Ct(t),
          { localeRef: r } = Xu("DynamicTags"),
          i = eo(t),
          { mergedDisabledRef: o } = i,
          s = U(""),
          a = U(!1),
          l = U(!0),
          c = U(null),
          u = Ye("DynamicTags", "-dynamic-tags", t4, e4, t, e),
          d = U(t.defaultValue),
          h = We(t, "value"),
          g = li(h, d),
          f = ce(() => r.value.add),
          p = ce(() => uT(t.size)),
          b = ce(() => o.value || (!!t.max && g.value.length >= t.max));
        function m(y) {
          const { onChange: T, "onUpdate:value": A, onUpdateValue: I } = t,
            { nTriggerFormInput: L, nTriggerFormChange: j } = i;
          T && Ke(T, y), I && Ke(I, y), A && Ke(A, y), (d.value = y), L(), j();
        }
        function _(y) {
          const T = g.value.slice(0);
          T.splice(y, 1), m(T);
        }
        function R(y) {
          switch (y.key) {
            case "Enter":
              S();
          }
        }
        function S(y) {
          const T = y ?? s.value;
          if (T) {
            const A = g.value.slice(0);
            A.push(t.onCreate(T)), m(A);
          }
          (a.value = !1), (l.value = !0), (s.value = "");
        }
        function x() {
          S();
        }
        function E() {
          (a.value = !0),
            Ht(() => {
              var y;
              (y = c.value) === null || y === void 0 || y.focus(),
                (l.value = !1);
            });
        }
        const w = ce(() => {
            const {
              self: { inputWidth: y },
            } = u.value;
            return { "--n-input-width": y };
          }),
          v = n ? jt("dynamic-tags", void 0, w, t) : void 0;
        return {
          mergedClsPrefix: e,
          inputInstRef: c,
          localizedAdd: f,
          inputSize: p,
          inputValue: s,
          showInput: a,
          inputForceFocused: l,
          mergedValue: g,
          mergedDisabled: o,
          triggerDisabled: b,
          handleInputKeyDown: R,
          handleAddClick: E,
          handleInputBlur: x,
          handleCloseClick: _,
          handleInputConfirm: S,
          mergedTheme: u,
          cssVars: n ? void 0 : w,
          themeClass: v == null ? void 0 : v.themeClass,
          onRender: v == null ? void 0 : v.onRender,
        };
      },
      render() {
        const {
          mergedTheme: t,
          cssVars: e,
          mergedClsPrefix: n,
          onRender: r,
          renderTag: i,
        } = this;
        return (
          r == null || r(),
          C(
            Qo,
            {
              class: [`${n}-dynamic-tags`, this.themeClass],
              size: "small",
              style: e,
              theme: t.peers.Space,
              themeOverrides: t.peerOverrides.Space,
              itemStyle: "display: flex;",
            },
            {
              default: () => {
                const {
                  mergedTheme: o,
                  tagClass: s,
                  tagStyle: a,
                  type: l,
                  round: c,
                  size: u,
                  color: d,
                  closable: h,
                  mergedDisabled: g,
                  showInput: f,
                  inputValue: p,
                  inputClass: b,
                  inputStyle: m,
                  inputSize: _,
                  inputForceFocused: R,
                  triggerDisabled: S,
                  handleInputKeyDown: x,
                  handleInputBlur: E,
                  handleAddClick: w,
                  handleCloseClick: v,
                  handleInputConfirm: y,
                  $slots: T,
                } = this;
                return this.mergedValue
                  .map((A, I) =>
                    i
                      ? i(A, I)
                      : C(
                          zg,
                          {
                            key: I,
                            theme: o.peers.Tag,
                            themeOverrides: o.peerOverrides.Tag,
                            class: s,
                            style: a,
                            type: l,
                            round: c,
                            size: u,
                            color: d,
                            closable: h,
                            disabled: g,
                            onClose: () => {
                              v(I);
                            },
                          },
                          {
                            default: () => (typeof A == "string" ? A : A.label),
                          }
                        )
                  )
                  .concat(
                    f
                      ? T.input
                        ? T.input({ submit: y, deactivate: E })
                        : C(
                            qu,
                            Object.assign(
                              {
                                placeholder: "",
                                size: _,
                                style: m,
                                class: b,
                                autosize: !0,
                              },
                              this.inputProps,
                              {
                                ref: "inputInstRef",
                                value: p,
                                onUpdateValue: (A) => {
                                  this.inputValue = A;
                                },
                                theme: o.peers.Input,
                                themeOverrides: o.peerOverrides.Input,
                                onKeydown: x,
                                onBlur: E,
                                internalForceFocus: R,
                              }
                            )
                          )
                      : T.trigger
                      ? T.trigger({ activate: w, disabled: S })
                      : C(
                          Xn,
                          {
                            dashed: !0,
                            disabled: S,
                            theme: o.peers.Button,
                            themeOverrides: o.peerOverrides.Button,
                            size: _,
                            onClick: w,
                          },
                          {
                            icon: () =>
                              C(
                                ht,
                                { clsPrefix: n },
                                { default: () => C(Lg, null) }
                              ),
                          }
                        )
                  );
              },
            }
          )
        );
      },
    }),
    r4 = { name: "Element", common: Oe },
    i4 = r4,
    o4 = { gapSmall: "4px 8px", gapMedium: "8px 12px", gapLarge: "12px 16px" },
    s4 = {
      name: "Flex",
      self() {
        return o4;
      },
    },
    a4 = s4,
    l4 = {
      feedbackPadding: "4px 0 0 2px",
      feedbackHeightSmall: "24px",
      feedbackHeightMedium: "24px",
      feedbackHeightLarge: "26px",
      feedbackFontSizeSmall: "13px",
      feedbackFontSizeMedium: "14px",
      feedbackFontSizeLarge: "14px",
      labelFontSizeLeftSmall: "14px",
      labelFontSizeLeftMedium: "14px",
      labelFontSizeLeftLarge: "15px",
      labelFontSizeTopSmall: "13px",
      labelFontSizeTopMedium: "14px",
      labelFontSizeTopLarge: "14px",
      labelHeightSmall: "24px",
      labelHeightMedium: "26px",
      labelHeightLarge: "28px",
      labelPaddingVertical: "0 0 6px 2px",
      labelPaddingHorizontal: "0 12px 0 0",
      labelTextAlignVertical: "left",
      labelTextAlignHorizontal: "right",
      labelFontWeight: "400",
    },
    c4 = (t) => {
      const {
        heightSmall: e,
        heightMedium: n,
        heightLarge: r,
        textColor1: i,
        errorColor: o,
        warningColor: s,
        lineHeight: a,
        textColor3: l,
      } = t;
      return Object.assign(Object.assign({}, l4), {
        blankHeightSmall: e,
        blankHeightMedium: n,
        blankHeightLarge: r,
        lineHeight: a,
        labelTextColor: i,
        asteriskColor: o,
        feedbackTextColorError: o,
        feedbackTextColorWarning: s,
        feedbackTextColor: l,
      });
    },
    u4 = { name: "Form", common: Oe, self: c4 },
    d4 = u4,
    h4 = {
      name: "GradientText",
      common: Oe,
      self(t) {
        const {
          primaryColor: e,
          successColor: n,
          warningColor: r,
          errorColor: i,
          infoColor: o,
          primaryColorSuppl: s,
          successColorSuppl: a,
          warningColorSuppl: l,
          errorColorSuppl: c,
          infoColorSuppl: u,
          fontWeightStrong: d,
        } = t;
        return {
          fontWeight: d,
          rotate: "252deg",
          colorStartPrimary: e,
          colorEndPrimary: s,
          colorStartInfo: o,
          colorEndInfo: u,
          colorStartWarning: r,
          colorEndWarning: l,
          colorStartError: i,
          colorEndError: c,
          colorStartSuccess: n,
          colorEndSuccess: a,
        };
      },
    },
    f4 = h4,
    g4 = (t) => {
      const { primaryColor: e, baseColor: n } = t;
      return { color: e, iconColor: n };
    },
    p4 = { name: "IconWrapper", common: Oe, self: g4 },
    m4 = p4,
    Ug = Object.assign(Object.assign({}, Ye.props), {
      onPreviewPrev: Function,
      onPreviewNext: Function,
      showToolbar: { type: Boolean, default: !0 },
      showToolbarTooltip: Boolean,
    }),
    wC = "n-image";
  function v4() {
    return {
      toolbarIconColor: "rgba(255, 255, 255, .9)",
      toolbarColor: "rgba(0, 0, 0, .35)",
      toolbarBoxShadow: "none",
      toolbarBorderRadius: "24px",
    };
  }
  const b4 = { name: "Image", common: Ut, peers: { Tooltip: aC }, self: v4 },
    y4 = {
      closeMargin: "16px 12px",
      closeSize: "20px",
      closeIconSize: "16px",
      width: "365px",
      padding: "16px",
      titleFontSize: "16px",
      metaFontSize: "12px",
      descriptionFontSize: "12px",
    },
    SC = (t) => {
      const {
        textColor2: e,
        successColor: n,
        infoColor: r,
        warningColor: i,
        errorColor: o,
        popoverColor: s,
        closeIconColor: a,
        closeIconColorHover: l,
        closeIconColorPressed: c,
        closeColorHover: u,
        closeColorPressed: d,
        textColor1: h,
        textColor3: g,
        borderRadius: f,
        fontWeightStrong: p,
        boxShadow2: b,
        lineHeight: m,
        fontSize: _,
      } = t;
      return Object.assign(Object.assign({}, y4), {
        borderRadius: f,
        lineHeight: m,
        fontSize: _,
        headerFontWeight: p,
        iconColor: e,
        iconColorSuccess: n,
        iconColorInfo: r,
        iconColorWarning: i,
        iconColorError: o,
        color: s,
        textColor: e,
        closeIconColor: a,
        closeIconColorHover: l,
        closeIconColorPressed: c,
        closeBorderRadius: f,
        closeColorHover: u,
        closeColorPressed: d,
        headerTextColor: h,
        descriptionTextColor: g,
        actionTextColor: e,
        boxShadow: b,
      });
    },
    x4 = {
      name: "Notification",
      common: Ut,
      peers: { Scrollbar: Yu },
      self: SC,
    },
    C4 = x4,
    _4 = {
      name: "Notification",
      common: Oe,
      peers: { Scrollbar: jn },
      self: SC,
    },
    w4 = _4,
    S4 = {
      margin: "0 0 8px 0",
      padding: "10px 20px",
      maxWidth: "720px",
      minWidth: "420px",
      iconMargin: "0 10px 0 0",
      closeMargin: "0 0 0 10px",
      closeSize: "20px",
      closeIconSize: "16px",
      iconSize: "20px",
      fontSize: "14px",
    },
    EC = (t) => {
      const {
        textColor2: e,
        closeIconColor: n,
        closeIconColorHover: r,
        closeIconColorPressed: i,
        infoColor: o,
        successColor: s,
        errorColor: a,
        warningColor: l,
        popoverColor: c,
        boxShadow2: u,
        primaryColor: d,
        lineHeight: h,
        borderRadius: g,
        closeColorHover: f,
        closeColorPressed: p,
      } = t;
      return Object.assign(Object.assign({}, S4), {
        closeBorderRadius: g,
        textColor: e,
        textColorInfo: e,
        textColorSuccess: e,
        textColorError: e,
        textColorWarning: e,
        textColorLoading: e,
        color: c,
        colorInfo: c,
        colorSuccess: c,
        colorError: c,
        colorWarning: c,
        colorLoading: c,
        boxShadow: u,
        boxShadowInfo: u,
        boxShadowSuccess: u,
        boxShadowError: u,
        boxShadowWarning: u,
        boxShadowLoading: u,
        iconColor: e,
        iconColorInfo: o,
        iconColorSuccess: s,
        iconColorWarning: l,
        iconColorError: a,
        iconColorLoading: d,
        closeColorHover: f,
        closeColorPressed: p,
        closeIconColor: n,
        closeIconColorHover: r,
        closeIconColorPressed: i,
        closeColorHoverInfo: f,
        closeColorPressedInfo: p,
        closeIconColorInfo: n,
        closeIconColorHoverInfo: r,
        closeIconColorPressedInfo: i,
        closeColorHoverSuccess: f,
        closeColorPressedSuccess: p,
        closeIconColorSuccess: n,
        closeIconColorHoverSuccess: r,
        closeIconColorPressedSuccess: i,
        closeColorHoverError: f,
        closeColorPressedError: p,
        closeIconColorError: n,
        closeIconColorHoverError: r,
        closeIconColorPressedError: i,
        closeColorHoverWarning: f,
        closeColorPressedWarning: p,
        closeIconColorWarning: n,
        closeIconColorHoverWarning: r,
        closeIconColorPressedWarning: i,
        closeColorHoverLoading: f,
        closeColorPressedLoading: p,
        closeIconColorLoading: n,
        closeIconColorHoverLoading: r,
        closeIconColorPressedLoading: i,
        loadingColor: d,
        lineHeight: h,
        borderRadius: g,
      });
    },
    E4 = { name: "Message", common: Ut, self: EC },
    R4 = E4,
    T4 = { name: "Message", common: Oe, self: EC },
    P4 = T4,
    A4 = { name: "ButtonGroup", common: Oe },
    k4 = A4,
    I4 = {
      name: "InputNumber",
      common: Oe,
      peers: { Button: Un, Input: hr },
      self(t) {
        const { textColorDisabled: e } = t;
        return { iconColorDisabled: e };
      },
    },
    O4 = I4,
    M4 = {
      name: "Layout",
      common: Oe,
      peers: { Scrollbar: jn },
      self(t) {
        const {
          textColor2: e,
          bodyColor: n,
          popoverColor: r,
          cardColor: i,
          dividerColor: o,
          scrollbarColor: s,
          scrollbarColorHover: a,
        } = t;
        return {
          textColor: e,
          textColorInverted: e,
          color: n,
          colorEmbedded: n,
          headerColor: i,
          headerColorInverted: i,
          footerColor: i,
          footerColorInverted: i,
          headerBorderColor: o,
          headerBorderColorInverted: o,
          footerBorderColor: o,
          footerBorderColorInverted: o,
          siderBorderColor: o,
          siderBorderColorInverted: o,
          siderColor: i,
          siderColorInverted: i,
          siderToggleButtonBorder: "1px solid transparent",
          siderToggleButtonColor: r,
          siderToggleButtonIconColor: e,
          siderToggleButtonIconColorInverted: e,
          siderToggleBarColor: Ue(n, s),
          siderToggleBarColorHover: Ue(n, a),
          __invertScrollbar: "false",
        };
      },
    },
    L4 = M4,
    $4 = (t) => {
      const {
        textColor2: e,
        cardColor: n,
        modalColor: r,
        popoverColor: i,
        dividerColor: o,
        borderRadius: s,
        fontSize: a,
        hoverColor: l,
      } = t;
      return {
        textColor: e,
        color: n,
        colorHover: l,
        colorModal: r,
        colorHoverModal: Ue(r, l),
        colorPopover: i,
        colorHoverPopover: Ue(i, l),
        borderColor: o,
        borderColorModal: Ue(r, o),
        borderColorPopover: Ue(i, o),
        borderRadius: s,
        fontSize: a,
      };
    },
    D4 = { name: "List", common: Oe, self: $4 },
    z4 = D4,
    F4 = {
      name: "LoadingBar",
      common: Oe,
      self(t) {
        const { primaryColor: e } = t;
        return { colorError: "red", colorLoading: e, height: "2px" };
      },
    },
    B4 = F4,
    N4 = (t) => {
      const { primaryColor: e, errorColor: n } = t;
      return { colorError: n, colorLoading: e, height: "2px" };
    },
    H4 = { name: "LoadingBar", common: Ut, self: N4 },
    W4 = H4,
    j4 = {
      name: "Log",
      common: Oe,
      peers: { Scrollbar: jn, Code: nC },
      self(t) {
        const {
          textColor2: e,
          inputColor: n,
          fontSize: r,
          primaryColor: i,
        } = t;
        return {
          loaderFontSize: r,
          loaderTextColor: e,
          loaderColor: n,
          loaderBorder: "1px solid #0000",
          loadingColor: i,
        };
      },
    },
    U4 = j4,
    V4 = {
      name: "Mention",
      common: Oe,
      peers: { InternalSelectMenu: $l, Input: hr },
      self(t) {
        const { boxShadow2: e } = t;
        return { menuBoxShadow: e };
      },
    },
    G4 = V4;
  function X4(t, e, n, r) {
    return {
      itemColorHoverInverted: "#0000",
      itemColorActiveInverted: e,
      itemColorActiveHoverInverted: e,
      itemColorActiveCollapsedInverted: e,
      itemTextColorInverted: t,
      itemTextColorHoverInverted: n,
      itemTextColorChildActiveInverted: n,
      itemTextColorChildActiveHoverInverted: n,
      itemTextColorActiveInverted: n,
      itemTextColorActiveHoverInverted: n,
      itemTextColorHorizontalInverted: t,
      itemTextColorHoverHorizontalInverted: n,
      itemTextColorChildActiveHorizontalInverted: n,
      itemTextColorChildActiveHoverHorizontalInverted: n,
      itemTextColorActiveHorizontalInverted: n,
      itemTextColorActiveHoverHorizontalInverted: n,
      itemIconColorInverted: t,
      itemIconColorHoverInverted: n,
      itemIconColorActiveInverted: n,
      itemIconColorActiveHoverInverted: n,
      itemIconColorChildActiveInverted: n,
      itemIconColorChildActiveHoverInverted: n,
      itemIconColorCollapsedInverted: t,
      itemIconColorHorizontalInverted: t,
      itemIconColorHoverHorizontalInverted: n,
      itemIconColorActiveHorizontalInverted: n,
      itemIconColorActiveHoverHorizontalInverted: n,
      itemIconColorChildActiveHorizontalInverted: n,
      itemIconColorChildActiveHoverHorizontalInverted: n,
      arrowColorInverted: t,
      arrowColorHoverInverted: n,
      arrowColorActiveInverted: n,
      arrowColorActiveHoverInverted: n,
      arrowColorChildActiveInverted: n,
      arrowColorChildActiveHoverInverted: n,
      groupTextColorInverted: r,
    };
  }
  const K4 = (t) => {
      const {
        borderRadius: e,
        textColor3: n,
        primaryColor: r,
        textColor2: i,
        textColor1: o,
        fontSize: s,
        dividerColor: a,
        hoverColor: l,
        primaryColorHover: c,
      } = t;
      return Object.assign(
        {
          borderRadius: e,
          color: "#0000",
          groupTextColor: n,
          itemColorHover: l,
          itemColorActive: Ae(r, { alpha: 0.1 }),
          itemColorActiveHover: Ae(r, { alpha: 0.1 }),
          itemColorActiveCollapsed: Ae(r, { alpha: 0.1 }),
          itemTextColor: i,
          itemTextColorHover: i,
          itemTextColorActive: r,
          itemTextColorActiveHover: r,
          itemTextColorChildActive: r,
          itemTextColorChildActiveHover: r,
          itemTextColorHorizontal: i,
          itemTextColorHoverHorizontal: c,
          itemTextColorActiveHorizontal: r,
          itemTextColorActiveHoverHorizontal: r,
          itemTextColorChildActiveHorizontal: r,
          itemTextColorChildActiveHoverHorizontal: r,
          itemIconColor: o,
          itemIconColorHover: o,
          itemIconColorActive: r,
          itemIconColorActiveHover: r,
          itemIconColorChildActive: r,
          itemIconColorChildActiveHover: r,
          itemIconColorCollapsed: o,
          itemIconColorHorizontal: o,
          itemIconColorHoverHorizontal: c,
          itemIconColorActiveHorizontal: r,
          itemIconColorActiveHoverHorizontal: r,
          itemIconColorChildActiveHorizontal: r,
          itemIconColorChildActiveHoverHorizontal: r,
          itemHeight: "42px",
          arrowColor: i,
          arrowColorHover: i,
          arrowColorActive: r,
          arrowColorActiveHover: r,
          arrowColorChildActive: r,
          arrowColorChildActiveHover: r,
          colorInverted: "#0000",
          borderColorHorizontal: "#0000",
          fontSize: s,
          dividerColor: a,
        },
        X4("#BBB", r, "#FFF", "#AAA")
      );
    },
    Y4 = {
      name: "Menu",
      common: Oe,
      peers: { Tooltip: Qu, Dropdown: Wg },
      self(t) {
        const { primaryColor: e, primaryColorSuppl: n } = t,
          r = K4(t);
        return (
          (r.itemColorActive = Ae(e, { alpha: 0.15 })),
          (r.itemColorActiveHover = Ae(e, { alpha: 0.15 })),
          (r.itemColorActiveCollapsed = Ae(e, { alpha: 0.15 })),
          (r.itemColorActiveInverted = n),
          (r.itemColorActiveHoverInverted = n),
          (r.itemColorActiveCollapsedInverted = n),
          r
        );
      },
    },
    q4 = Y4,
    Z4 = { titleFontSize: "18px", backSize: "22px" };
  function J4(t) {
    const {
      textColor1: e,
      textColor2: n,
      textColor3: r,
      fontSize: i,
      fontWeightStrong: o,
      primaryColorHover: s,
      primaryColorPressed: a,
    } = t;
    return Object.assign(Object.assign({}, Z4), {
      titleFontWeight: o,
      fontSize: i,
      titleTextColor: e,
      backColor: n,
      backColorHover: s,
      backColorPressed: a,
      subtitleTextColor: r,
    });
  }
  const Q4 = { name: "PageHeader", common: Oe, self: J4 },
    ez = { iconSize: "22px" },
    tz = (t) => {
      const { fontSize: e, warningColor: n } = t;
      return Object.assign(Object.assign({}, ez), {
        fontSize: e,
        iconColor: n,
      });
    },
    nz = {
      name: "Popconfirm",
      common: Oe,
      peers: { Button: Un, Popover: Zo },
      self: tz,
    },
    rz = nz,
    RC = (t) => {
      const {
        infoColor: e,
        successColor: n,
        warningColor: r,
        errorColor: i,
        textColor2: o,
        progressRailColor: s,
        fontSize: a,
        fontWeight: l,
      } = t;
      return {
        fontSize: a,
        fontSizeCircle: "28px",
        fontWeightCircle: l,
        railColor: s,
        railHeight: "8px",
        iconSizeCircle: "36px",
        iconSizeLine: "18px",
        iconColor: e,
        iconColorInfo: e,
        iconColorSuccess: n,
        iconColorWarning: r,
        iconColorError: i,
        textColorCircle: o,
        textColorLineInner: "rgb(255, 255, 255)",
        textColorLineOuter: o,
        fillColor: e,
        fillColorInfo: e,
        fillColorSuccess: n,
        fillColorWarning: r,
        fillColorError: i,
        lineBgProcessing:
          "linear-gradient(90deg, rgba(255, 255, 255, .3) 0%, rgba(255, 255, 255, .5) 100%)",
      };
    },
    iz = { name: "Progress", common: Ut, self: RC },
    TC = iz,
    oz = {
      name: "Progress",
      common: Oe,
      self(t) {
        const e = RC(t);
        return (
          (e.textColorLineInner = "rgb(0, 0, 0)"),
          (e.lineBgProcessing =
            "linear-gradient(90deg, rgba(255, 255, 255, .3) 0%, rgba(255, 255, 255, .5) 100%)"),
          e
        );
      },
    },
    PC = oz,
    sz = {
      name: "Rate",
      common: Oe,
      self(t) {
        const { railColor: e } = t;
        return {
          itemColor: e,
          itemColorActive: "#CCAA33",
          itemSize: "20px",
          sizeSmall: "16px",
          sizeMedium: "20px",
          sizeLarge: "24px",
        };
      },
    },
    az = sz,
    lz = {
      titleFontSizeSmall: "26px",
      titleFontSizeMedium: "32px",
      titleFontSizeLarge: "40px",
      titleFontSizeHuge: "48px",
      fontSizeSmall: "14px",
      fontSizeMedium: "14px",
      fontSizeLarge: "15px",
      fontSizeHuge: "16px",
      iconSizeSmall: "64px",
      iconSizeMedium: "80px",
      iconSizeLarge: "100px",
      iconSizeHuge: "125px",
      iconColor418: void 0,
      iconColor404: void 0,
      iconColor403: void 0,
      iconColor500: void 0,
    },
    cz = (t) => {
      const {
        textColor2: e,
        textColor1: n,
        errorColor: r,
        successColor: i,
        infoColor: o,
        warningColor: s,
        lineHeight: a,
        fontWeightStrong: l,
      } = t;
      return Object.assign(Object.assign({}, lz), {
        lineHeight: a,
        titleFontWeight: l,
        titleTextColor: n,
        textColor: e,
        iconColorError: r,
        iconColorSuccess: i,
        iconColorInfo: o,
        iconColorWarning: s,
      });
    },
    uz = { name: "Result", common: Oe, self: cz },
    dz = uz,
    AC = {
      railHeight: "4px",
      railWidthVertical: "4px",
      handleSize: "18px",
      dotHeight: "8px",
      dotWidth: "8px",
      dotBorderRadius: "4px",
    },
    hz = {
      name: "Slider",
      common: Oe,
      self(t) {
        const e = "0 2px 8px 0 rgba(0, 0, 0, 0.12)",
          {
            railColor: n,
            modalColor: r,
            primaryColorSuppl: i,
            popoverColor: o,
            textColor2: s,
            cardColor: a,
            borderRadius: l,
            fontSize: c,
            opacityDisabled: u,
          } = t;
        return Object.assign(Object.assign({}, AC), {
          fontSize: c,
          markFontSize: c,
          railColor: n,
          railColorHover: n,
          fillColor: i,
          fillColorHover: i,
          opacityDisabled: u,
          handleColor: "#FFF",
          dotColor: a,
          dotColorModal: r,
          dotColorPopover: o,
          handleBoxShadow: "0px 2px 4px 0 rgba(0, 0, 0, 0.4)",
          handleBoxShadowHover: "0px 2px 4px 0 rgba(0, 0, 0, 0.4)",
          handleBoxShadowActive: "0px 2px 4px 0 rgba(0, 0, 0, 0.4)",
          handleBoxShadowFocus: "0px 2px 4px 0 rgba(0, 0, 0, 0.4)",
          indicatorColor: o,
          indicatorBoxShadow: e,
          indicatorTextColor: s,
          indicatorBorderRadius: l,
          dotBorder: `2px solid ${n}`,
          dotBorderActive: `2px solid ${i}`,
          dotBoxShadow: "",
        });
      },
    },
    fz = hz,
    gz = (t) => {
      const e = "rgba(0, 0, 0, .85)",
        n = "0 2px 8px 0 rgba(0, 0, 0, 0.12)",
        {
          railColor: r,
          primaryColor: i,
          baseColor: o,
          cardColor: s,
          modalColor: a,
          popoverColor: l,
          borderRadius: c,
          fontSize: u,
          opacityDisabled: d,
        } = t;
      return Object.assign(Object.assign({}, AC), {
        fontSize: u,
        markFontSize: u,
        railColor: r,
        railColorHover: r,
        fillColor: i,
        fillColorHover: i,
        opacityDisabled: d,
        handleColor: "#FFF",
        dotColor: s,
        dotColorModal: a,
        dotColorPopover: l,
        handleBoxShadow:
          "0 1px 4px 0 rgba(0, 0, 0, 0.3), inset 0 0 1px 0 rgba(0, 0, 0, 0.05)",
        handleBoxShadowHover:
          "0 1px 4px 0 rgba(0, 0, 0, 0.3), inset 0 0 1px 0 rgba(0, 0, 0, 0.05)",
        handleBoxShadowActive:
          "0 1px 4px 0 rgba(0, 0, 0, 0.3), inset 0 0 1px 0 rgba(0, 0, 0, 0.05)",
        handleBoxShadowFocus:
          "0 1px 4px 0 rgba(0, 0, 0, 0.3), inset 0 0 1px 0 rgba(0, 0, 0, 0.05)",
        indicatorColor: e,
        indicatorBoxShadow: n,
        indicatorTextColor: o,
        indicatorBorderRadius: c,
        dotBorder: `2px solid ${r}`,
        dotBorderActive: `2px solid ${i}`,
        dotBoxShadow: "",
      });
    },
    pz = { name: "Slider", common: Ut, self: gz },
    mz = pz,
    vz = (t) => {
      const {
        opacityDisabled: e,
        heightTiny: n,
        heightSmall: r,
        heightMedium: i,
        heightLarge: o,
        heightHuge: s,
        primaryColor: a,
        fontSize: l,
      } = t;
      return {
        fontSize: l,
        textColor: a,
        sizeTiny: n,
        sizeSmall: r,
        sizeMedium: i,
        sizeLarge: o,
        sizeHuge: s,
        color: a,
        opacitySpinning: e,
      };
    },
    bz = { name: "Spin", common: Oe, self: vz },
    yz = bz,
    xz = (t) => {
      const { textColor2: e, textColor3: n, fontSize: r, fontWeight: i } = t;
      return {
        labelFontSize: r,
        labelFontWeight: i,
        valueFontWeight: i,
        valueFontSize: "24px",
        labelTextColor: n,
        valuePrefixTextColor: e,
        valueSuffixTextColor: e,
        valueTextColor: e,
      };
    },
    Cz = { name: "Statistic", common: Oe, self: xz },
    _z = Cz,
    wz = {
      stepHeaderFontSizeSmall: "14px",
      stepHeaderFontSizeMedium: "16px",
      indicatorIndexFontSizeSmall: "14px",
      indicatorIndexFontSizeMedium: "16px",
      indicatorSizeSmall: "22px",
      indicatorSizeMedium: "28px",
      indicatorIconSizeSmall: "14px",
      indicatorIconSizeMedium: "18px",
    },
    Sz = (t) => {
      const {
        fontWeightStrong: e,
        baseColor: n,
        textColorDisabled: r,
        primaryColor: i,
        errorColor: o,
        textColor1: s,
        textColor2: a,
      } = t;
      return Object.assign(Object.assign({}, wz), {
        stepHeaderFontWeight: e,
        indicatorTextColorProcess: n,
        indicatorTextColorWait: r,
        indicatorTextColorFinish: i,
        indicatorTextColorError: o,
        indicatorBorderColorProcess: i,
        indicatorBorderColorWait: r,
        indicatorBorderColorFinish: i,
        indicatorBorderColorError: o,
        indicatorColorProcess: i,
        indicatorColorWait: "#0000",
        indicatorColorFinish: "#0000",
        indicatorColorError: "#0000",
        splitorColorProcess: r,
        splitorColorWait: r,
        splitorColorFinish: i,
        splitorColorError: r,
        headerTextColorProcess: s,
        headerTextColorWait: r,
        headerTextColorFinish: r,
        headerTextColorError: o,
        descriptionTextColorProcess: a,
        descriptionTextColorWait: r,
        descriptionTextColorFinish: r,
        descriptionTextColorError: o,
      });
    },
    Ez = { name: "Steps", common: Oe, self: Sz },
    Rz = Ez,
    kC = {
      buttonHeightSmall: "14px",
      buttonHeightMedium: "18px",
      buttonHeightLarge: "22px",
      buttonWidthSmall: "14px",
      buttonWidthMedium: "18px",
      buttonWidthLarge: "22px",
      buttonWidthPressedSmall: "20px",
      buttonWidthPressedMedium: "24px",
      buttonWidthPressedLarge: "28px",
      railHeightSmall: "18px",
      railHeightMedium: "22px",
      railHeightLarge: "26px",
      railWidthSmall: "32px",
      railWidthMedium: "40px",
      railWidthLarge: "48px",
    },
    Tz = {
      name: "Switch",
      common: Oe,
      self(t) {
        const {
          primaryColorSuppl: e,
          opacityDisabled: n,
          borderRadius: r,
          primaryColor: i,
          textColor2: o,
          baseColor: s,
        } = t;
        return Object.assign(Object.assign({}, kC), {
          iconColor: s,
          textColor: o,
          loadingColor: e,
          opacityDisabled: n,
          railColor: "rgba(255, 255, 255, .20)",
          railColorActive: e,
          buttonBoxShadow: "0px 2px 4px 0 rgba(0, 0, 0, 0.4)",
          buttonColor: "#FFF",
          railBorderRadiusSmall: r,
          railBorderRadiusMedium: r,
          railBorderRadiusLarge: r,
          buttonBorderRadiusSmall: r,
          buttonBorderRadiusMedium: r,
          buttonBorderRadiusLarge: r,
          boxShadowFocus: `0 0 8px 0 ${Ae(i, { alpha: 0.3 })}`,
        });
      },
    },
    Pz = Tz,
    Az = (t) => {
      const {
        primaryColor: e,
        opacityDisabled: n,
        borderRadius: r,
        textColor3: i,
      } = t;
      return Object.assign(Object.assign({}, kC), {
        iconColor: i,
        textColor: "white",
        loadingColor: e,
        opacityDisabled: n,
        railColor: "rgba(0, 0, 0, .14)",
        railColorActive: e,
        buttonBoxShadow:
          "0 1px 4px 0 rgba(0, 0, 0, 0.3), inset 0 0 1px 0 rgba(0, 0, 0, 0.05)",
        buttonColor: "#FFF",
        railBorderRadiusSmall: r,
        railBorderRadiusMedium: r,
        railBorderRadiusLarge: r,
        buttonBorderRadiusSmall: r,
        buttonBorderRadiusMedium: r,
        buttonBorderRadiusLarge: r,
        boxShadowFocus: `0 0 0 2px ${Ae(e, { alpha: 0.2 })}`,
      });
    },
    kz = { name: "Switch", common: Ut, self: Az },
    Iz = kz,
    Oz = {
      thPaddingSmall: "6px",
      thPaddingMedium: "12px",
      thPaddingLarge: "12px",
      tdPaddingSmall: "6px",
      tdPaddingMedium: "12px",
      tdPaddingLarge: "12px",
    },
    Mz = (t) => {
      const {
        dividerColor: e,
        cardColor: n,
        modalColor: r,
        popoverColor: i,
        tableHeaderColor: o,
        tableColorStriped: s,
        textColor1: a,
        textColor2: l,
        borderRadius: c,
        fontWeightStrong: u,
        lineHeight: d,
        fontSizeSmall: h,
        fontSizeMedium: g,
        fontSizeLarge: f,
      } = t;
      return Object.assign(Object.assign({}, Oz), {
        fontSizeSmall: h,
        fontSizeMedium: g,
        fontSizeLarge: f,
        lineHeight: d,
        borderRadius: c,
        borderColor: Ue(n, e),
        borderColorModal: Ue(r, e),
        borderColorPopover: Ue(i, e),
        tdColor: n,
        tdColorModal: r,
        tdColorPopover: i,
        tdColorStriped: Ue(n, s),
        tdColorStripedModal: Ue(r, s),
        tdColorStripedPopover: Ue(i, s),
        thColor: Ue(n, o),
        thColorModal: Ue(r, o),
        thColorPopover: Ue(i, o),
        thTextColor: a,
        tdTextColor: l,
        thFontWeight: u,
      });
    },
    Lz = { name: "Table", common: Oe, self: Mz },
    $z = Lz,
    Dz = {
      tabFontSizeSmall: "14px",
      tabFontSizeMedium: "14px",
      tabFontSizeLarge: "16px",
      tabGapSmallLine: "36px",
      tabGapMediumLine: "36px",
      tabGapLargeLine: "36px",
      tabGapSmallLineVertical: "8px",
      tabGapMediumLineVertical: "8px",
      tabGapLargeLineVertical: "8px",
      tabPaddingSmallLine: "6px 0",
      tabPaddingMediumLine: "10px 0",
      tabPaddingLargeLine: "14px 0",
      tabPaddingVerticalSmallLine: "6px 12px",
      tabPaddingVerticalMediumLine: "8px 16px",
      tabPaddingVerticalLargeLine: "10px 20px",
      tabGapSmallBar: "36px",
      tabGapMediumBar: "36px",
      tabGapLargeBar: "36px",
      tabGapSmallBarVertical: "8px",
      tabGapMediumBarVertical: "8px",
      tabGapLargeBarVertical: "8px",
      tabPaddingSmallBar: "4px 0",
      tabPaddingMediumBar: "6px 0",
      tabPaddingLargeBar: "10px 0",
      tabPaddingVerticalSmallBar: "6px 12px",
      tabPaddingVerticalMediumBar: "8px 16px",
      tabPaddingVerticalLargeBar: "10px 20px",
      tabGapSmallCard: "4px",
      tabGapMediumCard: "4px",
      tabGapLargeCard: "4px",
      tabGapSmallCardVertical: "4px",
      tabGapMediumCardVertical: "4px",
      tabGapLargeCardVertical: "4px",
      tabPaddingSmallCard: "8px 16px",
      tabPaddingMediumCard: "10px 20px",
      tabPaddingLargeCard: "12px 24px",
      tabPaddingSmallSegment: "4px 0",
      tabPaddingMediumSegment: "6px 0",
      tabPaddingLargeSegment: "8px 0",
      tabPaddingVerticalLargeSegment: "0 8px",
      tabPaddingVerticalSmallCard: "8px 12px",
      tabPaddingVerticalMediumCard: "10px 16px",
      tabPaddingVerticalLargeCard: "12px 20px",
      tabPaddingVerticalSmallSegment: "0 4px",
      tabPaddingVerticalMediumSegment: "0 6px",
      tabGapSmallSegment: "0",
      tabGapMediumSegment: "0",
      tabGapLargeSegment: "0",
      tabGapSmallSegmentVertical: "0",
      tabGapMediumSegmentVertical: "0",
      tabGapLargeSegmentVertical: "0",
      panePaddingSmall: "8px 0 0 0",
      panePaddingMedium: "12px 0 0 0",
      panePaddingLarge: "16px 0 0 0",
      closeSize: "18px",
      closeIconSize: "14px",
    },
    IC = (t) => {
      const {
        textColor2: e,
        primaryColor: n,
        textColorDisabled: r,
        closeIconColor: i,
        closeIconColorHover: o,
        closeIconColorPressed: s,
        closeColorHover: a,
        closeColorPressed: l,
        tabColor: c,
        baseColor: u,
        dividerColor: d,
        fontWeight: h,
        textColor1: g,
        borderRadius: f,
        fontSize: p,
        fontWeightStrong: b,
      } = t;
      return Object.assign(Object.assign({}, Dz), {
        colorSegment: c,
        tabFontSizeCard: p,
        tabTextColorLine: g,
        tabTextColorActiveLine: n,
        tabTextColorHoverLine: n,
        tabTextColorDisabledLine: r,
        tabTextColorSegment: g,
        tabTextColorActiveSegment: e,
        tabTextColorHoverSegment: e,
        tabTextColorDisabledSegment: r,
        tabTextColorBar: g,
        tabTextColorActiveBar: n,
        tabTextColorHoverBar: n,
        tabTextColorDisabledBar: r,
        tabTextColorCard: g,
        tabTextColorHoverCard: g,
        tabTextColorActiveCard: n,
        tabTextColorDisabledCard: r,
        barColor: n,
        closeIconColor: i,
        closeIconColorHover: o,
        closeIconColorPressed: s,
        closeColorHover: a,
        closeColorPressed: l,
        closeBorderRadius: f,
        tabColor: c,
        tabColorSegment: u,
        tabBorderColor: d,
        tabFontWeightActive: h,
        tabFontWeight: h,
        tabBorderRadius: f,
        paneTextColor: e,
        fontWeightStrong: b,
      });
    },
    zz = { name: "Tabs", common: Ut, self: IC },
    Fz = zz,
    Bz = {
      name: "Tabs",
      common: Oe,
      self(t) {
        const e = IC(t),
          { inputColor: n } = t;
        return (e.colorSegment = n), (e.tabColorSegment = n), e;
      },
    },
    Nz = Bz,
    Hz = (t) => {
      const {
        textColor1: e,
        textColor2: n,
        fontWeightStrong: r,
        fontSize: i,
      } = t;
      return {
        fontSize: i,
        titleTextColor: e,
        textColor: n,
        titleFontWeight: r,
      };
    },
    Wz = { name: "Thing", common: Oe, self: Hz },
    jz = Wz,
    Uz = {
      titleMarginMedium: "0 0 6px 0",
      titleMarginLarge: "-2px 0 6px 0",
      titleFontSizeMedium: "14px",
      titleFontSizeLarge: "16px",
      iconSizeMedium: "14px",
      iconSizeLarge: "14px",
    },
    Vz = {
      name: "Timeline",
      common: Oe,
      self(t) {
        const {
          textColor3: e,
          infoColorSuppl: n,
          errorColorSuppl: r,
          successColorSuppl: i,
          warningColorSuppl: o,
          textColor1: s,
          textColor2: a,
          railColor: l,
          fontWeightStrong: c,
          fontSize: u,
        } = t;
        return Object.assign(Object.assign({}, Uz), {
          contentFontSize: u,
          titleFontWeight: c,
          circleBorder: `2px solid ${e}`,
          circleBorderInfo: `2px solid ${n}`,
          circleBorderError: `2px solid ${r}`,
          circleBorderSuccess: `2px solid ${i}`,
          circleBorderWarning: `2px solid ${o}`,
          iconColor: e,
          iconColorInfo: n,
          iconColorError: r,
          iconColorSuccess: i,
          iconColorWarning: o,
          titleTextColor: s,
          contentTextColor: a,
          metaTextColor: e,
          lineColor: l,
        });
      },
    },
    Gz = Vz,
    Xz = {
      extraFontSizeSmall: "12px",
      extraFontSizeMedium: "12px",
      extraFontSizeLarge: "14px",
      titleFontSizeSmall: "14px",
      titleFontSizeMedium: "16px",
      titleFontSizeLarge: "16px",
      closeSize: "20px",
      closeIconSize: "16px",
      headerHeightSmall: "44px",
      headerHeightMedium: "44px",
      headerHeightLarge: "50px",
    },
    Kz = {
      name: "Transfer",
      common: Oe,
      peers: { Checkbox: na, Scrollbar: jn, Input: hr, Empty: qo, Button: Un },
      self(t) {
        const {
          fontWeight: e,
          fontSizeLarge: n,
          fontSizeMedium: r,
          fontSizeSmall: i,
          heightLarge: o,
          heightMedium: s,
          borderRadius: a,
          inputColor: l,
          tableHeaderColor: c,
          textColor1: u,
          textColorDisabled: d,
          textColor2: h,
          textColor3: g,
          hoverColor: f,
          closeColorHover: p,
          closeColorPressed: b,
          closeIconColor: m,
          closeIconColorHover: _,
          closeIconColorPressed: R,
          dividerColor: S,
        } = t;
        return Object.assign(Object.assign({}, Xz), {
          itemHeightSmall: s,
          itemHeightMedium: s,
          itemHeightLarge: o,
          fontSizeSmall: i,
          fontSizeMedium: r,
          fontSizeLarge: n,
          borderRadius: a,
          dividerColor: S,
          borderColor: "#0000",
          listColor: l,
          headerColor: c,
          titleTextColor: u,
          titleTextColorDisabled: d,
          extraTextColor: g,
          extraTextColorDisabled: d,
          itemTextColor: h,
          itemTextColorDisabled: d,
          itemColorPending: f,
          titleFontWeight: e,
          closeColorHover: p,
          closeColorPressed: b,
          closeIconColor: m,
          closeIconColorHover: _,
          closeIconColorPressed: R,
        });
      },
    },
    Yz = Kz,
    qz = (t) => {
      const {
        borderRadiusSmall: e,
        dividerColor: n,
        hoverColor: r,
        pressedColor: i,
        primaryColor: o,
        textColor3: s,
        textColor2: a,
        textColorDisabled: l,
        fontSize: c,
      } = t;
      return {
        fontSize: c,
        lineHeight: "1.5",
        nodeHeight: "30px",
        nodeWrapperPadding: "3px 0",
        nodeBorderRadius: e,
        nodeColorHover: r,
        nodeColorPressed: i,
        nodeColorActive: Ae(o, { alpha: 0.1 }),
        arrowColor: s,
        nodeTextColor: a,
        nodeTextColorDisabled: l,
        loadingColor: o,
        dropMarkColor: o,
        lineColor: n,
      };
    },
    Zz = {
      name: "Tree",
      common: Oe,
      peers: { Checkbox: na, Scrollbar: jn, Empty: qo },
      self(t) {
        const { primaryColor: e } = t,
          n = qz(t);
        return (n.nodeColorActive = Ae(e, { alpha: 0.15 })), n;
      },
    },
    OC = Zz,
    Jz = {
      name: "TreeSelect",
      common: Oe,
      peers: { Tree: OC, Empty: qo, InternalSelection: Fg },
    },
    Qz = Jz,
    eF = {
      headerFontSize1: "30px",
      headerFontSize2: "22px",
      headerFontSize3: "18px",
      headerFontSize4: "16px",
      headerFontSize5: "16px",
      headerFontSize6: "16px",
      headerMargin1: "28px 0 20px 0",
      headerMargin2: "28px 0 20px 0",
      headerMargin3: "28px 0 20px 0",
      headerMargin4: "28px 0 18px 0",
      headerMargin5: "28px 0 18px 0",
      headerMargin6: "28px 0 18px 0",
      headerPrefixWidth1: "16px",
      headerPrefixWidth2: "16px",
      headerPrefixWidth3: "12px",
      headerPrefixWidth4: "12px",
      headerPrefixWidth5: "12px",
      headerPrefixWidth6: "12px",
      headerBarWidth1: "4px",
      headerBarWidth2: "4px",
      headerBarWidth3: "3px",
      headerBarWidth4: "3px",
      headerBarWidth5: "3px",
      headerBarWidth6: "3px",
      pMargin: "16px 0 16px 0",
      liMargin: ".25em 0 0 0",
      olPadding: "0 0 0 2em",
      ulPadding: "0 0 0 2em",
    },
    tF = (t) => {
      const {
        primaryColor: e,
        textColor2: n,
        borderColor: r,
        lineHeight: i,
        fontSize: o,
        borderRadiusSmall: s,
        dividerColor: a,
        fontWeightStrong: l,
        textColor1: c,
        textColor3: u,
        infoColor: d,
        warningColor: h,
        errorColor: g,
        successColor: f,
        codeColor: p,
      } = t;
      return Object.assign(Object.assign({}, eF), {
        aTextColor: e,
        blockquoteTextColor: n,
        blockquotePrefixColor: r,
        blockquoteLineHeight: i,
        blockquoteFontSize: o,
        codeBorderRadius: s,
        liTextColor: n,
        liLineHeight: i,
        liFontSize: o,
        hrColor: a,
        headerFontWeight: l,
        headerTextColor: c,
        pTextColor: n,
        pTextColor1Depth: c,
        pTextColor2Depth: n,
        pTextColor3Depth: u,
        pLineHeight: i,
        pFontSize: o,
        headerBarColor: e,
        headerBarColorPrimary: e,
        headerBarColorInfo: d,
        headerBarColorError: g,
        headerBarColorWarning: h,
        headerBarColorSuccess: f,
        textColor: n,
        textColor1Depth: c,
        textColor2Depth: n,
        textColor3Depth: u,
        textColorPrimary: e,
        textColorInfo: d,
        textColorSuccess: f,
        textColorWarning: h,
        textColorError: g,
        codeTextColor: n,
        codeColor: p,
        codeBorder: "1px solid #0000",
      });
    },
    nF = { name: "Typography", common: Oe, self: tF },
    rF = nF,
    MC = (t) => {
      const {
        iconColor: e,
        primaryColor: n,
        errorColor: r,
        textColor2: i,
        successColor: o,
        opacityDisabled: s,
        actionColor: a,
        borderColor: l,
        hoverColor: c,
        lineHeight: u,
        borderRadius: d,
        fontSize: h,
      } = t;
      return {
        fontSize: h,
        lineHeight: u,
        borderRadius: d,
        draggerColor: a,
        draggerBorder: `1px dashed ${l}`,
        draggerBorderHover: `1px dashed ${n}`,
        itemColorHover: c,
        itemColorHoverError: Ae(r, { alpha: 0.06 }),
        itemTextColor: i,
        itemTextColorError: r,
        itemTextColorSuccess: o,
        itemIconColor: e,
        itemDisabledOpacity: s,
        itemBorderImageCardError: `1px solid ${r}`,
        itemBorderImageCard: `1px solid ${l}`,
      };
    },
    iF = {
      name: "Upload",
      common: Ut,
      peers: { Button: Zu, Progress: TC },
      self: MC,
    },
    oF = iF,
    sF = {
      name: "Upload",
      common: Oe,
      peers: { Button: Un, Progress: PC },
      self(t) {
        const { errorColor: e } = t,
          n = MC(t);
        return (n.itemColorHoverError = Ae(e, { alpha: 0.09 })), n;
      },
    },
    aF = sF,
    lF = {
      name: "Watermark",
      common: Oe,
      self(t) {
        const { fontFamily: e } = t;
        return { fontFamily: e };
      },
    },
    cF = lF,
    uF = { name: "Row", common: Oe },
    dF = uF,
    hF = {
      name: "Image",
      common: Oe,
      peers: { Tooltip: Qu },
      self: (t) => {
        const { textColor2: e } = t;
        return {
          toolbarIconColor: e,
          toolbarColor: "rgba(0, 0, 0, .35)",
          toolbarBoxShadow: "none",
          toolbarBorderRadius: "24px",
        };
      },
    },
    fF = C(
      "svg",
      {
        viewBox: "0 0 20 20",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
      },
      C("path", {
        d: "M6 5C5.75454 5 5.55039 5.17688 5.50806 5.41012L5.5 5.5V14.5C5.5 14.7761 5.72386 15 6 15C6.24546 15 6.44961 14.8231 6.49194 14.5899L6.5 14.5V5.5C6.5 5.22386 6.27614 5 6 5ZM13.8536 5.14645C13.68 4.97288 13.4106 4.9536 13.2157 5.08859L13.1464 5.14645L8.64645 9.64645C8.47288 9.82001 8.4536 10.0894 8.58859 10.2843L8.64645 10.3536L13.1464 14.8536C13.3417 15.0488 13.6583 15.0488 13.8536 14.8536C14.0271 14.68 14.0464 14.4106 13.9114 14.2157L13.8536 14.1464L9.70711 10L13.8536 5.85355C14.0488 5.65829 14.0488 5.34171 13.8536 5.14645Z",
        fill: "currentColor",
      })
    ),
    gF = C(
      "svg",
      {
        viewBox: "0 0 20 20",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
      },
      C("path", {
        d: "M13.5 5C13.7455 5 13.9496 5.17688 13.9919 5.41012L14 5.5V14.5C14 14.7761 13.7761 15 13.5 15C13.2545 15 13.0504 14.8231 13.0081 14.5899L13 14.5V5.5C13 5.22386 13.2239 5 13.5 5ZM5.64645 5.14645C5.82001 4.97288 6.08944 4.9536 6.28431 5.08859L6.35355 5.14645L10.8536 9.64645C11.0271 9.82001 11.0464 10.0894 10.9114 10.2843L10.8536 10.3536L6.35355 14.8536C6.15829 15.0488 5.84171 15.0488 5.64645 14.8536C5.47288 14.68 5.4536 14.4106 5.58859 14.2157L5.64645 14.1464L9.79289 10L5.64645 5.85355C5.45118 5.65829 5.45118 5.34171 5.64645 5.14645Z",
        fill: "currentColor",
      })
    ),
    pF = C(
      "svg",
      {
        viewBox: "0 0 20 20",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
      },
      C("path", {
        d: "M4.089 4.216l.057-.07a.5.5 0 0 1 .638-.057l.07.057L10 9.293l5.146-5.147a.5.5 0 0 1 .638-.057l.07.057a.5.5 0 0 1 .057.638l-.057.07L10.707 10l5.147 5.146a.5.5 0 0 1 .057.638l-.057.07a.5.5 0 0 1-.638.057l-.07-.057L10 10.707l-5.146 5.147a.5.5 0 0 1-.638.057l-.07-.057a.5.5 0 0 1-.057-.638l.057-.07L9.293 10L4.146 4.854a.5.5 0 0 1-.057-.638l.057-.07l-.057.07z",
        fill: "currentColor",
      })
    ),
    mF = C(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        width: "32",
        height: "32",
        viewBox: "0 0 1024 1024",
      },
      C("path", {
        fill: "currentColor",
        d: "M505.7 661a8 8 0 0 0 12.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z",
      })
    ),
    vF = q([
      q("body >", [M("image-container", "position: fixed;")]),
      M(
        "image-preview-container",
        `
 position: fixed;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 display: flex;
 `
      ),
      M(
        "image-preview-overlay",
        `
 z-index: -1;
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 background: rgba(0, 0, 0, .3);
 `,
        [ll()]
      ),
      M(
        "image-preview-toolbar",
        `
 z-index: 1;
 position: absolute;
 left: 50%;
 transform: translateX(-50%);
 border-radius: var(--n-toolbar-border-radius);
 height: 48px;
 bottom: 40px;
 padding: 0 12px;
 background: var(--n-toolbar-color);
 box-shadow: var(--n-toolbar-box-shadow);
 color: var(--n-toolbar-icon-color);
 transition: color .3s var(--n-bezier);
 display: flex;
 align-items: center;
 `,
        [
          M(
            "base-icon",
            `
 padding: 0 8px;
 font-size: 28px;
 cursor: pointer;
 `
          ),
          ll(),
        ]
      ),
      M(
        "image-preview-wrapper",
        `
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 display: flex;
 pointer-events: none;
 `,
        [Hs()]
      ),
      M(
        "image-preview",
        `
 user-select: none;
 -webkit-user-select: none;
 pointer-events: all;
 margin: auto;
 max-height: calc(100vh - 32px);
 max-width: calc(100vw - 32px);
 transition: transform .3s var(--n-bezier);
 `
      ),
      M(
        "image",
        `
 display: inline-flex;
 max-height: 100%;
 max-width: 100%;
 `,
        [
          Zt(
            "preview-disabled",
            `
 cursor: pointer;
 `
          ),
          q(
            "img",
            `
 border-radius: inherit;
 `
          ),
        ]
      ),
    ]),
    gc = 32,
    LC = $e({
      name: "ImagePreview",
      props: Object.assign(Object.assign({}, Ug), {
        onNext: Function,
        onPrev: Function,
        clsPrefix: { type: String, required: !0 },
      }),
      setup(t) {
        const e = Ye("Image", "-image", vF, b4, t, We(t, "clsPrefix"));
        let n = null;
        const r = U(null),
          i = U(null),
          o = U(void 0),
          s = U(!1),
          a = U(!1),
          { localeRef: l } = Xu("Image");
        function c() {
          const { value: P } = i;
          if (!n || !P) return;
          const { style: $ } = P,
            H = n.getBoundingClientRect(),
            ae = H.left + H.width / 2,
            le = H.top + H.height / 2;
          $.transformOrigin = `${ae}px ${le}px`;
        }
        function u(P) {
          var $, H;
          switch (P.key) {
            case " ":
              P.preventDefault();
              break;
            case "ArrowLeft":
              ($ = t.onPrev) === null || $ === void 0 || $.call(t);
              break;
            case "ArrowRight":
              (H = t.onNext) === null || H === void 0 || H.call(t);
              break;
            case "Escape":
              _e();
              break;
          }
        }
        Et(s, (P) => {
          P ? kt("keydown", document, u) : mt("keydown", document, u);
        }),
          Qt(() => {
            mt("keydown", document, u);
          });
        let d = 0,
          h = 0,
          g = 0,
          f = 0,
          p = 0,
          b = 0,
          m = 0,
          _ = 0,
          R = !1;
        function S(P) {
          const { clientX: $, clientY: H } = P;
          (g = $ - d), (f = H - h), ug(K);
        }
        function x(P) {
          const {
              mouseUpClientX: $,
              mouseUpClientY: H,
              mouseDownClientX: ae,
              mouseDownClientY: le,
            } = P,
            he = ae - $,
            Z = le - H,
            W = `vertical${Z > 0 ? "Top" : "Bottom"}`,
            Q = `horizontal${he > 0 ? "Left" : "Right"}`;
          return {
            moveVerticalDirection: W,
            moveHorizontalDirection: Q,
            deltaHorizontal: he,
            deltaVertical: Z,
          };
        }
        function E(P) {
          const { value: $ } = r;
          if (!$) return { offsetX: 0, offsetY: 0 };
          const H = $.getBoundingClientRect(),
            {
              moveVerticalDirection: ae,
              moveHorizontalDirection: le,
              deltaHorizontal: he,
              deltaVertical: Z,
            } = P || {};
          let W = 0,
            Q = 0;
          return (
            H.width <= window.innerWidth
              ? (W = 0)
              : H.left > 0
              ? (W = (H.width - window.innerWidth) / 2)
              : H.right < window.innerWidth
              ? (W = -(H.width - window.innerWidth) / 2)
              : le === "horizontalRight"
              ? (W = Math.min((H.width - window.innerWidth) / 2, p - (he ?? 0)))
              : (W = Math.max(
                  -((H.width - window.innerWidth) / 2),
                  p - (he ?? 0)
                )),
            H.height <= window.innerHeight
              ? (Q = 0)
              : H.top > 0
              ? (Q = (H.height - window.innerHeight) / 2)
              : H.bottom < window.innerHeight
              ? (Q = -(H.height - window.innerHeight) / 2)
              : ae === "verticalBottom"
              ? (Q = Math.min(
                  (H.height - window.innerHeight) / 2,
                  b - (Z ?? 0)
                ))
              : (Q = Math.max(
                  -((H.height - window.innerHeight) / 2),
                  b - (Z ?? 0)
                )),
            { offsetX: W, offsetY: Q }
          );
        }
        function w(P) {
          mt("mousemove", document, S), mt("mouseup", document, w);
          const { clientX: $, clientY: H } = P;
          R = !1;
          const ae = x({
              mouseUpClientX: $,
              mouseUpClientY: H,
              mouseDownClientX: m,
              mouseDownClientY: _,
            }),
            le = E(ae);
          (g = le.offsetX), (f = le.offsetY), K();
        }
        const v = Ve(wC, null);
        function y(P) {
          var $, H;
          if (
            ((H =
              ($ = v == null ? void 0 : v.previewedImgPropsRef.value) ===
                null || $ === void 0
                ? void 0
                : $.onMousedown) === null ||
              H === void 0 ||
              H.call($, P),
            P.button !== 0)
          )
            return;
          const { clientX: ae, clientY: le } = P;
          (R = !0),
            (d = ae - g),
            (h = le - f),
            (p = g),
            (b = f),
            (m = ae),
            (_ = le),
            K(),
            kt("mousemove", document, S),
            kt("mouseup", document, w);
        }
        function T(P) {
          var $, H;
          (H =
            ($ = v == null ? void 0 : v.previewedImgPropsRef.value) === null ||
            $ === void 0
              ? void 0
              : $.onDblclick) === null ||
            H === void 0 ||
            H.call($, P);
          const ae = fe();
          (L = L === ae ? 1 : ae), K();
        }
        const A = 1.5;
        let I = 0,
          L = 1,
          j = 0;
        function k() {
          (L = 1), (I = 0);
        }
        function O() {
          var P;
          k(), (j = 0), (P = t.onPrev) === null || P === void 0 || P.call(t);
        }
        function D() {
          var P;
          k(), (j = 0), (P = t.onNext) === null || P === void 0 || P.call(t);
        }
        function Y() {
          (j -= 90), K();
        }
        function se() {
          (j += 90), K();
        }
        function de() {
          const { value: P } = r;
          if (!P) return 1;
          const { innerWidth: $, innerHeight: H } = window,
            ae = Math.max(1, P.naturalHeight / (H - gc)),
            le = Math.max(1, P.naturalWidth / ($ - gc));
          return Math.max(3, ae * 2, le * 2);
        }
        function fe() {
          const { value: P } = r;
          if (!P) return 1;
          const { innerWidth: $, innerHeight: H } = window,
            ae = P.naturalHeight / (H - gc),
            le = P.naturalWidth / ($ - gc);
          return ae < 1 && le < 1 ? 1 : Math.max(ae, le);
        }
        function z() {
          const P = de();
          L < P && ((I += 1), (L = Math.min(P, Math.pow(A, I))), K());
        }
        function ee() {
          if (L > 0.5) {
            const P = L;
            (I -= 1), (L = Math.max(0.5, Math.pow(A, I)));
            const $ = P - L;
            K(!1);
            const H = E();
            (L += $), K(!1), (L -= $), (g = H.offsetX), (f = H.offsetY), K();
          }
        }
        function ue() {
          const P = o.value;
          P && By(P, void 0);
        }
        function K(P = !0) {
          var $;
          const { value: H } = r;
          if (!H) return;
          const { style: ae } = H,
            le = Ru(
              ($ = v == null ? void 0 : v.previewedImgPropsRef.value) ===
                null || $ === void 0
                ? void 0
                : $.style
            );
          let he = "";
          if (typeof le == "string") he = le + ";";
          else for (const W in le) he += `${vM(W)}: ${le[W]};`;
          const Z = `transform-origin: center; transform: translateX(${g}px) translateY(${f}px) rotate(${j}deg) scale(${L});`;
          R
            ? (ae.cssText = he + "cursor: grabbing; transition: none;" + Z)
            : (ae.cssText =
                he + "cursor: grab;" + Z + (P ? "" : "transition: none;")),
            P || H.offsetHeight;
        }
        function _e() {
          (s.value = !s.value), (a.value = !0);
        }
        function ie() {
          (L = fe()),
            (I = Math.ceil(Math.log(L) / Math.log(A))),
            (g = 0),
            (f = 0),
            K();
        }
        const pe = {
          setPreviewSrc: (P) => {
            o.value = P;
          },
          setThumbnailEl: (P) => {
            n = P;
          },
          toggleShow: _e,
        };
        function re(P, $) {
          if (t.showToolbarTooltip) {
            const { value: H } = e;
            return C(
              Dl,
              {
                to: !1,
                theme: H.peers.Tooltip,
                themeOverrides: H.peerOverrides.Tooltip,
                keepAliveOnHover: !1,
              },
              { default: () => l.value[$], trigger: () => P }
            );
          } else return P;
        }
        const ge = ce(() => {
            const {
              common: { cubicBezierEaseInOut: P },
              self: {
                toolbarIconColor: $,
                toolbarBorderRadius: H,
                toolbarBoxShadow: ae,
                toolbarColor: le,
              },
            } = e.value;
            return {
              "--n-bezier": P,
              "--n-toolbar-icon-color": $,
              "--n-toolbar-color": le,
              "--n-toolbar-border-radius": H,
              "--n-toolbar-box-shadow": ae,
            };
          }),
          { inlineThemeDisabled: ke } = Ct(),
          Me = ke ? jt("image-preview", void 0, ge, t) : void 0;
        return Object.assign(
          {
            previewRef: r,
            previewWrapperRef: i,
            previewSrc: o,
            show: s,
            appear: Qi(),
            displayed: a,
            previewedImgProps: v == null ? void 0 : v.previewedImgPropsRef,
            handleWheel(P) {
              P.preventDefault();
            },
            handlePreviewMousedown: y,
            handlePreviewDblclick: T,
            syncTransformOrigin: c,
            handleAfterLeave: () => {
              k(), (j = 0), (a.value = !1);
            },
            handleDragStart: (P) => {
              var $, H;
              (H =
                ($ = v == null ? void 0 : v.previewedImgPropsRef.value) ===
                  null || $ === void 0
                  ? void 0
                  : $.onDragstart) === null ||
                H === void 0 ||
                H.call($, P),
                P.preventDefault();
            },
            zoomIn: z,
            zoomOut: ee,
            handleDownloadClick: ue,
            rotateCounterclockwise: Y,
            rotateClockwise: se,
            handleSwitchPrev: O,
            handleSwitchNext: D,
            withTooltip: re,
            resizeToOrignalImageSize: ie,
            cssVars: ke ? void 0 : ge,
            themeClass: Me == null ? void 0 : Me.themeClass,
            onRender: Me == null ? void 0 : Me.onRender,
          },
          pe
        );
      },
      render() {
        var t, e;
        const { clsPrefix: n } = this;
        return C(
          pt,
          null,
          (e = (t = this.$slots).default) === null || e === void 0
            ? void 0
            : e.call(t),
          C(
            yg,
            { show: this.show },
            {
              default: () => {
                var r;
                return this.show || this.displayed
                  ? ((r = this.onRender) === null ||
                      r === void 0 ||
                      r.call(this),
                    sr(
                      C(
                        "div",
                        {
                          class: [
                            `${n}-image-preview-container`,
                            this.themeClass,
                          ],
                          style: this.cssVars,
                          onWheel: this.handleWheel,
                        },
                        C(
                          vn,
                          { name: "fade-in-transition", appear: this.appear },
                          {
                            default: () =>
                              this.show
                                ? C("div", {
                                    class: `${n}-image-preview-overlay`,
                                    onClick: this.toggleShow,
                                  })
                                : null,
                          }
                        ),
                        this.showToolbar
                          ? C(
                              vn,
                              {
                                name: "fade-in-transition",
                                appear: this.appear,
                              },
                              {
                                default: () => {
                                  if (!this.show) return null;
                                  const { withTooltip: i } = this;
                                  return C(
                                    "div",
                                    { class: `${n}-image-preview-toolbar` },
                                    this.onPrev
                                      ? C(
                                          pt,
                                          null,
                                          i(
                                            C(
                                              ht,
                                              {
                                                clsPrefix: n,
                                                onClick: this.handleSwitchPrev,
                                              },
                                              { default: () => fF }
                                            ),
                                            "tipPrevious"
                                          ),
                                          i(
                                            C(
                                              ht,
                                              {
                                                clsPrefix: n,
                                                onClick: this.handleSwitchNext,
                                              },
                                              { default: () => gF }
                                            ),
                                            "tipNext"
                                          )
                                        )
                                      : null,
                                    i(
                                      C(
                                        ht,
                                        {
                                          clsPrefix: n,
                                          onClick: this.rotateCounterclockwise,
                                        },
                                        { default: () => C(w3, null) }
                                      ),
                                      "tipCounterclockwise"
                                    ),
                                    i(
                                      C(
                                        ht,
                                        {
                                          clsPrefix: n,
                                          onClick: this.rotateClockwise,
                                        },
                                        { default: () => C(_3, null) }
                                      ),
                                      "tipClockwise"
                                    ),
                                    i(
                                      C(
                                        ht,
                                        {
                                          clsPrefix: n,
                                          onClick:
                                            this.resizeToOrignalImageSize,
                                        },
                                        { default: () => C(R3, null) }
                                      ),
                                      "tipOriginalSize"
                                    ),
                                    i(
                                      C(
                                        ht,
                                        { clsPrefix: n, onClick: this.zoomOut },
                                        { default: () => C(E3, null) }
                                      ),
                                      "tipZoomOut"
                                    ),
                                    i(
                                      C(
                                        ht,
                                        { clsPrefix: n, onClick: this.zoomIn },
                                        { default: () => C(S3, null) }
                                      ),
                                      "tipZoomIn"
                                    ),
                                    i(
                                      C(
                                        ht,
                                        {
                                          clsPrefix: n,
                                          onClick: this.handleDownloadClick,
                                        },
                                        { default: () => mF }
                                      ),
                                      "tipDownload"
                                    ),
                                    i(
                                      C(
                                        ht,
                                        {
                                          clsPrefix: n,
                                          onClick: this.toggleShow,
                                        },
                                        { default: () => pF }
                                      ),
                                      "tipClose"
                                    )
                                  );
                                },
                              }
                            )
                          : null,
                        C(
                          vn,
                          {
                            name: "fade-in-scale-up-transition",
                            onAfterLeave: this.handleAfterLeave,
                            appear: this.appear,
                            onEnter: this.syncTransformOrigin,
                            onBeforeLeave: this.syncTransformOrigin,
                          },
                          {
                            default: () => {
                              const { previewedImgProps: i = {} } = this;
                              return sr(
                                C(
                                  "div",
                                  {
                                    class: `${n}-image-preview-wrapper`,
                                    ref: "previewWrapperRef",
                                  },
                                  C(
                                    "img",
                                    Object.assign({}, i, {
                                      draggable: !1,
                                      onMousedown: this.handlePreviewMousedown,
                                      onDblclick: this.handlePreviewDblclick,
                                      class: [`${n}-image-preview`, i.class],
                                      key: this.previewSrc,
                                      src: this.previewSrc,
                                      ref: "previewRef",
                                      onDragstart: this.handleDragStart,
                                    })
                                  )
                                ),
                                [[$s, this.show]]
                              );
                            },
                          }
                        )
                      ),
                      [[Hu, { enabled: this.show }]]
                    ))
                  : null;
              },
            }
          )
        );
      },
    }),
    $C = "n-image-group",
    bF = Ug,
    yF = $e({
      name: "ImageGroup",
      props: bF,
      setup(t) {
        let e;
        const { mergedClsPrefixRef: n } = Ct(t),
          r = `c${Ui()}`,
          i = Wo(),
          o = (l) => {
            var c;
            (e = l),
              (c = a.value) === null || c === void 0 || c.setPreviewSrc(l);
          };
        function s(l) {
          var c, u;
          if (!(i != null && i.proxy)) return;
          const h = i.proxy.$el.parentElement.querySelectorAll(
            `[data-group-id=${r}]:not([data-error=true])`
          );
          if (!h.length) return;
          const g = Array.from(h).findIndex((f) => f.dataset.previewSrc === e);
          ~g
            ? o(h[(g + l + h.length) % h.length].dataset.previewSrc)
            : o(h[0].dataset.previewSrc),
            l === 1
              ? (c = t.onPreviewNext) === null || c === void 0 || c.call(t)
              : (u = t.onPreviewPrev) === null || u === void 0 || u.call(t);
        }
        vt($C, {
          mergedClsPrefixRef: n,
          setPreviewSrc: o,
          setThumbnailEl: (l) => {
            var c;
            (c = a.value) === null || c === void 0 || c.setThumbnailEl(l);
          },
          toggleShow: () => {
            var l;
            (l = a.value) === null || l === void 0 || l.toggleShow();
          },
          groupId: r,
        });
        const a = U(null);
        return {
          mergedClsPrefix: n,
          previewInstRef: a,
          next: () => {
            s(1);
          },
          prev: () => {
            s(-1);
          },
        };
      },
      render() {
        return C(
          LC,
          {
            theme: this.theme,
            themeOverrides: this.themeOverrides,
            clsPrefix: this.mergedClsPrefix,
            ref: "previewInstRef",
            onPrev: this.prev,
            onNext: this.next,
            showToolbar: this.showToolbar,
            showToolbarTooltip: this.showToolbarTooltip,
          },
          this.$slots
        );
      },
    }),
    xF = Object.assign(
      {
        alt: String,
        height: [String, Number],
        imgProps: Object,
        previewedImgProps: Object,
        lazy: Boolean,
        intersectionObserverOptions: Object,
        objectFit: { type: String, default: "fill" },
        previewSrc: String,
        fallbackSrc: String,
        width: [String, Number],
        src: String,
        previewDisabled: Boolean,
        loadDescription: String,
        onError: Function,
        onLoad: Function,
      },
      Ug
    ),
    CF = $e({
      name: "Image",
      props: xF,
      inheritAttrs: !1,
      setup(t) {
        const e = U(null),
          n = U(!1),
          r = U(null),
          i = Ve($C, null),
          { mergedClsPrefixRef: o } = i || Ct(t),
          s = {
            click: () => {
              if (t.previewDisabled || n.value) return;
              const c = t.previewSrc || t.src;
              if (i) {
                i.setPreviewSrc(c), i.setThumbnailEl(e.value), i.toggleShow();
                return;
              }
              const { value: u } = r;
              u &&
                (u.setPreviewSrc(c), u.setThumbnailEl(e.value), u.toggleShow());
            },
          },
          a = U(!t.lazy);
        Vt(() => {
          var c;
          (c = e.value) === null ||
            c === void 0 ||
            c.setAttribute(
              "data-group-id",
              (i == null ? void 0 : i.groupId) || ""
            );
        }),
          Vt(() => {
            if (t.lazy && t.intersectionObserverOptions) {
              let c;
              const u = or(() => {
                c == null || c(),
                  (c = void 0),
                  (c = A$(e.value, t.intersectionObserverOptions, a));
              });
              Qt(() => {
                u(), c == null || c();
              });
            }
          }),
          or(() => {
            var c;
            t.src || (c = t.imgProps) === null || c === void 0 || c.src,
              (n.value = !1);
          });
        const l = U(!1);
        return (
          vt(wC, { previewedImgPropsRef: We(t, "previewedImgProps") }),
          Object.assign(
            {
              mergedClsPrefix: o,
              groupId: i == null ? void 0 : i.groupId,
              previewInstRef: r,
              imageRef: e,
              showError: n,
              shouldStartLoading: a,
              loaded: l,
              mergedOnClick: (c) => {
                var u, d;
                s.click(),
                  (d =
                    (u = t.imgProps) === null || u === void 0
                      ? void 0
                      : u.onClick) === null ||
                    d === void 0 ||
                    d.call(u, c);
              },
              mergedOnError: (c) => {
                if (!a.value) return;
                n.value = !0;
                const { onError: u, imgProps: { onError: d } = {} } = t;
                u == null || u(c), d == null || d(c);
              },
              mergedOnLoad: (c) => {
                const { onLoad: u, imgProps: { onLoad: d } = {} } = t;
                u == null || u(c), d == null || d(c), (l.value = !0);
              },
            },
            s
          )
        );
      },
      render() {
        var t, e;
        const {
            mergedClsPrefix: n,
            imgProps: r = {},
            loaded: i,
            $attrs: o,
            lazy: s,
          } = this,
          a =
            (e = (t = this.$slots).placeholder) === null || e === void 0
              ? void 0
              : e.call(t),
          l = this.src || r.src,
          c = C(
            "img",
            Object.assign(Object.assign({}, r), {
              ref: "imageRef",
              width: this.width || r.width,
              height: this.height || r.height,
              src: this.showError
                ? this.fallbackSrc
                : s && this.intersectionObserverOptions
                ? this.shouldStartLoading
                  ? l
                  : void 0
                : l,
              alt: this.alt || r.alt,
              "aria-label": this.alt || r.alt,
              onClick: this.mergedOnClick,
              onError: this.mergedOnError,
              onLoad: this.mergedOnLoad,
              loading:
                T$ && s && !this.intersectionObserverOptions ? "lazy" : "eager",
              style: [
                r.style || "",
                a && !i
                  ? { height: "0", width: "0", visibility: "hidden" }
                  : "",
                { objectFit: this.objectFit },
              ],
              "data-error": this.showError,
              "data-preview-src": this.previewSrc || this.src,
            })
          );
        return C(
          "div",
          Object.assign({}, o, {
            role: "none",
            class: [
              o.class,
              `${n}-image`,
              (this.previewDisabled || this.showError) &&
                `${n}-image--preview-disabled`,
            ],
          }),
          this.groupId
            ? c
            : C(
                LC,
                {
                  theme: this.theme,
                  themeOverrides: this.themeOverrides,
                  clsPrefix: n,
                  ref: "previewInstRef",
                  showToolbar: this.showToolbar,
                  showToolbarTooltip: this.showToolbarTooltip,
                },
                { default: () => c }
              ),
          !i && a
        );
      },
    }),
    _F = { extraFontSize: "12px", width: "440px" },
    wF = {
      name: "Transfer",
      common: Oe,
      peers: { Checkbox: na, Scrollbar: jn, Input: hr, Empty: qo, Button: Un },
      self(t) {
        const {
          iconColorDisabled: e,
          iconColor: n,
          fontWeight: r,
          fontSizeLarge: i,
          fontSizeMedium: o,
          fontSizeSmall: s,
          heightLarge: a,
          heightMedium: l,
          heightSmall: c,
          borderRadius: u,
          inputColor: d,
          tableHeaderColor: h,
          textColor1: g,
          textColorDisabled: f,
          textColor2: p,
          hoverColor: b,
        } = t;
        return Object.assign(Object.assign({}, _F), {
          itemHeightSmall: c,
          itemHeightMedium: l,
          itemHeightLarge: a,
          fontSizeSmall: s,
          fontSizeMedium: o,
          fontSizeLarge: i,
          borderRadius: u,
          borderColor: "#0000",
          listColor: d,
          headerColor: h,
          titleTextColor: g,
          titleTextColorDisabled: f,
          extraTextColor: p,
          filterDividerColor: "#0000",
          itemTextColor: p,
          itemTextColorDisabled: f,
          itemColorPending: b,
          titleFontWeight: r,
          iconColor: n,
          iconColorDisabled: e,
        });
      },
    },
    SF = wF,
    DC = "n-loading-bar",
    EF = "n-loading-bar-api",
    RF = M(
      "loading-bar-container",
      `
 z-index: 5999;
 position: fixed;
 top: 0;
 left: 0;
 right: 0;
 height: 2px;
`,
      [
        ll({ enterDuration: "0.3s", leaveDuration: "0.8s" }),
        M(
          "loading-bar",
          `
 width: 100%;
 transition:
 max-width 4s linear,
 background .2s linear;
 height: var(--n-height);
 `,
          [
            te(
              "starting",
              `
 background: var(--n-color-loading);
 `
            ),
            te(
              "finishing",
              `
 background: var(--n-color-loading);
 transition:
 max-width .2s linear,
 background .2s linear;
 `
            ),
            te(
              "error",
              `
 background: var(--n-color-error);
 transition:
 max-width .2s linear,
 background .2s linear;
 `
            ),
          ]
        ),
      ]
    );
  var pc = function (t, e, n, r) {
    function i(o) {
      return o instanceof n
        ? o
        : new n(function (s) {
            s(o);
          });
    }
    return new (n || (n = Promise))(function (o, s) {
      function a(u) {
        try {
          c(r.next(u));
        } catch (d) {
          s(d);
        }
      }
      function l(u) {
        try {
          c(r.throw(u));
        } catch (d) {
          s(d);
        }
      }
      function c(u) {
        u.done ? o(u.value) : i(u.value).then(a, l);
      }
      c((r = r.apply(t, e || [])).next());
    });
  };
  function mc(t, e) {
    return `${e}-loading-bar ${e}-loading-bar--${t}`;
  }
  const TF = $e({
      name: "LoadingBar",
      props: { containerClass: String, containerStyle: [String, Object] },
      setup() {
        const { inlineThemeDisabled: t } = Ct(),
          { props: e, mergedClsPrefixRef: n } = Ve(DC),
          r = U(null),
          i = U(!1),
          o = U(!1),
          s = U(!1),
          a = U(!1);
        let l = !1;
        const c = U(!1),
          u = ce(() => {
            const { loadingBarStyle: x } = e;
            return x ? x[c.value ? "error" : "loading"] : "";
          });
        function d() {
          return pc(this, void 0, void 0, function* () {
            (i.value = !1),
              (s.value = !1),
              (l = !1),
              (c.value = !1),
              (a.value = !0),
              yield Ht(),
              (a.value = !1);
          });
        }
        function h(x = 0, E = 80, w = "starting") {
          return pc(this, void 0, void 0, function* () {
            if (((o.value = !0), yield d(), l)) return;
            (s.value = !0), yield Ht();
            const v = r.value;
            v &&
              ((v.style.maxWidth = `${x}%`),
              (v.style.transition = "none"),
              v.offsetWidth,
              (v.className = mc(w, n.value)),
              (v.style.transition = ""),
              (v.style.maxWidth = `${E}%`));
          });
        }
        function g() {
          return pc(this, void 0, void 0, function* () {
            if (l || c.value) return;
            o.value && (yield Ht()), (l = !0);
            const x = r.value;
            x &&
              ((x.className = mc("finishing", n.value)),
              (x.style.maxWidth = "100%"),
              x.offsetWidth,
              (s.value = !1));
          });
        }
        function f() {
          if (!(l || c.value))
            if (!s.value)
              h(100, 100, "error").then(() => {
                c.value = !0;
                const x = r.value;
                x &&
                  ((x.className = mc("error", n.value)),
                  x.offsetWidth,
                  (s.value = !1));
              });
            else {
              c.value = !0;
              const x = r.value;
              if (!x) return;
              (x.className = mc("error", n.value)),
                (x.style.maxWidth = "100%"),
                x.offsetWidth,
                (s.value = !1);
            }
        }
        function p() {
          i.value = !0;
        }
        function b() {
          i.value = !1;
        }
        function m() {
          return pc(this, void 0, void 0, function* () {
            yield d();
          });
        }
        const _ = Ye("LoadingBar", "-loading-bar", RF, W4, e, n),
          R = ce(() => {
            const {
              self: { height: x, colorError: E, colorLoading: w },
            } = _.value;
            return {
              "--n-height": x,
              "--n-color-loading": w,
              "--n-color-error": E,
            };
          }),
          S = t ? jt("loading-bar", void 0, R, e) : void 0;
        return {
          mergedClsPrefix: n,
          loadingBarRef: r,
          started: o,
          loading: s,
          entering: i,
          transitionDisabled: a,
          start: h,
          error: f,
          finish: g,
          handleEnter: p,
          handleAfterEnter: b,
          handleAfterLeave: m,
          mergedLoadingBarStyle: u,
          cssVars: t ? void 0 : R,
          themeClass: S == null ? void 0 : S.themeClass,
          onRender: S == null ? void 0 : S.onRender,
        };
      },
      render() {
        if (!this.started) return null;
        const { mergedClsPrefix: t } = this;
        return C(
          vn,
          {
            name: "fade-in-transition",
            appear: !0,
            onEnter: this.handleEnter,
            onAfterEnter: this.handleAfterEnter,
            onAfterLeave: this.handleAfterLeave,
            css: !this.transitionDisabled,
          },
          {
            default: () => {
              var e;
              return (
                (e = this.onRender) === null || e === void 0 || e.call(this),
                sr(
                  C(
                    "div",
                    {
                      class: [
                        `${t}-loading-bar-container`,
                        this.themeClass,
                        this.containerClass,
                      ],
                      style: this.containerStyle,
                    },
                    C("div", {
                      ref: "loadingBarRef",
                      class: [`${t}-loading-bar`],
                      style: [this.cssVars, this.mergedLoadingBarStyle],
                    })
                  ),
                  [[$s, this.loading || (!this.loading && this.entering)]]
                )
              );
            },
          }
        );
      },
    }),
    PF = Object.assign(Object.assign({}, Ye.props), {
      to: { type: [String, Object, Boolean], default: void 0 },
      containerClass: String,
      containerStyle: [String, Object],
      loadingBarStyle: { type: Object },
    }),
    AF = $e({
      name: "LoadingBarProvider",
      props: PF,
      setup(t) {
        const e = Qi(),
          n = U(null),
          r = {
            start() {
              var o;
              e.value
                ? (o = n.value) === null || o === void 0 || o.start()
                : Ht(() => {
                    var s;
                    (s = n.value) === null || s === void 0 || s.start();
                  });
            },
            error() {
              var o;
              e.value
                ? (o = n.value) === null || o === void 0 || o.error()
                : Ht(() => {
                    var s;
                    (s = n.value) === null || s === void 0 || s.error();
                  });
            },
            finish() {
              var o;
              e.value
                ? (o = n.value) === null || o === void 0 || o.finish()
                : Ht(() => {
                    var s;
                    (s = n.value) === null || s === void 0 || s.finish();
                  });
            },
          },
          { mergedClsPrefixRef: i } = Ct(t);
        return (
          vt(EF, r),
          vt(DC, { props: t, mergedClsPrefixRef: i }),
          Object.assign(r, { loadingBarRef: n })
        );
      },
      render() {
        var t, e;
        return C(
          pt,
          null,
          C(
            Sl,
            { disabled: this.to === !1, to: this.to || "body" },
            C(TF, {
              ref: "loadingBarRef",
              containerStyle: this.containerStyle,
              containerClass: this.containerClass,
            })
          ),
          (e = (t = this.$slots).default) === null || e === void 0
            ? void 0
            : e.call(t)
        );
      },
    }),
    zC = {
      icon: Function,
      type: { type: String, default: "info" },
      content: [String, Number, Function],
      showIcon: { type: Boolean, default: !0 },
      closable: Boolean,
      keepAliveOnHover: Boolean,
      onClose: Function,
      onMouseenter: Function,
      onMouseleave: Function,
    },
    FC = "n-message-api",
    BC = "n-message-provider",
    kF = q([
      M(
        "message-wrapper",
        `
 margin: var(--n-margin);
 z-index: 0;
 transform-origin: top center;
 display: flex;
 `,
        [
          hf({
            overflow: "visible",
            originalTransition: "transform .3s var(--n-bezier)",
            enterToProps: { transform: "scale(1)" },
            leaveToProps: { transform: "scale(0.85)" },
          }),
        ]
      ),
      M(
        "message",
        `
 box-sizing: border-box;
 display: flex;
 align-items: center;
 transition:
 color .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 opacity .3s var(--n-bezier),
 transform .3s var(--n-bezier),
 margin-bottom .3s var(--n-bezier);
 padding: var(--n-padding);
 border-radius: var(--n-border-radius);
 flex-wrap: nowrap;
 overflow: hidden;
 max-width: var(--n-max-width);
 color: var(--n-text-color);
 background-color: var(--n-color);
 box-shadow: var(--n-box-shadow);
 `,
        [
          ne(
            "content",
            `
 display: inline-block;
 line-height: var(--n-line-height);
 font-size: var(--n-font-size);
 `
          ),
          ne(
            "icon",
            `
 position: relative;
 margin: var(--n-icon-margin);
 height: var(--n-icon-size);
 width: var(--n-icon-size);
 font-size: var(--n-icon-size);
 flex-shrink: 0;
 `,
            [
              ["default", "info", "success", "warning", "error", "loading"].map(
                (t) =>
                  te(`${t}-type`, [
                    q(
                      "> *",
                      `
 color: var(--n-icon-color-${t});
 transition: color .3s var(--n-bezier);
 `
                    ),
                  ])
              ),
              q(
                "> *",
                `
 position: absolute;
 left: 0;
 top: 0;
 right: 0;
 bottom: 0;
 `,
                [ii()]
              ),
            ]
          ),
          ne(
            "close",
            `
 margin: var(--n-close-margin);
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 flex-shrink: 0;
 `,
            [
              q(
                "&:hover",
                `
 color: var(--n-close-icon-color-hover);
 `
              ),
              q(
                "&:active",
                `
 color: var(--n-close-icon-color-pressed);
 `
              ),
            ]
          ),
        ]
      ),
      M(
        "message-container",
        `
 z-index: 6000;
 position: fixed;
 height: 0;
 overflow: visible;
 display: flex;
 flex-direction: column;
 align-items: center;
 `,
        [
          te(
            "top",
            `
 top: 12px;
 left: 0;
 right: 0;
 `
          ),
          te(
            "top-left",
            `
 top: 12px;
 left: 12px;
 right: 0;
 align-items: flex-start;
 `
          ),
          te(
            "top-right",
            `
 top: 12px;
 left: 0;
 right: 12px;
 align-items: flex-end;
 `
          ),
          te(
            "bottom",
            `
 bottom: 4px;
 left: 0;
 right: 0;
 justify-content: flex-end;
 `
          ),
          te(
            "bottom-left",
            `
 bottom: 4px;
 left: 12px;
 right: 0;
 justify-content: flex-end;
 align-items: flex-start;
 `
          ),
          te(
            "bottom-right",
            `
 bottom: 4px;
 left: 0;
 right: 12px;
 justify-content: flex-end;
 align-items: flex-end;
 `
          ),
        ]
      ),
    ]),
    IF = {
      info: () => C(Ns, null),
      success: () => C(Il, null),
      warning: () => C(Ol, null),
      error: () => C(kl, null),
      default: () => null,
    },
    OF = $e({
      name: "Message",
      props: Object.assign(Object.assign({}, zC), { render: Function }),
      setup(t) {
        const { inlineThemeDisabled: e, mergedRtlRef: n } = Ct(t),
          { props: r, mergedClsPrefixRef: i } = Ve(BC),
          o = Cr("Message", n, i),
          s = Ye("Message", "-message", kF, R4, r, i),
          a = ce(() => {
            const { type: c } = t,
              {
                common: { cubicBezierEaseInOut: u },
                self: {
                  padding: d,
                  margin: h,
                  maxWidth: g,
                  iconMargin: f,
                  closeMargin: p,
                  closeSize: b,
                  iconSize: m,
                  fontSize: _,
                  lineHeight: R,
                  borderRadius: S,
                  iconColorInfo: x,
                  iconColorSuccess: E,
                  iconColorWarning: w,
                  iconColorError: v,
                  iconColorLoading: y,
                  closeIconSize: T,
                  closeBorderRadius: A,
                  [Te("textColor", c)]: I,
                  [Te("boxShadow", c)]: L,
                  [Te("color", c)]: j,
                  [Te("closeColorHover", c)]: k,
                  [Te("closeColorPressed", c)]: O,
                  [Te("closeIconColor", c)]: D,
                  [Te("closeIconColorPressed", c)]: Y,
                  [Te("closeIconColorHover", c)]: se,
                },
              } = s.value;
            return {
              "--n-bezier": u,
              "--n-margin": h,
              "--n-padding": d,
              "--n-max-width": g,
              "--n-font-size": _,
              "--n-icon-margin": f,
              "--n-icon-size": m,
              "--n-close-icon-size": T,
              "--n-close-border-radius": A,
              "--n-close-size": b,
              "--n-close-margin": p,
              "--n-text-color": I,
              "--n-color": j,
              "--n-box-shadow": L,
              "--n-icon-color-info": x,
              "--n-icon-color-success": E,
              "--n-icon-color-warning": w,
              "--n-icon-color-error": v,
              "--n-icon-color-loading": y,
              "--n-close-color-hover": k,
              "--n-close-color-pressed": O,
              "--n-close-icon-color": D,
              "--n-close-icon-color-pressed": Y,
              "--n-close-icon-color-hover": se,
              "--n-line-height": R,
              "--n-border-radius": S,
            };
          }),
          l = e
            ? jt(
                "message",
                ce(() => t.type[0]),
                a,
                {}
              )
            : void 0;
        return {
          mergedClsPrefix: i,
          rtlEnabled: o,
          messageProviderProps: r,
          handleClose() {
            var c;
            (c = t.onClose) === null || c === void 0 || c.call(t);
          },
          cssVars: e ? void 0 : a,
          themeClass: l == null ? void 0 : l.themeClass,
          onRender: l == null ? void 0 : l.onRender,
          placement: r.placement,
        };
      },
      render() {
        const {
          render: t,
          type: e,
          closable: n,
          content: r,
          mergedClsPrefix: i,
          cssVars: o,
          themeClass: s,
          onRender: a,
          icon: l,
          handleClose: c,
          showIcon: u,
        } = this;
        a == null || a();
        let d;
        return C(
          "div",
          {
            class: [`${i}-message-wrapper`, s],
            onMouseenter: this.onMouseenter,
            onMouseleave: this.onMouseleave,
            style: [
              {
                alignItems: this.placement.startsWith("top")
                  ? "flex-start"
                  : "flex-end",
              },
              o,
            ],
          },
          t
            ? t(this.$props)
            : C(
                "div",
                {
                  class: [
                    `${i}-message ${i}-message--${e}-type`,
                    this.rtlEnabled && `${i}-message--rtl`,
                  ],
                },
                (d = MF(l, e, i)) && u
                  ? C(
                      "div",
                      {
                        class: `${i}-message__icon ${i}-message__icon--${e}-type`,
                      },
                      C(Yo, null, { default: () => d })
                    )
                  : null,
                C("div", { class: `${i}-message__content` }, wn(r)),
                n
                  ? C(ta, {
                      clsPrefix: i,
                      class: `${i}-message__close`,
                      onClick: c,
                      absolute: !0,
                    })
                  : null
              )
        );
      },
    });
  function MF(t, e, n) {
    if (typeof t == "function") return t();
    {
      const r =
        e === "loading"
          ? C(Ml, { clsPrefix: n, strokeWidth: 24, scale: 0.85 })
          : IF[e]();
      return r ? C(ht, { clsPrefix: n, key: e }, { default: () => r }) : null;
    }
  }
  const LF = $e({
      name: "MessageEnvironment",
      props: Object.assign(Object.assign({}, zC), {
        duration: { type: Number, default: 3e3 },
        onAfterLeave: Function,
        onLeave: Function,
        internalKey: { type: String, required: !0 },
        onInternalAfterLeave: Function,
        onHide: Function,
        onAfterHide: Function,
      }),
      setup(t) {
        let e = null;
        const n = U(!0);
        Vt(() => {
          r();
        });
        function r() {
          const { duration: u } = t;
          u && (e = window.setTimeout(s, u));
        }
        function i(u) {
          u.currentTarget === u.target &&
            e !== null &&
            (window.clearTimeout(e), (e = null));
        }
        function o(u) {
          u.currentTarget === u.target && r();
        }
        function s() {
          const { onHide: u } = t;
          (n.value = !1), e && (window.clearTimeout(e), (e = null)), u && u();
        }
        function a() {
          const { onClose: u } = t;
          u && u(), s();
        }
        function l() {
          const {
            onAfterLeave: u,
            onInternalAfterLeave: d,
            onAfterHide: h,
            internalKey: g,
          } = t;
          u && u(), d && d(g), h && h();
        }
        function c() {
          s();
        }
        return {
          show: n,
          hide: s,
          handleClose: a,
          handleAfterLeave: l,
          handleMouseleave: o,
          handleMouseenter: i,
          deactivate: c,
        };
      },
      render() {
        return C(
          Ku,
          {
            appear: !0,
            onAfterLeave: this.handleAfterLeave,
            onLeave: this.onLeave,
          },
          {
            default: () => [
              this.show
                ? C(OF, {
                    content: this.content,
                    type: this.type,
                    icon: this.icon,
                    showIcon: this.showIcon,
                    closable: this.closable,
                    onClose: this.handleClose,
                    onMouseenter: this.keepAliveOnHover
                      ? this.handleMouseenter
                      : void 0,
                    onMouseleave: this.keepAliveOnHover
                      ? this.handleMouseleave
                      : void 0,
                  })
                : null,
            ],
          }
        );
      },
    }),
    $F = Object.assign(Object.assign({}, Ye.props), {
      to: [String, Object],
      duration: { type: Number, default: 3e3 },
      keepAliveOnHover: Boolean,
      max: Number,
      placement: { type: String, default: "top" },
      closable: Boolean,
      containerClass: String,
      containerStyle: [String, Object],
    }),
    DF = $e({
      name: "MessageProvider",
      props: $F,
      setup(t) {
        const { mergedClsPrefixRef: e } = Ct(t),
          n = U([]),
          r = U({}),
          i = {
            create(l, c) {
              return o(l, Object.assign({ type: "default" }, c));
            },
            info(l, c) {
              return o(
                l,
                Object.assign(Object.assign({}, c), { type: "info" })
              );
            },
            success(l, c) {
              return o(
                l,
                Object.assign(Object.assign({}, c), { type: "success" })
              );
            },
            warning(l, c) {
              return o(
                l,
                Object.assign(Object.assign({}, c), { type: "warning" })
              );
            },
            error(l, c) {
              return o(
                l,
                Object.assign(Object.assign({}, c), { type: "error" })
              );
            },
            loading(l, c) {
              return o(
                l,
                Object.assign(Object.assign({}, c), { type: "loading" })
              );
            },
            destroyAll: a,
          };
        vt(BC, { props: t, mergedClsPrefixRef: e }), vt(FC, i);
        function o(l, c) {
          const u = Ui(),
            d = Zi(
              Object.assign(Object.assign({}, c), {
                content: l,
                key: u,
                destroy: () => {
                  var g;
                  (g = r.value[u]) === null || g === void 0 || g.hide();
                },
              })
            ),
            { max: h } = t;
          return (
            h && n.value.length >= h && n.value.shift(), n.value.push(d), d
          );
        }
        function s(l) {
          n.value.splice(
            n.value.findIndex((c) => c.key === l),
            1
          ),
            delete r.value[l];
        }
        function a() {
          Object.values(r.value).forEach((l) => {
            l.hide();
          });
        }
        return Object.assign(
          {
            mergedClsPrefix: e,
            messageRefs: r,
            messageList: n,
            handleAfterLeave: s,
          },
          i
        );
      },
      render() {
        var t, e, n;
        return C(
          pt,
          null,
          (e = (t = this.$slots).default) === null || e === void 0
            ? void 0
            : e.call(t),
          this.messageList.length
            ? C(
                Sl,
                { to: (n = this.to) !== null && n !== void 0 ? n : "body" },
                C(
                  "div",
                  {
                    class: [
                      `${this.mergedClsPrefix}-message-container`,
                      `${this.mergedClsPrefix}-message-container--${this.placement}`,
                      this.containerClass,
                    ],
                    key: "message-container",
                    style: this.containerStyle,
                  },
                  this.messageList.map((r) =>
                    C(
                      LF,
                      Object.assign(
                        {
                          ref: (i) => {
                            i && (this.messageRefs[r.key] = i);
                          },
                          internalKey: r.key,
                          onInternalAfterLeave: this.handleAfterLeave,
                        },
                        zu(r, ["destroy"], void 0),
                        {
                          duration:
                            r.duration === void 0 ? this.duration : r.duration,
                          keepAliveOnHover:
                            r.keepAliveOnHover === void 0
                              ? this.keepAliveOnHover
                              : r.keepAliveOnHover,
                          closable:
                            r.closable === void 0 ? this.closable : r.closable,
                        }
                      )
                    )
                  )
                )
              )
            : null
        );
      },
    });
  function nd() {
    const t = Ve(FC, null);
    return (
      t === null &&
        jo(
          "use-message",
          "No outer <n-message-provider /> founded. See prerequisite in https://www.naiveui.com/en-US/os-theme/components/message for more details. If you want to use `useMessage` outside setup, please check https://www.naiveui.com/zh-CN/os-theme/components/message#Q-&-A."
        ),
      t
    );
  }
  const rd = "n-notification-provider",
    zF = $e({
      name: "NotificationContainer",
      props: {
        scrollable: { type: Boolean, required: !0 },
        placement: { type: String, required: !0 },
      },
      setup() {
        const {
            mergedThemeRef: t,
            mergedClsPrefixRef: e,
            wipTransitionCountRef: n,
          } = Ve(rd),
          r = U(null);
        return (
          or(() => {
            var i, o;
            n.value > 0
              ? (i = r == null ? void 0 : r.value) === null ||
                i === void 0 ||
                i.classList.add("transitioning")
              : (o = r == null ? void 0 : r.value) === null ||
                o === void 0 ||
                o.classList.remove("transitioning");
          }),
          { selfRef: r, mergedTheme: t, mergedClsPrefix: e, transitioning: n }
        );
      },
      render() {
        const {
          $slots: t,
          scrollable: e,
          mergedClsPrefix: n,
          mergedTheme: r,
          placement: i,
        } = this;
        return C(
          "div",
          {
            ref: "selfRef",
            class: [
              `${n}-notification-container`,
              e && `${n}-notification-container--scrollable`,
              `${n}-notification-container--${i}`,
            ],
          },
          e
            ? C(
                Ll,
                {
                  theme: r.peers.Scrollbar,
                  themeOverrides: r.peerOverrides.Scrollbar,
                  contentStyle: { overflow: "hidden" },
                },
                t
              )
            : t
        );
      },
    }),
    FF = {
      info: () => C(Ns, null),
      success: () => C(Il, null),
      warning: () => C(Ol, null),
      error: () => C(kl, null),
      default: () => null,
    },
    Vg = {
      closable: { type: Boolean, default: !0 },
      type: { type: String, default: "default" },
      avatar: Function,
      title: [String, Function],
      description: [String, Function],
      content: [String, Function],
      meta: [String, Function],
      action: [String, Function],
      onClose: { type: Function, required: !0 },
      keepAliveOnHover: Boolean,
      onMouseenter: Function,
      onMouseleave: Function,
    },
    BF = Fu(Vg),
    NF = $e({
      name: "Notification",
      props: Vg,
      setup(t) {
        const { mergedClsPrefixRef: e, mergedThemeRef: n, props: r } = Ve(rd),
          { inlineThemeDisabled: i, mergedRtlRef: o } = Ct(),
          s = Cr("Notification", o, e),
          a = ce(() => {
            const { type: c } = t,
              {
                self: {
                  color: u,
                  textColor: d,
                  closeIconColor: h,
                  closeIconColorHover: g,
                  closeIconColorPressed: f,
                  headerTextColor: p,
                  descriptionTextColor: b,
                  actionTextColor: m,
                  borderRadius: _,
                  headerFontWeight: R,
                  boxShadow: S,
                  lineHeight: x,
                  fontSize: E,
                  closeMargin: w,
                  closeSize: v,
                  width: y,
                  padding: T,
                  closeIconSize: A,
                  closeBorderRadius: I,
                  closeColorHover: L,
                  closeColorPressed: j,
                  titleFontSize: k,
                  metaFontSize: O,
                  descriptionFontSize: D,
                  [Te("iconColor", c)]: Y,
                },
                common: {
                  cubicBezierEaseOut: se,
                  cubicBezierEaseIn: de,
                  cubicBezierEaseInOut: fe,
                },
              } = n.value,
              { left: z, right: ee, top: ue, bottom: K } = nr(T);
            return {
              "--n-color": u,
              "--n-font-size": E,
              "--n-text-color": d,
              "--n-description-text-color": b,
              "--n-action-text-color": m,
              "--n-title-text-color": p,
              "--n-title-font-weight": R,
              "--n-bezier": fe,
              "--n-bezier-ease-out": se,
              "--n-bezier-ease-in": de,
              "--n-border-radius": _,
              "--n-box-shadow": S,
              "--n-close-border-radius": I,
              "--n-close-color-hover": L,
              "--n-close-color-pressed": j,
              "--n-close-icon-color": h,
              "--n-close-icon-color-hover": g,
              "--n-close-icon-color-pressed": f,
              "--n-line-height": x,
              "--n-icon-color": Y,
              "--n-close-margin": w,
              "--n-close-size": v,
              "--n-close-icon-size": A,
              "--n-width": y,
              "--n-padding-left": z,
              "--n-padding-right": ee,
              "--n-padding-top": ue,
              "--n-padding-bottom": K,
              "--n-title-font-size": k,
              "--n-meta-font-size": O,
              "--n-description-font-size": D,
            };
          }),
          l = i
            ? jt(
                "notification",
                ce(() => t.type[0]),
                a,
                r
              )
            : void 0;
        return {
          mergedClsPrefix: e,
          showAvatar: ce(() => t.avatar || t.type !== "default"),
          handleCloseClick() {
            t.onClose();
          },
          rtlEnabled: s,
          cssVars: i ? void 0 : a,
          themeClass: l == null ? void 0 : l.themeClass,
          onRender: l == null ? void 0 : l.onRender,
        };
      },
      render() {
        var t;
        const { mergedClsPrefix: e } = this;
        return (
          (t = this.onRender) === null || t === void 0 || t.call(this),
          C(
            "div",
            {
              class: [`${e}-notification-wrapper`, this.themeClass],
              onMouseenter: this.onMouseenter,
              onMouseleave: this.onMouseleave,
              style: this.cssVars,
            },
            C(
              "div",
              {
                class: [
                  `${e}-notification`,
                  this.rtlEnabled && `${e}-notification--rtl`,
                  this.themeClass,
                  {
                    [`${e}-notification--closable`]: this.closable,
                    [`${e}-notification--show-avatar`]: this.showAvatar,
                  },
                ],
                style: this.cssVars,
              },
              this.showAvatar
                ? C(
                    "div",
                    { class: `${e}-notification__avatar` },
                    this.avatar
                      ? wn(this.avatar)
                      : this.type !== "default"
                      ? C(
                          ht,
                          { clsPrefix: e },
                          { default: () => FF[this.type]() }
                        )
                      : null
                  )
                : null,
              this.closable
                ? C(ta, {
                    clsPrefix: e,
                    class: `${e}-notification__close`,
                    onClick: this.handleCloseClick,
                  })
                : null,
              C(
                "div",
                { ref: "bodyRef", class: `${e}-notification-main` },
                this.title
                  ? C(
                      "div",
                      { class: `${e}-notification-main__header` },
                      wn(this.title)
                    )
                  : null,
                this.description
                  ? C(
                      "div",
                      { class: `${e}-notification-main__description` },
                      wn(this.description)
                    )
                  : null,
                this.content
                  ? C(
                      "pre",
                      { class: `${e}-notification-main__content` },
                      wn(this.content)
                    )
                  : null,
                this.meta || this.action
                  ? C(
                      "div",
                      { class: `${e}-notification-main-footer` },
                      this.meta
                        ? C(
                            "div",
                            { class: `${e}-notification-main-footer__meta` },
                            wn(this.meta)
                          )
                        : null,
                      this.action
                        ? C(
                            "div",
                            { class: `${e}-notification-main-footer__action` },
                            wn(this.action)
                          )
                        : null
                    )
                  : null
              )
            )
          )
        );
      },
    }),
    HF = Object.assign(Object.assign({}, Vg), {
      duration: Number,
      onClose: Function,
      onLeave: Function,
      onAfterEnter: Function,
      onAfterLeave: Function,
      onHide: Function,
      onAfterShow: Function,
      onAfterHide: Function,
    }),
    WF = $e({
      name: "NotificationEnvironment",
      props: Object.assign(Object.assign({}, HF), {
        internalKey: { type: String, required: !0 },
        onInternalAfterLeave: { type: Function, required: !0 },
      }),
      setup(t) {
        const { wipTransitionCountRef: e } = Ve(rd),
          n = U(!0);
        let r = null;
        function i() {
          (n.value = !1), r && window.clearTimeout(r);
        }
        function o(f) {
          e.value++,
            Ht(() => {
              (f.style.height = `${f.offsetHeight}px`),
                (f.style.maxHeight = "0"),
                (f.style.transition = "none"),
                f.offsetHeight,
                (f.style.transition = ""),
                (f.style.maxHeight = f.style.height);
            });
        }
        function s(f) {
          e.value--, (f.style.height = ""), (f.style.maxHeight = "");
          const { onAfterEnter: p, onAfterShow: b } = t;
          p && p(), b && b();
        }
        function a(f) {
          e.value++,
            (f.style.maxHeight = `${f.offsetHeight}px`),
            (f.style.height = `${f.offsetHeight}px`),
            f.offsetHeight;
        }
        function l(f) {
          const { onHide: p } = t;
          p && p(), (f.style.maxHeight = "0"), f.offsetHeight;
        }
        function c() {
          e.value--;
          const {
            onAfterLeave: f,
            onInternalAfterLeave: p,
            onAfterHide: b,
            internalKey: m,
          } = t;
          f && f(), p(m), b && b();
        }
        function u() {
          const { duration: f } = t;
          f && (r = window.setTimeout(i, f));
        }
        function d(f) {
          f.currentTarget === f.target &&
            r !== null &&
            (window.clearTimeout(r), (r = null));
        }
        function h(f) {
          f.currentTarget === f.target && u();
        }
        function g() {
          const { onClose: f } = t;
          f
            ? Promise.resolve(f()).then((p) => {
                p !== !1 && i();
              })
            : i();
        }
        return (
          Vt(() => {
            t.duration && (r = window.setTimeout(i, t.duration));
          }),
          {
            show: n,
            hide: i,
            handleClose: g,
            handleAfterLeave: c,
            handleLeave: l,
            handleBeforeLeave: a,
            handleAfterEnter: s,
            handleBeforeEnter: o,
            handleMouseenter: d,
            handleMouseleave: h,
          }
        );
      },
      render() {
        return C(
          vn,
          {
            name: "notification-transition",
            appear: !0,
            onBeforeEnter: this.handleBeforeEnter,
            onAfterEnter: this.handleAfterEnter,
            onBeforeLeave: this.handleBeforeLeave,
            onLeave: this.handleLeave,
            onAfterLeave: this.handleAfterLeave,
          },
          {
            default: () =>
              this.show
                ? C(
                    NF,
                    Object.assign({}, Bs(this.$props, BF), {
                      onClose: this.handleClose,
                      onMouseenter:
                        this.duration && this.keepAliveOnHover
                          ? this.handleMouseenter
                          : void 0,
                      onMouseleave:
                        this.duration && this.keepAliveOnHover
                          ? this.handleMouseleave
                          : void 0,
                    })
                  )
                : null,
          }
        );
      },
    }),
    jF = q([
      M(
        "notification-container",
        `
 z-index: 4000;
 position: fixed;
 overflow: visible;
 display: flex;
 flex-direction: column;
 align-items: flex-end;
 `,
        [
          q(">", [
            M(
              "scrollbar",
              `
 width: initial;
 overflow: visible;
 height: -moz-fit-content !important;
 height: fit-content !important;
 max-height: 100vh !important;
 `,
              [
                q(">", [
                  M(
                    "scrollbar-container",
                    `
 height: -moz-fit-content !important;
 height: fit-content !important;
 max-height: 100vh !important;
 `,
                    [
                      M(
                        "scrollbar-content",
                        `
 padding-top: 12px;
 padding-bottom: 33px;
 `
                      ),
                    ]
                  ),
                ]),
              ]
            ),
          ]),
          te(
            "top, top-right, top-left",
            `
 top: 12px;
 `,
            [
              q("&.transitioning >", [
                M("scrollbar", [
                  q(">", [
                    M(
                      "scrollbar-container",
                      `
 min-height: 100vh !important;
 `
                    ),
                  ]),
                ]),
              ]),
            ]
          ),
          te(
            "bottom, bottom-right, bottom-left",
            `
 bottom: 12px;
 `,
            [
              q(">", [
                M("scrollbar", [
                  q(">", [
                    M("scrollbar-container", [
                      M(
                        "scrollbar-content",
                        `
 padding-bottom: 12px;
 `
                      ),
                    ]),
                  ]),
                ]),
              ]),
              M(
                "notification-wrapper",
                `
 display: flex;
 align-items: flex-end;
 margin-bottom: 0;
 margin-top: 12px;
 `
              ),
            ]
          ),
          te(
            "top, bottom",
            `
 left: 50%;
 transform: translateX(-50%);
 `,
            [
              M("notification-wrapper", [
                q(
                  "&.notification-transition-enter-from, &.notification-transition-leave-to",
                  `
 transform: scale(0.85);
 `
                ),
                q(
                  "&.notification-transition-leave-from, &.notification-transition-enter-to",
                  `
 transform: scale(1);
 `
                ),
              ]),
            ]
          ),
          te("top", [
            M(
              "notification-wrapper",
              `
 transform-origin: top center;
 `
            ),
          ]),
          te("bottom", [
            M(
              "notification-wrapper",
              `
 transform-origin: bottom center;
 `
            ),
          ]),
          te("top-right, bottom-right", [
            M(
              "notification",
              `
 margin-left: 28px;
 margin-right: 16px;
 `
            ),
          ]),
          te("top-left, bottom-left", [
            M(
              "notification",
              `
 margin-left: 16px;
 margin-right: 28px;
 `
            ),
          ]),
          te(
            "top-right",
            `
 right: 0;
 `,
            [vc("top-right")]
          ),
          te(
            "top-left",
            `
 left: 0;
 `,
            [vc("top-left")]
          ),
          te(
            "bottom-right",
            `
 right: 0;
 `,
            [vc("bottom-right")]
          ),
          te(
            "bottom-left",
            `
 left: 0;
 `,
            [vc("bottom-left")]
          ),
          te("scrollable", [
            te(
              "top-right",
              `
 top: 0;
 `
            ),
            te(
              "top-left",
              `
 top: 0;
 `
            ),
            te(
              "bottom-right",
              `
 bottom: 0;
 `
            ),
            te(
              "bottom-left",
              `
 bottom: 0;
 `
            ),
          ]),
          M(
            "notification-wrapper",
            `
 margin-bottom: 12px;
 `,
            [
              q(
                "&.notification-transition-enter-from, &.notification-transition-leave-to",
                `
 opacity: 0;
 margin-top: 0 !important;
 margin-bottom: 0 !important;
 `
              ),
              q(
                "&.notification-transition-leave-from, &.notification-transition-enter-to",
                `
 opacity: 1;
 `
              ),
              q(
                "&.notification-transition-leave-active",
                `
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier),
 opacity .3s var(--n-bezier),
 transform .3s var(--n-bezier-ease-in),
 max-height .3s var(--n-bezier),
 margin-top .3s linear,
 margin-bottom .3s linear,
 box-shadow .3s var(--n-bezier);
 `
              ),
              q(
                "&.notification-transition-enter-active",
                `
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier),
 opacity .3s var(--n-bezier),
 transform .3s var(--n-bezier-ease-out),
 max-height .3s var(--n-bezier),
 margin-top .3s linear,
 margin-bottom .3s linear,
 box-shadow .3s var(--n-bezier);
 `
              ),
            ]
          ),
          M(
            "notification",
            `
 background-color: var(--n-color);
 color: var(--n-text-color);
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier),
 opacity .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier);
 font-family: inherit;
 font-size: var(--n-font-size);
 font-weight: 400;
 position: relative;
 display: flex;
 overflow: hidden;
 flex-shrink: 0;
 padding-left: var(--n-padding-left);
 padding-right: var(--n-padding-right);
 width: var(--n-width);
 max-width: calc(100vw - 16px - 16px);
 border-radius: var(--n-border-radius);
 box-shadow: var(--n-box-shadow);
 box-sizing: border-box;
 opacity: 1;
 `,
            [
              ne("avatar", [
                M(
                  "icon",
                  `
 color: var(--n-icon-color);
 `
                ),
                M(
                  "base-icon",
                  `
 color: var(--n-icon-color);
 `
                ),
              ]),
              te("show-avatar", [
                M(
                  "notification-main",
                  `
 margin-left: 40px;
 width: calc(100% - 40px);
 `
                ),
              ]),
              te("closable", [
                M("notification-main", [
                  q(
                    "> *:first-child",
                    `
 padding-right: 20px;
 `
                  ),
                ]),
                ne(
                  "close",
                  `
 position: absolute;
 top: 0;
 right: 0;
 margin: var(--n-close-margin);
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 `
                ),
              ]),
              ne(
                "avatar",
                `
 position: absolute;
 top: var(--n-padding-top);
 left: var(--n-padding-left);
 width: 28px;
 height: 28px;
 font-size: 28px;
 display: flex;
 align-items: center;
 justify-content: center;
 `,
                [M("icon", "transition: color .3s var(--n-bezier);")]
              ),
              M(
                "notification-main",
                `
 padding-top: var(--n-padding-top);
 padding-bottom: var(--n-padding-bottom);
 box-sizing: border-box;
 display: flex;
 flex-direction: column;
 margin-left: 8px;
 width: calc(100% - 8px);
 `,
                [
                  M(
                    "notification-main-footer",
                    `
 display: flex;
 align-items: center;
 justify-content: space-between;
 margin-top: 12px;
 `,
                    [
                      ne(
                        "meta",
                        `
 font-size: var(--n-meta-font-size);
 transition: color .3s var(--n-bezier-ease-out);
 color: var(--n-description-text-color);
 `
                      ),
                      ne(
                        "action",
                        `
 cursor: pointer;
 transition: color .3s var(--n-bezier-ease-out);
 color: var(--n-action-text-color);
 `
                      ),
                    ]
                  ),
                  ne(
                    "header",
                    `
 font-weight: var(--n-title-font-weight);
 font-size: var(--n-title-font-size);
 transition: color .3s var(--n-bezier-ease-out);
 color: var(--n-title-text-color);
 `
                  ),
                  ne(
                    "description",
                    `
 margin-top: 8px;
 font-size: var(--n-description-font-size);
 white-space: pre-wrap;
 word-wrap: break-word;
 transition: color .3s var(--n-bezier-ease-out);
 color: var(--n-description-text-color);
 `
                  ),
                  ne(
                    "content",
                    `
 line-height: var(--n-line-height);
 margin: 12px 0 0 0;
 font-family: inherit;
 white-space: pre-wrap;
 word-wrap: break-word;
 transition: color .3s var(--n-bezier-ease-out);
 color: var(--n-text-color);
 `,
                    [q("&:first-child", "margin: 0;")]
                  ),
                ]
              ),
            ]
          ),
        ]
      ),
    ]);
  function vc(t) {
    const n = t.split("-")[1] === "left" ? "calc(-100%)" : "calc(100%)";
    return M("notification-wrapper", [
      q(
        "&.notification-transition-enter-from, &.notification-transition-leave-to",
        `
 transform: translate(${n}, 0);
 `
      ),
      q(
        "&.notification-transition-leave-from, &.notification-transition-enter-to",
        `
 transform: translate(0, 0);
 `
      ),
    ]);
  }
  const UF = "n-notification-api",
    VF = Object.assign(Object.assign({}, Ye.props), {
      containerClass: String,
      containerStyle: [String, Object],
      to: [String, Object],
      scrollable: { type: Boolean, default: !0 },
      max: Number,
      placement: { type: String, default: "top-right" },
      keepAliveOnHover: Boolean,
    }),
    GF = $e({
      name: "NotificationProvider",
      props: VF,
      setup(t) {
        const { mergedClsPrefixRef: e } = Ct(t),
          n = U([]),
          r = {},
          i = new Set();
        function o(g) {
          const f = Ui(),
            p = () => {
              i.add(f), r[f] && r[f].hide();
            },
            b = Zi(
              Object.assign(Object.assign({}, g), {
                key: f,
                destroy: p,
                hide: p,
                deactivate: p,
              })
            ),
            { max: m } = t;
          if (m && n.value.length - i.size >= m) {
            let _ = !1,
              R = 0;
            for (const S of n.value) {
              if (!i.has(S.key)) {
                r[S.key] && (S.destroy(), (_ = !0));
                break;
              }
              R++;
            }
            _ || n.value.splice(R, 1);
          }
          return n.value.push(b), b;
        }
        const s = ["info", "success", "warning", "error"].map(
          (g) => (f) => o(Object.assign(Object.assign({}, f), { type: g }))
        );
        function a(g) {
          i.delete(g),
            n.value.splice(
              n.value.findIndex((f) => f.key === g),
              1
            );
        }
        const l = Ye("Notification", "-notification", jF, C4, t, e),
          c = {
            create: o,
            info: s[0],
            success: s[1],
            warning: s[2],
            error: s[3],
            open: d,
            destroyAll: h,
          },
          u = U(0);
        vt(UF, c),
          vt(rd, {
            props: t,
            mergedClsPrefixRef: e,
            mergedThemeRef: l,
            wipTransitionCountRef: u,
          });
        function d(g) {
          return o(g);
        }
        function h() {
          Object.values(n.value).forEach((g) => {
            g.hide();
          });
        }
        return Object.assign(
          {
            mergedClsPrefix: e,
            notificationList: n,
            notificationRefs: r,
            handleAfterLeave: a,
          },
          c
        );
      },
      render() {
        var t, e, n;
        const { placement: r } = this;
        return C(
          pt,
          null,
          (e = (t = this.$slots).default) === null || e === void 0
            ? void 0
            : e.call(t),
          this.notificationList.length
            ? C(
                Sl,
                { to: (n = this.to) !== null && n !== void 0 ? n : "body" },
                C(
                  zF,
                  {
                    class: this.containerClass,
                    style: this.containerStyle,
                    scrollable:
                      this.scrollable && r !== "top" && r !== "bottom",
                    placement: r,
                  },
                  {
                    default: () =>
                      this.notificationList.map((i) =>
                        C(
                          WF,
                          Object.assign(
                            {
                              ref: (o) => {
                                const s = i.key;
                                o === null
                                  ? delete this.notificationRefs[s]
                                  : (this.notificationRefs[s] = o);
                              },
                            },
                            zu(i, ["destroy", "hide", "deactivate"]),
                            {
                              internalKey: i.key,
                              onInternalAfterLeave: this.handleAfterLeave,
                              keepAliveOnHover:
                                i.keepAliveOnHover === void 0
                                  ? this.keepAliveOnHover
                                  : i.keepAliveOnHover,
                            }
                          )
                        )
                      ),
                  }
                )
              )
            : null
        );
      },
    }),
    XF = q([
      M("progress", { display: "inline-block" }, [
        M(
          "progress-icon",
          `
 color: var(--n-icon-color);
 transition: color .3s var(--n-bezier);
 `
        ),
        te(
          "line",
          `
 width: 100%;
 display: block;
 `,
          [
            M(
              "progress-content",
              `
 display: flex;
 align-items: center;
 `,
              [M("progress-graph", { flex: 1 })]
            ),
            M("progress-custom-content", { marginLeft: "14px" }),
            M(
              "progress-icon",
              `
 width: 30px;
 padding-left: 14px;
 height: var(--n-icon-size-line);
 line-height: var(--n-icon-size-line);
 font-size: var(--n-icon-size-line);
 `,
              [
                te(
                  "as-text",
                  `
 color: var(--n-text-color-line-outer);
 text-align: center;
 width: 40px;
 font-size: var(--n-font-size);
 padding-left: 4px;
 transition: color .3s var(--n-bezier);
 `
                ),
              ]
            ),
          ]
        ),
        te("circle, dashboard", { width: "120px" }, [
          M(
            "progress-custom-content",
            `
 position: absolute;
 left: 50%;
 top: 50%;
 transform: translateX(-50%) translateY(-50%);
 display: flex;
 align-items: center;
 justify-content: center;
 `
          ),
          M(
            "progress-text",
            `
 position: absolute;
 left: 50%;
 top: 50%;
 transform: translateX(-50%) translateY(-50%);
 display: flex;
 align-items: center;
 color: inherit;
 font-size: var(--n-font-size-circle);
 color: var(--n-text-color-circle);
 font-weight: var(--n-font-weight-circle);
 transition: color .3s var(--n-bezier);
 white-space: nowrap;
 `
          ),
          M(
            "progress-icon",
            `
 position: absolute;
 left: 50%;
 top: 50%;
 transform: translateX(-50%) translateY(-50%);
 display: flex;
 align-items: center;
 color: var(--n-icon-color);
 font-size: var(--n-icon-size-circle);
 `
          ),
        ]),
        te(
          "multiple-circle",
          `
 width: 200px;
 color: inherit;
 `,
          [
            M(
              "progress-text",
              `
 font-weight: var(--n-font-weight-circle);
 color: var(--n-text-color-circle);
 position: absolute;
 left: 50%;
 top: 50%;
 transform: translateX(-50%) translateY(-50%);
 display: flex;
 align-items: center;
 justify-content: center;
 transition: color .3s var(--n-bezier);
 `
            ),
          ]
        ),
        M("progress-content", { position: "relative" }),
        M("progress-graph", { position: "relative" }, [
          M("progress-graph-circle", [
            q("svg", { verticalAlign: "bottom" }),
            M(
              "progress-graph-circle-fill",
              `
 stroke: var(--n-fill-color);
 transition:
 opacity .3s var(--n-bezier),
 stroke .3s var(--n-bezier),
 stroke-dasharray .3s var(--n-bezier);
 `,
              [te("empty", { opacity: 0 })]
            ),
            M(
              "progress-graph-circle-rail",
              `
 transition: stroke .3s var(--n-bezier);
 overflow: hidden;
 stroke: var(--n-rail-color);
 `
            ),
          ]),
          M("progress-graph-line", [
            te("indicator-inside", [
              M(
                "progress-graph-line-rail",
                `
 height: 16px;
 line-height: 16px;
 border-radius: 10px;
 `,
                [
                  M(
                    "progress-graph-line-fill",
                    `
 height: inherit;
 border-radius: 10px;
 `
                  ),
                  M(
                    "progress-graph-line-indicator",
                    `
 background: #0000;
 white-space: nowrap;
 text-align: right;
 margin-left: 14px;
 margin-right: 14px;
 height: inherit;
 font-size: 12px;
 color: var(--n-text-color-line-inner);
 transition: color .3s var(--n-bezier);
 `
                  ),
                ]
              ),
            ]),
            te(
              "indicator-inside-label",
              `
 height: 16px;
 display: flex;
 align-items: center;
 `,
              [
                M(
                  "progress-graph-line-rail",
                  `
 flex: 1;
 transition: background-color .3s var(--n-bezier);
 `
                ),
                M(
                  "progress-graph-line-indicator",
                  `
 background: var(--n-fill-color);
 font-size: 12px;
 transform: translateZ(0);
 display: flex;
 vertical-align: middle;
 height: 16px;
 line-height: 16px;
 padding: 0 10px;
 border-radius: 10px;
 position: absolute;
 white-space: nowrap;
 color: var(--n-text-color-line-inner);
 transition:
 right .2s var(--n-bezier),
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier);
 `
                ),
              ]
            ),
            M(
              "progress-graph-line-rail",
              `
 position: relative;
 overflow: hidden;
 height: var(--n-rail-height);
 border-radius: 5px;
 background-color: var(--n-rail-color);
 transition: background-color .3s var(--n-bezier);
 `,
              [
                M(
                  "progress-graph-line-fill",
                  `
 background: var(--n-fill-color);
 position: relative;
 border-radius: 5px;
 height: inherit;
 width: 100%;
 max-width: 0%;
 transition:
 background-color .3s var(--n-bezier),
 max-width .2s var(--n-bezier);
 `,
                  [
                    te("processing", [
                      q(
                        "&::after",
                        `
 content: "";
 background-image: var(--n-line-bg-processing);
 animation: progress-processing-animation 2s var(--n-bezier) infinite;
 `
                      ),
                    ]),
                  ]
                ),
              ]
            ),
          ]),
        ]),
      ]),
      q(
        "@keyframes progress-processing-animation",
        `
 0% {
 position: absolute;
 left: 0;
 top: 0;
 bottom: 0;
 right: 100%;
 opacity: 1;
 }
 66% {
 position: absolute;
 left: 0;
 top: 0;
 bottom: 0;
 right: 0;
 opacity: 0;
 }
 100% {
 position: absolute;
 left: 0;
 top: 0;
 bottom: 0;
 right: 0;
 opacity: 0;
 }
 `
      ),
    ]),
    KF = {
      success: C(Il, null),
      error: C(kl, null),
      warning: C(Ol, null),
      info: C(Ns, null),
    },
    YF = $e({
      name: "ProgressLine",
      props: {
        clsPrefix: { type: String, required: !0 },
        percentage: { type: Number, default: 0 },
        railColor: String,
        railStyle: [String, Object],
        fillColor: String,
        status: { type: String, required: !0 },
        indicatorPlacement: { type: String, required: !0 },
        indicatorTextColor: String,
        unit: { type: String, default: "%" },
        processing: { type: Boolean, required: !0 },
        showIndicator: { type: Boolean, required: !0 },
        height: [String, Number],
        railBorderRadius: [String, Number],
        fillBorderRadius: [String, Number],
      },
      setup(t, { slots: e }) {
        const n = ce(() => Kr(t.height)),
          r = ce(() =>
            t.railBorderRadius !== void 0
              ? Kr(t.railBorderRadius)
              : t.height !== void 0
              ? Kr(t.height, { c: 0.5 })
              : ""
          ),
          i = ce(() =>
            t.fillBorderRadius !== void 0
              ? Kr(t.fillBorderRadius)
              : t.railBorderRadius !== void 0
              ? Kr(t.railBorderRadius)
              : t.height !== void 0
              ? Kr(t.height, { c: 0.5 })
              : ""
          );
        return () => {
          const {
            indicatorPlacement: o,
            railColor: s,
            railStyle: a,
            percentage: l,
            unit: c,
            indicatorTextColor: u,
            status: d,
            showIndicator: h,
            fillColor: g,
            processing: f,
            clsPrefix: p,
          } = t;
          return C(
            "div",
            { class: `${p}-progress-content`, role: "none" },
            C(
              "div",
              { class: `${p}-progress-graph`, "aria-hidden": !0 },
              C(
                "div",
                {
                  class: [
                    `${p}-progress-graph-line`,
                    { [`${p}-progress-graph-line--indicator-${o}`]: !0 },
                  ],
                },
                C(
                  "div",
                  {
                    class: `${p}-progress-graph-line-rail`,
                    style: [
                      {
                        backgroundColor: s,
                        height: n.value,
                        borderRadius: r.value,
                      },
                      a,
                    ],
                  },
                  C(
                    "div",
                    {
                      class: [
                        `${p}-progress-graph-line-fill`,
                        f && `${p}-progress-graph-line-fill--processing`,
                      ],
                      style: {
                        maxWidth: `${t.percentage}%`,
                        backgroundColor: g,
                        height: n.value,
                        lineHeight: n.value,
                        borderRadius: i.value,
                      },
                    },
                    o === "inside"
                      ? C(
                          "div",
                          {
                            class: `${p}-progress-graph-line-indicator`,
                            style: { color: u },
                          },
                          e.default ? e.default() : `${l}${c}`
                        )
                      : null
                  )
                )
              )
            ),
            h && o === "outside"
              ? C(
                  "div",
                  null,
                  e.default
                    ? C(
                        "div",
                        {
                          class: `${p}-progress-custom-content`,
                          style: { color: u },
                          role: "none",
                        },
                        e.default()
                      )
                    : d === "default"
                    ? C(
                        "div",
                        {
                          role: "none",
                          class: `${p}-progress-icon ${p}-progress-icon--as-text`,
                          style: { color: u },
                        },
                        l,
                        c
                      )
                    : C(
                        "div",
                        { class: `${p}-progress-icon`, "aria-hidden": !0 },
                        C(ht, { clsPrefix: p }, { default: () => KF[d] })
                      )
                )
              : null
          );
        };
      },
    }),
    qF = {
      success: C(Il, null),
      error: C(kl, null),
      warning: C(Ol, null),
      info: C(Ns, null),
    },
    ZF = $e({
      name: "ProgressCircle",
      props: {
        clsPrefix: { type: String, required: !0 },
        status: { type: String, required: !0 },
        strokeWidth: { type: Number, required: !0 },
        fillColor: String,
        railColor: String,
        railStyle: [String, Object],
        percentage: { type: Number, default: 0 },
        offsetDegree: { type: Number, default: 0 },
        showIndicator: { type: Boolean, required: !0 },
        indicatorTextColor: String,
        unit: String,
        viewBoxWidth: { type: Number, required: !0 },
        gapDegree: { type: Number, required: !0 },
        gapOffsetDegree: { type: Number, default: 0 },
      },
      setup(t, { slots: e }) {
        function n(r, i, o) {
          const { gapDegree: s, viewBoxWidth: a, strokeWidth: l } = t,
            c = 50,
            u = 0,
            d = c,
            h = 0,
            g = 2 * c,
            f = 50 + l / 2,
            p = `M ${f},${f} m ${u},${d}
      a ${c},${c} 0 1 1 ${h},${-g}
      a ${c},${c} 0 1 1 ${-h},${g}`,
            b = Math.PI * 2 * c,
            m = {
              stroke: o,
              strokeDasharray: `${(r / 100) * (b - s)}px ${a * 8}px`,
              strokeDashoffset: `-${s / 2}px`,
              transformOrigin: i ? "center" : void 0,
              transform: i ? `rotate(${i}deg)` : void 0,
            };
          return { pathString: p, pathStyle: m };
        }
        return () => {
          const {
              fillColor: r,
              railColor: i,
              strokeWidth: o,
              offsetDegree: s,
              status: a,
              percentage: l,
              showIndicator: c,
              indicatorTextColor: u,
              unit: d,
              gapOffsetDegree: h,
              clsPrefix: g,
            } = t,
            { pathString: f, pathStyle: p } = n(100, 0, i),
            { pathString: b, pathStyle: m } = n(l, s, r),
            _ = 100 + o;
          return C(
            "div",
            { class: `${g}-progress-content`, role: "none" },
            C(
              "div",
              { class: `${g}-progress-graph`, "aria-hidden": !0 },
              C(
                "div",
                {
                  class: `${g}-progress-graph-circle`,
                  style: { transform: h ? `rotate(${h}deg)` : void 0 },
                },
                C(
                  "svg",
                  { viewBox: `0 0 ${_} ${_}` },
                  C(
                    "g",
                    null,
                    C("path", {
                      class: `${g}-progress-graph-circle-rail`,
                      d: f,
                      "stroke-width": o,
                      "stroke-linecap": "round",
                      fill: "none",
                      style: p,
                    })
                  ),
                  C(
                    "g",
                    null,
                    C("path", {
                      class: [
                        `${g}-progress-graph-circle-fill`,
                        l === 0 && `${g}-progress-graph-circle-fill--empty`,
                      ],
                      d: b,
                      "stroke-width": o,
                      "stroke-linecap": "round",
                      fill: "none",
                      style: m,
                    })
                  )
                )
              )
            ),
            c
              ? C(
                  "div",
                  null,
                  e.default
                    ? C(
                        "div",
                        { class: `${g}-progress-custom-content`, role: "none" },
                        e.default()
                      )
                    : a !== "default"
                    ? C(
                        "div",
                        { class: `${g}-progress-icon`, "aria-hidden": !0 },
                        C(ht, { clsPrefix: g }, { default: () => qF[a] })
                      )
                    : C(
                        "div",
                        {
                          class: `${g}-progress-text`,
                          style: { color: u },
                          role: "none",
                        },
                        C(
                          "span",
                          { class: `${g}-progress-text__percentage` },
                          l
                        ),
                        C("span", { class: `${g}-progress-text__unit` }, d)
                      )
                )
              : null
          );
        };
      },
    });
  function fv(t, e, n = 100) {
    return `m ${n / 2} ${n / 2 - t} a ${t} ${t} 0 1 1 0 ${
      2 * t
    } a ${t} ${t} 0 1 1 0 -${2 * t}`;
  }
  const JF = $e({
      name: "ProgressMultipleCircle",
      props: {
        clsPrefix: { type: String, required: !0 },
        viewBoxWidth: { type: Number, required: !0 },
        percentage: { type: Array, default: [0] },
        strokeWidth: { type: Number, required: !0 },
        circleGap: { type: Number, required: !0 },
        showIndicator: { type: Boolean, required: !0 },
        fillColor: { type: Array, default: () => [] },
        railColor: { type: Array, default: () => [] },
        railStyle: { type: Array, default: () => [] },
      },
      setup(t, { slots: e }) {
        const n = ce(() =>
          t.percentage.map(
            (i, o) =>
              `${
                ((Math.PI * i) / 100) *
                (t.viewBoxWidth / 2 -
                  (t.strokeWidth / 2) * (1 + 2 * o) -
                  t.circleGap * o) *
                2
              }, ${t.viewBoxWidth * 8}`
          )
        );
        return () => {
          const {
            viewBoxWidth: r,
            strokeWidth: i,
            circleGap: o,
            showIndicator: s,
            fillColor: a,
            railColor: l,
            railStyle: c,
            percentage: u,
            clsPrefix: d,
          } = t;
          return C(
            "div",
            { class: `${d}-progress-content`, role: "none" },
            C(
              "div",
              { class: `${d}-progress-graph`, "aria-hidden": !0 },
              C(
                "div",
                { class: `${d}-progress-graph-circle` },
                C(
                  "svg",
                  { viewBox: `0 0 ${r} ${r}` },
                  u.map((h, g) =>
                    C(
                      "g",
                      { key: g },
                      C("path", {
                        class: `${d}-progress-graph-circle-rail`,
                        d: fv(r / 2 - (i / 2) * (1 + 2 * g) - o * g, i, r),
                        "stroke-width": i,
                        "stroke-linecap": "round",
                        fill: "none",
                        style: [{ strokeDashoffset: 0, stroke: l[g] }, c[g]],
                      }),
                      C("path", {
                        class: [
                          `${d}-progress-graph-circle-fill`,
                          h === 0 && `${d}-progress-graph-circle-fill--empty`,
                        ],
                        d: fv(r / 2 - (i / 2) * (1 + 2 * g) - o * g, i, r),
                        "stroke-width": i,
                        "stroke-linecap": "round",
                        fill: "none",
                        style: {
                          strokeDasharray: n.value[g],
                          strokeDashoffset: 0,
                          stroke: a[g],
                        },
                      })
                    )
                  )
                )
              )
            ),
            s && e.default
              ? C(
                  "div",
                  null,
                  C("div", { class: `${d}-progress-text` }, e.default())
                )
              : null
          );
        };
      },
    }),
    QF = Object.assign(Object.assign({}, Ye.props), {
      processing: Boolean,
      type: { type: String, default: "line" },
      gapDegree: Number,
      gapOffsetDegree: Number,
      status: { type: String, default: "default" },
      railColor: [String, Array],
      railStyle: [String, Array],
      color: [String, Array],
      viewBoxWidth: { type: Number, default: 100 },
      strokeWidth: { type: Number, default: 7 },
      percentage: [Number, Array],
      unit: { type: String, default: "%" },
      showIndicator: { type: Boolean, default: !0 },
      indicatorPosition: { type: String, default: "outside" },
      indicatorPlacement: { type: String, default: "outside" },
      indicatorTextColor: String,
      circleGap: { type: Number, default: 1 },
      height: Number,
      borderRadius: [String, Number],
      fillBorderRadius: [String, Number],
      offsetDegree: Number,
    }),
    e6 = $e({
      name: "Progress",
      props: QF,
      setup(t) {
        const e = ce(() => t.indicatorPlacement || t.indicatorPosition),
          n = ce(() => {
            if (t.gapDegree || t.gapDegree === 0) return t.gapDegree;
            if (t.type === "dashboard") return 75;
          }),
          { mergedClsPrefixRef: r, inlineThemeDisabled: i } = Ct(t),
          o = Ye("Progress", "-progress", XF, TC, t, r),
          s = ce(() => {
            const { status: l } = t,
              {
                common: { cubicBezierEaseInOut: c },
                self: {
                  fontSize: u,
                  fontSizeCircle: d,
                  railColor: h,
                  railHeight: g,
                  iconSizeCircle: f,
                  iconSizeLine: p,
                  textColorCircle: b,
                  textColorLineInner: m,
                  textColorLineOuter: _,
                  lineBgProcessing: R,
                  fontWeightCircle: S,
                  [Te("iconColor", l)]: x,
                  [Te("fillColor", l)]: E,
                },
              } = o.value;
            return {
              "--n-bezier": c,
              "--n-fill-color": E,
              "--n-font-size": u,
              "--n-font-size-circle": d,
              "--n-font-weight-circle": S,
              "--n-icon-color": x,
              "--n-icon-size-circle": f,
              "--n-icon-size-line": p,
              "--n-line-bg-processing": R,
              "--n-rail-color": h,
              "--n-rail-height": g,
              "--n-text-color-circle": b,
              "--n-text-color-line-inner": m,
              "--n-text-color-line-outer": _,
            };
          }),
          a = i
            ? jt(
                "progress",
                ce(() => t.status[0]),
                s,
                t
              )
            : void 0;
        return {
          mergedClsPrefix: r,
          mergedIndicatorPlacement: e,
          gapDeg: n,
          cssVars: i ? void 0 : s,
          themeClass: a == null ? void 0 : a.themeClass,
          onRender: a == null ? void 0 : a.onRender,
        };
      },
      render() {
        const {
          type: t,
          cssVars: e,
          indicatorTextColor: n,
          showIndicator: r,
          status: i,
          railColor: o,
          railStyle: s,
          color: a,
          percentage: l,
          viewBoxWidth: c,
          strokeWidth: u,
          mergedIndicatorPlacement: d,
          unit: h,
          borderRadius: g,
          fillBorderRadius: f,
          height: p,
          processing: b,
          circleGap: m,
          mergedClsPrefix: _,
          gapDeg: R,
          gapOffsetDegree: S,
          themeClass: x,
          $slots: E,
          onRender: w,
        } = this;
        return (
          w == null || w(),
          C(
            "div",
            {
              class: [
                x,
                `${_}-progress`,
                `${_}-progress--${t}`,
                `${_}-progress--${i}`,
              ],
              style: e,
              "aria-valuemax": 100,
              "aria-valuemin": 0,
              "aria-valuenow": l,
              role:
                t === "circle" || t === "line" || t === "dashboard"
                  ? "progressbar"
                  : "none",
            },
            t === "circle" || t === "dashboard"
              ? C(
                  ZF,
                  {
                    clsPrefix: _,
                    status: i,
                    showIndicator: r,
                    indicatorTextColor: n,
                    railColor: o,
                    fillColor: a,
                    railStyle: s,
                    offsetDegree: this.offsetDegree,
                    percentage: l,
                    viewBoxWidth: c,
                    strokeWidth: u,
                    gapDegree: R === void 0 ? (t === "dashboard" ? 75 : 0) : R,
                    gapOffsetDegree: S,
                    unit: h,
                  },
                  E
                )
              : t === "line"
              ? C(
                  YF,
                  {
                    clsPrefix: _,
                    status: i,
                    showIndicator: r,
                    indicatorTextColor: n,
                    railColor: o,
                    fillColor: a,
                    railStyle: s,
                    percentage: l,
                    processing: b,
                    indicatorPlacement: d,
                    unit: h,
                    fillBorderRadius: f,
                    railBorderRadius: g,
                    height: p,
                  },
                  E
                )
              : t === "multiple-circle"
              ? C(
                  JF,
                  {
                    clsPrefix: _,
                    strokeWidth: u,
                    railColor: o,
                    fillColor: a,
                    railStyle: s,
                    viewBoxWidth: c,
                    percentage: l,
                    showIndicator: r,
                    circleGap: m,
                  },
                  E
                )
              : null
          )
        );
      },
    }),
    t6 = {
      name: "QrCode",
      common: Oe,
      self: (t) => ({ borderRadius: t.borderRadius }),
    },
    n6 = t6,
    r6 = Object.assign(Object.assign({}, Ye.props), {
      trigger: String,
      xScrollable: Boolean,
      onScroll: Function,
      size: Number,
    }),
    i6 = $e({
      name: "Scrollbar",
      props: r6,
      setup() {
        const t = U(null);
        return Object.assign(
          Object.assign(
            {},
            {
              scrollTo: (...n) => {
                var r;
                (r = t.value) === null ||
                  r === void 0 ||
                  r.scrollTo(n[0], n[1]);
              },
              scrollBy: (...n) => {
                var r;
                (r = t.value) === null ||
                  r === void 0 ||
                  r.scrollBy(n[0], n[1]);
              },
            }
          ),
          { scrollbarInstRef: t }
        );
      },
      render() {
        return C(
          Ll,
          Object.assign({ ref: "scrollbarInstRef" }, this.$props),
          this.$slots
        );
      },
    }),
    NC = i6,
    o6 = {
      name: "Skeleton",
      common: Oe,
      self(t) {
        const {
          heightSmall: e,
          heightMedium: n,
          heightLarge: r,
          borderRadius: i,
        } = t;
        return {
          color: "rgba(255, 255, 255, 0.12)",
          colorEnd: "rgba(255, 255, 255, 0.18)",
          borderRadius: i,
          heightSmall: e,
          heightMedium: n,
          heightLarge: r,
        };
      },
    };
  function gv(t) {
    return window.TouchEvent && t instanceof window.TouchEvent;
  }
  function pv() {
    const t = new Map(),
      e = (n) => (r) => {
        t.set(n, r);
      };
    return (
      E1(() => {
        t.clear();
      }),
      [t, e]
    );
  }
  const s6 = q([
      M(
        "slider",
        `
 display: block;
 padding: calc((var(--n-handle-size) - var(--n-rail-height)) / 2) 0;
 position: relative;
 z-index: 0;
 width: 100%;
 cursor: pointer;
 user-select: none;
 -webkit-user-select: none;
 `,
        [
          te("reverse", [
            M("slider-handles", [
              M(
                "slider-handle-wrapper",
                `
 transform: translate(50%, -50%);
 `
              ),
            ]),
            M("slider-dots", [
              M(
                "slider-dot",
                `
 transform: translateX(50%, -50%);
 `
              ),
            ]),
            te("vertical", [
              M("slider-handles", [
                M(
                  "slider-handle-wrapper",
                  `
 transform: translate(-50%, -50%);
 `
                ),
              ]),
              M("slider-marks", [
                M(
                  "slider-mark",
                  `
 transform: translateY(calc(-50% + var(--n-dot-height) / 2));
 `
                ),
              ]),
              M("slider-dots", [
                M(
                  "slider-dot",
                  `
 transform: translateX(-50%) translateY(0);
 `
                ),
              ]),
            ]),
          ]),
          te(
            "vertical",
            `
 padding: 0 calc((var(--n-handle-size) - var(--n-rail-height)) / 2);
 width: var(--n-rail-width-vertical);
 height: 100%;
 `,
            [
              M(
                "slider-handles",
                `
 top: calc(var(--n-handle-size) / 2);
 right: 0;
 bottom: calc(var(--n-handle-size) / 2);
 left: 0;
 `,
                [
                  M(
                    "slider-handle-wrapper",
                    `
 top: unset;
 left: 50%;
 transform: translate(-50%, 50%);
 `
                  ),
                ]
              ),
              M(
                "slider-rail",
                `
 height: 100%;
 `,
                [
                  ne(
                    "fill",
                    `
 top: unset;
 right: 0;
 bottom: unset;
 left: 0;
 `
                  ),
                ]
              ),
              te(
                "with-mark",
                `
 width: var(--n-rail-width-vertical);
 margin: 0 32px 0 8px;
 `
              ),
              M(
                "slider-marks",
                `
 top: calc(var(--n-handle-size) / 2);
 right: unset;
 bottom: calc(var(--n-handle-size) / 2);
 left: 22px;
 font-size: var(--n-mark-font-size);
 `,
                [
                  M(
                    "slider-mark",
                    `
 transform: translateY(50%);
 white-space: nowrap;
 `
                  ),
                ]
              ),
              M(
                "slider-dots",
                `
 top: calc(var(--n-handle-size) / 2);
 right: unset;
 bottom: calc(var(--n-handle-size) / 2);
 left: 50%;
 `,
                [
                  M(
                    "slider-dot",
                    `
 transform: translateX(-50%) translateY(50%);
 `
                  ),
                ]
              ),
            ]
          ),
          te(
            "disabled",
            `
 cursor: not-allowed;
 opacity: var(--n-opacity-disabled);
 `,
            [
              M(
                "slider-handle",
                `
 cursor: not-allowed;
 `
              ),
            ]
          ),
          te(
            "with-mark",
            `
 width: 100%;
 margin: 8px 0 32px 0;
 `
          ),
          q("&:hover", [
            M("slider-rail", { backgroundColor: "var(--n-rail-color-hover)" }, [
              ne("fill", { backgroundColor: "var(--n-fill-color-hover)" }),
            ]),
            M("slider-handle", {
              boxShadow: "var(--n-handle-box-shadow-hover)",
            }),
          ]),
          te("active", [
            M("slider-rail", { backgroundColor: "var(--n-rail-color-hover)" }, [
              ne("fill", { backgroundColor: "var(--n-fill-color-hover)" }),
            ]),
            M("slider-handle", {
              boxShadow: "var(--n-handle-box-shadow-hover)",
            }),
          ]),
          M(
            "slider-marks",
            `
 position: absolute;
 top: 18px;
 left: calc(var(--n-handle-size) / 2);
 right: calc(var(--n-handle-size) / 2);
 `,
            [
              M(
                "slider-mark",
                `
 position: absolute;
 transform: translateX(-50%);
 white-space: nowrap;
 `
              ),
            ]
          ),
          M(
            "slider-rail",
            `
 width: 100%;
 position: relative;
 height: var(--n-rail-height);
 background-color: var(--n-rail-color);
 transition: background-color .3s var(--n-bezier);
 border-radius: calc(var(--n-rail-height) / 2);
 `,
            [
              ne(
                "fill",
                `
 position: absolute;
 top: 0;
 bottom: 0;
 border-radius: calc(var(--n-rail-height) / 2);
 transition: background-color .3s var(--n-bezier);
 background-color: var(--n-fill-color);
 `
              ),
            ]
          ),
          M(
            "slider-handles",
            `
 position: absolute;
 top: 0;
 right: calc(var(--n-handle-size) / 2);
 bottom: 0;
 left: calc(var(--n-handle-size) / 2);
 `,
            [
              M(
                "slider-handle-wrapper",
                `
 outline: none;
 position: absolute;
 top: 50%;
 transform: translate(-50%, -50%);
 cursor: pointer;
 display: flex;
 `,
                [
                  M(
                    "slider-handle",
                    `
 height: var(--n-handle-size);
 width: var(--n-handle-size);
 border-radius: 50%;
 overflow: hidden;
 transition: box-shadow .2s var(--n-bezier), background-color .3s var(--n-bezier);
 background-color: var(--n-handle-color);
 box-shadow: var(--n-handle-box-shadow);
 `,
                    [
                      q(
                        "&:hover",
                        `
 box-shadow: var(--n-handle-box-shadow-hover);
 `
                      ),
                    ]
                  ),
                  q("&:focus", [
                    M(
                      "slider-handle",
                      `
 box-shadow: var(--n-handle-box-shadow-focus);
 `,
                      [
                        q(
                          "&:hover",
                          `
 box-shadow: var(--n-handle-box-shadow-active);
 `
                        ),
                      ]
                    ),
                  ]),
                ]
              ),
            ]
          ),
          M(
            "slider-dots",
            `
 position: absolute;
 top: 50%;
 left: calc(var(--n-handle-size) / 2);
 right: calc(var(--n-handle-size) / 2);
 `,
            [
              te("transition-disabled", [M("slider-dot", "transition: none;")]),
              M(
                "slider-dot",
                `
 transition:
 border-color .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier),
 background-color .3s var(--n-bezier);
 position: absolute;
 transform: translate(-50%, -50%);
 height: var(--n-dot-height);
 width: var(--n-dot-width);
 border-radius: var(--n-dot-border-radius);
 overflow: hidden;
 box-sizing: border-box;
 border: var(--n-dot-border);
 background-color: var(--n-dot-color);
 `,
                [te("active", "border: var(--n-dot-border-active);")]
              ),
            ]
          ),
        ]
      ),
      M(
        "slider-handle-indicator",
        `
 font-size: var(--n-font-size);
 padding: 6px 10px;
 border-radius: var(--n-indicator-border-radius);
 color: var(--n-indicator-text-color);
 background-color: var(--n-indicator-color);
 box-shadow: var(--n-indicator-box-shadow);
 `,
        [Hs()]
      ),
      M(
        "slider-handle-indicator",
        `
 font-size: var(--n-font-size);
 padding: 6px 10px;
 border-radius: var(--n-indicator-border-radius);
 color: var(--n-indicator-text-color);
 background-color: var(--n-indicator-color);
 box-shadow: var(--n-indicator-box-shadow);
 `,
        [
          te(
            "top",
            `
 margin-bottom: 12px;
 `
          ),
          te(
            "right",
            `
 margin-left: 12px;
 `
          ),
          te(
            "bottom",
            `
 margin-top: 12px;
 `
          ),
          te(
            "left",
            `
 margin-right: 12px;
 `
          ),
          Hs(),
        ]
      ),
      Pl(
        M("slider", [
          M("slider-dot", "background-color: var(--n-dot-color-modal);"),
        ])
      ),
      Nu(
        M("slider", [
          M("slider-dot", "background-color: var(--n-dot-color-popover);"),
        ])
      ),
    ]),
    a6 = 0,
    l6 = Object.assign(Object.assign({}, Ye.props), {
      to: ar.propTo,
      defaultValue: { type: [Number, Array], default: 0 },
      marks: Object,
      disabled: { type: Boolean, default: void 0 },
      formatTooltip: Function,
      keyboard: { type: Boolean, default: !0 },
      min: { type: Number, default: 0 },
      max: { type: Number, default: 100 },
      step: { type: [Number, String], default: 1 },
      range: Boolean,
      value: [Number, Array],
      placement: String,
      showTooltip: { type: Boolean, default: void 0 },
      tooltip: { type: Boolean, default: !0 },
      vertical: Boolean,
      reverse: Boolean,
      "onUpdate:value": [Function, Array],
      onUpdateValue: [Function, Array],
      onDragstart: [Function],
      onDragend: [Function],
    }),
    zl = $e({
      name: "Slider",
      props: l6,
      setup(t) {
        const {
            mergedClsPrefixRef: e,
            namespaceRef: n,
            inlineThemeDisabled: r,
          } = Ct(t),
          i = Ye("Slider", "-slider", s6, mz, t, e),
          o = U(null),
          [s, a] = pv(),
          [l, c] = pv(),
          u = U(new Set()),
          d = eo(t),
          { mergedDisabledRef: h } = d,
          g = ce(() => {
            const { step: G } = t;
            if (Number(G) <= 0 || G === "mark") return 0;
            const X = G.toString();
            let V = 0;
            return X.includes(".") && (V = X.length - X.indexOf(".") - 1), V;
          }),
          f = U(t.defaultValue),
          p = We(t, "value"),
          b = li(p, f),
          m = ce(() => {
            const { value: G } = b;
            return (t.range ? G : [G]).map(z);
          }),
          _ = ce(() => m.value.length > 2),
          R = ce(() =>
            t.placement === void 0
              ? t.vertical
                ? "right"
                : "top"
              : t.placement
          ),
          S = ce(() => {
            const { marks: G } = t;
            return G ? Object.keys(G).map(parseFloat) : null;
          }),
          x = U(-1),
          E = U(-1),
          w = U(-1),
          v = U(!1),
          y = U(!1),
          T = ce(() => {
            const { vertical: G, reverse: X } = t;
            return G ? (X ? "top" : "bottom") : X ? "right" : "left";
          }),
          A = ce(() => {
            if (_.value) return;
            const G = m.value,
              X = ee(t.range ? Math.min(...G) : t.min),
              V = ee(t.range ? Math.max(...G) : G[0]),
              { value: me } = T;
            return t.vertical
              ? { [me]: `${X}%`, height: `${V - X}%` }
              : { [me]: `${X}%`, width: `${V - X}%` };
          }),
          I = ce(() => {
            const G = [],
              { marks: X } = t;
            if (X) {
              const V = m.value.slice();
              V.sort((Ne, Fe) => Ne - Fe);
              const { value: me } = T,
                { value: we } = _,
                { range: Pe } = t,
                ze = we
                  ? () => !1
                  : (Ne) =>
                      Pe ? Ne >= V[0] && Ne <= V[V.length - 1] : Ne <= V[0];
              for (const Ne of Object.keys(X)) {
                const Fe = Number(Ne);
                G.push({
                  active: ze(Fe),
                  label: X[Ne],
                  style: { [me]: `${ee(Fe)}%` },
                });
              }
            }
            return G;
          });
        function L(G, X) {
          const V = ee(G),
            { value: me } = T;
          return { [me]: `${V}%`, zIndex: X === x.value ? 1 : 0 };
        }
        function j(G) {
          return t.showTooltip || w.value === G || (x.value === G && v.value);
        }
        function k(G) {
          return v.value ? !(x.value === G && E.value === G) : !0;
        }
        function O(G) {
          var X;
          ~G &&
            ((x.value = G),
            (X = s.get(G)) === null || X === void 0 || X.focus());
        }
        function D() {
          l.forEach((G, X) => {
            j(X) && G.syncPosition();
          });
        }
        function Y(G) {
          const { "onUpdate:value": X, onUpdateValue: V } = t,
            { nTriggerFormInput: me, nTriggerFormChange: we } = d;
          V && Ke(V, G), X && Ke(X, G), (f.value = G), me(), we();
        }
        function se(G) {
          const { range: X } = t;
          if (X) {
            if (Array.isArray(G)) {
              const { value: V } = m;
              G.join() !== V.join() && Y(G);
            }
          } else Array.isArray(G) || (m.value[0] !== G && Y(G));
        }
        function de(G, X) {
          if (t.range) {
            const V = m.value.slice();
            V.splice(X, 1, G), se(V);
          } else se(G);
        }
        function fe(G, X, V) {
          const me = V !== void 0;
          V || (V = G - X > 0 ? 1 : -1);
          const we = S.value || [],
            { step: Pe } = t;
          if (Pe === "mark") {
            const Fe = _e(G, we.concat(X), me ? V : void 0);
            return Fe ? Fe.value : X;
          }
          if (Pe <= 0) return X;
          const { value: ze } = g;
          let Ne;
          if (me) {
            const Fe = Number((X / Pe).toFixed(ze)),
              Qe = Math.floor(Fe),
              It = Fe > Qe ? Qe : Qe - 1,
              rt = Fe < Qe ? Qe : Qe + 1;
            Ne = _e(
              X,
              [
                Number((It * Pe).toFixed(ze)),
                Number((rt * Pe).toFixed(ze)),
                ...we,
              ],
              V
            );
          } else {
            const Fe = K(G);
            Ne = _e(G, [...we, Fe]);
          }
          return Ne ? z(Ne.value) : X;
        }
        function z(G) {
          return Math.min(t.max, Math.max(t.min, G));
        }
        function ee(G) {
          const { max: X, min: V } = t;
          return ((G - V) / (X - V)) * 100;
        }
        function ue(G) {
          const { max: X, min: V } = t;
          return V + (X - V) * G;
        }
        function K(G) {
          const { step: X, min: V } = t;
          if (Number(X) <= 0 || X === "mark") return G;
          const me = Math.round((G - V) / X) * X + V;
          return Number(me.toFixed(g.value));
        }
        function _e(G, X = S.value, V) {
          if (!(X != null && X.length)) return null;
          let me = null,
            we = -1;
          for (; ++we < X.length; ) {
            const Pe = X[we] - G,
              ze = Math.abs(Pe);
            (V === void 0 || Pe * V > 0) &&
              (me === null || ze < me.distance) &&
              (me = { index: we, distance: ze, value: X[we] });
          }
          return me;
        }
        function ie(G) {
          const X = o.value;
          if (!X) return;
          const V = gv(G) ? G.touches[0] : G,
            me = X.getBoundingClientRect();
          let we;
          return (
            t.vertical
              ? (we = (me.bottom - V.clientY) / me.height)
              : (we = (V.clientX - me.left) / me.width),
            t.reverse && (we = 1 - we),
            ue(we)
          );
        }
        function pe(G) {
          if (h.value || !t.keyboard) return;
          const { vertical: X, reverse: V } = t;
          switch (G.key) {
            case "ArrowUp":
              G.preventDefault(), re(X && V ? -1 : 1);
              break;
            case "ArrowRight":
              G.preventDefault(), re(!X && V ? -1 : 1);
              break;
            case "ArrowDown":
              G.preventDefault(), re(X && V ? 1 : -1);
              break;
            case "ArrowLeft":
              G.preventDefault(), re(!X && V ? 1 : -1);
              break;
          }
        }
        function re(G) {
          const X = x.value;
          if (X === -1) return;
          const { step: V } = t,
            me = m.value[X],
            we = Number(V) <= 0 || V === "mark" ? me : me + V * G;
          de(fe(we, me, G > 0 ? 1 : -1), X);
        }
        function ge(G) {
          var X, V;
          if (h.value || (!gv(G) && G.button !== a6)) return;
          const me = ie(G);
          if (me === void 0) return;
          const we = m.value.slice(),
            Pe = t.range
              ? (V =
                  (X = _e(me, we)) === null || X === void 0
                    ? void 0
                    : X.index) !== null && V !== void 0
                ? V
                : -1
              : 0;
          Pe !== -1 &&
            (G.preventDefault(), O(Pe), ke(), de(fe(me, m.value[Pe]), Pe));
        }
        function ke() {
          v.value ||
            ((v.value = !0),
            t.onDragstart && Ke(t.onDragstart),
            kt("touchend", document, $),
            kt("mouseup", document, $),
            kt("touchmove", document, P),
            kt("mousemove", document, P));
        }
        function Me() {
          v.value &&
            ((v.value = !1),
            t.onDragend && Ke(t.onDragend),
            mt("touchend", document, $),
            mt("mouseup", document, $),
            mt("touchmove", document, P),
            mt("mousemove", document, P));
        }
        function P(G) {
          const { value: X } = x;
          if (!v.value || X === -1) {
            Me();
            return;
          }
          const V = ie(G);
          V !== void 0 && de(fe(V, m.value[X]), X);
        }
        function $() {
          Me();
        }
        function H(G) {
          (x.value = G), h.value || (w.value = G);
        }
        function ae(G) {
          x.value === G && ((x.value = -1), Me()),
            w.value === G && (w.value = -1);
        }
        function le(G) {
          w.value = G;
        }
        function he(G) {
          w.value === G && (w.value = -1);
        }
        Et(x, (G, X) => void Ht(() => (E.value = X))),
          Et(b, () => {
            if (t.marks) {
              if (y.value) return;
              (y.value = !0),
                Ht(() => {
                  y.value = !1;
                });
            }
            Ht(D);
          }),
          Qt(() => {
            Me();
          });
        const Z = ce(() => {
            const {
              self: {
                markFontSize: G,
                railColor: X,
                railColorHover: V,
                fillColor: me,
                fillColorHover: we,
                handleColor: Pe,
                opacityDisabled: ze,
                dotColor: Ne,
                dotColorModal: Fe,
                handleBoxShadow: Qe,
                handleBoxShadowHover: It,
                handleBoxShadowActive: rt,
                handleBoxShadowFocus: ln,
                dotBorder: ve,
                dotBoxShadow: Le,
                railHeight: Re,
                railWidthVertical: st,
                handleSize: bt,
                dotHeight: Rt,
                dotWidth: Kt,
                dotBorderRadius: _t,
                fontSize: en,
                dotBorderActive: Ft,
                dotColorPopover: Vn,
              },
              common: { cubicBezierEaseInOut: dn },
            } = i.value;
            return {
              "--n-bezier": dn,
              "--n-dot-border": ve,
              "--n-dot-border-active": Ft,
              "--n-dot-border-radius": _t,
              "--n-dot-box-shadow": Le,
              "--n-dot-color": Ne,
              "--n-dot-color-modal": Fe,
              "--n-dot-color-popover": Vn,
              "--n-dot-height": Rt,
              "--n-dot-width": Kt,
              "--n-fill-color": me,
              "--n-fill-color-hover": we,
              "--n-font-size": en,
              "--n-handle-box-shadow": Qe,
              "--n-handle-box-shadow-active": rt,
              "--n-handle-box-shadow-focus": ln,
              "--n-handle-box-shadow-hover": It,
              "--n-handle-color": Pe,
              "--n-handle-size": bt,
              "--n-opacity-disabled": ze,
              "--n-rail-color": X,
              "--n-rail-color-hover": V,
              "--n-rail-height": Re,
              "--n-rail-width-vertical": st,
              "--n-mark-font-size": G,
            };
          }),
          W = r ? jt("slider", void 0, Z, t) : void 0,
          Q = ce(() => {
            const {
              self: {
                fontSize: G,
                indicatorColor: X,
                indicatorBoxShadow: V,
                indicatorTextColor: me,
                indicatorBorderRadius: we,
              },
            } = i.value;
            return {
              "--n-font-size": G,
              "--n-indicator-border-radius": we,
              "--n-indicator-box-shadow": V,
              "--n-indicator-color": X,
              "--n-indicator-text-color": me,
            };
          }),
          J = r ? jt("slider-indicator", void 0, Q, t) : void 0;
        return {
          mergedClsPrefix: e,
          namespace: n,
          uncontrolledValue: f,
          mergedValue: b,
          mergedDisabled: h,
          mergedPlacement: R,
          isMounted: Qi(),
          adjustedTo: ar(t),
          dotTransitionDisabled: y,
          markInfos: I,
          isShowTooltip: j,
          shouldKeepTooltipTransition: k,
          handleRailRef: o,
          setHandleRefs: a,
          setFollowerRefs: c,
          fillStyle: A,
          getHandleStyle: L,
          activeIndex: x,
          arrifiedValues: m,
          followerEnabledIndexSet: u,
          handleRailMouseDown: ge,
          handleHandleFocus: H,
          handleHandleBlur: ae,
          handleHandleMouseEnter: le,
          handleHandleMouseLeave: he,
          handleRailKeyDown: pe,
          indicatorCssVars: r ? void 0 : Q,
          indicatorThemeClass: J == null ? void 0 : J.themeClass,
          indicatorOnRender: J == null ? void 0 : J.onRender,
          cssVars: r ? void 0 : Z,
          themeClass: W == null ? void 0 : W.themeClass,
          onRender: W == null ? void 0 : W.onRender,
        };
      },
      render() {
        var t;
        const { mergedClsPrefix: e, themeClass: n, formatTooltip: r } = this;
        return (
          (t = this.onRender) === null || t === void 0 || t.call(this),
          C(
            "div",
            {
              class: [
                `${e}-slider`,
                n,
                {
                  [`${e}-slider--disabled`]: this.mergedDisabled,
                  [`${e}-slider--active`]: this.activeIndex !== -1,
                  [`${e}-slider--with-mark`]: this.marks,
                  [`${e}-slider--vertical`]: this.vertical,
                  [`${e}-slider--reverse`]: this.reverse,
                },
              ],
              style: this.cssVars,
              onKeydown: this.handleRailKeyDown,
              onMousedown: this.handleRailMouseDown,
              onTouchstart: this.handleRailMouseDown,
            },
            C(
              "div",
              { class: `${e}-slider-rail` },
              C("div", {
                class: `${e}-slider-rail__fill`,
                style: this.fillStyle,
              }),
              this.marks
                ? C(
                    "div",
                    {
                      class: [
                        `${e}-slider-dots`,
                        this.dotTransitionDisabled &&
                          `${e}-slider-dots--transition-disabled`,
                      ],
                    },
                    this.markInfos.map((i) =>
                      C("div", {
                        key: i.label,
                        class: [
                          `${e}-slider-dot`,
                          { [`${e}-slider-dot--active`]: i.active },
                        ],
                        style: i.style,
                      })
                    )
                  )
                : null,
              C(
                "div",
                { ref: "handleRailRef", class: `${e}-slider-handles` },
                this.arrifiedValues.map((i, o) => {
                  const s = this.isShowTooltip(o);
                  return C(mg, null, {
                    default: () => [
                      C(vg, null, {
                        default: () =>
                          C(
                            "div",
                            {
                              ref: this.setHandleRefs(o),
                              class: `${e}-slider-handle-wrapper`,
                              tabindex: this.mergedDisabled ? -1 : 0,
                              style: this.getHandleStyle(i, o),
                              onFocus: () => {
                                this.handleHandleFocus(o);
                              },
                              onBlur: () => {
                                this.handleHandleBlur(o);
                              },
                              onMouseenter: () => {
                                this.handleHandleMouseEnter(o);
                              },
                              onMouseleave: () => {
                                this.handleHandleMouseLeave(o);
                              },
                            },
                            Lr(this.$slots.thumb, () => [
                              C("div", { class: `${e}-slider-handle` }),
                            ])
                          ),
                      }),
                      this.tooltip &&
                        C(
                          xg,
                          {
                            ref: this.setFollowerRefs(o),
                            show: s,
                            to: this.adjustedTo,
                            enabled:
                              (this.showTooltip && !this.range) ||
                              this.followerEnabledIndexSet.has(o),
                            teleportDisabled: this.adjustedTo === ar.tdkey,
                            placement: this.mergedPlacement,
                            containerClass: this.namespace,
                          },
                          {
                            default: () =>
                              C(
                                vn,
                                {
                                  name: "fade-in-scale-up-transition",
                                  appear: this.isMounted,
                                  css: this.shouldKeepTooltipTransition(o),
                                  onEnter: () => {
                                    this.followerEnabledIndexSet.add(o);
                                  },
                                  onAfterLeave: () => {
                                    this.followerEnabledIndexSet.delete(o);
                                  },
                                },
                                {
                                  default: () => {
                                    var a;
                                    return s
                                      ? ((a = this.indicatorOnRender) ===
                                          null ||
                                          a === void 0 ||
                                          a.call(this),
                                        C(
                                          "div",
                                          {
                                            class: [
                                              `${e}-slider-handle-indicator`,
                                              this.indicatorThemeClass,
                                              `${e}-slider-handle-indicator--${this.mergedPlacement}`,
                                            ],
                                            style: this.indicatorCssVars,
                                          },
                                          typeof r == "function" ? r(i) : i
                                        ))
                                      : null;
                                  },
                                }
                              ),
                          }
                        ),
                    ],
                  });
                })
              ),
              this.marks
                ? C(
                    "div",
                    { class: `${e}-slider-marks` },
                    this.markInfos.map((i) =>
                      C(
                        "div",
                        {
                          key: i.label,
                          class: `${e}-slider-mark`,
                          style: i.style,
                        },
                        i.label
                      )
                    )
                  )
                : null
            )
          )
        );
      },
    }),
    c6 = { name: "Split", common: Oe },
    u6 = c6,
    d6 = M(
      "switch",
      `
 height: var(--n-height);
 min-width: var(--n-width);
 vertical-align: middle;
 user-select: none;
 -webkit-user-select: none;
 display: inline-flex;
 outline: none;
 justify-content: center;
 align-items: center;
`,
      [
        ne(
          "children-placeholder",
          `
 height: var(--n-rail-height);
 display: flex;
 flex-direction: column;
 overflow: hidden;
 pointer-events: none;
 visibility: hidden;
 `
        ),
        ne(
          "rail-placeholder",
          `
 display: flex;
 flex-wrap: none;
 `
        ),
        ne(
          "button-placeholder",
          `
 width: calc(1.75 * var(--n-rail-height));
 height: var(--n-rail-height);
 `
        ),
        M(
          "base-loading",
          `
 position: absolute;
 top: 50%;
 left: 50%;
 transform: translateX(-50%) translateY(-50%);
 font-size: calc(var(--n-button-width) - 4px);
 color: var(--n-loading-color);
 transition: color .3s var(--n-bezier);
 `,
          [
            ii({
              left: "50%",
              top: "50%",
              originalTransform: "translateX(-50%) translateY(-50%)",
            }),
          ]
        ),
        ne(
          "checked, unchecked",
          `
 transition: color .3s var(--n-bezier);
 color: var(--n-text-color);
 box-sizing: border-box;
 position: absolute;
 white-space: nowrap;
 top: 0;
 bottom: 0;
 display: flex;
 align-items: center;
 line-height: 1;
 `
        ),
        ne(
          "checked",
          `
 right: 0;
 padding-right: calc(1.25 * var(--n-rail-height) - var(--n-offset));
 `
        ),
        ne(
          "unchecked",
          `
 left: 0;
 justify-content: flex-end;
 padding-left: calc(1.25 * var(--n-rail-height) - var(--n-offset));
 `
        ),
        q("&:focus", [
          ne(
            "rail",
            `
 box-shadow: var(--n-box-shadow-focus);
 `
          ),
        ]),
        te("round", [
          ne("rail", "border-radius: calc(var(--n-rail-height) / 2);", [
            ne("button", "border-radius: calc(var(--n-button-height) / 2);"),
          ]),
        ]),
        Zt("disabled", [
          Zt("icon", [
            te("rubber-band", [
              te("pressed", [
                ne("rail", [
                  ne("button", "max-width: var(--n-button-width-pressed);"),
                ]),
              ]),
              ne("rail", [
                q("&:active", [
                  ne("button", "max-width: var(--n-button-width-pressed);"),
                ]),
              ]),
              te("active", [
                te("pressed", [
                  ne("rail", [
                    ne(
                      "button",
                      "left: calc(100% - var(--n-offset) - var(--n-button-width-pressed));"
                    ),
                  ]),
                ]),
                ne("rail", [
                  q("&:active", [
                    ne(
                      "button",
                      "left: calc(100% - var(--n-offset) - var(--n-button-width-pressed));"
                    ),
                  ]),
                ]),
              ]),
            ]),
          ]),
        ]),
        te("active", [
          ne("rail", [
            ne(
              "button",
              "left: calc(100% - var(--n-button-width) - var(--n-offset))"
            ),
          ]),
        ]),
        ne(
          "rail",
          `
 overflow: hidden;
 height: var(--n-rail-height);
 min-width: var(--n-rail-width);
 border-radius: var(--n-rail-border-radius);
 cursor: pointer;
 position: relative;
 transition:
 opacity .3s var(--n-bezier),
 background .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier);
 background-color: var(--n-rail-color);
 `,
          [
            ne(
              "button-icon",
              `
 color: var(--n-icon-color);
 transition: color .3s var(--n-bezier);
 font-size: calc(var(--n-button-height) - 4px);
 position: absolute;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 display: flex;
 justify-content: center;
 align-items: center;
 line-height: 1;
 `,
              [ii()]
            ),
            ne(
              "button",
              `
 align-items: center;
 top: var(--n-offset);
 left: var(--n-offset);
 height: var(--n-button-height);
 width: var(--n-button-width-pressed);
 max-width: var(--n-button-width);
 border-radius: var(--n-button-border-radius);
 background-color: var(--n-button-color);
 box-shadow: var(--n-button-box-shadow);
 box-sizing: border-box;
 cursor: inherit;
 content: "";
 position: absolute;
 transition:
 background-color .3s var(--n-bezier),
 left .3s var(--n-bezier),
 opacity .3s var(--n-bezier),
 max-width .3s var(--n-bezier),
 box-shadow .3s var(--n-bezier);
 `
            ),
          ]
        ),
        te("active", [
          ne("rail", "background-color: var(--n-rail-color-active);"),
        ]),
        te("loading", [
          ne(
            "rail",
            `
 cursor: wait;
 `
          ),
        ]),
        te("disabled", [
          ne(
            "rail",
            `
 cursor: not-allowed;
 opacity: .5;
 `
          ),
        ]),
      ]
    ),
    h6 = Object.assign(Object.assign({}, Ye.props), {
      size: { type: String, default: "medium" },
      value: { type: [String, Number, Boolean], default: void 0 },
      loading: Boolean,
      defaultValue: { type: [String, Number, Boolean], default: !1 },
      disabled: { type: Boolean, default: void 0 },
      round: { type: Boolean, default: !0 },
      "onUpdate:value": [Function, Array],
      onUpdateValue: [Function, Array],
      checkedValue: { type: [String, Number, Boolean], default: !0 },
      uncheckedValue: { type: [String, Number, Boolean], default: !1 },
      railStyle: Function,
      rubberBand: { type: Boolean, default: !0 },
      onChange: [Function, Array],
    });
  let xa;
  const Fl = $e({
      name: "Switch",
      props: h6,
      setup(t) {
        xa === void 0 &&
          (typeof CSS < "u"
            ? typeof CSS.supports < "u"
              ? (xa = CSS.supports("width", "max(1px)"))
              : (xa = !1)
            : (xa = !0));
        const { mergedClsPrefixRef: e, inlineThemeDisabled: n } = Ct(t),
          r = Ye("Switch", "-switch", d6, Iz, t, e),
          i = eo(t),
          { mergedSizeRef: o, mergedDisabledRef: s } = i,
          a = U(t.defaultValue),
          l = We(t, "value"),
          c = li(l, a),
          u = ce(() => c.value === t.checkedValue),
          d = U(!1),
          h = U(!1),
          g = ce(() => {
            const { railStyle: v } = t;
            if (v) return v({ focused: h.value, checked: u.value });
          });
        function f(v) {
          const { "onUpdate:value": y, onChange: T, onUpdateValue: A } = t,
            { nTriggerFormInput: I, nTriggerFormChange: L } = i;
          y && Ke(y, v), A && Ke(A, v), T && Ke(T, v), (a.value = v), I(), L();
        }
        function p() {
          const { nTriggerFormFocus: v } = i;
          v();
        }
        function b() {
          const { nTriggerFormBlur: v } = i;
          v();
        }
        function m() {
          t.loading ||
            s.value ||
            (c.value !== t.checkedValue
              ? f(t.checkedValue)
              : f(t.uncheckedValue));
        }
        function _() {
          (h.value = !0), p();
        }
        function R() {
          (h.value = !1), b(), (d.value = !1);
        }
        function S(v) {
          t.loading ||
            s.value ||
            (v.key === " " &&
              (c.value !== t.checkedValue
                ? f(t.checkedValue)
                : f(t.uncheckedValue),
              (d.value = !1)));
        }
        function x(v) {
          t.loading ||
            s.value ||
            (v.key === " " && (v.preventDefault(), (d.value = !0)));
        }
        const E = ce(() => {
            const { value: v } = o,
              {
                self: {
                  opacityDisabled: y,
                  railColor: T,
                  railColorActive: A,
                  buttonBoxShadow: I,
                  buttonColor: L,
                  boxShadowFocus: j,
                  loadingColor: k,
                  textColor: O,
                  iconColor: D,
                  [Te("buttonHeight", v)]: Y,
                  [Te("buttonWidth", v)]: se,
                  [Te("buttonWidthPressed", v)]: de,
                  [Te("railHeight", v)]: fe,
                  [Te("railWidth", v)]: z,
                  [Te("railBorderRadius", v)]: ee,
                  [Te("buttonBorderRadius", v)]: ue,
                },
                common: { cubicBezierEaseInOut: K },
              } = r.value;
            let _e, ie, pe;
            return (
              xa
                ? ((_e = `calc((${fe} - ${Y}) / 2)`),
                  (ie = `max(${fe}, ${Y})`),
                  (pe = `max(${z}, calc(${z} + ${Y} - ${fe}))`))
                : ((_e = wo((kn(fe) - kn(Y)) / 2)),
                  (ie = wo(Math.max(kn(fe), kn(Y)))),
                  (pe = kn(fe) > kn(Y) ? z : wo(kn(z) + kn(Y) - kn(fe)))),
              {
                "--n-bezier": K,
                "--n-button-border-radius": ue,
                "--n-button-box-shadow": I,
                "--n-button-color": L,
                "--n-button-width": se,
                "--n-button-width-pressed": de,
                "--n-button-height": Y,
                "--n-height": ie,
                "--n-offset": _e,
                "--n-opacity-disabled": y,
                "--n-rail-border-radius": ee,
                "--n-rail-color": T,
                "--n-rail-color-active": A,
                "--n-rail-height": fe,
                "--n-rail-width": z,
                "--n-width": pe,
                "--n-box-shadow-focus": j,
                "--n-loading-color": k,
                "--n-text-color": O,
                "--n-icon-color": D,
              }
            );
          }),
          w = n
            ? jt(
                "switch",
                ce(() => o.value[0]),
                E,
                t
              )
            : void 0;
        return {
          handleClick: m,
          handleBlur: R,
          handleFocus: _,
          handleKeyup: S,
          handleKeydown: x,
          mergedRailStyle: g,
          pressed: d,
          mergedClsPrefix: e,
          mergedValue: c,
          checked: u,
          mergedDisabled: s,
          cssVars: n ? void 0 : E,
          themeClass: w == null ? void 0 : w.themeClass,
          onRender: w == null ? void 0 : w.onRender,
        };
      },
      render() {
        const {
          mergedClsPrefix: t,
          mergedDisabled: e,
          checked: n,
          mergedRailStyle: r,
          onRender: i,
          $slots: o,
        } = this;
        i == null || i();
        const {
            checked: s,
            unchecked: a,
            icon: l,
            "checked-icon": c,
            "unchecked-icon": u,
          } = o,
          d = !(Es(l) && Es(c) && Es(u));
        return C(
          "div",
          {
            role: "switch",
            "aria-checked": n,
            class: [
              `${t}-switch`,
              this.themeClass,
              d && `${t}-switch--icon`,
              n && `${t}-switch--active`,
              e && `${t}-switch--disabled`,
              this.round && `${t}-switch--round`,
              this.loading && `${t}-switch--loading`,
              this.pressed && `${t}-switch--pressed`,
              this.rubberBand && `${t}-switch--rubber-band`,
            ],
            tabindex: this.mergedDisabled ? void 0 : 0,
            style: this.cssVars,
            onClick: this.handleClick,
            onFocus: this.handleFocus,
            onBlur: this.handleBlur,
            onKeyup: this.handleKeyup,
            onKeydown: this.handleKeydown,
          },
          C(
            "div",
            { class: `${t}-switch__rail`, "aria-hidden": "true", style: r },
            gt(s, (h) =>
              gt(a, (g) =>
                h || g
                  ? C(
                      "div",
                      {
                        "aria-hidden": !0,
                        class: `${t}-switch__children-placeholder`,
                      },
                      C(
                        "div",
                        { class: `${t}-switch__rail-placeholder` },
                        C("div", { class: `${t}-switch__button-placeholder` }),
                        h
                      ),
                      C(
                        "div",
                        { class: `${t}-switch__rail-placeholder` },
                        C("div", { class: `${t}-switch__button-placeholder` }),
                        g
                      )
                    )
                  : null
              )
            ),
            C(
              "div",
              { class: `${t}-switch__button` },
              gt(l, (h) =>
                gt(c, (g) =>
                  gt(u, (f) =>
                    C(Yo, null, {
                      default: () =>
                        this.loading
                          ? C(Ml, {
                              key: "loading",
                              clsPrefix: t,
                              strokeWidth: 20,
                            })
                          : this.checked && (g || h)
                          ? C(
                              "div",
                              {
                                class: `${t}-switch__button-icon`,
                                key: g ? "checked-icon" : "icon",
                              },
                              g || h
                            )
                          : !this.checked && (f || h)
                          ? C(
                              "div",
                              {
                                class: `${t}-switch__button-icon`,
                                key: f ? "unchecked-icon" : "icon",
                              },
                              f || h
                            )
                          : null,
                    })
                  )
                )
              ),
              gt(
                s,
                (h) =>
                  h &&
                  C("div", { key: "checked", class: `${t}-switch__checked` }, h)
              ),
              gt(
                a,
                (h) =>
                  h &&
                  C(
                    "div",
                    { key: "unchecked", class: `${t}-switch__unchecked` },
                    h
                  )
              )
            )
          )
        );
      },
    }),
    Gg = "n-tabs",
    HC = {
      tab: [String, Number, Object, Function],
      name: { type: [String, Number], required: !0 },
      disabled: Boolean,
      displayDirective: { type: String, default: "if" },
      closable: { type: Boolean, default: void 0 },
      tabProps: Object,
      label: [String, Number, Object, Function],
    },
    f6 = $e({
      __TAB_PANE__: !0,
      name: "TabPane",
      alias: ["TabPanel"],
      props: HC,
      setup(t) {
        const e = Ve(Gg, null);
        return (
          e || jo("tab-pane", "`n-tab-pane` must be placed inside `n-tabs`."),
          {
            style: e.paneStyleRef,
            class: e.paneClassRef,
            mergedClsPrefix: e.mergedClsPrefixRef,
          }
        );
      },
      render() {
        return C(
          "div",
          {
            class: [`${this.mergedClsPrefix}-tab-pane`, this.class],
            style: this.style,
          },
          this.$slots
        );
      },
    }),
    g6 = Object.assign(
      {
        internalLeftPadded: Boolean,
        internalAddable: Boolean,
        internalCreatedByPane: Boolean,
      },
      zu(HC, ["displayDirective"])
    ),
    ff = $e({
      __TAB__: !0,
      inheritAttrs: !1,
      name: "Tab",
      props: g6,
      setup(t) {
        const {
          mergedClsPrefixRef: e,
          valueRef: n,
          typeRef: r,
          closableRef: i,
          tabStyleRef: o,
          addTabStyleRef: s,
          tabClassRef: a,
          addTabClassRef: l,
          tabChangeIdRef: c,
          onBeforeLeaveRef: u,
          triggerRef: d,
          handleAdd: h,
          activateTab: g,
          handleClose: f,
        } = Ve(Gg);
        return {
          trigger: d,
          mergedClosable: ce(() => {
            if (t.internalAddable) return !1;
            const { closable: p } = t;
            return p === void 0 ? i.value : p;
          }),
          style: o,
          addStyle: s,
          tabClass: a,
          addTabClass: l,
          clsPrefix: e,
          value: n,
          type: r,
          handleClose(p) {
            p.stopPropagation(), !t.disabled && f(t.name);
          },
          activateTab() {
            if (t.disabled) return;
            if (t.internalAddable) {
              h();
              return;
            }
            const { name: p } = t,
              b = ++c.id;
            if (p !== n.value) {
              const { value: m } = u;
              m
                ? Promise.resolve(m(t.name, n.value)).then((_) => {
                    _ && c.id === b && g(p);
                  })
                : g(p);
            }
          },
        };
      },
      render() {
        const {
            internalAddable: t,
            clsPrefix: e,
            name: n,
            disabled: r,
            label: i,
            tab: o,
            value: s,
            mergedClosable: a,
            trigger: l,
            $slots: { default: c },
          } = this,
          u = i ?? o;
        return C(
          "div",
          { class: `${e}-tabs-tab-wrapper` },
          this.internalLeftPadded
            ? C("div", { class: `${e}-tabs-tab-pad` })
            : null,
          C(
            "div",
            Object.assign(
              { key: n, "data-name": n, "data-disabled": r ? !0 : void 0 },
              qs(
                {
                  class: [
                    `${e}-tabs-tab`,
                    s === n && `${e}-tabs-tab--active`,
                    r && `${e}-tabs-tab--disabled`,
                    a && `${e}-tabs-tab--closable`,
                    t && `${e}-tabs-tab--addable`,
                    t ? this.addTabClass : this.tabClass,
                  ],
                  onClick: l === "click" ? this.activateTab : void 0,
                  onMouseenter: l === "hover" ? this.activateTab : void 0,
                  style: t ? this.addStyle : this.style,
                },
                this.internalCreatedByPane ? this.tabProps || {} : this.$attrs
              )
            ),
            C(
              "span",
              { class: `${e}-tabs-tab__label` },
              t
                ? C(
                    pt,
                    null,
                    C(
                      "div",
                      { class: `${e}-tabs-tab__height-placeholder` },
                      " "
                    ),
                    C(ht, { clsPrefix: e }, { default: () => C(Lg, null) })
                  )
                : c
                ? c()
                : typeof u == "object"
                ? u
                : wn(u ?? n)
            ),
            a && this.type === "card"
              ? C(ta, {
                  clsPrefix: e,
                  class: `${e}-tabs-tab__close`,
                  onClick: this.handleClose,
                  disabled: r,
                })
              : null
          )
        );
      },
    }),
    p6 = M(
      "tabs",
      `
 box-sizing: border-box;
 width: 100%;
 display: flex;
 flex-direction: column;
 transition:
 background-color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
`,
      [
        te("segment-type", [
          M("tabs-rail", [
            q("&.transition-disabled", [
              M(
                "tabs-capsule",
                `
 transition: none;
 `
              ),
            ]),
          ]),
        ]),
        te("top", [
          M(
            "tab-pane",
            `
 padding: var(--n-pane-padding-top) var(--n-pane-padding-right) var(--n-pane-padding-bottom) var(--n-pane-padding-left);
 `
          ),
        ]),
        te("left", [
          M(
            "tab-pane",
            `
 padding: var(--n-pane-padding-right) var(--n-pane-padding-bottom) var(--n-pane-padding-left) var(--n-pane-padding-top);
 `
          ),
        ]),
        te(
          "left, right",
          `
 flex-direction: row;
 `,
          [
            M(
              "tabs-bar",
              `
 width: 2px;
 right: 0;
 transition:
 top .2s var(--n-bezier),
 max-height .2s var(--n-bezier),
 background-color .3s var(--n-bezier);
 `
            ),
            M(
              "tabs-tab",
              `
 padding: var(--n-tab-padding-vertical);
 `
            ),
          ]
        ),
        te(
          "right",
          `
 flex-direction: row-reverse;
 `,
          [
            M(
              "tab-pane",
              `
 padding: var(--n-pane-padding-left) var(--n-pane-padding-top) var(--n-pane-padding-right) var(--n-pane-padding-bottom);
 `
            ),
            M(
              "tabs-bar",
              `
 left: 0;
 `
            ),
          ]
        ),
        te(
          "bottom",
          `
 flex-direction: column-reverse;
 justify-content: flex-end;
 `,
          [
            M(
              "tab-pane",
              `
 padding: var(--n-pane-padding-bottom) var(--n-pane-padding-right) var(--n-pane-padding-top) var(--n-pane-padding-left);
 `
            ),
            M(
              "tabs-bar",
              `
 top: 0;
 `
            ),
          ]
        ),
        M(
          "tabs-rail",
          `
 padding: 3px;
 border-radius: var(--n-tab-border-radius);
 width: 100%;
 background-color: var(--n-color-segment);
 transition: background-color .3s var(--n-bezier);
 display: flex;
 align-items: center;
 `,
          [
            M(
              "tabs-capsule",
              `
 border-radius: var(--n-tab-border-radius);
 position: absolute;
 pointer-events: none;
 background-color: var(--n-tab-color-segment);
 box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .08);
 transition: 0.3s;
 `
            ),
            M(
              "tabs-tab-wrapper",
              `
 flex-basis: 0;
 flex-grow: 1;
 display: flex;
 align-items: center;
 justify-content: center;
 `,
              [
                M(
                  "tabs-tab",
                  `
 overflow: hidden;
 border-radius: var(--n-tab-border-radius);
 width: 100%;
 display: flex;
 align-items: center;
 justify-content: center;
 `,
                  [
                    te(
                      "active",
                      `
 font-weight: var(--n-font-weight-strong);
 color: var(--n-tab-text-color-active);
 `
                    ),
                    q(
                      "&:hover",
                      `
 color: var(--n-tab-text-color-hover);
 `
                    ),
                  ]
                ),
              ]
            ),
          ]
        ),
        te("flex", [
          M("tabs-nav", { width: "100%" }, [
            M("tabs-wrapper", { width: "100%" }, [
              M("tabs-tab", { marginRight: 0 }),
            ]),
          ]),
        ]),
        M(
          "tabs-nav",
          `
 box-sizing: border-box;
 line-height: 1.5;
 display: flex;
 transition: border-color .3s var(--n-bezier);
 `,
          [
            ne(
              "prefix, suffix",
              `
 display: flex;
 align-items: center;
 `
            ),
            ne("prefix", "padding-right: 16px;"),
            ne("suffix", "padding-left: 16px;"),
          ]
        ),
        te("top, bottom", [
          M("tabs-nav-scroll-wrapper", [
            q(
              "&::before",
              `
 top: 0;
 bottom: 0;
 left: 0;
 width: 20px;
 `
            ),
            q(
              "&::after",
              `
 top: 0;
 bottom: 0;
 right: 0;
 width: 20px;
 `
            ),
            te("shadow-start", [
              q(
                "&::before",
                `
 box-shadow: inset 10px 0 8px -8px rgba(0, 0, 0, .12);
 `
              ),
            ]),
            te("shadow-end", [
              q(
                "&::after",
                `
 box-shadow: inset -10px 0 8px -8px rgba(0, 0, 0, .12);
 `
              ),
            ]),
          ]),
        ]),
        te("left, right", [
          M(
            "tabs-nav-scroll-content",
            `
 flex-direction: column;
 `
          ),
          M("tabs-nav-scroll-wrapper", [
            q(
              "&::before",
              `
 top: 0;
 left: 0;
 right: 0;
 height: 20px;
 `
            ),
            q(
              "&::after",
              `
 bottom: 0;
 left: 0;
 right: 0;
 height: 20px;
 `
            ),
            te("shadow-start", [
              q(
                "&::before",
                `
 box-shadow: inset 0 10px 8px -8px rgba(0, 0, 0, .12);
 `
              ),
            ]),
            te("shadow-end", [
              q(
                "&::after",
                `
 box-shadow: inset 0 -10px 8px -8px rgba(0, 0, 0, .12);
 `
              ),
            ]),
          ]),
        ]),
        M(
          "tabs-nav-scroll-wrapper",
          `
 flex: 1;
 position: relative;
 overflow: hidden;
 `,
          [
            M(
              "tabs-nav-y-scroll",
              `
 height: 100%;
 width: 100%;
 overflow-y: auto;
 scrollbar-width: none;
 `,
              [
                q(
                  "&::-webkit-scrollbar",
                  `
 width: 0;
 height: 0;
 `
                ),
              ]
            ),
            q(
              "&::before, &::after",
              `
 transition: box-shadow .3s var(--n-bezier);
 pointer-events: none;
 content: "";
 position: absolute;
 z-index: 1;
 `
            ),
          ]
        ),
        M(
          "tabs-nav-scroll-content",
          `
 display: flex;
 position: relative;
 min-width: 100%;
 min-height: 100%;
 width: fit-content;
 box-sizing: border-box;
 `
        ),
        M(
          "tabs-wrapper",
          `
 display: inline-flex;
 flex-wrap: nowrap;
 position: relative;
 `
        ),
        M(
          "tabs-tab-wrapper",
          `
 display: flex;
 flex-wrap: nowrap;
 flex-shrink: 0;
 flex-grow: 0;
 `
        ),
        M(
          "tabs-tab",
          `
 cursor: pointer;
 white-space: nowrap;
 flex-wrap: nowrap;
 display: inline-flex;
 align-items: center;
 color: var(--n-tab-text-color);
 font-size: var(--n-tab-font-size);
 background-clip: padding-box;
 padding: var(--n-tab-padding);
 transition:
 box-shadow .3s var(--n-bezier),
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 border-color .3s var(--n-bezier);
 `,
          [
            te("disabled", { cursor: "not-allowed" }),
            ne(
              "close",
              `
 margin-left: 6px;
 transition:
 background-color .3s var(--n-bezier),
 color .3s var(--n-bezier);
 `
            ),
            ne(
              "label",
              `
 display: flex;
 align-items: center;
 z-index: 1;
 `
            ),
          ]
        ),
        M(
          "tabs-bar",
          `
 position: absolute;
 bottom: 0;
 height: 2px;
 border-radius: 1px;
 background-color: var(--n-bar-color);
 transition:
 left .2s var(--n-bezier),
 max-width .2s var(--n-bezier),
 opacity .3s var(--n-bezier),
 background-color .3s var(--n-bezier);
 `,
          [
            q(
              "&.transition-disabled",
              `
 transition: none;
 `
            ),
            te(
              "disabled",
              `
 background-color: var(--n-tab-text-color-disabled)
 `
            ),
          ]
        ),
        M(
          "tabs-pane-wrapper",
          `
 position: relative;
 overflow: hidden;
 transition: max-height .2s var(--n-bezier);
 `
        ),
        M(
          "tab-pane",
          `
 color: var(--n-pane-text-color);
 width: 100%;
 transition:
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 opacity .2s var(--n-bezier);
 left: 0;
 right: 0;
 top: 0;
 `,
          [
            q(
              "&.next-transition-leave-active, &.prev-transition-leave-active, &.next-transition-enter-active, &.prev-transition-enter-active",
              `
 transition:
 color .3s var(--n-bezier),
 background-color .3s var(--n-bezier),
 transform .2s var(--n-bezier),
 opacity .2s var(--n-bezier);
 `
            ),
            q(
              "&.next-transition-leave-active, &.prev-transition-leave-active",
              `
 position: absolute;
 `
            ),
            q(
              "&.next-transition-enter-from, &.prev-transition-leave-to",
              `
 transform: translateX(32px);
 opacity: 0;
 `
            ),
            q(
              "&.next-transition-leave-to, &.prev-transition-enter-from",
              `
 transform: translateX(-32px);
 opacity: 0;
 `
            ),
            q(
              "&.next-transition-leave-from, &.next-transition-enter-to, &.prev-transition-leave-from, &.prev-transition-enter-to",
              `
 transform: translateX(0);
 opacity: 1;
 `
            ),
          ]
        ),
        M(
          "tabs-tab-pad",
          `
 box-sizing: border-box;
 width: var(--n-tab-gap);
 flex-grow: 0;
 flex-shrink: 0;
 `
        ),
        te("line-type, bar-type", [
          M(
            "tabs-tab",
            `
 font-weight: var(--n-tab-font-weight);
 box-sizing: border-box;
 vertical-align: bottom;
 `,
            [
              q("&:hover", { color: "var(--n-tab-text-color-hover)" }),
              te(
                "active",
                `
 color: var(--n-tab-text-color-active);
 font-weight: var(--n-tab-font-weight-active);
 `
              ),
              te("disabled", { color: "var(--n-tab-text-color-disabled)" }),
            ]
          ),
        ]),
        M("tabs-nav", [
          te("line-type", [
            te("top", [
              ne(
                "prefix, suffix",
                `
 border-bottom: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-nav-scroll-content",
                `
 border-bottom: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-bar",
                `
 bottom: -1px;
 `
              ),
            ]),
            te("left", [
              ne(
                "prefix, suffix",
                `
 border-right: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-nav-scroll-content",
                `
 border-right: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-bar",
                `
 right: -1px;
 `
              ),
            ]),
            te("right", [
              ne(
                "prefix, suffix",
                `
 border-left: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-nav-scroll-content",
                `
 border-left: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-bar",
                `
 left: -1px;
 `
              ),
            ]),
            te("bottom", [
              ne(
                "prefix, suffix",
                `
 border-top: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-nav-scroll-content",
                `
 border-top: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-bar",
                `
 top: -1px;
 `
              ),
            ]),
            ne(
              "prefix, suffix",
              `
 transition: border-color .3s var(--n-bezier);
 `
            ),
            M(
              "tabs-nav-scroll-content",
              `
 transition: border-color .3s var(--n-bezier);
 `
            ),
            M(
              "tabs-bar",
              `
 border-radius: 0;
 `
            ),
          ]),
          te("card-type", [
            ne(
              "prefix, suffix",
              `
 transition: border-color .3s var(--n-bezier);
 border-bottom: 1px solid var(--n-tab-border-color);
 `
            ),
            M(
              "tabs-pad",
              `
 flex-grow: 1;
 transition: border-color .3s var(--n-bezier);
 `
            ),
            M(
              "tabs-tab-pad",
              `
 transition: border-color .3s var(--n-bezier);
 `
            ),
            M(
              "tabs-tab",
              `
 font-weight: var(--n-tab-font-weight);
 border: 1px solid var(--n-tab-border-color);
 background-color: var(--n-tab-color);
 box-sizing: border-box;
 position: relative;
 vertical-align: bottom;
 display: flex;
 justify-content: space-between;
 font-size: var(--n-tab-font-size);
 color: var(--n-tab-text-color);
 `,
              [
                te(
                  "addable",
                  `
 padding-left: 8px;
 padding-right: 8px;
 font-size: 16px;
 `,
                  [
                    ne(
                      "height-placeholder",
                      `
 width: 0;
 font-size: var(--n-tab-font-size);
 `
                    ),
                    Zt("disabled", [
                      q(
                        "&:hover",
                        `
 color: var(--n-tab-text-color-hover);
 `
                      ),
                    ]),
                  ]
                ),
                te("closable", "padding-right: 8px;"),
                te(
                  "active",
                  `
 background-color: #0000;
 font-weight: var(--n-tab-font-weight-active);
 color: var(--n-tab-text-color-active);
 `
                ),
                te("disabled", "color: var(--n-tab-text-color-disabled);"),
              ]
            ),
            M(
              "tabs-scroll-padding",
              "border-bottom: 1px solid var(--n-tab-border-color);"
            ),
          ]),
          te("left, right", [
            M(
              "tabs-wrapper",
              `
 flex-direction: column;
 `,
              [
                M(
                  "tabs-tab-wrapper",
                  `
 flex-direction: column;
 `,
                  [
                    M(
                      "tabs-tab-pad",
                      `
 height: var(--n-tab-gap-vertical);
 width: 100%;
 `
                    ),
                  ]
                ),
              ]
            ),
          ]),
          te("top", [
            te("card-type", [
              M(
                "tabs-tab",
                `
 border-top-left-radius: var(--n-tab-border-radius);
 border-top-right-radius: var(--n-tab-border-radius);
 `,
                [
                  te(
                    "active",
                    `
 border-bottom: 1px solid #0000;
 `
                  ),
                ]
              ),
              M(
                "tabs-tab-pad",
                `
 border-bottom: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-pad",
                `
 border-bottom: 1px solid var(--n-tab-border-color);
 `
              ),
            ]),
          ]),
          te("left", [
            te("card-type", [
              M(
                "tabs-tab",
                `
 border-top-left-radius: var(--n-tab-border-radius);
 border-bottom-left-radius: var(--n-tab-border-radius);
 `,
                [
                  te(
                    "active",
                    `
 border-right: 1px solid #0000;
 `
                  ),
                ]
              ),
              M(
                "tabs-tab-pad",
                `
 border-right: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-pad",
                `
 border-right: 1px solid var(--n-tab-border-color);
 `
              ),
            ]),
          ]),
          te("right", [
            te("card-type", [
              M(
                "tabs-tab",
                `
 border-top-right-radius: var(--n-tab-border-radius);
 border-bottom-right-radius: var(--n-tab-border-radius);
 `,
                [
                  te(
                    "active",
                    `
 border-left: 1px solid #0000;
 `
                  ),
                ]
              ),
              M(
                "tabs-tab-pad",
                `
 border-left: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-pad",
                `
 border-left: 1px solid var(--n-tab-border-color);
 `
              ),
            ]),
          ]),
          te("bottom", [
            te("card-type", [
              M(
                "tabs-tab",
                `
 border-bottom-left-radius: var(--n-tab-border-radius);
 border-bottom-right-radius: var(--n-tab-border-radius);
 `,
                [
                  te(
                    "active",
                    `
 border-top: 1px solid #0000;
 `
                  ),
                ]
              ),
              M(
                "tabs-tab-pad",
                `
 border-top: 1px solid var(--n-tab-border-color);
 `
              ),
              M(
                "tabs-pad",
                `
 border-top: 1px solid var(--n-tab-border-color);
 `
              ),
            ]),
          ]),
        ]),
      ]
    ),
    m6 = Object.assign(Object.assign({}, Ye.props), {
      value: [String, Number],
      defaultValue: [String, Number],
      trigger: { type: String, default: "click" },
      type: { type: String, default: "bar" },
      closable: Boolean,
      justifyContent: String,
      size: { type: String, default: "medium" },
      placement: { type: String, default: "top" },
      tabStyle: [String, Object],
      tabClass: String,
      addTabStyle: [String, Object],
      addTabClass: String,
      barWidth: Number,
      paneClass: String,
      paneStyle: [String, Object],
      paneWrapperClass: String,
      paneWrapperStyle: [String, Object],
      addable: [Boolean, Object],
      tabsPadding: { type: Number, default: 0 },
      animated: Boolean,
      onBeforeLeave: Function,
      onAdd: Function,
      "onUpdate:value": [Function, Array],
      onUpdateValue: [Function, Array],
      onClose: [Function, Array],
      labelSize: String,
      activeName: [String, Number],
      onActiveNameChange: [Function, Array],
    }),
    v6 = $e({
      name: "Tabs",
      props: m6,
      setup(t, { slots: e }) {
        var n, r, i, o;
        const { mergedClsPrefixRef: s, inlineThemeDisabled: a } = Ct(t),
          l = Ye("Tabs", "-tabs", p6, Fz, t, s),
          c = U(null),
          u = U(null),
          d = U(null),
          h = U(null),
          g = U(null),
          f = U(null),
          p = U(!0),
          b = U(!0),
          m = Jc(t, ["labelSize", "size"]),
          _ = Jc(t, ["activeName", "value"]),
          R = U(
            (r =
              (n = _.value) !== null && n !== void 0 ? n : t.defaultValue) !==
              null && r !== void 0
              ? r
              : e.default
              ? (o =
                  (i = Hi(e.default())[0]) === null || i === void 0
                    ? void 0
                    : i.props) === null || o === void 0
                ? void 0
                : o.name
              : null
          ),
          S = li(_, R),
          x = { id: 0 },
          E = ce(() => {
            if (!(!t.justifyContent || t.type === "card"))
              return { display: "flex", justifyContent: t.justifyContent };
          });
        Et(S, () => {
          (x.id = 0), A(), I();
        });
        function w() {
          var Z;
          const { value: W } = S;
          return W === null
            ? null
            : (Z = c.value) === null || Z === void 0
            ? void 0
            : Z.querySelector(`[data-name="${W}"]`);
        }
        function v(Z) {
          if (t.type === "card") return;
          const { value: W } = u;
          if (!W) return;
          const Q = W.style.opacity === "0";
          if (Z) {
            const J = `${s.value}-tabs-bar--disabled`,
              { barWidth: G, placement: X } = t;
            if (
              (Z.dataset.disabled === "true"
                ? W.classList.add(J)
                : W.classList.remove(J),
              ["top", "bottom"].includes(X))
            ) {
              if (
                (T(["top", "maxHeight", "height"]),
                typeof G == "number" && Z.offsetWidth >= G)
              ) {
                const V = Math.floor((Z.offsetWidth - G) / 2) + Z.offsetLeft;
                (W.style.left = `${V}px`), (W.style.maxWidth = `${G}px`);
              } else
                (W.style.left = `${Z.offsetLeft}px`),
                  (W.style.maxWidth = `${Z.offsetWidth}px`);
              (W.style.width = "8192px"),
                Q && (W.style.transition = "none"),
                W.offsetWidth,
                Q && ((W.style.transition = ""), (W.style.opacity = "1"));
            } else {
              if (
                (T(["left", "maxWidth", "width"]),
                typeof G == "number" && Z.offsetHeight >= G)
              ) {
                const V = Math.floor((Z.offsetHeight - G) / 2) + Z.offsetTop;
                (W.style.top = `${V}px`), (W.style.maxHeight = `${G}px`);
              } else
                (W.style.top = `${Z.offsetTop}px`),
                  (W.style.maxHeight = `${Z.offsetHeight}px`);
              (W.style.height = "8192px"),
                Q && (W.style.transition = "none"),
                W.offsetHeight,
                Q && ((W.style.transition = ""), (W.style.opacity = "1"));
            }
          }
        }
        function y() {
          if (t.type === "card") return;
          const { value: Z } = u;
          Z && (Z.style.opacity = "0");
        }
        function T(Z) {
          const { value: W } = u;
          if (W) for (const Q of Z) W.style[Q] = "";
        }
        function A() {
          if (t.type === "card") return;
          const Z = w();
          Z ? v(Z) : y();
        }
        function I(Z) {
          var W;
          const Q = (W = g.value) === null || W === void 0 ? void 0 : W.$el;
          if (!Q) return;
          const J = w();
          if (!J) return;
          const { scrollLeft: G, offsetWidth: X } = Q,
            { offsetLeft: V, offsetWidth: me } = J;
          G > V
            ? Q.scrollTo({ top: 0, left: V, behavior: "smooth" })
            : V + me > G + X &&
              Q.scrollTo({ top: 0, left: V + me - X, behavior: "smooth" });
        }
        const L = U(null);
        let j = 0,
          k = null;
        function O(Z) {
          const W = L.value;
          if (W) {
            j = Z.getBoundingClientRect().height;
            const Q = `${j}px`,
              J = () => {
                (W.style.height = Q), (W.style.maxHeight = Q);
              };
            k ? (J(), k(), (k = null)) : (k = J);
          }
        }
        function D(Z) {
          const W = L.value;
          if (W) {
            const Q = Z.getBoundingClientRect().height,
              J = () => {
                document.body.offsetHeight,
                  (W.style.maxHeight = `${Q}px`),
                  (W.style.height = `${Math.max(j, Q)}px`);
              };
            k ? (k(), (k = null), J()) : (k = J);
          }
        }
        function Y() {
          const Z = L.value;
          if (Z) {
            (Z.style.maxHeight = ""), (Z.style.height = "");
            const { paneWrapperStyle: W } = t;
            if (typeof W == "string") Z.style.cssText = W;
            else if (W) {
              const { maxHeight: Q, height: J } = W;
              Q !== void 0 && (Z.style.maxHeight = Q),
                J !== void 0 && (Z.style.height = J);
            }
          }
        }
        const se = { value: [] },
          de = U("next");
        function fe(Z) {
          const W = S.value;
          let Q = "next";
          for (const J of se.value) {
            if (J === W) break;
            if (J === Z) {
              Q = "prev";
              break;
            }
          }
          (de.value = Q), z(Z);
        }
        function z(Z) {
          const {
            onActiveNameChange: W,
            onUpdateValue: Q,
            "onUpdate:value": J,
          } = t;
          W && Ke(W, Z), Q && Ke(Q, Z), J && Ke(J, Z), (R.value = Z);
        }
        function ee(Z) {
          const { onClose: W } = t;
          W && Ke(W, Z);
        }
        function ue() {
          const { value: Z } = u;
          if (!Z) return;
          const W = "transition-disabled";
          Z.classList.add(W), A(), Z.classList.remove(W);
        }
        const K = U(null);
        function _e({ disabledTransition: Z }) {
          const W = c.value;
          if (!W) return;
          Z && W.classList.add("transition-disabled");
          const Q = w();
          if (Q && K.value) {
            const J = Q.getBoundingClientRect();
            (K.value.style.width = `${J.width}px`),
              (K.value.style.height = `${J.height}px`),
              (K.value.style.transform = `translateX(${
                J.left -
                W.getBoundingClientRect().left -
                kn(getComputedStyle(W).paddingLeft)
              }px)`);
          }
          Z && W.classList.remove("transition-disabled");
        }
        Et([S], () => {
          t.type === "segment" &&
            Ht(() => {
              _e({ disabledTransition: !1 });
            });
        }),
          Vt(() => {
            t.type === "segment" && _e({ disabledTransition: !0 });
          });
        let ie = 0;
        function pe(Z) {
          var W;
          if (
            (Z.contentRect.width === 0 && Z.contentRect.height === 0) ||
            ie === Z.contentRect.width
          )
            return;
          ie = Z.contentRect.width;
          const { type: Q } = t;
          if (((Q === "line" || Q === "bar") && ue(), Q !== "segment")) {
            const { placement: J } = t;
            $(
              (J === "top" || J === "bottom"
                ? (W = g.value) === null || W === void 0
                  ? void 0
                  : W.$el
                : f.value) || null
            );
          }
        }
        const re = rh(pe, 64);
        Et([() => t.justifyContent, () => t.size], () => {
          Ht(() => {
            const { type: Z } = t;
            (Z === "line" || Z === "bar") && ue();
          });
        });
        const ge = U(!1);
        function ke(Z) {
          var W;
          const {
              target: Q,
              contentRect: { width: J },
            } = Z,
            G = Q.parentElement.offsetWidth;
          if (!ge.value) G < J && (ge.value = !0);
          else {
            const { value: X } = h;
            if (!X) return;
            G - J > X.$el.offsetWidth && (ge.value = !1);
          }
          $(((W = g.value) === null || W === void 0 ? void 0 : W.$el) || null);
        }
        const Me = rh(ke, 64);
        function P() {
          const { onAdd: Z } = t;
          Z && Z(),
            Ht(() => {
              const W = w(),
                { value: Q } = g;
              !W ||
                !Q ||
                Q.scrollTo({ left: W.offsetLeft, top: 0, behavior: "smooth" });
            });
        }
        function $(Z) {
          if (!Z) return;
          const { placement: W } = t;
          if (W === "top" || W === "bottom") {
            const { scrollLeft: Q, scrollWidth: J, offsetWidth: G } = Z;
            (p.value = Q <= 0), (b.value = Q + G >= J);
          } else {
            const { scrollTop: Q, scrollHeight: J, offsetHeight: G } = Z;
            (p.value = Q <= 0), (b.value = Q + G >= J);
          }
        }
        const H = rh((Z) => {
          $(Z.target);
        }, 64);
        vt(Gg, {
          triggerRef: We(t, "trigger"),
          tabStyleRef: We(t, "tabStyle"),
          tabClassRef: We(t, "tabClass"),
          addTabStyleRef: We(t, "addTabStyle"),
          addTabClassRef: We(t, "addTabClass"),
          paneClassRef: We(t, "paneClass"),
          paneStyleRef: We(t, "paneStyle"),
          mergedClsPrefixRef: s,
          typeRef: We(t, "type"),
          closableRef: We(t, "closable"),
          valueRef: S,
          tabChangeIdRef: x,
          onBeforeLeaveRef: We(t, "onBeforeLeave"),
          activateTab: fe,
          handleClose: ee,
          handleAdd: P,
        }),
          by(() => {
            A(), I();
          }),
          or(() => {
            const { value: Z } = d;
            if (!Z) return;
            const { value: W } = s,
              Q = `${W}-tabs-nav-scroll-wrapper--shadow-start`,
              J = `${W}-tabs-nav-scroll-wrapper--shadow-end`;
            p.value ? Z.classList.remove(Q) : Z.classList.add(Q),
              b.value ? Z.classList.remove(J) : Z.classList.add(J);
          });
        const ae = {
            syncBarPosition: () => {
              A();
            },
          },
          le = ce(() => {
            const { value: Z } = m,
              { type: W } = t,
              Q = {
                card: "Card",
                bar: "Bar",
                line: "Line",
                segment: "Segment",
              }[W],
              J = `${Z}${Q}`,
              {
                self: {
                  barColor: G,
                  closeIconColor: X,
                  closeIconColorHover: V,
                  closeIconColorPressed: me,
                  tabColor: we,
                  tabBorderColor: Pe,
                  paneTextColor: ze,
                  tabFontWeight: Ne,
                  tabBorderRadius: Fe,
                  tabFontWeightActive: Qe,
                  colorSegment: It,
                  fontWeightStrong: rt,
                  tabColorSegment: ln,
                  closeSize: ve,
                  closeIconSize: Le,
                  closeColorHover: Re,
                  closeColorPressed: st,
                  closeBorderRadius: bt,
                  [Te("panePadding", Z)]: Rt,
                  [Te("tabPadding", J)]: Kt,
                  [Te("tabPaddingVertical", J)]: _t,
                  [Te("tabGap", J)]: en,
                  [Te("tabGap", `${J}Vertical`)]: Ft,
                  [Te("tabTextColor", W)]: Vn,
                  [Te("tabTextColorActive", W)]: dn,
                  [Te("tabTextColorHover", W)]: bn,
                  [Te("tabTextColorDisabled", W)]: tn,
                  [Te("tabFontSize", Z)]: gi,
                },
                common: { cubicBezierEaseInOut: pi },
              } = l.value;
            return {
              "--n-bezier": pi,
              "--n-color-segment": It,
              "--n-bar-color": G,
              "--n-tab-font-size": gi,
              "--n-tab-text-color": Vn,
              "--n-tab-text-color-active": dn,
              "--n-tab-text-color-disabled": tn,
              "--n-tab-text-color-hover": bn,
              "--n-pane-text-color": ze,
              "--n-tab-border-color": Pe,
              "--n-tab-border-radius": Fe,
              "--n-close-size": ve,
              "--n-close-icon-size": Le,
              "--n-close-color-hover": Re,
              "--n-close-color-pressed": st,
              "--n-close-border-radius": bt,
              "--n-close-icon-color": X,
              "--n-close-icon-color-hover": V,
              "--n-close-icon-color-pressed": me,
              "--n-tab-color": we,
              "--n-tab-font-weight": Ne,
              "--n-tab-font-weight-active": Qe,
              "--n-tab-padding": Kt,
              "--n-tab-padding-vertical": _t,
              "--n-tab-gap": en,
              "--n-tab-gap-vertical": Ft,
              "--n-pane-padding-left": nr(Rt, "left"),
              "--n-pane-padding-right": nr(Rt, "right"),
              "--n-pane-padding-top": nr(Rt, "top"),
              "--n-pane-padding-bottom": nr(Rt, "bottom"),
              "--n-font-weight-strong": rt,
              "--n-tab-color-segment": ln,
            };
          }),
          he = a
            ? jt(
                "tabs",
                ce(() => `${m.value[0]}${t.type[0]}`),
                le,
                t
              )
            : void 0;
        return Object.assign(
          {
            mergedClsPrefix: s,
            mergedValue: S,
            renderedNames: new Set(),
            segmentCapsuleElRef: K,
            tabsPaneWrapperRef: L,
            tabsElRef: c,
            barElRef: u,
            addTabInstRef: h,
            xScrollInstRef: g,
            scrollWrapperElRef: d,
            addTabFixed: ge,
            tabWrapperStyle: E,
            handleNavResize: re,
            mergedSize: m,
            handleScroll: H,
            handleTabsResize: Me,
            cssVars: a ? void 0 : le,
            themeClass: he == null ? void 0 : he.themeClass,
            animationDirection: de,
            renderNameListRef: se,
            yScrollElRef: f,
            onAnimationBeforeLeave: O,
            onAnimationEnter: D,
            onAnimationAfterEnter: Y,
            onRender: he == null ? void 0 : he.onRender,
          },
          ae
        );
      },
      render() {
        const {
          mergedClsPrefix: t,
          type: e,
          placement: n,
          addTabFixed: r,
          addable: i,
          mergedSize: o,
          renderNameListRef: s,
          onRender: a,
          paneWrapperClass: l,
          paneWrapperStyle: c,
          $slots: { default: u, prefix: d, suffix: h },
        } = this;
        a == null || a();
        const g = u ? Hi(u()).filter((x) => x.type.__TAB_PANE__ === !0) : [],
          f = u ? Hi(u()).filter((x) => x.type.__TAB__ === !0) : [],
          p = !f.length,
          b = e === "card",
          m = e === "segment",
          _ = !b && !m && this.justifyContent;
        s.value = [];
        const R = () => {
            const x = C(
              "div",
              { style: this.tabWrapperStyle, class: [`${t}-tabs-wrapper`] },
              _
                ? null
                : C("div", {
                    class: `${t}-tabs-scroll-padding`,
                    style: { width: `${this.tabsPadding}px` },
                  }),
              p
                ? g.map(
                    (E, w) => (
                      s.value.push(E.props.name),
                      gh(
                        C(
                          ff,
                          Object.assign({}, E.props, {
                            internalCreatedByPane: !0,
                            internalLeftPadded:
                              w !== 0 &&
                              (!_ ||
                                _ === "center" ||
                                _ === "start" ||
                                _ === "end"),
                          }),
                          E.children ? { default: E.children.tab } : void 0
                        )
                      )
                    )
                  )
                : f.map(
                    (E, w) => (
                      s.value.push(E.props.name), gh(w !== 0 && !_ ? bv(E) : E)
                    )
                  ),
              !r && i && b ? vv(i, (p ? g.length : f.length) !== 0) : null,
              _
                ? null
                : C("div", {
                    class: `${t}-tabs-scroll-padding`,
                    style: { width: `${this.tabsPadding}px` },
                  })
            );
            return C(
              "div",
              { ref: "tabsElRef", class: `${t}-tabs-nav-scroll-content` },
              b && i
                ? C(
                    $o,
                    { onResize: this.handleTabsResize },
                    { default: () => x }
                  )
                : x,
              b ? C("div", { class: `${t}-tabs-pad` }) : null,
              b ? null : C("div", { ref: "barElRef", class: `${t}-tabs-bar` })
            );
          },
          S = m ? "top" : n;
        return C(
          "div",
          {
            class: [
              `${t}-tabs`,
              this.themeClass,
              `${t}-tabs--${e}-type`,
              `${t}-tabs--${o}-size`,
              _ && `${t}-tabs--flex`,
              `${t}-tabs--${S}`,
            ],
            style: this.cssVars,
          },
          C(
            "div",
            {
              class: [
                `${t}-tabs-nav--${e}-type`,
                `${t}-tabs-nav--${S}`,
                `${t}-tabs-nav`,
              ],
            },
            gt(d, (x) => x && C("div", { class: `${t}-tabs-nav__prefix` }, x)),
            m
              ? C(
                  "div",
                  { class: `${t}-tabs-rail`, ref: "tabsElRef" },
                  C(
                    "div",
                    { class: `${t}-tabs-capsule`, ref: "segmentCapsuleElRef" },
                    C(
                      "div",
                      { class: `${t}-tabs-wrapper` },
                      C("div", { class: `${t}-tabs-tab` })
                    )
                  ),
                  p
                    ? g.map(
                        (x, E) => (
                          s.value.push(x.props.name),
                          C(
                            ff,
                            Object.assign({}, x.props, {
                              internalCreatedByPane: !0,
                              internalLeftPadded: E !== 0,
                            }),
                            x.children ? { default: x.children.tab } : void 0
                          )
                        )
                      )
                    : f.map(
                        (x, E) => (
                          s.value.push(x.props.name), E === 0 ? x : bv(x)
                        )
                      )
                )
              : C(
                  $o,
                  { onResize: this.handleNavResize },
                  {
                    default: () =>
                      C(
                        "div",
                        {
                          class: `${t}-tabs-nav-scroll-wrapper`,
                          ref: "scrollWrapperElRef",
                        },
                        ["top", "bottom"].includes(S)
                          ? C(
                              BP,
                              {
                                ref: "xScrollInstRef",
                                onScroll: this.handleScroll,
                              },
                              { default: R }
                            )
                          : C(
                              "div",
                              {
                                class: `${t}-tabs-nav-y-scroll`,
                                onScroll: this.handleScroll,
                                ref: "yScrollElRef",
                              },
                              R()
                            )
                      ),
                  }
                ),
            r && i && b ? vv(i, !0) : null,
            gt(h, (x) => x && C("div", { class: `${t}-tabs-nav__suffix` }, x))
          ),
          p &&
            (this.animated && (S === "top" || S === "bottom")
              ? C(
                  "div",
                  {
                    ref: "tabsPaneWrapperRef",
                    style: c,
                    class: [`${t}-tabs-pane-wrapper`, l],
                  },
                  mv(
                    g,
                    this.mergedValue,
                    this.renderedNames,
                    this.onAnimationBeforeLeave,
                    this.onAnimationEnter,
                    this.onAnimationAfterEnter,
                    this.animationDirection
                  )
                )
              : mv(g, this.mergedValue, this.renderedNames))
        );
      },
    });
  function mv(t, e, n, r, i, o, s) {
    const a = [];
    return (
      t.forEach((l) => {
        const {
            name: c,
            displayDirective: u,
            "display-directive": d,
          } = l.props,
          h = (f) => u === f || d === f,
          g = e === c;
        if (
          (l.key !== void 0 && (l.key = c),
          g || h("show") || (h("show:lazy") && n.has(c)))
        ) {
          n.has(c) || n.add(c);
          const f = !h("if");
          a.push(f ? sr(l, [[$s, g]]) : l);
        }
      }),
      s
        ? C(
            Y1,
            {
              name: `${s}-transition`,
              onBeforeLeave: r,
              onEnter: i,
              onAfterEnter: o,
            },
            { default: () => a }
          )
        : a
    );
  }
  function vv(t, e) {
    return C(ff, {
      ref: "addTabInstRef",
      key: "__addable",
      name: "__addable",
      internalCreatedByPane: !0,
      internalAddable: !0,
      internalLeftPadded: e,
      disabled: typeof t == "object" && t.disabled,
    });
  }
  function bv(t) {
    const e = br(t);
    return (
      e.props
        ? (e.props.internalLeftPadded = !0)
        : (e.props = { internalLeftPadded: !0 }),
      e
    );
  }
  function gh(t) {
    return (
      Array.isArray(t.dynamicProps)
        ? t.dynamicProps.includes("internalLeftPadded") ||
          t.dynamicProps.push("internalLeftPadded")
        : (t.dynamicProps = ["internalLeftPadded"]),
      t
    );
  }
  const ra = "n-upload",
    WC = "__UPLOAD_DRAGGER__",
    b6 = $e({
      name: "UploadDragger",
      [WC]: !0,
      setup(t, { slots: e }) {
        const n = Ve(ra, null);
        return (
          n ||
            jo(
              "upload-dragger",
              "`n-upload-dragger` must be placed inside `n-upload`."
            ),
          () => {
            const {
              mergedClsPrefixRef: { value: r },
              mergedDisabledRef: { value: i },
              maxReachedRef: { value: o },
            } = n;
            return C(
              "div",
              {
                class: [
                  `${r}-upload-dragger`,
                  (i || o) && `${r}-upload-dragger--disabled`,
                ],
              },
              e
            );
          }
        );
      },
    });
  var gf = function (t, e, n, r) {
    function i(o) {
      return o instanceof n
        ? o
        : new n(function (s) {
            s(o);
          });
    }
    return new (n || (n = Promise))(function (o, s) {
      function a(u) {
        try {
          c(r.next(u));
        } catch (d) {
          s(d);
        }
      }
      function l(u) {
        try {
          c(r.throw(u));
        } catch (d) {
          s(d);
        }
      }
      function c(u) {
        u.done ? o(u.value) : i(u.value).then(a, l);
      }
      c((r = r.apply(t, e || [])).next());
    });
  };
  const jC = (t) => t.includes("image/"),
    yv = (t = "") => {
      const e = t.split("/"),
        r = e[e.length - 1].split(/#|\?/)[0];
      return (/\.[^./\\]*$/.exec(r) || [""])[0];
    },
    xv = /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i,
    UC = (t) => {
      if (t.type) return jC(t.type);
      const e = yv(t.name || "");
      if (xv.test(e)) return !0;
      const n = t.thumbnailUrl || t.url || "",
        r = yv(n);
      return !!(/^data:image\//.test(n) || xv.test(r));
    };
  function y6(t) {
    return gf(this, void 0, void 0, function* () {
      return yield new Promise((e) => {
        if (!t.type || !jC(t.type)) {
          e("");
          return;
        }
        e(window.URL.createObjectURL(t));
      });
    });
  }
  const x6 = Ji && window.FileReader && window.File;
  function C6(t) {
    return t.isDirectory;
  }
  function _6(t) {
    return t.isFile;
  }
  function w6(t, e) {
    return gf(this, void 0, void 0, function* () {
      const n = [];
      function r(i) {
        return gf(this, void 0, void 0, function* () {
          for (const o of i)
            if (o) {
              if (e && C6(o)) {
                const s = o.createReader();
                try {
                  const a = yield new Promise((l, c) => {
                    s.readEntries(l, c);
                  });
                  yield r(a);
                } catch {}
              } else if (_6(o))
                try {
                  const s = yield new Promise((a, l) => {
                    o.file(a, l);
                  });
                  n.push({ file: s, entry: o, source: "dnd" });
                } catch {}
            }
        });
      }
      return yield r(t), n;
    });
  }
  function cl(t) {
    const {
      id: e,
      name: n,
      percentage: r,
      status: i,
      url: o,
      file: s,
      thumbnailUrl: a,
      type: l,
      fullPath: c,
      batchId: u,
    } = t;
    return {
      id: e,
      name: n,
      percentage: r ?? null,
      status: i,
      url: o ?? null,
      file: s ?? null,
      thumbnailUrl: a ?? null,
      type: l ?? null,
      fullPath: c ?? null,
      batchId: u ?? null,
    };
  }
  function S6(t, e, n) {
    return (
      (t = t.toLowerCase()),
      (e = e.toLocaleLowerCase()),
      (n = n.toLocaleLowerCase()),
      n
        .split(",")
        .map((i) => i.trim())
        .filter(Boolean)
        .some((i) => {
          if (i.startsWith(".")) {
            if (t.endsWith(i)) return !0;
          } else if (i.includes("/")) {
            const [o, s] = e.split("/"),
              [a, l] = i.split("/");
            if (
              (a === "*" || (o && a && a === o)) &&
              (l === "*" || (s && l && l === s))
            )
              return !0;
          } else return !0;
          return !1;
        })
    );
  }
  const VC = $e({
      name: "UploadTrigger",
      props: { abstract: Boolean },
      setup(t, { slots: e }) {
        const n = Ve(ra, null);
        n ||
          jo(
            "upload-trigger",
            "`n-upload-trigger` must be placed inside `n-upload`."
          );
        const {
            mergedClsPrefixRef: r,
            mergedDisabledRef: i,
            maxReachedRef: o,
            listTypeRef: s,
            dragOverRef: a,
            openOpenFileDialog: l,
            draggerInsideRef: c,
            handleFileAddition: u,
            mergedDirectoryDndRef: d,
            triggerClassRef: h,
            triggerStyleRef: g,
          } = n,
          f = ce(() => s.value === "image-card");
        function p() {
          i.value || o.value || l();
        }
        function b(S) {
          S.preventDefault(), (a.value = !0);
        }
        function m(S) {
          S.preventDefault(), (a.value = !0);
        }
        function _(S) {
          S.preventDefault(), (a.value = !1);
        }
        function R(S) {
          var x;
          if ((S.preventDefault(), !c.value || i.value || o.value)) {
            a.value = !1;
            return;
          }
          const E =
            (x = S.dataTransfer) === null || x === void 0 ? void 0 : x.items;
          E != null && E.length
            ? w6(
                Array.from(E).map((w) => w.webkitGetAsEntry()),
                d.value
              )
                .then((w) => {
                  u(w);
                })
                .finally(() => {
                  a.value = !1;
                })
            : (a.value = !1);
        }
        return () => {
          var S;
          const { value: x } = r;
          return t.abstract
            ? (S = e.default) === null || S === void 0
              ? void 0
              : S.call(e, {
                  handleClick: p,
                  handleDrop: R,
                  handleDragOver: b,
                  handleDragEnter: m,
                  handleDragLeave: _,
                })
            : C(
                "div",
                {
                  class: [
                    `${x}-upload-trigger`,
                    (i.value || o.value) && `${x}-upload-trigger--disabled`,
                    f.value && `${x}-upload-trigger--image-card`,
                    h.value,
                  ],
                  style: g.value,
                  onClick: p,
                  onDrop: R,
                  onDragover: b,
                  onDragenter: m,
                  onDragleave: _,
                },
                f.value
                  ? C(b6, null, {
                      default: () =>
                        Lr(e.default, () => [
                          C(
                            ht,
                            { clsPrefix: x },
                            { default: () => C(Lg, null) }
                          ),
                        ]),
                    })
                  : e
              );
        };
      },
    }),
    E6 = $e({
      name: "UploadProgress",
      props: {
        show: Boolean,
        percentage: { type: Number, required: !0 },
        status: { type: String, required: !0 },
      },
      setup() {
        return { mergedTheme: Ve(ra).mergedThemeRef };
      },
      render() {
        return C(Ku, null, {
          default: () =>
            this.show
              ? C(e6, {
                  type: "line",
                  showIndicator: !1,
                  percentage: this.percentage,
                  status: this.status,
                  height: 2,
                  theme: this.mergedTheme.peers.Progress,
                  themeOverrides: this.mergedTheme.peerOverrides.Progress,
                })
              : null,
        });
      },
    }),
    R6 = C(
      "svg",
      { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 28 28" },
      C(
        "g",
        { fill: "none" },
        C("path", {
          d: "M21.75 3A3.25 3.25 0 0 1 25 6.25v15.5A3.25 3.25 0 0 1 21.75 25H6.25A3.25 3.25 0 0 1 3 21.75V6.25A3.25 3.25 0 0 1 6.25 3h15.5zm.583 20.4l-7.807-7.68a.75.75 0 0 0-.968-.07l-.084.07l-7.808 7.68c.183.065.38.1.584.1h15.5c.204 0 .4-.035.583-.1l-7.807-7.68l7.807 7.68zM21.75 4.5H6.25A1.75 1.75 0 0 0 4.5 6.25v15.5c0 .208.036.408.103.593l7.82-7.692a2.25 2.25 0 0 1 3.026-.117l.129.117l7.82 7.692c.066-.185.102-.385.102-.593V6.25a1.75 1.75 0 0 0-1.75-1.75zm-3.25 3a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5zm0 1.5a1 1 0 1 0 0 2a1 1 0 0 0 0-2z",
          fill: "currentColor",
        })
      )
    ),
    T6 = C(
      "svg",
      { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 28 28" },
      C(
        "g",
        { fill: "none" },
        C("path", {
          d: "M6.4 2A2.4 2.4 0 0 0 4 4.4v19.2A2.4 2.4 0 0 0 6.4 26h15.2a2.4 2.4 0 0 0 2.4-2.4V11.578c0-.729-.29-1.428-.805-1.944l-6.931-6.931A2.4 2.4 0 0 0 14.567 2H6.4zm-.9 2.4a.9.9 0 0 1 .9-.9H14V10a2 2 0 0 0 2 2h6.5v11.6a.9.9 0 0 1-.9.9H6.4a.9.9 0 0 1-.9-.9V4.4zm16.44 6.1H16a.5.5 0 0 1-.5-.5V4.06l6.44 6.44z",
          fill: "currentColor",
        })
      )
    );
  var P6 = function (t, e, n, r) {
    function i(o) {
      return o instanceof n
        ? o
        : new n(function (s) {
            s(o);
          });
    }
    return new (n || (n = Promise))(function (o, s) {
      function a(u) {
        try {
          c(r.next(u));
        } catch (d) {
          s(d);
        }
      }
      function l(u) {
        try {
          c(r.throw(u));
        } catch (d) {
          s(d);
        }
      }
      function c(u) {
        u.done ? o(u.value) : i(u.value).then(a, l);
      }
      c((r = r.apply(t, e || [])).next());
    });
  };
  const bc = {
      paddingMedium: "0 3px",
      heightMedium: "24px",
      iconSizeMedium: "18px",
    },
    A6 = $e({
      name: "UploadFile",
      props: {
        clsPrefix: { type: String, required: !0 },
        file: { type: Object, required: !0 },
        listType: { type: String, required: !0 },
      },
      setup(t) {
        const e = Ve(ra),
          n = U(null),
          r = U(""),
          i = ce(() => {
            const { file: x } = t;
            return x.status === "finished"
              ? "success"
              : x.status === "error"
              ? "error"
              : "info";
          }),
          o = ce(() => {
            const { file: x } = t;
            if (x.status === "error") return "error";
          }),
          s = ce(() => {
            const { file: x } = t;
            return x.status === "uploading";
          }),
          a = ce(() => {
            if (!e.showCancelButtonRef.value) return !1;
            const { file: x } = t;
            return ["uploading", "pending", "error"].includes(x.status);
          }),
          l = ce(() => {
            if (!e.showRemoveButtonRef.value) return !1;
            const { file: x } = t;
            return ["finished"].includes(x.status);
          }),
          c = ce(() => {
            if (!e.showDownloadButtonRef.value) return !1;
            const { file: x } = t;
            return ["finished"].includes(x.status);
          }),
          u = ce(() => {
            if (!e.showRetryButtonRef.value) return !1;
            const { file: x } = t;
            return ["error"].includes(x.status);
          }),
          d = Tn(() => r.value || t.file.thumbnailUrl || t.file.url),
          h = ce(() => {
            if (!e.showPreviewButtonRef.value) return !1;
            const {
              file: { status: x },
              listType: E,
            } = t;
            return ["finished"].includes(x) && d.value && E === "image-card";
          });
        function g() {
          e.submit(t.file.id);
        }
        function f(x) {
          x.preventDefault();
          const { file: E } = t;
          ["finished", "pending", "error"].includes(E.status)
            ? b(E)
            : ["uploading"].includes(E.status)
            ? _(E)
            : tl("upload", "The button clicked type is unknown.");
        }
        function p(x) {
          x.preventDefault(), m(t.file);
        }
        function b(x) {
          const {
            xhrMap: E,
            doChange: w,
            onRemoveRef: { value: v },
            mergedFileListRef: { value: y },
          } = e;
          Promise.resolve(
            v ? v({ file: Object.assign({}, x), fileList: y }) : !0
          ).then((T) => {
            if (T === !1) return;
            const A = Object.assign({}, x, { status: "removed" });
            E.delete(x.id), w(A, void 0, { remove: !0 });
          });
        }
        function m(x) {
          const {
            onDownloadRef: { value: E },
          } = e;
          Promise.resolve(E ? E(Object.assign({}, x)) : !0).then((w) => {
            w !== !1 && By(x.url, x.name);
          });
        }
        function _(x) {
          const { xhrMap: E } = e,
            w = E.get(x.id);
          w == null || w.abort(), b(Object.assign({}, x));
        }
        function R() {
          const {
            onPreviewRef: { value: x },
          } = e;
          if (x) x(t.file);
          else if (t.listType === "image-card") {
            const { value: E } = n;
            if (!E) return;
            E.click();
          }
        }
        const S = () =>
          P6(this, void 0, void 0, function* () {
            const { listType: x } = t;
            (x !== "image" && x !== "image-card") ||
              (e.shouldUseThumbnailUrlRef.value(t.file) &&
                (r.value = yield e.getFileThumbnailUrlResolver(t.file)));
          });
        return (
          or(() => {
            S();
          }),
          {
            mergedTheme: e.mergedThemeRef,
            progressStatus: i,
            buttonType: o,
            showProgress: s,
            disabled: e.mergedDisabledRef,
            showCancelButton: a,
            showRemoveButton: l,
            showDownloadButton: c,
            showRetryButton: u,
            showPreviewButton: h,
            mergedThumbnailUrl: d,
            shouldUseThumbnailUrl: e.shouldUseThumbnailUrlRef,
            renderIcon: e.renderIconRef,
            imageRef: n,
            handleRemoveOrCancelClick: f,
            handleDownloadClick: p,
            handleRetryClick: g,
            handlePreviewClick: R,
          }
        );
      },
      render() {
        const {
          clsPrefix: t,
          mergedTheme: e,
          listType: n,
          file: r,
          renderIcon: i,
        } = this;
        let o;
        const s = n === "image";
        s || n === "image-card"
          ? (o =
              !this.shouldUseThumbnailUrl(r) || !this.mergedThumbnailUrl
                ? C(
                    "span",
                    { class: `${t}-upload-file-info__thumbnail` },
                    i
                      ? i(r)
                      : UC(r)
                      ? C(ht, { clsPrefix: t }, { default: () => R6 })
                      : C(ht, { clsPrefix: t }, { default: () => T6 })
                  )
                : C(
                    "a",
                    {
                      rel: "noopener noreferer",
                      target: "_blank",
                      href: r.url || void 0,
                      class: `${t}-upload-file-info__thumbnail`,
                      onClick: this.handlePreviewClick,
                    },
                    n === "image-card"
                      ? C(CF, {
                          src: this.mergedThumbnailUrl || void 0,
                          previewSrc: r.url || void 0,
                          alt: r.name,
                          ref: "imageRef",
                        })
                      : C("img", {
                          src: this.mergedThumbnailUrl || void 0,
                          alt: r.name,
                        })
                  ))
          : (o = C(
              "span",
              { class: `${t}-upload-file-info__thumbnail` },
              i ? i(r) : C(ht, { clsPrefix: t }, { default: () => C(d3, null) })
            ));
        const l = C(E6, {
            show: this.showProgress,
            percentage: r.percentage || 0,
            status: this.progressStatus,
          }),
          c = n === "text" || n === "image";
        return C(
          "div",
          {
            class: [
              `${t}-upload-file`,
              `${t}-upload-file--${this.progressStatus}-status`,
              r.url &&
                r.status !== "error" &&
                n !== "image-card" &&
                `${t}-upload-file--with-url`,
              `${t}-upload-file--${n}-type`,
            ],
          },
          C(
            "div",
            { class: `${t}-upload-file-info` },
            o,
            C(
              "div",
              { class: `${t}-upload-file-info__name` },
              c &&
                (r.url && r.status !== "error"
                  ? C(
                      "a",
                      {
                        rel: "noopener noreferer",
                        target: "_blank",
                        href: r.url || void 0,
                        onClick: this.handlePreviewClick,
                      },
                      r.name
                    )
                  : C("span", { onClick: this.handlePreviewClick }, r.name)),
              s && l
            ),
            C(
              "div",
              {
                class: [
                  `${t}-upload-file-info__action`,
                  `${t}-upload-file-info__action--${n}-type`,
                ],
              },
              this.showPreviewButton
                ? C(
                    Xn,
                    {
                      key: "preview",
                      quaternary: !0,
                      type: this.buttonType,
                      onClick: this.handlePreviewClick,
                      theme: e.peers.Button,
                      themeOverrides: e.peerOverrides.Button,
                      builtinThemeOverrides: bc,
                    },
                    {
                      icon: () =>
                        C(ht, { clsPrefix: t }, { default: () => C(Tx, null) }),
                    }
                  )
                : null,
              (this.showRemoveButton || this.showCancelButton) &&
                !this.disabled &&
                C(
                  Xn,
                  {
                    key: "cancelOrTrash",
                    theme: e.peers.Button,
                    themeOverrides: e.peerOverrides.Button,
                    quaternary: !0,
                    builtinThemeOverrides: bc,
                    type: this.buttonType,
                    onClick: this.handleRemoveOrCancelClick,
                  },
                  {
                    icon: () =>
                      C(Yo, null, {
                        default: () =>
                          this.showRemoveButton
                            ? C(
                                ht,
                                { clsPrefix: t, key: "trash" },
                                { default: () => C(p3, null) }
                              )
                            : C(
                                ht,
                                { clsPrefix: t, key: "cancel" },
                                { default: () => C(b3, null) }
                              ),
                      }),
                  }
                ),
              this.showRetryButton &&
                !this.disabled &&
                C(
                  Xn,
                  {
                    key: "retry",
                    quaternary: !0,
                    type: this.buttonType,
                    onClick: this.handleRetryClick,
                    theme: e.peers.Button,
                    themeOverrides: e.peerOverrides.Button,
                    builtinThemeOverrides: bc,
                  },
                  {
                    icon: () =>
                      C(ht, { clsPrefix: t }, { default: () => C(C3, null) }),
                  }
                ),
              this.showDownloadButton
                ? C(
                    Xn,
                    {
                      key: "download",
                      quaternary: !0,
                      type: this.buttonType,
                      onClick: this.handleDownloadClick,
                      theme: e.peers.Button,
                      themeOverrides: e.peerOverrides.Button,
                      builtinThemeOverrides: bc,
                    },
                    {
                      icon: () =>
                        C(ht, { clsPrefix: t }, { default: () => C(m3, null) }),
                    }
                  )
                : null
            )
          ),
          !s && l
        );
      },
    }),
    k6 = $e({
      name: "UploadFileList",
      setup(t, { slots: e }) {
        const n = Ve(ra, null);
        n ||
          jo(
            "upload-file-list",
            "`n-upload-file-list` must be placed inside `n-upload`."
          );
        const {
            abstractRef: r,
            mergedClsPrefixRef: i,
            listTypeRef: o,
            mergedFileListRef: s,
            fileListClassRef: a,
            fileListStyleRef: l,
            cssVarsRef: c,
            themeClassRef: u,
            maxReachedRef: d,
            showTriggerRef: h,
            imageGroupPropsRef: g,
          } = n,
          f = ce(() => o.value === "image-card"),
          p = () =>
            s.value.map((m) =>
              C(A6, {
                clsPrefix: i.value,
                key: m.id,
                file: m,
                listType: o.value,
              })
            ),
          b = () =>
            f.value
              ? C(yF, Object.assign({}, g.value), { default: p })
              : C(Ku, { group: !0 }, { default: p });
        return () => {
          const { value: m } = i,
            { value: _ } = r;
          return C(
            "div",
            {
              class: [
                `${m}-upload-file-list`,
                f.value && `${m}-upload-file-list--grid`,
                _ ? (u == null ? void 0 : u.value) : void 0,
                a.value,
              ],
              style: [_ && c ? c.value : "", l.value],
            },
            b(),
            h.value && !d.value && f.value && C(VC, null, e)
          );
        };
      },
    }),
    I6 = q([
      M("upload", "width: 100%;", [
        te("dragger-inside", [
          M(
            "upload-trigger",
            `
 display: block;
 `
          ),
        ]),
        te("drag-over", [
          M(
            "upload-dragger",
            `
 border: var(--n-dragger-border-hover);
 `
          ),
        ]),
      ]),
      M(
        "upload-dragger",
        `
 cursor: pointer;
 box-sizing: border-box;
 width: 100%;
 text-align: center;
 border-radius: var(--n-border-radius);
 padding: 24px;
 opacity: 1;
 transition:
 opacity .3s var(--n-bezier),
 border-color .3s var(--n-bezier),
 background-color .3s var(--n-bezier);
 background-color: var(--n-dragger-color);
 border: var(--n-dragger-border);
 `,
        [
          q(
            "&:hover",
            `
 border: var(--n-dragger-border-hover);
 `
          ),
          te(
            "disabled",
            `
 cursor: not-allowed;
 `
          ),
        ]
      ),
      M(
        "upload-trigger",
        `
 display: inline-block;
 box-sizing: border-box;
 opacity: 1;
 transition: opacity .3s var(--n-bezier);
 `,
        [
          q("+", [M("upload-file-list", "margin-top: 8px;")]),
          te(
            "disabled",
            `
 opacity: var(--n-item-disabled-opacity);
 cursor: not-allowed;
 `
          ),
          te(
            "image-card",
            `
 width: 96px;
 height: 96px;
 `,
            [
              M(
                "base-icon",
                `
 font-size: 24px;
 `
              ),
              M(
                "upload-dragger",
                `
 padding: 0;
 height: 100%;
 width: 100%;
 display: flex;
 align-items: center;
 justify-content: center;
 `
              ),
            ]
          ),
        ]
      ),
      M(
        "upload-file-list",
        `
 line-height: var(--n-line-height);
 opacity: 1;
 transition: opacity .3s var(--n-bezier);
 `,
        [
          q("a, img", "outline: none;"),
          te(
            "disabled",
            `
 opacity: var(--n-item-disabled-opacity);
 cursor: not-allowed;
 `,
            [M("upload-file", "cursor: not-allowed;")]
          ),
          te(
            "grid",
            `
 display: grid;
 grid-template-columns: repeat(auto-fill, 96px);
 grid-gap: 8px;
 margin-top: 0;
 `
          ),
          M(
            "upload-file",
            `
 display: block;
 box-sizing: border-box;
 cursor: default;
 padding: 0px 12px 0 6px;
 transition: background-color .3s var(--n-bezier);
 border-radius: var(--n-border-radius);
 `,
            [
              hf(),
              M("progress", [hf({ foldPadding: !0 })]),
              q(
                "&:hover",
                `
 background-color: var(--n-item-color-hover);
 `,
                [
                  M("upload-file-info", [
                    ne(
                      "action",
                      `
 opacity: 1;
 `
                    ),
                  ]),
                ]
              ),
              te(
                "image-type",
                `
 border-radius: var(--n-border-radius);
 text-decoration: underline;
 text-decoration-color: #0000;
 `,
                [
                  M(
                    "upload-file-info",
                    `
 padding-top: 0px;
 padding-bottom: 0px;
 width: 100%;
 height: 100%;
 display: flex;
 justify-content: space-between;
 align-items: center;
 padding: 6px 0;
 `,
                    [
                      M(
                        "progress",
                        `
 padding: 2px 0;
 margin-bottom: 0;
 `
                      ),
                      ne(
                        "name",
                        `
 padding: 0 8px;
 `
                      ),
                      ne(
                        "thumbnail",
                        `
 width: 32px;
 height: 32px;
 font-size: 28px;
 display: flex;
 justify-content: center;
 align-items: center;
 `,
                        [
                          q(
                            "img",
                            `
 width: 100%;
 `
                          ),
                        ]
                      ),
                    ]
                  ),
                ]
              ),
              te("text-type", [
                M(
                  "progress",
                  `
 box-sizing: border-box;
 padding-bottom: 6px;
 margin-bottom: 6px;
 `
                ),
              ]),
              te(
                "image-card-type",
                `
 position: relative;
 width: 96px;
 height: 96px;
 border: var(--n-item-border-image-card);
 border-radius: var(--n-border-radius);
 padding: 0;
 display: flex;
 align-items: center;
 justify-content: center;
 transition: border-color .3s var(--n-bezier), background-color .3s var(--n-bezier);
 border-radius: var(--n-border-radius);
 overflow: hidden;
 `,
                [
                  M(
                    "progress",
                    `
 position: absolute;
 left: 8px;
 bottom: 8px;
 right: 8px;
 width: unset;
 `
                  ),
                  M(
                    "upload-file-info",
                    `
 padding: 0;
 width: 100%;
 height: 100%;
 `,
                    [
                      ne(
                        "thumbnail",
                        `
 width: 100%;
 height: 100%;
 display: flex;
 flex-direction: column;
 align-items: center;
 justify-content: center;
 font-size: 36px;
 `,
                        [
                          q(
                            "img",
                            `
 width: 100%;
 `
                          ),
                        ]
                      ),
                    ]
                  ),
                  q(
                    "&::before",
                    `
 position: absolute;
 z-index: 1;
 left: 0;
 right: 0;
 top: 0;
 bottom: 0;
 border-radius: inherit;
 opacity: 0;
 transition: opacity .2s var(--n-bezier);
 content: "";
 `
                  ),
                  q("&:hover", [
                    q("&::before", "opacity: 1;"),
                    M("upload-file-info", [ne("thumbnail", "opacity: .12;")]),
                  ]),
                ]
              ),
              te("error-status", [
                q(
                  "&:hover",
                  `
 background-color: var(--n-item-color-hover-error);
 `
                ),
                M("upload-file-info", [
                  ne("name", "color: var(--n-item-text-color-error);"),
                  ne("thumbnail", "color: var(--n-item-text-color-error);"),
                ]),
                te(
                  "image-card-type",
                  `
 border: var(--n-item-border-image-card-error);
 `
                ),
              ]),
              te(
                "with-url",
                `
 cursor: pointer;
 `,
                [
                  M("upload-file-info", [
                    ne(
                      "name",
                      `
 color: var(--n-item-text-color-success);
 text-decoration-color: var(--n-item-text-color-success);
 `,
                      [
                        q(
                          "a",
                          `
 text-decoration: underline;
 `
                        ),
                      ]
                    ),
                  ]),
                ]
              ),
              M(
                "upload-file-info",
                `
 position: relative;
 padding-top: 6px;
 padding-bottom: 6px;
 display: flex;
 flex-wrap: nowrap;
 `,
                [
                  ne(
                    "thumbnail",
                    `
 font-size: 18px;
 opacity: 1;
 transition: opacity .2s var(--n-bezier);
 color: var(--n-item-icon-color);
 `,
                    [
                      M(
                        "base-icon",
                        `
 margin-right: 2px;
 vertical-align: middle;
 transition: color .3s var(--n-bezier);
 `
                      ),
                    ]
                  ),
                  ne(
                    "action",
                    `
 padding-top: inherit;
 padding-bottom: inherit;
 position: absolute;
 right: 0;
 top: 0;
 bottom: 0;
 width: 80px;
 display: flex;
 align-items: center;
 transition: opacity .2s var(--n-bezier);
 justify-content: flex-end;
 opacity: 0;
 `,
                    [
                      M("button", [
                        q("&:not(:last-child)", { marginRight: "4px" }),
                        M("base-icon", [q("svg", [ii()])]),
                      ]),
                      te(
                        "image-type",
                        `
 position: relative;
 max-width: 80px;
 width: auto;
 `
                      ),
                      te(
                        "image-card-type",
                        `
 z-index: 2;
 position: absolute;
 width: 100%;
 height: 100%;
 left: 0;
 right: 0;
 bottom: 0;
 top: 0;
 display: flex;
 justify-content: center;
 align-items: center;
 `
                      ),
                    ]
                  ),
                  ne(
                    "name",
                    `
 color: var(--n-item-text-color);
 flex: 1;
 display: flex;
 justify-content: center;
 text-overflow: ellipsis;
 overflow: hidden;
 flex-direction: column;
 text-decoration-color: #0000;
 font-size: var(--n-font-size);
 transition:
 color .3s var(--n-bezier),
 text-decoration-color .3s var(--n-bezier);
 `,
                    [
                      q(
                        "a",
                        `
 color: inherit;
 text-decoration: underline;
 `
                      ),
                    ]
                  ),
                ]
              ),
            ]
          ),
        ]
      ),
      M(
        "upload-file-input",
        `
 display: none;
 width: 0;
 height: 0;
 opacity: 0;
 `
      ),
    ]);
  var Cv = function (t, e, n, r) {
    function i(o) {
      return o instanceof n
        ? o
        : new n(function (s) {
            s(o);
          });
    }
    return new (n || (n = Promise))(function (o, s) {
      function a(u) {
        try {
          c(r.next(u));
        } catch (d) {
          s(d);
        }
      }
      function l(u) {
        try {
          c(r.throw(u));
        } catch (d) {
          s(d);
        }
      }
      function c(u) {
        u.done ? o(u.value) : i(u.value).then(a, l);
      }
      c((r = r.apply(t, e || [])).next());
    });
  };
  function O6(t, e, n) {
    const { doChange: r, xhrMap: i } = t;
    let o = 0;
    function s(l) {
      var c;
      let u = Object.assign({}, e, { status: "error", percentage: o });
      i.delete(e.id),
        (u = cl(
          ((c = t.onError) === null || c === void 0
            ? void 0
            : c.call(t, { file: u, event: l })) || u
        )),
        r(u, l);
    }
    function a(l) {
      var c;
      if (t.isErrorState) {
        if (t.isErrorState(n)) {
          s(l);
          return;
        }
      } else if (n.status < 200 || n.status >= 300) {
        s(l);
        return;
      }
      let u = Object.assign({}, e, { status: "finished", percentage: o });
      i.delete(e.id),
        (u = cl(
          ((c = t.onFinish) === null || c === void 0
            ? void 0
            : c.call(t, { file: u, event: l })) || u
        )),
        r(u, l);
    }
    return {
      handleXHRLoad: a,
      handleXHRError: s,
      handleXHRAbort(l) {
        const c = Object.assign({}, e, {
          status: "removed",
          file: null,
          percentage: o,
        });
        i.delete(e.id), r(c, l);
      },
      handleXHRProgress(l) {
        const c = Object.assign({}, e, { status: "uploading" });
        if (l.lengthComputable) {
          const u = Math.ceil((l.loaded / l.total) * 100);
          (c.percentage = u), (o = u);
        }
        r(c, l);
      },
    };
  }
  function M6(t) {
    const {
        inst: e,
        file: n,
        data: r,
        headers: i,
        withCredentials: o,
        action: s,
        customRequest: a,
      } = t,
      { doChange: l } = t.inst;
    let c = 0;
    a({
      file: n,
      data: r,
      headers: i,
      withCredentials: o,
      action: s,
      onProgress(u) {
        const d = Object.assign({}, n, { status: "uploading" }),
          h = u.percent;
        (d.percentage = h), (c = h), l(d);
      },
      onFinish() {
        var u;
        let d = Object.assign({}, n, { status: "finished", percentage: c });
        (d = cl(
          ((u = e.onFinish) === null || u === void 0
            ? void 0
            : u.call(e, { file: d })) || d
        )),
          l(d);
      },
      onError() {
        var u;
        let d = Object.assign({}, n, { status: "error", percentage: c });
        (d = cl(
          ((u = e.onError) === null || u === void 0
            ? void 0
            : u.call(e, { file: d })) || d
        )),
          l(d);
      },
    });
  }
  function L6(t, e, n) {
    const r = O6(t, e, n);
    (n.onabort = r.handleXHRAbort),
      (n.onerror = r.handleXHRError),
      (n.onload = r.handleXHRLoad),
      n.upload && (n.upload.onprogress = r.handleXHRProgress);
  }
  function GC(t, e) {
    return typeof t == "function" ? t({ file: e }) : t || {};
  }
  function $6(t, e, n) {
    const r = GC(e, n);
    r &&
      Object.keys(r).forEach((i) => {
        t.setRequestHeader(i, r[i]);
      });
  }
  function D6(t, e, n) {
    const r = GC(e, n);
    r &&
      Object.keys(r).forEach((i) => {
        t.append(i, r[i]);
      });
  }
  function z6(
    t,
    e,
    n,
    {
      method: r,
      action: i,
      withCredentials: o,
      responseType: s,
      headers: a,
      data: l,
    }
  ) {
    const c = new XMLHttpRequest();
    (c.responseType = s), t.xhrMap.set(n.id, c), (c.withCredentials = o);
    const u = new FormData();
    if (
      (D6(u, l, n),
      n.file !== null && u.append(e, n.file),
      L6(t, n, c),
      i !== void 0)
    ) {
      c.open(r.toUpperCase(), i), $6(c, a, n), c.send(u);
      const d = Object.assign({}, n, { status: "uploading" });
      t.doChange(d);
    }
  }
  const F6 = Object.assign(Object.assign({}, Ye.props), {
      name: { type: String, default: "file" },
      accept: String,
      action: String,
      customRequest: Function,
      directory: Boolean,
      directoryDnd: { type: Boolean, default: void 0 },
      method: { type: String, default: "POST" },
      multiple: Boolean,
      showFileList: { type: Boolean, default: !0 },
      data: [Object, Function],
      headers: [Object, Function],
      withCredentials: Boolean,
      responseType: { type: String, default: "" },
      disabled: { type: Boolean, default: void 0 },
      onChange: Function,
      onRemove: Function,
      onFinish: Function,
      onError: Function,
      onBeforeUpload: Function,
      isErrorState: Function,
      onDownload: Function,
      defaultUpload: { type: Boolean, default: !0 },
      fileList: Array,
      "onUpdate:fileList": [Function, Array],
      onUpdateFileList: [Function, Array],
      fileListClass: String,
      fileListStyle: [String, Object],
      defaultFileList: { type: Array, default: () => [] },
      showCancelButton: { type: Boolean, default: !0 },
      showRemoveButton: { type: Boolean, default: !0 },
      showDownloadButton: Boolean,
      showRetryButton: { type: Boolean, default: !0 },
      showPreviewButton: { type: Boolean, default: !0 },
      listType: { type: String, default: "text" },
      onPreview: Function,
      shouldUseThumbnailUrl: {
        type: Function,
        default: (t) => (x6 ? UC(t) : !1),
      },
      createThumbnailUrl: Function,
      abstract: Boolean,
      max: Number,
      showTrigger: { type: Boolean, default: !0 },
      imageGroupProps: Object,
      inputProps: Object,
      triggerClass: String,
      triggerStyle: [String, Object],
      renderIcon: Function,
    }),
    B6 = $e({
      name: "Upload",
      props: F6,
      setup(t) {
        t.abstract &&
          t.listType === "image-card" &&
          jo(
            "upload",
            "when the list-type is image-card, abstract is not supported."
          );
        const { mergedClsPrefixRef: e, inlineThemeDisabled: n } = Ct(t),
          r = Ye("Upload", "-upload", I6, oF, t, e),
          i = eo(t),
          o = ce(() => {
            const { max: y } = t;
            return y !== void 0 ? g.value.length >= y : !1;
          }),
          s = U(t.defaultFileList),
          a = We(t, "fileList"),
          l = U(null),
          c = { value: !1 },
          u = U(!1),
          d = new Map(),
          h = li(a, s),
          g = ce(() => h.value.map(cl));
        function f() {
          var y;
          (y = l.value) === null || y === void 0 || y.click();
        }
        function p(y) {
          const T = y.target;
          _(
            T.files
              ? Array.from(T.files).map((A) => ({
                  file: A,
                  entry: null,
                  source: "input",
                }))
              : null,
            y
          ),
            (T.value = "");
        }
        function b(y) {
          const { "onUpdate:fileList": T, onUpdateFileList: A } = t;
          T && Ke(T, y), A && Ke(A, y), (s.value = y);
        }
        const m = ce(() => t.multiple || t.directory);
        function _(y, T) {
          if (!y || y.length === 0) return;
          const { onBeforeUpload: A } = t;
          y = m.value ? y : [y[0]];
          const { max: I, accept: L } = t;
          (y = y.filter(({ file: k, source: O }) =>
            O === "dnd" && L != null && L.trim() ? S6(k.name, k.type, L) : !0
          )),
            I && (y = y.slice(0, I - g.value.length));
          const j = Ui();
          Promise.all(
            y.map(({ file: k, entry: O }) =>
              Cv(this, void 0, void 0, function* () {
                var D;
                const Y = {
                  id: Ui(),
                  batchId: j,
                  name: k.name,
                  status: "pending",
                  percentage: 0,
                  file: k,
                  url: null,
                  type: k.type,
                  thumbnailUrl: null,
                  fullPath:
                    (D = O == null ? void 0 : O.fullPath) !== null &&
                    D !== void 0
                      ? D
                      : `/${k.webkitRelativePath || k.name}`,
                };
                return !A || (yield A({ file: Y, fileList: g.value })) !== !1
                  ? Y
                  : null;
              })
            )
          )
            .then((k) =>
              Cv(this, void 0, void 0, function* () {
                let O = Promise.resolve();
                k.forEach((D) => {
                  O = O.then(Ht).then(() => {
                    D && S(D, T, { append: !0 });
                  });
                }),
                  yield O;
              })
            )
            .then(() => {
              t.defaultUpload && R();
            });
        }
        function R(y) {
          const {
              method: T,
              action: A,
              withCredentials: I,
              headers: L,
              data: j,
              name: k,
            } = t,
            O = y !== void 0 ? g.value.filter((Y) => Y.id === y) : g.value,
            D = y !== void 0;
          O.forEach((Y) => {
            const { status: se } = Y;
            (se === "pending" || (se === "error" && D)) &&
              (t.customRequest
                ? M6({
                    inst: {
                      doChange: S,
                      xhrMap: d,
                      onFinish: t.onFinish,
                      onError: t.onError,
                    },
                    file: Y,
                    action: A,
                    withCredentials: I,
                    headers: L,
                    data: j,
                    customRequest: t.customRequest,
                  })
                : z6(
                    {
                      doChange: S,
                      xhrMap: d,
                      onFinish: t.onFinish,
                      onError: t.onError,
                      isErrorState: t.isErrorState,
                    },
                    k,
                    Y,
                    {
                      method: T,
                      action: A,
                      withCredentials: I,
                      responseType: t.responseType,
                      headers: L,
                      data: j,
                    }
                  ));
          });
        }
        const S = (y, T, A = { append: !1, remove: !1 }) => {
          const { append: I, remove: L } = A,
            j = Array.from(g.value),
            k = j.findIndex((O) => O.id === y.id);
          if (I || L || ~k) {
            I ? j.push(y) : L ? j.splice(k, 1) : j.splice(k, 1, y);
            const { onChange: O } = t;
            O && O({ file: y, fileList: j, event: T }), b(j);
          }
        };
        function x(y) {
          var T;
          if (y.thumbnailUrl) return y.thumbnailUrl;
          const { createThumbnailUrl: A } = t;
          return A
            ? (T = A(y.file, y)) !== null && T !== void 0
              ? T
              : y.url || ""
            : y.url
            ? y.url
            : y.file
            ? y6(y.file)
            : "";
        }
        const E = ce(() => {
            const {
              common: { cubicBezierEaseInOut: y },
              self: {
                draggerColor: T,
                draggerBorder: A,
                draggerBorderHover: I,
                itemColorHover: L,
                itemColorHoverError: j,
                itemTextColorError: k,
                itemTextColorSuccess: O,
                itemTextColor: D,
                itemIconColor: Y,
                itemDisabledOpacity: se,
                lineHeight: de,
                borderRadius: fe,
                fontSize: z,
                itemBorderImageCardError: ee,
                itemBorderImageCard: ue,
              },
            } = r.value;
            return {
              "--n-bezier": y,
              "--n-border-radius": fe,
              "--n-dragger-border": A,
              "--n-dragger-border-hover": I,
              "--n-dragger-color": T,
              "--n-font-size": z,
              "--n-item-color-hover": L,
              "--n-item-color-hover-error": j,
              "--n-item-disabled-opacity": se,
              "--n-item-icon-color": Y,
              "--n-item-text-color": D,
              "--n-item-text-color-error": k,
              "--n-item-text-color-success": O,
              "--n-line-height": de,
              "--n-item-border-image-card-error": ee,
              "--n-item-border-image-card": ue,
            };
          }),
          w = n ? jt("upload", void 0, E, t) : void 0;
        vt(ra, {
          mergedClsPrefixRef: e,
          mergedThemeRef: r,
          showCancelButtonRef: We(t, "showCancelButton"),
          showDownloadButtonRef: We(t, "showDownloadButton"),
          showRemoveButtonRef: We(t, "showRemoveButton"),
          showRetryButtonRef: We(t, "showRetryButton"),
          onRemoveRef: We(t, "onRemove"),
          onDownloadRef: We(t, "onDownload"),
          mergedFileListRef: g,
          triggerClassRef: We(t, "triggerClass"),
          triggerStyleRef: We(t, "triggerStyle"),
          shouldUseThumbnailUrlRef: We(t, "shouldUseThumbnailUrl"),
          renderIconRef: We(t, "renderIcon"),
          xhrMap: d,
          submit: R,
          doChange: S,
          showPreviewButtonRef: We(t, "showPreviewButton"),
          onPreviewRef: We(t, "onPreview"),
          getFileThumbnailUrlResolver: x,
          listTypeRef: We(t, "listType"),
          dragOverRef: u,
          openOpenFileDialog: f,
          draggerInsideRef: c,
          handleFileAddition: _,
          mergedDisabledRef: i.mergedDisabledRef,
          maxReachedRef: o,
          fileListClassRef: We(t, "fileListClass"),
          fileListStyleRef: We(t, "fileListStyle"),
          abstractRef: We(t, "abstract"),
          acceptRef: We(t, "accept"),
          cssVarsRef: n ? void 0 : E,
          themeClassRef: w == null ? void 0 : w.themeClass,
          onRender: w == null ? void 0 : w.onRender,
          showTriggerRef: We(t, "showTrigger"),
          imageGroupPropsRef: We(t, "imageGroupProps"),
          mergedDirectoryDndRef: ce(() => {
            var y;
            return (y = t.directoryDnd) !== null && y !== void 0
              ? y
              : t.directory;
          }),
        });
        const v = {
          clear: () => {
            s.value = [];
          },
          submit: R,
          openOpenFileDialog: f,
        };
        return Object.assign(
          {
            mergedClsPrefix: e,
            draggerInsideRef: c,
            inputElRef: l,
            mergedTheme: r,
            dragOver: u,
            mergedMultiple: m,
            cssVars: n ? void 0 : E,
            themeClass: w == null ? void 0 : w.themeClass,
            onRender: w == null ? void 0 : w.onRender,
            handleFileInputChange: p,
          },
          v
        );
      },
      render() {
        var t, e;
        const {
          draggerInsideRef: n,
          mergedClsPrefix: r,
          $slots: i,
          directory: o,
          onRender: s,
        } = this;
        if (i.default && !this.abstract) {
          const l = i.default()[0];
          !((t = l == null ? void 0 : l.type) === null || t === void 0) &&
            t[WC] &&
            (n.value = !0);
        }
        const a = C(
          "input",
          Object.assign({}, this.inputProps, {
            ref: "inputElRef",
            type: "file",
            class: `${r}-upload-file-input`,
            accept: this.accept,
            multiple: this.mergedMultiple,
            onChange: this.handleFileInputChange,
            webkitdirectory: o || void 0,
            directory: o || void 0,
          })
        );
        return this.abstract
          ? C(
              pt,
              null,
              (e = i.default) === null || e === void 0 ? void 0 : e.call(i),
              C(Sl, { to: "body" }, a)
            )
          : (s == null || s(),
            C(
              "div",
              {
                class: [
                  `${r}-upload`,
                  n.value && `${r}-upload--dragger-inside`,
                  this.dragOver && `${r}-upload--drag-over`,
                  this.themeClass,
                ],
                style: this.cssVars,
              },
              a,
              this.showTrigger &&
                this.listType !== "image-card" &&
                C(VC, null, i),
              this.showFileList && C(k6, null, i)
            ));
      },
    }),
    N6 = () => ({}),
    H6 = { name: "Equation", common: Oe, self: N6 },
    W6 = H6,
    j6 = {
      name: "dark",
      common: Oe,
      Alert: QL,
      Anchor: o$,
      AutoComplete: _$,
      Avatar: qx,
      AvatarGroup: L$,
      BackTop: z$,
      Badge: B$,
      Breadcrumb: j$,
      Button: Un,
      ButtonGroup: k4,
      Calendar: eD,
      Card: eC,
      Carousel: hD,
      Cascader: yD,
      Checkbox: na,
      Code: nC,
      Collapse: PD,
      CollapseTransition: ID,
      ColorPicker: rD,
      DataTable: JD,
      DatePicker: c8,
      Descriptions: g8,
      Dialog: pC,
      Divider: B8,
      Drawer: W8,
      Dropdown: Wg,
      DynamicInput: V8,
      DynamicTags: J8,
      Element: i4,
      Empty: qo,
      Ellipsis: lC,
      Equation: W6,
      Flex: a4,
      Form: d4,
      GradientText: f4,
      Icon: n8,
      IconWrapper: m4,
      Image: hF,
      Input: hr,
      InputNumber: O4,
      LegacyTransfer: SF,
      Layout: L4,
      List: z4,
      LoadingBar: B4,
      Log: U4,
      Menu: q4,
      Mention: G4,
      Message: P4,
      Modal: T8,
      Notification: w4,
      PageHeader: Q4,
      Pagination: oC,
      Popconfirm: rz,
      Popover: Zo,
      Popselect: rC,
      Progress: PC,
      QrCode: n6,
      Radio: cC,
      Rate: az,
      Result: dz,
      Row: dF,
      Scrollbar: jn,
      Select: iC,
      Skeleton: o6,
      Slider: fz,
      Space: CC,
      Spin: yz,
      Statistic: _z,
      Steps: Rz,
      Switch: Pz,
      Table: $z,
      Tabs: Nz,
      Tag: Wx,
      Thing: jz,
      TimePicker: uC,
      Timeline: Gz,
      Tooltip: Qu,
      Transfer: Yz,
      Tree: OC,
      TreeSelect: Qz,
      Typography: rF,
      Upload: aF,
      Watermark: cF,
      Split: u6,
    };
  var U6 = !1;
  /*!
   * pinia v2.1.7
   * (c) 2023 Eduardo San Martin Morote
   * @license MIT
   */ let XC;
  const id = (t) => (XC = t),
    KC = Symbol();
  function pf(t) {
    return (
      t &&
      typeof t == "object" &&
      Object.prototype.toString.call(t) === "[object Object]" &&
      typeof t.toJSON != "function"
    );
  }
  var Wa;
  (function (t) {
    (t.direct = "direct"),
      (t.patchObject = "patch object"),
      (t.patchFunction = "patch function");
  })(Wa || (Wa = {}));
  function V6() {
    const t = Vb(!0),
      e = t.run(() => U({}));
    let n = [],
      r = [];
    const i = Ms({
      install(o) {
        id(i),
          (i._a = o),
          o.provide(KC, i),
          (o.config.globalProperties.$pinia = i),
          r.forEach((s) => n.push(s)),
          (r = []);
      },
      use(o) {
        return !this._a && !U6 ? r.push(o) : n.push(o), this;
      },
      _p: n,
      _a: null,
      _e: t,
      _s: new Map(),
      state: e,
    });
    return i;
  }
  const YC = () => {};
  function _v(t, e, n, r = YC) {
    t.push(e);
    const i = () => {
      const o = t.indexOf(e);
      o > -1 && (t.splice(o, 1), r());
    };
    return !n && Gb() && BS(i), i;
  }
  function os(t, ...e) {
    t.slice().forEach((n) => {
      n(...e);
    });
  }
  const G6 = (t) => t();
  function mf(t, e) {
    t instanceof Map && e instanceof Map && e.forEach((n, r) => t.set(r, n)),
      t instanceof Set && e instanceof Set && e.forEach(t.add, t);
    for (const n in e) {
      if (!e.hasOwnProperty(n)) continue;
      const r = e[n],
        i = t[n];
      pf(i) && pf(r) && t.hasOwnProperty(n) && !xe(r) && !Zr(r)
        ? (t[n] = mf(i, r))
        : (t[n] = r);
    }
    return t;
  }
  const X6 = Symbol();
  function K6(t) {
    return !pf(t) || !t.hasOwnProperty(X6);
  }
  const { assign: Ti } = Object;
  function Y6(t) {
    return !!(xe(t) && t.effect);
  }
  function q6(t, e, n, r) {
    const { state: i, actions: o, getters: s } = e,
      a = n.state.value[t];
    let l;
    function c() {
      a || (n.state.value[t] = i ? i() : {});
      const u = cE(n.state.value[t]);
      return Ti(
        u,
        o,
        Object.keys(s || {}).reduce(
          (d, h) => (
            (d[h] = Ms(
              ce(() => {
                id(n);
                const g = n._s.get(t);
                return s[h].call(g, g);
              })
            )),
            d
          ),
          {}
        )
      );
    }
    return (l = qC(t, c, e, n, r, !0)), l;
  }
  function qC(t, e, n = {}, r, i, o) {
    let s;
    const a = Ti({ actions: {} }, n),
      l = { deep: !0 };
    let c,
      u,
      d = [],
      h = [],
      g;
    const f = r.state.value[t];
    !o && !f && (r.state.value[t] = {}), U({});
    let p;
    function b(v) {
      let y;
      (c = u = !1),
        typeof v == "function"
          ? (v(r.state.value[t]),
            (y = { type: Wa.patchFunction, storeId: t, events: g }))
          : (mf(r.state.value[t], v),
            (y = { type: Wa.patchObject, payload: v, storeId: t, events: g }));
      const T = (p = Symbol());
      Ht().then(() => {
        p === T && (c = !0);
      }),
        (u = !0),
        os(d, y, r.state.value[t]);
    }
    const m = o
      ? function () {
          const { state: y } = n,
            T = y ? y() : {};
          this.$patch((A) => {
            Ti(A, T);
          });
        }
      : YC;
    function _() {
      s.stop(), (d = []), (h = []), r._s.delete(t);
    }
    function R(v, y) {
      return function () {
        id(r);
        const T = Array.from(arguments),
          A = [],
          I = [];
        function L(O) {
          A.push(O);
        }
        function j(O) {
          I.push(O);
        }
        os(h, { args: T, name: v, store: x, after: L, onError: j });
        let k;
        try {
          k = y.apply(this && this.$id === t ? this : x, T);
        } catch (O) {
          throw (os(I, O), O);
        }
        return k instanceof Promise
          ? k
              .then((O) => (os(A, O), O))
              .catch((O) => (os(I, O), Promise.reject(O)))
          : (os(A, k), k);
      };
    }
    const S = {
        _p: r,
        $id: t,
        $onAction: _v.bind(null, h),
        $patch: b,
        $reset: m,
        $subscribe(v, y = {}) {
          const T = _v(d, v, y.detached, () => A()),
            A = s.run(() =>
              Et(
                () => r.state.value[t],
                (I) => {
                  (y.flush === "sync" ? u : c) &&
                    v({ storeId: t, type: Wa.direct, events: g }, I);
                },
                Ti({}, l, y)
              )
            );
          return T;
        },
        $dispose: _,
      },
      x = Zi(S);
    r._s.set(t, x);
    const w = ((r._a && r._a.runWithContext) || G6)(() =>
      r._e.run(() => (s = Vb()).run(e))
    );
    for (const v in w) {
      const y = w[v];
      if ((xe(y) && !Y6(y)) || Zr(y))
        o ||
          (f && K6(y) && (xe(y) ? (y.value = f[v]) : mf(y, f[v])),
          (r.state.value[t][v] = y));
      else if (typeof y == "function") {
        const T = R(v, y);
        (w[v] = T), (a.actions[v] = y);
      }
    }
    return (
      Ti(x, w),
      Ti(De(x), w),
      Object.defineProperty(x, "$state", {
        get: () => r.state.value[t],
        set: (v) => {
          b((y) => {
            Ti(y, v);
          });
        },
      }),
      r._p.forEach((v) => {
        Ti(
          x,
          s.run(() => v({ store: x, app: r._a, pinia: r, options: a }))
        );
      }),
      f && o && n.hydrate && n.hydrate(x.$state, f),
      (c = !0),
      (u = !0),
      x
    );
  }
  function Z6(t, e, n) {
    let r, i;
    const o = typeof e == "function";
    typeof t == "string" ? ((r = t), (i = o ? n : e)) : ((i = t), (r = t.id));
    function s(a, l) {
      const c = GE();
      return (
        (a = a || (c ? Ve(KC, null) : null)),
        a && id(a),
        (a = XC),
        a._s.has(r) || (o ? qC(r, e, i, a) : q6(r, i, a)),
        a._s.get(r)
      );
    }
    return (s.$id = r), s;
  }
  function _r(t) {
    {
      t = De(t);
      const e = {};
      for (const n in t) {
        const r = t[n];
        (xe(r) || Zr(r)) && (e[n] = We(t, n));
      }
      return e;
    }
  }
  function J6() {
    return ("10000000-1000-4000-8000" + -1e11).replace(/[018]/g, (t) =>
      (
        t ^
        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (t / 4)))
      ).toString(16)
    );
  }
  const qn = Z6("main-store", () => {
      const t = U(!1),
        e = U({ total: 0, left: 0, right: 0 }),
        n = U({ reason: "", name: "", age: "", distance: "", photosCount: "" }),
        r = U(!1),
        i = U(""),
        o = U(""),
        s = U(""),
        a = U(null),
        l = U(0),
        c = U(J6()),
        u = U(null),
        d = U(!1),
        h = U(null),
        g = U(null),
        f = U(!0),
        p = U(!1),
        b = U(!1),
        m = U(!1),
        _ = U(0),
        R = U(null),
        S = U(!1),
        x = U([100, 350]),
        E = U(0),
        w = U(!1),
        v = U([25, 55]),
        y = U(!0),
        T = U([25, 55]),
        A = U(!1),
        I = U([155, 180]),
        L = U(!0),
        j = U(50),
        k = U(!1),
        O = U(!1),
        D = U(!1),
        Y = U(2),
        se = U([2.5, 4.5]),
        de = U(!1),
        fe = U([150, 250]),
        z = U([20, 360]),
        ee = U(!1),
        ue = U([150, 250]),
        K = U(!1),
        _e = U([120, 720]),
        ie = U(!1),
        pe = U([2, 4]),
        re = U(["ig:", "insta", "sc:", "snap", "onlyfans"]),
        ge = U([]),
        ke = U([]),
        Me = U(!1),
        P = U(!1),
        $ = U(!1),
        H = U(6),
        ae = U(!0),
        le = U({
          swipes_left: 0,
          swipes_right: 0,
          bannedWords: {},
          preferredWords: {},
        }),
        he = U([]),
        Z = U(null),
        W = U(null),
        Q = U("dark"),
        J = U(!0),
        G = U(!1),
        X = U(!0),
        V = U(!0),
        me = U(!0),
        we = U(!0),
        Pe = U(!0),
        ze = U(!0),
        Ne = U(!0),
        Fe = U("1.0.0");
      return {
        isSwiping: t,
        swipeCounts: e,
        lastSwipeProfile: n,
        deviceRegistered: r,
        loginEmail: i,
        loginPassword: o,
        loginToken: s,
        userId: a,
        subscriptionCheckAttempts: l,
        uuid: c,
        lastSubscriptionCheck: u,
        subscriptionActive: d,
        subscriptionRenewDate: h,
        subscriptionCanceled: g,
        isFree: f,
        isBasic: p,
        isPro: b,
        isUltimate: m,
        enableAgeFilter: y,
        minMaxAge: T,
        enableHeightFilter: A,
        minMaxHeight: I,
        enableDistanceFilter: L,
        maxDistance: j,
        skipEmptyDistance: k,
        extendedDistance: O,
        enableMinPicturesFilter: D,
        minPictures: Y,
        minMaxSwipeTime: se,
        enableBreak: de,
        breakBetweenSwipes: fe,
        breakDuration: z,
        enableAutomaticPageReload: ee,
        reloadPageBetweenSwipes: ue,
        enableDelayAfterPageReload: K,
        delayBetweenAfterPageReload: _e,
        bannedWords: re,
        preferredWords: ge,
        requiredWords: ke,
        noEmptyDescription: Me,
        onlyVerifyedProfiles: P,
        onlyRecentlyActive: $,
        enableMaxSwipesFilter: S,
        maxSwipes: x,
        maxSwipesRandomNumber: E,
        enableLeftSwipesPercentageFilter: w,
        leftSwipePercentages: v,
        dailySwipes: _,
        dailySwipesDate: R,
        swipesTillAskForRating: H,
        askForRating: ae,
        enableRandomUsageSimulation: ie,
        randomUsageSimulation: pe,
        stats: le,
        log: he,
        longitude: Z,
        latitude: W,
        theme: Q,
        withNotification: J,
        withDebuggerOutput: G,
        showTinder: X,
        showBumble: V,
        showOkCupid: me,
        showLovoo: we,
        showBadoo: Pe,
        showPoF: ze,
        showZoosk: Ne,
        version: Fe,
      };
    }),
    Q6 = "https://payment.auto-swiper.ch/api/v1/login",
    eB = "https://payment.auto-swiper.ch/api/v1/check",
    tB = "https://payment.auto-swiper.ch/api/v1/register",
    nB = "https://payment.auto-swiper.ch/api/v1/load",
    rB = "https://payment.auto-swiper.ch/api/v1/save",
    iB = "https://payment.auto-swiper.ch/api/v1/location/get",
    oB = "https://payment.auto-swiper.ch/api/v1/location/list",
    Xg = [
      "enableAgeFilter",
      "minMaxAge",
      "enableDistanceFilter",
      "maxDistance",
      "skipEmptyDistance",
      "extendedDistance",
      "enableMinPicturesFilter",
      "minPictures",
      "minMaxSwipeTime",
      "enableBreak",
      "breakBetweenSwipes",
      "breakDuration",
      "enableAutomaticPageReload",
      "reloadPageBetweenSwipes",
      "enableDelayAfterPageReload",
      "delayBetweenAfterPageReload",
      "enableMaxSwipesFilter",
      "maxSwipes",
      "enableLeftSwipesPercentageFilter",
      "leftSwipePercentages",
      "enableRandomUsageSimulation",
      "randomUsageSimulation",
      "bannedWords",
      "preferredWords",
      "requiredWords",
      "noEmptyDescription",
      "onlyVerifyedProfiles",
      "onlyRecentlyActive",
      "stats",
      "theme",
      "withNotification",
      "withDebuggerOutput",
      "showTinder",
      "showBumble",
      "showOkCupid",
      "showLovoo",
      "showBadoo",
      "showPoF",
      "showZoosk",
      "cityname",
      "longitude",
      "latitude",
    ];
  let ZC = !1;
  async function JC() {
    const t = await wt.storage.local.get({ withDebuggerOutput: null });
    t.withDebuggerOutput !== null && (ZC = t.withDebuggerOutput);
  }
  JC();
  async function Lt(...t) {
    ZC && console.log(...t);
  }
  const od = async (t, e, n) => {
      if (t.loginEmail.length < 4 || t.loginPassword.length < 4) return;
      const r = {
        method: "GET",
        url: Q6,
        params: { uuid: t.uuid },
        auth: {
          username: t.loginEmail.toLowerCase(),
          password: t.loginPassword,
        },
      };
      try {
        let o = (await e.request(r)).data;
        Lt(o), (t.loginToken = o.token);
      } catch (i) {
        Lt(i), n.warning(wt.i18n.getMessage("ERROR_LOGIN_REQUEST"));
      }
    },
    QC = async function (t, e) {
      Xg.forEach(function (n) {
        t[n] = e[n];
      });
    },
    e_ = async function (t, e) {
      let n = {};
      return (
        e.forEach(function (r) {
          n[r] = t[r];
        }),
        n
      );
    },
    t_ = async function (t, e, n) {
      e.loginToken.length < 20 && (await od(e, t, n));
      const r = {
        method: "GET",
        url: nB,
        headers: { Authorization: "Bearer " + e.loginToken },
      };
      t.request(r)
        .then(function (i) {
          let o = i.data,
            s = JSON.parse(o.options);
          s &&
            (QC(e, s),
            n.success(wt.i18n.getMessage("OPTIONS_SUCCESSFULLY_LOADED")));
        })
        .catch(function (i) {
          Lt(i), n.warning(wt.i18n.getMessage("ERROR_OPTIONS_SYNC_LOAD"));
        });
    },
    sB = async function (t, e, n) {
      e.loginToken.length < 20 && (await od(e, t, n));
      let r = await e_(e, Xg);
      const i = {
        method: "POST",
        url: rB,
        data: { options: r },
        headers: { Authorization: "Bearer " + e.loginToken },
      };
      t.request(i)
        .then(function (o) {
          n.success(wt.i18n.getMessage("OPTIONS_SUCCESSFULLY_SAVED"));
        })
        .catch(function (o) {
          Lt(o), n.warning(wt.i18n.getMessage("ERROR_OPTIONS_SYNC_SAVE"));
        });
    },
    vf = (t) => {
      (t.isFree = !0),
        (t.isBasic = !1),
        (t.isPro = !1),
        (t.isUltimate = !1),
        (t.enableMaxSwipesFilter = !1),
        (t.enableLeftSwipesPercentageFilter = !1),
        (t.enableBreak = !1),
        (t.enableAutomaticPageReload = !1),
        (t.enableDelayAfterPageReload = !1),
        (t.enableRandomUsageSimulation = !1),
        (t.minMaxSwipeTime = [2.5, 4.5]),
        (t.skipEmptyDistance = !1),
        (t.extendedDistance = !1),
        (t.skipEmptyDistance = !1),
        (t.onlyVerifyedProfiles = !1),
        (t.deviceRegistered = !1),
        (t.subscriptionActive = !1),
        (t.subscriptionRenewDate = null);
    };
  function aB(t, e, n = 1e3) {
    const i = n / 6371e3,
      o = Math.random() * 2 * Math.PI,
      s = Math.asin(
        Math.sin((e * Math.PI) / 180) * Math.cos(i) +
          Math.cos((e * Math.PI) / 180) * Math.sin(i) * Math.cos(o)
      ),
      a =
        (t * Math.PI) / 180 +
        Math.atan2(
          Math.sin(o) * Math.sin(i) * Math.cos((e * Math.PI) / 180),
          Math.cos(i) - Math.sin((e * Math.PI) / 180) * Math.sin(s)
        );
    return { latitude: (s * 180) / Math.PI, longitude: (a * 180) / Math.PI };
  }
  const lB = At(
      "a",
      {
        href: "https://weblate.nonameweb.ch/engage/auto-swiper/",
        target: "_blank",
      },
      [
        At("img", {
          src: "https://weblate.nonameweb.ch/widgets/auto-swiper/-/svg-badge.svg",
          alt: "Translation",
        }),
      ],
      -1
    ),
    cB = { key: 0 },
    uB = { key: 1 },
    dB = {
      __name: "App",
      setup(t) {
        const e = Zs();
        e.push({ name: "settings" });
        const n = nd(),
          r = Ve("axios"),
          i = qn();
        Array.isArray(i.maxSwipes) || (i.maxSwipes = [50, 100]);
        const o = U(!1),
          s = U(!1),
          a = U("");
        _r(i);
        const l = ce(() => wt.runtime.getManifest().version);
        let c = async () => {
          const g = new Date().toISOString().slice(0, 10);
          i.dailySwipesDate !== g &&
            ((i.dailySwipesDate = g), (i.dailySwipes = 0));
          const { lastSwipeCount: f } = await wt.storage.local.get({
            lastSwipeCount: 0,
          });
          f > 0 &&
            ((i.dailySwipes += f),
            await wt.storage.local.set({ lastSwipeCount: 0 })),
            Lt("daily swipes: " + i.dailySwipes),
            Lt("daily swipes date: " + i.dailySwipesDate);
        };
        const u = async () => {
            const g = Date.now() - Date.parse(i.lastSubscriptionCheck);
            if (
              (i.loginToken.length < 20 && (await od(i, r, n)),
              i.loginToken.length > 0 &&
                (i.lastSubscriptionCheck === null || g > 36e5 || i.isFree))
            ) {
              const f = {
                method: "GET",
                url: eB,
                params: { uuid: i.uuid },
                headers: { Authorization: "Bearer " + i.loginToken },
              };
              i.subscriptionCheckAttempts++;
              const p = () => {
                  (i.subscriptionCheckAttempts = 0),
                    vf(i),
                    n.warning("Failed to check subscription status");
                },
                b = (m) => {
                  let _ = m.data;
                  if ((Lt(m), Lt(_), m.status !== 200)) {
                    i.subscriptionCheckAttempts === 3 &&
                      (p(), n.warning(m.statusText));
                    return;
                  }
                  switch (
                    ((i.subscriptionCheckAttempts = 0),
                    (i.lastSubscriptionCheck = new Date()),
                    (i.userId = _.user_id),
                    (i.deviceRegistered = _.device_active),
                    (i.subscriptionActive = _.subscription_active),
                    (i.subscriptionRenewDate = _.subscription_renew_date),
                    (i.subscriptionCanceled = _.subscription_canceled),
                    (i.isFree = !1),
                    (i.isBasic = !1),
                    (i.isPro = !1),
                    (i.isUltimate = !1),
                    _.subscription_plan_id)
                  ) {
                    case 1:
                      i.isBasic = !0;
                      break;
                    case 2:
                      i.isPro = !0;
                      break;
                    case 3:
                      i.isUltimate = !0;
                      break;
                    default:
                      i.isFree = !0;
                      break;
                  }
                  i.subscriptionActive || vf(i);
                };
              r.request(f)
                .then(b)
                .catch((m) => {
                  Lt(m),
                    n.warning(m.message),
                    i.subscriptionCheckAttempts === 3 && p();
                });
            }
          },
          d = async () => {
            let h = wt.runtime.getManifest().version;
            i.version !== h &&
              ((i.version = h),
              n.info(
                wt.i18n.getMessage("TOAST_VERSION_UPDATE") +
                  " https://www.auto-swiper.ch/changelog.html",
                { closable: !0, duration: 8e3 }
              ));
          };
        return (
          Vt(async () => {
            d(),
              i.swipesTillAskForRating < 1 &&
                i.askForRating &&
                e.push({ name: "rate" }),
              (i.stats === void 0 || i.stats === null) &&
                (i.stats = {
                  swipes_left: 0,
                  swipes_right: 0,
                  bannedWords: {},
                  preferredWords: {},
                }),
              (i.isFree || i.isBasic) && c(),
              wt.runtime.onMessage.addListener(function (h, g, f) {
                h.action === "auto-swiper-message-popupjs-progress-update"
                  ? (Lt("recived: auto-swiper-message-popupjs-progress-update"),
                    e.push({ name: "progress" }),
                    (o.value = !1),
                    (i.swipeCounts.total = h.swipeCounts.total),
                    (i.swipeCounts.left = h.swipeCounts.left),
                    (i.swipeCounts.right = h.swipeCounts.right),
                    h.profile.reason !== null &&
                      ((i.lastSwipeProfile.reason = h.profile.reason),
                      (i.lastSwipeProfile.name = h.profile.name),
                      (i.lastSwipeProfile.age = h.profile.age),
                      (i.lastSwipeProfile.height = h.profile.height),
                      (i.lastSwipeProfile.distance = h.profile.distance),
                      (i.lastSwipeProfile.photosCount = h.profile.photosCount)),
                    (i.stats = h.stats),
                    (i.log = h.log))
                  : h.action === "auto-swiper-message-popupjs-done"
                  ? (Lt("recived: auto-swiper-message-popupjs-done"),
                    e.push({ name: "settings" }),
                    (i.swipesTillAskForRating = i.swipesTillAskForRating - 1),
                    (i.stats = h.stats),
                    (i.log = h.log),
                    (i.swipeCounts.total = 0),
                    (i.swipeCounts.left = 0),
                    (i.swipeCounts.right = 0),
                    (i.lastSwipeProfile.reason = null),
                    (i.lastSwipeProfile.name = null),
                    (i.lastSwipeProfile.age = null),
                    (i.lastSwipeProfile.height = null),
                    (i.lastSwipeProfile.distance = null),
                    (i.lastSwipeProfile.photosCount = null))
                  : h.action === "auto-swiper-message-popupjs-show-message" &&
                    (Lt("recived: auto-swiper-message-popupjs-show-message"),
                    h.message &&
                      h.message.length > 0 &&
                      ((a.value = h.message), (s.value = !0))),
                  f();
              }),
              setTimeout(() => {
                u();
              }, 1e3),
              wt.tabs
                .query({ active: !0, currentWindow: !0 })
                .then((h) => {
                  h[0].url &&
                    (Lt("sent: auto-swiper-message-contentjs-check-progress"),
                    wt.tabs
                      .sendMessage(h[0].id, {
                        action: "auto-swiper-message-contentjs-check-progress",
                      })
                      .catch((g) => {
                        Lt("checkAutoSwipe", g),
                          g ? (o.value = !0) : (o.value = !1);
                      }));
                })
                .catch((h) => {
                  h && (o.value = !0);
                });
          }),
          (h, g) => {
            const f = _E("router-view"),
              p = Hg;
            return (
              Ie(),
              He(
                p,
                { size: "small" },
                {
                  header: B(() => [
                    Se(be(h.$i18n("APP_NAME")) + " ", 1),
                    At("small", null, "v" + be(l.value) + " by surtic86 [patched by gg]", 1),
                  ]),
                  "header-extra": B(() => [lB]),
                  default: B(() => [
                    o.value
                      ? (Ie(),
                        nn("div", cB, [
                          At("div", null, [
                            At("h1", null, be(h.$i18n("ERROR")), 1),
                            At(
                              "h2",
                              null,
                              be(h.$i18n("ERROR_PLEAS_RELOAD_PAGE")),
                              1
                            ),
                          ]),
                        ]))
                      : s.value
                      ? (Ie(),
                        nn("div", uB, [
                          At("div", null, [
                            At("h1", null, be(h.$i18n("ERROR")), 1),
                            At("h2", null, be(h.$i18n(a.value)), 1),
                          ]),
                        ]))
                      : (Ie(), He(f, { key: h.$route.path })),
                  ]),
                  _: 1,
                }
              )
            );
          }
        );
      },
    },
    hB = {
      __name: "Provider",
      setup(t) {
        const e = qn(),
          n = {
            common: {
              primaryColor: "#3cc6f7",
              primaryColorHover: "#36b2de",
              primaryColorPressed: "#2a8bad",
              primaryColorSuppl: "#309ec6",
              successColor: "#2ae0b1",
              successColorHover: "#26ca9f",
              successColorPressed: "#1d9d7c",
              successColorSuppl: "#22b38e",
              infoColor: "#fcc94f",
              infoColorHover: "#e3b547",
              infoColorPressed: "#b08d37",
              infoColorSuppl: "#caa13f",
              warningColor: "#fe4257",
              warningColorHover: "#e53b4e",
              warningColorPressed: "#b22e3d",
              warningColorSuppl: "#cb3546",
              errorColor: "#b65df2",
              errorColorHover: "#a454da",
              errorColorPressed: "#7f41a9",
              errorColorSuppl: "#924ac2",
            },
          },
          r = ce(() =>
            e.theme === "dark"
              ? ((document.body.style.backgroundColor = "#18181C"), j6)
              : ((document.body.style.backgroundColor = "#FFFFFF"), null)
          );
        return (i, o) => {
          const s = AF,
            a = GF,
            l = DF,
            c = D8,
            u = MD;
          return (
            Ie(),
            He(
              u,
              { theme: r.value, "theme-overrides": n },
              {
                default: B(() => [
                  F(c, null, {
                    default: B(() => [
                      F(l, null, {
                        default: B(() => [
                          F(a, null, {
                            default: B(() => [
                              F(s, null, { default: B(() => [F(dB)]), _: 1 }),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      }),
                    ]),
                    _: 1,
                  }),
                ]),
                _: 1,
              },
              8,
              ["theme"]
            )
          );
        };
      },
    };
  function n_(t, e) {
    return function () {
      return t.apply(e, arguments);
    };
  }
  const { toString: fB } = Object.prototype,
    { getPrototypeOf: Kg } = Object,
    sd = ((t) => (e) => {
      const n = fB.call(e);
      return t[n] || (t[n] = n.slice(8, -1).toLowerCase());
    })(Object.create(null)),
    Br = (t) => ((t = t.toLowerCase()), (e) => sd(e) === t),
    ad = (t) => (e) => typeof e === t,
    { isArray: ia } = Array,
    ul = ad("undefined");
  function gB(t) {
    return (
      t !== null &&
      !ul(t) &&
      t.constructor !== null &&
      !ul(t.constructor) &&
      ir(t.constructor.isBuffer) &&
      t.constructor.isBuffer(t)
    );
  }
  const r_ = Br("ArrayBuffer");
  function pB(t) {
    let e;
    return (
      typeof ArrayBuffer < "u" && ArrayBuffer.isView
        ? (e = ArrayBuffer.isView(t))
        : (e = t && t.buffer && r_(t.buffer)),
      e
    );
  }
  const mB = ad("string"),
    ir = ad("function"),
    i_ = ad("number"),
    ld = (t) => t !== null && typeof t == "object",
    vB = (t) => t === !0 || t === !1,
    $c = (t) => {
      if (sd(t) !== "object") return !1;
      const e = Kg(t);
      return (
        (e === null ||
          e === Object.prototype ||
          Object.getPrototypeOf(e) === null) &&
        !(Symbol.toStringTag in t) &&
        !(Symbol.iterator in t)
      );
    },
    bB = Br("Date"),
    yB = Br("File"),
    xB = Br("Blob"),
    CB = Br("FileList"),
    _B = (t) => ld(t) && ir(t.pipe),
    wB = (t) => {
      let e;
      return (
        t &&
        ((typeof FormData == "function" && t instanceof FormData) ||
          (ir(t.append) &&
            ((e = sd(t)) === "formdata" ||
              (e === "object" &&
                ir(t.toString) &&
                t.toString() === "[object FormData]"))))
      );
    },
    SB = Br("URLSearchParams"),
    EB = (t) =>
      t.trim ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  function Bl(t, e, { allOwnKeys: n = !1 } = {}) {
    if (t === null || typeof t > "u") return;
    let r, i;
    if ((typeof t != "object" && (t = [t]), ia(t)))
      for (r = 0, i = t.length; r < i; r++) e.call(null, t[r], r, t);
    else {
      const o = n ? Object.getOwnPropertyNames(t) : Object.keys(t),
        s = o.length;
      let a;
      for (r = 0; r < s; r++) (a = o[r]), e.call(null, t[a], a, t);
    }
  }
  function o_(t, e) {
    e = e.toLowerCase();
    const n = Object.keys(t);
    let r = n.length,
      i;
    for (; r-- > 0; ) if (((i = n[r]), e === i.toLowerCase())) return i;
    return null;
  }
  const s_ =
      typeof globalThis < "u"
        ? globalThis
        : typeof self < "u"
        ? self
        : typeof window < "u"
        ? window
        : global,
    a_ = (t) => !ul(t) && t !== s_;
  function bf() {
    const { caseless: t } = (a_(this) && this) || {},
      e = {},
      n = (r, i) => {
        const o = (t && o_(e, i)) || i;
        $c(e[o]) && $c(r)
          ? (e[o] = bf(e[o], r))
          : $c(r)
          ? (e[o] = bf({}, r))
          : ia(r)
          ? (e[o] = r.slice())
          : (e[o] = r);
      };
    for (let r = 0, i = arguments.length; r < i; r++)
      arguments[r] && Bl(arguments[r], n);
    return e;
  }
  const RB = (t, e, n, { allOwnKeys: r } = {}) => (
      Bl(
        e,
        (i, o) => {
          n && ir(i) ? (t[o] = n_(i, n)) : (t[o] = i);
        },
        { allOwnKeys: r }
      ),
      t
    ),
    TB = (t) => (t.charCodeAt(0) === 65279 && (t = t.slice(1)), t),
    PB = (t, e, n, r) => {
      (t.prototype = Object.create(e.prototype, r)),
        (t.prototype.constructor = t),
        Object.defineProperty(t, "super", { value: e.prototype }),
        n && Object.assign(t.prototype, n);
    },
    AB = (t, e, n, r) => {
      let i, o, s;
      const a = {};
      if (((e = e || {}), t == null)) return e;
      do {
        for (i = Object.getOwnPropertyNames(t), o = i.length; o-- > 0; )
          (s = i[o]),
            (!r || r(s, t, e)) && !a[s] && ((e[s] = t[s]), (a[s] = !0));
        t = n !== !1 && Kg(t);
      } while (t && (!n || n(t, e)) && t !== Object.prototype);
      return e;
    },
    kB = (t, e, n) => {
      (t = String(t)),
        (n === void 0 || n > t.length) && (n = t.length),
        (n -= e.length);
      const r = t.indexOf(e, n);
      return r !== -1 && r === n;
    },
    IB = (t) => {
      if (!t) return null;
      if (ia(t)) return t;
      let e = t.length;
      if (!i_(e)) return null;
      const n = new Array(e);
      for (; e-- > 0; ) n[e] = t[e];
      return n;
    },
    OB = (
      (t) => (e) =>
        t && e instanceof t
    )(typeof Uint8Array < "u" && Kg(Uint8Array)),
    MB = (t, e) => {
      const r = (t && t[Symbol.iterator]).call(t);
      let i;
      for (; (i = r.next()) && !i.done; ) {
        const o = i.value;
        e.call(t, o[0], o[1]);
      }
    },
    LB = (t, e) => {
      let n;
      const r = [];
      for (; (n = t.exec(e)) !== null; ) r.push(n);
      return r;
    },
    $B = Br("HTMLFormElement"),
    DB = (t) =>
      t.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function (n, r, i) {
        return r.toUpperCase() + i;
      }),
    wv = (
      ({ hasOwnProperty: t }) =>
      (e, n) =>
        t.call(e, n)
    )(Object.prototype),
    zB = Br("RegExp"),
    l_ = (t, e) => {
      const n = Object.getOwnPropertyDescriptors(t),
        r = {};
      Bl(n, (i, o) => {
        let s;
        (s = e(i, o, t)) !== !1 && (r[o] = s || i);
      }),
        Object.defineProperties(t, r);
    },
    FB = (t) => {
      l_(t, (e, n) => {
        if (ir(t) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
          return !1;
        const r = t[n];
        if (ir(r)) {
          if (((e.enumerable = !1), "writable" in e)) {
            e.writable = !1;
            return;
          }
          e.set ||
            (e.set = () => {
              throw Error("Can not rewrite read-only method '" + n + "'");
            });
        }
      });
    },
    BB = (t, e) => {
      const n = {},
        r = (i) => {
          i.forEach((o) => {
            n[o] = !0;
          });
        };
      return ia(t) ? r(t) : r(String(t).split(e)), n;
    },
    NB = () => {},
    HB = (t, e) => ((t = +t), Number.isFinite(t) ? t : e),
    ph = "abcdefghijklmnopqrstuvwxyz",
    Sv = "0123456789",
    c_ = { DIGIT: Sv, ALPHA: ph, ALPHA_DIGIT: ph + ph.toUpperCase() + Sv },
    WB = (t = 16, e = c_.ALPHA_DIGIT) => {
      let n = "";
      const { length: r } = e;
      for (; t--; ) n += e[(Math.random() * r) | 0];
      return n;
    };
  function jB(t) {
    return !!(
      t &&
      ir(t.append) &&
      t[Symbol.toStringTag] === "FormData" &&
      t[Symbol.iterator]
    );
  }
  const UB = (t) => {
      const e = new Array(10),
        n = (r, i) => {
          if (ld(r)) {
            if (e.indexOf(r) >= 0) return;
            if (!("toJSON" in r)) {
              e[i] = r;
              const o = ia(r) ? [] : {};
              return (
                Bl(r, (s, a) => {
                  const l = n(s, i + 1);
                  !ul(l) && (o[a] = l);
                }),
                (e[i] = void 0),
                o
              );
            }
          }
          return r;
        };
      return n(t, 0);
    },
    VB = Br("AsyncFunction"),
    GB = (t) => t && (ld(t) || ir(t)) && ir(t.then) && ir(t.catch),
    ye = {
      isArray: ia,
      isArrayBuffer: r_,
      isBuffer: gB,
      isFormData: wB,
      isArrayBufferView: pB,
      isString: mB,
      isNumber: i_,
      isBoolean: vB,
      isObject: ld,
      isPlainObject: $c,
      isUndefined: ul,
      isDate: bB,
      isFile: yB,
      isBlob: xB,
      isRegExp: zB,
      isFunction: ir,
      isStream: _B,
      isURLSearchParams: SB,
      isTypedArray: OB,
      isFileList: CB,
      forEach: Bl,
      merge: bf,
      extend: RB,
      trim: EB,
      stripBOM: TB,
      inherits: PB,
      toFlatObject: AB,
      kindOf: sd,
      kindOfTest: Br,
      endsWith: kB,
      toArray: IB,
      forEachEntry: MB,
      matchAll: LB,
      isHTMLForm: $B,
      hasOwnProperty: wv,
      hasOwnProp: wv,
      reduceDescriptors: l_,
      freezeMethods: FB,
      toObjectSet: BB,
      toCamelCase: DB,
      noop: NB,
      toFiniteNumber: HB,
      findKey: o_,
      global: s_,
      isContextDefined: a_,
      ALPHABET: c_,
      generateString: WB,
      isSpecCompliantForm: jB,
      toJSONObject: UB,
      isAsyncFn: VB,
      isThenable: GB,
    };
  function at(t, e, n, r, i) {
    Error.call(this),
      Error.captureStackTrace
        ? Error.captureStackTrace(this, this.constructor)
        : (this.stack = new Error().stack),
      (this.message = t),
      (this.name = "AxiosError"),
      e && (this.code = e),
      n && (this.config = n),
      r && (this.request = r),
      i && (this.response = i);
  }
  ye.inherits(at, Error, {
    toJSON: function () {
      return {
        message: this.message,
        name: this.name,
        description: this.description,
        number: this.number,
        fileName: this.fileName,
        lineNumber: this.lineNumber,
        columnNumber: this.columnNumber,
        stack: this.stack,
        config: ye.toJSONObject(this.config),
        code: this.code,
        status:
          this.response && this.response.status ? this.response.status : null,
      };
    },
  });
  const u_ = at.prototype,
    d_ = {};
  [
    "ERR_BAD_OPTION_VALUE",
    "ERR_BAD_OPTION",
    "ECONNABORTED",
    "ETIMEDOUT",
    "ERR_NETWORK",
    "ERR_FR_TOO_MANY_REDIRECTS",
    "ERR_DEPRECATED",
    "ERR_BAD_RESPONSE",
    "ERR_BAD_REQUEST",
    "ERR_CANCELED",
    "ERR_NOT_SUPPORT",
    "ERR_INVALID_URL",
  ].forEach((t) => {
    d_[t] = { value: t };
  });
  Object.defineProperties(at, d_);
  Object.defineProperty(u_, "isAxiosError", { value: !0 });
  at.from = (t, e, n, r, i, o) => {
    const s = Object.create(u_);
    return (
      ye.toFlatObject(
        t,
        s,
        function (l) {
          return l !== Error.prototype;
        },
        (a) => a !== "isAxiosError"
      ),
      at.call(s, t.message, e, n, r, i),
      (s.cause = t),
      (s.name = t.name),
      o && Object.assign(s, o),
      s
    );
  };
  const XB = null;
  function yf(t) {
    return ye.isPlainObject(t) || ye.isArray(t);
  }
  function h_(t) {
    return ye.endsWith(t, "[]") ? t.slice(0, -2) : t;
  }
  function Ev(t, e, n) {
    return t
      ? t
          .concat(e)
          .map(function (i, o) {
            return (i = h_(i)), !n && o ? "[" + i + "]" : i;
          })
          .join(n ? "." : "")
      : e;
  }
  function KB(t) {
    return ye.isArray(t) && !t.some(yf);
  }
  const YB = ye.toFlatObject(ye, {}, null, function (e) {
    return /^is[A-Z]/.test(e);
  });
  function cd(t, e, n) {
    if (!ye.isObject(t)) throw new TypeError("target must be an object");
    (e = e || new FormData()),
      (n = ye.toFlatObject(
        n,
        { metaTokens: !0, dots: !1, indexes: !1 },
        !1,
        function (p, b) {
          return !ye.isUndefined(b[p]);
        }
      ));
    const r = n.metaTokens,
      i = n.visitor || u,
      o = n.dots,
      s = n.indexes,
      l = (n.Blob || (typeof Blob < "u" && Blob)) && ye.isSpecCompliantForm(e);
    if (!ye.isFunction(i)) throw new TypeError("visitor must be a function");
    function c(f) {
      if (f === null) return "";
      if (ye.isDate(f)) return f.toISOString();
      if (!l && ye.isBlob(f))
        throw new at("Blob is not supported. Use a Buffer instead.");
      return ye.isArrayBuffer(f) || ye.isTypedArray(f)
        ? l && typeof Blob == "function"
          ? new Blob([f])
          : Buffer.from(f)
        : f;
    }
    function u(f, p, b) {
      let m = f;
      if (f && !b && typeof f == "object") {
        if (ye.endsWith(p, "{}"))
          (p = r ? p : p.slice(0, -2)), (f = JSON.stringify(f));
        else if (
          (ye.isArray(f) && KB(f)) ||
          ((ye.isFileList(f) || ye.endsWith(p, "[]")) && (m = ye.toArray(f)))
        )
          return (
            (p = h_(p)),
            m.forEach(function (R, S) {
              !(ye.isUndefined(R) || R === null) &&
                e.append(
                  s === !0 ? Ev([p], S, o) : s === null ? p : p + "[]",
                  c(R)
                );
            }),
            !1
          );
      }
      return yf(f) ? !0 : (e.append(Ev(b, p, o), c(f)), !1);
    }
    const d = [],
      h = Object.assign(YB, {
        defaultVisitor: u,
        convertValue: c,
        isVisitable: yf,
      });
    function g(f, p) {
      if (!ye.isUndefined(f)) {
        if (d.indexOf(f) !== -1)
          throw Error("Circular reference detected in " + p.join("."));
        d.push(f),
          ye.forEach(f, function (m, _) {
            (!(ye.isUndefined(m) || m === null) &&
              i.call(e, m, ye.isString(_) ? _.trim() : _, p, h)) === !0 &&
              g(m, p ? p.concat(_) : [_]);
          }),
          d.pop();
      }
    }
    if (!ye.isObject(t)) throw new TypeError("data must be an object");
    return g(t), e;
  }
  function Rv(t) {
    const e = {
      "!": "%21",
      "'": "%27",
      "(": "%28",
      ")": "%29",
      "~": "%7E",
      "%20": "+",
      "%00": "\0",
    };
    return encodeURIComponent(t).replace(/[!'()~]|%20|%00/g, function (r) {
      return e[r];
    });
  }
  function Yg(t, e) {
    (this._pairs = []), t && cd(t, this, e);
  }
  const f_ = Yg.prototype;
  f_.append = function (e, n) {
    this._pairs.push([e, n]);
  };
  f_.toString = function (e) {
    const n = e
      ? function (r) {
          return e.call(this, r, Rv);
        }
      : Rv;
    return this._pairs
      .map(function (i) {
        return n(i[0]) + "=" + n(i[1]);
      }, "")
      .join("&");
  };
  function qB(t) {
    return encodeURIComponent(t)
      .replace(/%3A/gi, ":")
      .replace(/%24/g, "$")
      .replace(/%2C/gi, ",")
      .replace(/%20/g, "+")
      .replace(/%5B/gi, "[")
      .replace(/%5D/gi, "]");
  }
  function g_(t, e, n) {
    if (!e) return t;
    const r = (n && n.encode) || qB,
      i = n && n.serialize;
    let o;
    if (
      (i
        ? (o = i(e, n))
        : (o = ye.isURLSearchParams(e)
            ? e.toString()
            : new Yg(e, n).toString(r)),
      o)
    ) {
      const s = t.indexOf("#");
      s !== -1 && (t = t.slice(0, s)),
        (t += (t.indexOf("?") === -1 ? "?" : "&") + o);
    }
    return t;
  }
  class Tv {
    constructor() {
      this.handlers = [];
    }
    use(e, n, r) {
      return (
        this.handlers.push({
          fulfilled: e,
          rejected: n,
          synchronous: r ? r.synchronous : !1,
          runWhen: r ? r.runWhen : null,
        }),
        this.handlers.length - 1
      );
    }
    eject(e) {
      this.handlers[e] && (this.handlers[e] = null);
    }
    clear() {
      this.handlers && (this.handlers = []);
    }
    forEach(e) {
      ye.forEach(this.handlers, function (r) {
        r !== null && e(r);
      });
    }
  }
  const p_ = {
      silentJSONParsing: !0,
      forcedJSONParsing: !0,
      clarifyTimeoutError: !1,
    },
    ZB = typeof URLSearchParams < "u" ? URLSearchParams : Yg,
    JB = typeof FormData < "u" ? FormData : null,
    QB = typeof Blob < "u" ? Blob : null,
    eN = {
      isBrowser: !0,
      classes: { URLSearchParams: ZB, FormData: JB, Blob: QB },
      protocols: ["http", "https", "file", "blob", "url", "data"],
    },
    m_ = typeof window < "u" && typeof document < "u",
    tN = ((t) => m_ && ["ReactNative", "NativeScript", "NS"].indexOf(t) < 0)(
      typeof navigator < "u" && navigator.product
    ),
    nN =
      typeof WorkerGlobalScope < "u" &&
      self instanceof WorkerGlobalScope &&
      typeof self.importScripts == "function",
    rN = Object.freeze(
      Object.defineProperty(
        {
          __proto__: null,
          hasBrowserEnv: m_,
          hasStandardBrowserEnv: tN,
          hasStandardBrowserWebWorkerEnv: nN,
        },
        Symbol.toStringTag,
        { value: "Module" }
      )
    ),
    Ir = { ...rN, ...eN };
  function iN(t, e) {
    return cd(
      t,
      new Ir.classes.URLSearchParams(),
      Object.assign(
        {
          visitor: function (n, r, i, o) {
            return Ir.isNode && ye.isBuffer(n)
              ? (this.append(r, n.toString("base64")), !1)
              : o.defaultVisitor.apply(this, arguments);
          },
        },
        e
      )
    );
  }
  function oN(t) {
    return ye
      .matchAll(/\w+|\[(\w*)]/g, t)
      .map((e) => (e[0] === "[]" ? "" : e[1] || e[0]));
  }
  function sN(t) {
    const e = {},
      n = Object.keys(t);
    let r;
    const i = n.length;
    let o;
    for (r = 0; r < i; r++) (o = n[r]), (e[o] = t[o]);
    return e;
  }
  function v_(t) {
    function e(n, r, i, o) {
      let s = n[o++];
      if (s === "__proto__") return !0;
      const a = Number.isFinite(+s),
        l = o >= n.length;
      return (
        (s = !s && ye.isArray(i) ? i.length : s),
        l
          ? (ye.hasOwnProp(i, s) ? (i[s] = [i[s], r]) : (i[s] = r), !a)
          : ((!i[s] || !ye.isObject(i[s])) && (i[s] = []),
            e(n, r, i[s], o) && ye.isArray(i[s]) && (i[s] = sN(i[s])),
            !a)
      );
    }
    if (ye.isFormData(t) && ye.isFunction(t.entries)) {
      const n = {};
      return (
        ye.forEachEntry(t, (r, i) => {
          e(oN(r), i, n, 0);
        }),
        n
      );
    }
    return null;
  }
  function aN(t, e, n) {
    if (ye.isString(t))
      try {
        return (e || JSON.parse)(t), ye.trim(t);
      } catch (r) {
        if (r.name !== "SyntaxError") throw r;
      }
    return (n || JSON.stringify)(t);
  }
  const qg = {
    transitional: p_,
    adapter: ["xhr", "http"],
    transformRequest: [
      function (e, n) {
        const r = n.getContentType() || "",
          i = r.indexOf("application/json") > -1,
          o = ye.isObject(e);
        if ((o && ye.isHTMLForm(e) && (e = new FormData(e)), ye.isFormData(e)))
          return i ? JSON.stringify(v_(e)) : e;
        if (
          ye.isArrayBuffer(e) ||
          ye.isBuffer(e) ||
          ye.isStream(e) ||
          ye.isFile(e) ||
          ye.isBlob(e)
        )
          return e;
        if (ye.isArrayBufferView(e)) return e.buffer;
        if (ye.isURLSearchParams(e))
          return (
            n.setContentType(
              "application/x-www-form-urlencoded;charset=utf-8",
              !1
            ),
            e.toString()
          );
        let a;
        if (o) {
          if (r.indexOf("application/x-www-form-urlencoded") > -1)
            return iN(e, this.formSerializer).toString();
          if ((a = ye.isFileList(e)) || r.indexOf("multipart/form-data") > -1) {
            const l = this.env && this.env.FormData;
            return cd(
              a ? { "files[]": e } : e,
              l && new l(),
              this.formSerializer
            );
          }
        }
        return o || i ? (n.setContentType("application/json", !1), aN(e)) : e;
      },
    ],
    transformResponse: [
      function (e) {
        const n = this.transitional || qg.transitional,
          r = n && n.forcedJSONParsing,
          i = this.responseType === "json";
        if (e && ye.isString(e) && ((r && !this.responseType) || i)) {
          const s = !(n && n.silentJSONParsing) && i;
          try {
            return JSON.parse(e);
          } catch (a) {
            if (s)
              throw a.name === "SyntaxError"
                ? at.from(a, at.ERR_BAD_RESPONSE, this, null, this.response)
                : a;
          }
        }
        return e;
      },
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: Ir.classes.FormData, Blob: Ir.classes.Blob },
    validateStatus: function (e) {
      return e >= 200 && e < 300;
    },
    headers: {
      common: {
        Accept: "application/json, text/plain, */*",
        "Content-Type": void 0,
      },
    },
  };
  ye.forEach(["delete", "get", "head", "post", "put", "patch"], (t) => {
    qg.headers[t] = {};
  });
  const Zg = qg,
    lN = ye.toObjectSet([
      "age",
      "authorization",
      "content-length",
      "content-type",
      "etag",
      "expires",
      "from",
      "host",
      "if-modified-since",
      "if-unmodified-since",
      "last-modified",
      "location",
      "max-forwards",
      "proxy-authorization",
      "referer",
      "retry-after",
      "user-agent",
    ]),
    cN = (t) => {
      const e = {};
      let n, r, i;
      return (
        t &&
          t
            .split(
              `
`
            )
            .forEach(function (s) {
              (i = s.indexOf(":")),
                (n = s.substring(0, i).trim().toLowerCase()),
                (r = s.substring(i + 1).trim()),
                !(!n || (e[n] && lN[n])) &&
                  (n === "set-cookie"
                    ? e[n]
                      ? e[n].push(r)
                      : (e[n] = [r])
                    : (e[n] = e[n] ? e[n] + ", " + r : r));
            }),
        e
      );
    },
    Pv = Symbol("internals");
  function Ca(t) {
    return t && String(t).trim().toLowerCase();
  }
  function Dc(t) {
    return t === !1 || t == null ? t : ye.isArray(t) ? t.map(Dc) : String(t);
  }
  function uN(t) {
    const e = Object.create(null),
      n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let r;
    for (; (r = n.exec(t)); ) e[r[1]] = r[2];
    return e;
  }
  const dN = (t) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(t.trim());
  function mh(t, e, n, r, i) {
    if (ye.isFunction(r)) return r.call(this, e, n);
    if ((i && (e = n), !!ye.isString(e))) {
      if (ye.isString(r)) return e.indexOf(r) !== -1;
      if (ye.isRegExp(r)) return r.test(e);
    }
  }
  function hN(t) {
    return t
      .trim()
      .toLowerCase()
      .replace(/([a-z\d])(\w*)/g, (e, n, r) => n.toUpperCase() + r);
  }
  function fN(t, e) {
    const n = ye.toCamelCase(" " + e);
    ["get", "set", "has"].forEach((r) => {
      Object.defineProperty(t, r + n, {
        value: function (i, o, s) {
          return this[r].call(this, e, i, o, s);
        },
        configurable: !0,
      });
    });
  }
  class ud {
    constructor(e) {
      e && this.set(e);
    }
    set(e, n, r) {
      const i = this;
      function o(a, l, c) {
        const u = Ca(l);
        if (!u) throw new Error("header name must be a non-empty string");
        const d = ye.findKey(i, u);
        (!d || i[d] === void 0 || c === !0 || (c === void 0 && i[d] !== !1)) &&
          (i[d || l] = Dc(a));
      }
      const s = (a, l) => ye.forEach(a, (c, u) => o(c, u, l));
      return (
        ye.isPlainObject(e) || e instanceof this.constructor
          ? s(e, n)
          : ye.isString(e) && (e = e.trim()) && !dN(e)
          ? s(cN(e), n)
          : e != null && o(n, e, r),
        this
      );
    }
    get(e, n) {
      if (((e = Ca(e)), e)) {
        const r = ye.findKey(this, e);
        if (r) {
          const i = this[r];
          if (!n) return i;
          if (n === !0) return uN(i);
          if (ye.isFunction(n)) return n.call(this, i, r);
          if (ye.isRegExp(n)) return n.exec(i);
          throw new TypeError("parser must be boolean|regexp|function");
        }
      }
    }
    has(e, n) {
      if (((e = Ca(e)), e)) {
        const r = ye.findKey(this, e);
        return !!(r && this[r] !== void 0 && (!n || mh(this, this[r], r, n)));
      }
      return !1;
    }
    delete(e, n) {
      const r = this;
      let i = !1;
      function o(s) {
        if (((s = Ca(s)), s)) {
          const a = ye.findKey(r, s);
          a && (!n || mh(r, r[a], a, n)) && (delete r[a], (i = !0));
        }
      }
      return ye.isArray(e) ? e.forEach(o) : o(e), i;
    }
    clear(e) {
      const n = Object.keys(this);
      let r = n.length,
        i = !1;
      for (; r--; ) {
        const o = n[r];
        (!e || mh(this, this[o], o, e, !0)) && (delete this[o], (i = !0));
      }
      return i;
    }
    normalize(e) {
      const n = this,
        r = {};
      return (
        ye.forEach(this, (i, o) => {
          const s = ye.findKey(r, o);
          if (s) {
            (n[s] = Dc(i)), delete n[o];
            return;
          }
          const a = e ? hN(o) : String(o).trim();
          a !== o && delete n[o], (n[a] = Dc(i)), (r[a] = !0);
        }),
        this
      );
    }
    concat(...e) {
      return this.constructor.concat(this, ...e);
    }
    toJSON(e) {
      const n = Object.create(null);
      return (
        ye.forEach(this, (r, i) => {
          r != null &&
            r !== !1 &&
            (n[i] = e && ye.isArray(r) ? r.join(", ") : r);
        }),
        n
      );
    }
    [Symbol.iterator]() {
      return Object.entries(this.toJSON())[Symbol.iterator]();
    }
    toString() {
      return Object.entries(this.toJSON()).map(([e, n]) => e + ": " + n).join(`
`);
    }
    get [Symbol.toStringTag]() {
      return "AxiosHeaders";
    }
    static from(e) {
      return e instanceof this ? e : new this(e);
    }
    static concat(e, ...n) {
      const r = new this(e);
      return n.forEach((i) => r.set(i)), r;
    }
    static accessor(e) {
      const r = (this[Pv] = this[Pv] = { accessors: {} }).accessors,
        i = this.prototype;
      function o(s) {
        const a = Ca(s);
        r[a] || (fN(i, s), (r[a] = !0));
      }
      return ye.isArray(e) ? e.forEach(o) : o(e), this;
    }
  }
  ud.accessor([
    "Content-Type",
    "Content-Length",
    "Accept",
    "Accept-Encoding",
    "User-Agent",
    "Authorization",
  ]);
  ye.reduceDescriptors(ud.prototype, ({ value: t }, e) => {
    let n = e[0].toUpperCase() + e.slice(1);
    return {
      get: () => t,
      set(r) {
        this[n] = r;
      },
    };
  });
  ye.freezeMethods(ud);
  const Jr = ud;
  function vh(t, e) {
    const n = this || Zg,
      r = e || n,
      i = Jr.from(r.headers);
    let o = r.data;
    return (
      ye.forEach(t, function (a) {
        o = a.call(n, o, i.normalize(), e ? e.status : void 0);
      }),
      i.normalize(),
      o
    );
  }
  function b_(t) {
    return !!(t && t.__CANCEL__);
  }
  function Nl(t, e, n) {
    at.call(this, t ?? "canceled", at.ERR_CANCELED, e, n),
      (this.name = "CanceledError");
  }
  ye.inherits(Nl, at, { __CANCEL__: !0 });
  function gN(t, e, n) {
    const r = n.config.validateStatus;
    !n.status || !r || r(n.status)
      ? t(n)
      : e(
          new at(
            "Request failed with status code " + n.status,
            [at.ERR_BAD_REQUEST, at.ERR_BAD_RESPONSE][
              Math.floor(n.status / 100) - 4
            ],
            n.config,
            n.request,
            n
          )
        );
  }
  const pN = Ir.hasStandardBrowserEnv
    ? {
        write(t, e, n, r, i, o) {
          const s = [t + "=" + encodeURIComponent(e)];
          ye.isNumber(n) && s.push("expires=" + new Date(n).toGMTString()),
            ye.isString(r) && s.push("path=" + r),
            ye.isString(i) && s.push("domain=" + i),
            o === !0 && s.push("secure"),
            (document.cookie = s.join("; "));
        },
        read(t) {
          const e = document.cookie.match(
            new RegExp("(^|;\\s*)(" + t + ")=([^;]*)")
          );
          return e ? decodeURIComponent(e[3]) : null;
        },
        remove(t) {
          this.write(t, "", Date.now() - 864e5);
        },
      }
    : {
        write() {},
        read() {
          return null;
        },
        remove() {},
      };
  function mN(t) {
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(t);
  }
  function vN(t, e) {
    return e ? t.replace(/\/?\/$/, "") + "/" + e.replace(/^\/+/, "") : t;
  }
  function y_(t, e) {
    return t && !mN(e) ? vN(t, e) : e;
  }
  const bN = Ir.hasStandardBrowserEnv
    ? (function () {
        const e = /(msie|trident)/i.test(navigator.userAgent),
          n = document.createElement("a");
        let r;
        function i(o) {
          let s = o;
          return (
            e && (n.setAttribute("href", s), (s = n.href)),
            n.setAttribute("href", s),
            {
              href: n.href,
              protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
              host: n.host,
              search: n.search ? n.search.replace(/^\?/, "") : "",
              hash: n.hash ? n.hash.replace(/^#/, "") : "",
              hostname: n.hostname,
              port: n.port,
              pathname:
                n.pathname.charAt(0) === "/" ? n.pathname : "/" + n.pathname,
            }
          );
        }
        return (
          (r = i(window.location.href)),
          function (s) {
            const a = ye.isString(s) ? i(s) : s;
            return a.protocol === r.protocol && a.host === r.host;
          }
        );
      })()
    : (function () {
        return function () {
          return !0;
        };
      })();
  function yN(t) {
    const e = /^([-+\w]{1,25})(:?\/\/|:)/.exec(t);
    return (e && e[1]) || "";
  }
  function xN(t, e) {
    t = t || 10;
    const n = new Array(t),
      r = new Array(t);
    let i = 0,
      o = 0,
      s;
    return (
      (e = e !== void 0 ? e : 1e3),
      function (l) {
        const c = Date.now(),
          u = r[o];
        s || (s = c), (n[i] = l), (r[i] = c);
        let d = o,
          h = 0;
        for (; d !== i; ) (h += n[d++]), (d = d % t);
        if (((i = (i + 1) % t), i === o && (o = (o + 1) % t), c - s < e))
          return;
        const g = u && c - u;
        return g ? Math.round((h * 1e3) / g) : void 0;
      }
    );
  }
  function Av(t, e) {
    let n = 0;
    const r = xN(50, 250);
    return (i) => {
      const o = i.loaded,
        s = i.lengthComputable ? i.total : void 0,
        a = o - n,
        l = r(a),
        c = o <= s;
      n = o;
      const u = {
        loaded: o,
        total: s,
        progress: s ? o / s : void 0,
        bytes: a,
        rate: l || void 0,
        estimated: l && s && c ? (s - o) / l : void 0,
        event: i,
      };
      (u[e ? "download" : "upload"] = !0), t(u);
    };
  }
  const CN = typeof XMLHttpRequest < "u",
    _N =
      CN &&
      function (t) {
        return new Promise(function (n, r) {
          let i = t.data;
          const o = Jr.from(t.headers).normalize();
          let { responseType: s, withXSRFToken: a } = t,
            l;
          function c() {
            t.cancelToken && t.cancelToken.unsubscribe(l),
              t.signal && t.signal.removeEventListener("abort", l);
          }
          let u;
          if (ye.isFormData(i)) {
            if (Ir.hasStandardBrowserEnv || Ir.hasStandardBrowserWebWorkerEnv)
              o.setContentType(!1);
            else if ((u = o.getContentType()) !== !1) {
              const [p, ...b] = u
                ? u
                    .split(";")
                    .map((m) => m.trim())
                    .filter(Boolean)
                : [];
              o.setContentType([p || "multipart/form-data", ...b].join("; "));
            }
          }
          let d = new XMLHttpRequest();
          if (t.auth) {
            const p = t.auth.username || "",
              b = t.auth.password
                ? unescape(encodeURIComponent(t.auth.password))
                : "";
            o.set("Authorization", "Basic " + btoa(p + ":" + b));
          }
          const h = y_(t.baseURL, t.url);
          d.open(
            t.method.toUpperCase(),
            g_(h, t.params, t.paramsSerializer),
            !0
          ),
            (d.timeout = t.timeout);
          function g() {
            if (!d) return;
            const p = Jr.from(
                "getAllResponseHeaders" in d && d.getAllResponseHeaders()
              ),
              m = {
                data:
                  !s || s === "text" || s === "json"
                    ? d.responseText
                    : d.response,
                status: d.status,
                statusText: d.statusText,
                headers: p,
                config: t,
                request: d,
              };
            gN(
              function (R) {
                n(R), c();
              },
              function (R) {
                r(R), c();
              },
              m
            ),
              (d = null);
          }
          if (
            ("onloadend" in d
              ? (d.onloadend = g)
              : (d.onreadystatechange = function () {
                  !d ||
                    d.readyState !== 4 ||
                    (d.status === 0 &&
                      !(
                        d.responseURL && d.responseURL.indexOf("file:") === 0
                      )) ||
                    setTimeout(g);
                }),
            (d.onabort = function () {
              d &&
                (r(new at("Request aborted", at.ECONNABORTED, t, d)),
                (d = null));
            }),
            (d.onerror = function () {
              r(new at("Network Error", at.ERR_NETWORK, t, d)), (d = null);
            }),
            (d.ontimeout = function () {
              let b = t.timeout
                ? "timeout of " + t.timeout + "ms exceeded"
                : "timeout exceeded";
              const m = t.transitional || p_;
              t.timeoutErrorMessage && (b = t.timeoutErrorMessage),
                r(
                  new at(
                    b,
                    m.clarifyTimeoutError ? at.ETIMEDOUT : at.ECONNABORTED,
                    t,
                    d
                  )
                ),
                (d = null);
            }),
            Ir.hasStandardBrowserEnv &&
              (a && ye.isFunction(a) && (a = a(t)), a || (a !== !1 && bN(h))))
          ) {
            const p =
              t.xsrfHeaderName && t.xsrfCookieName && pN.read(t.xsrfCookieName);
            p && o.set(t.xsrfHeaderName, p);
          }
          i === void 0 && o.setContentType(null),
            "setRequestHeader" in d &&
              ye.forEach(o.toJSON(), function (b, m) {
                d.setRequestHeader(m, b);
              }),
            ye.isUndefined(t.withCredentials) ||
              (d.withCredentials = !!t.withCredentials),
            s && s !== "json" && (d.responseType = t.responseType),
            typeof t.onDownloadProgress == "function" &&
              d.addEventListener("progress", Av(t.onDownloadProgress, !0)),
            typeof t.onUploadProgress == "function" &&
              d.upload &&
              d.upload.addEventListener("progress", Av(t.onUploadProgress)),
            (t.cancelToken || t.signal) &&
              ((l = (p) => {
                d &&
                  (r(!p || p.type ? new Nl(null, t, d) : p),
                  d.abort(),
                  (d = null));
              }),
              t.cancelToken && t.cancelToken.subscribe(l),
              t.signal &&
                (t.signal.aborted
                  ? l()
                  : t.signal.addEventListener("abort", l)));
          const f = yN(h);
          if (f && Ir.protocols.indexOf(f) === -1) {
            r(new at("Unsupported protocol " + f + ":", at.ERR_BAD_REQUEST, t));
            return;
          }
          d.send(i || null);
        });
      },
    xf = { http: XB, xhr: _N };
  ye.forEach(xf, (t, e) => {
    if (t) {
      try {
        Object.defineProperty(t, "name", { value: e });
      } catch {}
      Object.defineProperty(t, "adapterName", { value: e });
    }
  });
  const kv = (t) => `- ${t}`,
    wN = (t) => ye.isFunction(t) || t === null || t === !1,
    x_ = {
      getAdapter: (t) => {
        t = ye.isArray(t) ? t : [t];
        const { length: e } = t;
        let n, r;
        const i = {};
        for (let o = 0; o < e; o++) {
          n = t[o];
          let s;
          if (
            ((r = n),
            !wN(n) && ((r = xf[(s = String(n)).toLowerCase()]), r === void 0))
          )
            throw new at(`Unknown adapter '${s}'`);
          if (r) break;
          i[s || "#" + o] = r;
        }
        if (!r) {
          const o = Object.entries(i).map(
            ([a, l]) =>
              `adapter ${a} ` +
              (l === !1
                ? "is not supported by the environment"
                : "is not available in the build")
          );
          let s = e
            ? o.length > 1
              ? `since :
` +
                o.map(kv).join(`
`)
              : " " + kv(o[0])
            : "as no adapter specified";
          throw new at(
            "There is no suitable adapter to dispatch the request " + s,
            "ERR_NOT_SUPPORT"
          );
        }
        return r;
      },
      adapters: xf,
    };
  function bh(t) {
    if (
      (t.cancelToken && t.cancelToken.throwIfRequested(),
      t.signal && t.signal.aborted)
    )
      throw new Nl(null, t);
  }
  function Iv(t) {
    return (
      bh(t),
      (t.headers = Jr.from(t.headers)),
      (t.data = vh.call(t, t.transformRequest)),
      ["post", "put", "patch"].indexOf(t.method) !== -1 &&
        t.headers.setContentType("application/x-www-form-urlencoded", !1),
      x_
        .getAdapter(t.adapter || Zg.adapter)(t)
        .then(
          function (r) {
            return (
              bh(t),
              (r.data = vh.call(t, t.transformResponse, r)),
              (r.headers = Jr.from(r.headers)),
              r
            );
          },
          function (r) {
            return (
              b_(r) ||
                (bh(t),
                r &&
                  r.response &&
                  ((r.response.data = vh.call(
                    t,
                    t.transformResponse,
                    r.response
                  )),
                  (r.response.headers = Jr.from(r.response.headers)))),
              Promise.reject(r)
            );
          }
        )
    );
  }
  const Ov = (t) => (t instanceof Jr ? t.toJSON() : t);
  function Ws(t, e) {
    e = e || {};
    const n = {};
    function r(c, u, d) {
      return ye.isPlainObject(c) && ye.isPlainObject(u)
        ? ye.merge.call({ caseless: d }, c, u)
        : ye.isPlainObject(u)
        ? ye.merge({}, u)
        : ye.isArray(u)
        ? u.slice()
        : u;
    }
    function i(c, u, d) {
      if (ye.isUndefined(u)) {
        if (!ye.isUndefined(c)) return r(void 0, c, d);
      } else return r(c, u, d);
    }
    function o(c, u) {
      if (!ye.isUndefined(u)) return r(void 0, u);
    }
    function s(c, u) {
      if (ye.isUndefined(u)) {
        if (!ye.isUndefined(c)) return r(void 0, c);
      } else return r(void 0, u);
    }
    function a(c, u, d) {
      if (d in e) return r(c, u);
      if (d in t) return r(void 0, c);
    }
    const l = {
      url: o,
      method: o,
      data: o,
      baseURL: s,
      transformRequest: s,
      transformResponse: s,
      paramsSerializer: s,
      timeout: s,
      timeoutMessage: s,
      withCredentials: s,
      withXSRFToken: s,
      adapter: s,
      responseType: s,
      xsrfCookieName: s,
      xsrfHeaderName: s,
      onUploadProgress: s,
      onDownloadProgress: s,
      decompress: s,
      maxContentLength: s,
      maxBodyLength: s,
      beforeRedirect: s,
      transport: s,
      httpAgent: s,
      httpsAgent: s,
      cancelToken: s,
      socketPath: s,
      responseEncoding: s,
      validateStatus: a,
      headers: (c, u) => i(Ov(c), Ov(u), !0),
    };
    return (
      ye.forEach(Object.keys(Object.assign({}, t, e)), function (u) {
        const d = l[u] || i,
          h = d(t[u], e[u], u);
        (ye.isUndefined(h) && d !== a) || (n[u] = h);
      }),
      n
    );
  }
  const C_ = "1.6.7",
    Jg = {};
  ["object", "boolean", "number", "function", "string", "symbol"].forEach(
    (t, e) => {
      Jg[t] = function (r) {
        return typeof r === t || "a" + (e < 1 ? "n " : " ") + t;
      };
    }
  );
  const Mv = {};
  Jg.transitional = function (e, n, r) {
    function i(o, s) {
      return (
        "[Axios v" +
        C_ +
        "] Transitional option '" +
        o +
        "'" +
        s +
        (r ? ". " + r : "")
      );
    }
    return (o, s, a) => {
      if (e === !1)
        throw new at(
          i(s, " has been removed" + (n ? " in " + n : "")),
          at.ERR_DEPRECATED
        );
      return (
        n &&
          !Mv[s] &&
          ((Mv[s] = !0),
          console.warn(
            i(
              s,
              " has been deprecated since v" +
                n +
                " and will be removed in the near future"
            )
          )),
        e ? e(o, s, a) : !0
      );
    };
  };
  function SN(t, e, n) {
    if (typeof t != "object")
      throw new at("options must be an object", at.ERR_BAD_OPTION_VALUE);
    const r = Object.keys(t);
    let i = r.length;
    for (; i-- > 0; ) {
      const o = r[i],
        s = e[o];
      if (s) {
        const a = t[o],
          l = a === void 0 || s(a, o, t);
        if (l !== !0)
          throw new at(
            "option " + o + " must be " + l,
            at.ERR_BAD_OPTION_VALUE
          );
        continue;
      }
      if (n !== !0) throw new at("Unknown option " + o, at.ERR_BAD_OPTION);
    }
  }
  const Cf = { assertOptions: SN, validators: Jg },
    Ci = Cf.validators;
  class lu {
    constructor(e) {
      (this.defaults = e),
        (this.interceptors = { request: new Tv(), response: new Tv() });
    }
    async request(e, n) {
      try {
        return await this._request(e, n);
      } catch (r) {
        if (r instanceof Error) {
          let i;
          Error.captureStackTrace
            ? Error.captureStackTrace((i = {}))
            : (i = new Error());
          const o = i.stack ? i.stack.replace(/^.+\n/, "") : "";
          r.stack
            ? o &&
              !String(r.stack).endsWith(o.replace(/^.+\n.+\n/, "")) &&
              (r.stack +=
                `
` + o)
            : (r.stack = o);
        }
        throw r;
      }
    }
    _request(e, n) {
      typeof e == "string" ? ((n = n || {}), (n.url = e)) : (n = e || {}),
        (n = Ws(this.defaults, n));
      const { transitional: r, paramsSerializer: i, headers: o } = n;
      r !== void 0 &&
        Cf.assertOptions(
          r,
          {
            silentJSONParsing: Ci.transitional(Ci.boolean),
            forcedJSONParsing: Ci.transitional(Ci.boolean),
            clarifyTimeoutError: Ci.transitional(Ci.boolean),
          },
          !1
        ),
        i != null &&
          (ye.isFunction(i)
            ? (n.paramsSerializer = { serialize: i })
            : Cf.assertOptions(
                i,
                { encode: Ci.function, serialize: Ci.function },
                !0
              )),
        (n.method = (n.method || this.defaults.method || "get").toLowerCase());
      let s = o && ye.merge(o.common, o[n.method]);
      o &&
        ye.forEach(
          ["delete", "get", "head", "post", "put", "patch", "common"],
          (f) => {
            delete o[f];
          }
        ),
        (n.headers = Jr.concat(s, o));
      const a = [];
      let l = !0;
      this.interceptors.request.forEach(function (p) {
        (typeof p.runWhen == "function" && p.runWhen(n) === !1) ||
          ((l = l && p.synchronous), a.unshift(p.fulfilled, p.rejected));
      });
      const c = [];
      this.interceptors.response.forEach(function (p) {
        c.push(p.fulfilled, p.rejected);
      });
      let u,
        d = 0,
        h;
      if (!l) {
        const f = [Iv.bind(this), void 0];
        for (
          f.unshift.apply(f, a),
            f.push.apply(f, c),
            h = f.length,
            u = Promise.resolve(n);
          d < h;

        )
          u = u.then(f[d++], f[d++]);
        return u;
      }
      h = a.length;
      let g = n;
      for (d = 0; d < h; ) {
        const f = a[d++],
          p = a[d++];
        try {
          g = f(g);
        } catch (b) {
          p.call(this, b);
          break;
        }
      }
      try {
        u = Iv.call(this, g);
      } catch (f) {
        return Promise.reject(f);
      }
      for (d = 0, h = c.length; d < h; ) u = u.then(c[d++], c[d++]);
      return u;
    }
    getUri(e) {
      e = Ws(this.defaults, e);
      const n = y_(e.baseURL, e.url);
      return g_(n, e.params, e.paramsSerializer);
    }
  }
  ye.forEach(["delete", "get", "head", "options"], function (e) {
    lu.prototype[e] = function (n, r) {
      return this.request(
        Ws(r || {}, { method: e, url: n, data: (r || {}).data })
      );
    };
  });
  ye.forEach(["post", "put", "patch"], function (e) {
    function n(r) {
      return function (o, s, a) {
        return this.request(
          Ws(a || {}, {
            method: e,
            headers: r ? { "Content-Type": "multipart/form-data" } : {},
            url: o,
            data: s,
          })
        );
      };
    }
    (lu.prototype[e] = n()), (lu.prototype[e + "Form"] = n(!0));
  });
  const zc = lu;
  class Qg {
    constructor(e) {
      if (typeof e != "function")
        throw new TypeError("executor must be a function.");
      let n;
      this.promise = new Promise(function (o) {
        n = o;
      });
      const r = this;
      this.promise.then((i) => {
        if (!r._listeners) return;
        let o = r._listeners.length;
        for (; o-- > 0; ) r._listeners[o](i);
        r._listeners = null;
      }),
        (this.promise.then = (i) => {
          let o;
          const s = new Promise((a) => {
            r.subscribe(a), (o = a);
          }).then(i);
          return (
            (s.cancel = function () {
              r.unsubscribe(o);
            }),
            s
          );
        }),
        e(function (o, s, a) {
          r.reason || ((r.reason = new Nl(o, s, a)), n(r.reason));
        });
    }
    throwIfRequested() {
      if (this.reason) throw this.reason;
    }
    subscribe(e) {
      if (this.reason) {
        e(this.reason);
        return;
      }
      this._listeners ? this._listeners.push(e) : (this._listeners = [e]);
    }
    unsubscribe(e) {
      if (!this._listeners) return;
      const n = this._listeners.indexOf(e);
      n !== -1 && this._listeners.splice(n, 1);
    }
    static source() {
      let e;
      return {
        token: new Qg(function (i) {
          e = i;
        }),
        cancel: e,
      };
    }
  }
  const EN = Qg;
  function RN(t) {
    return function (n) {
      return t.apply(null, n);
    };
  }
  function TN(t) {
    return ye.isObject(t) && t.isAxiosError === !0;
  }
  const _f = {
    Continue: 100,
    SwitchingProtocols: 101,
    Processing: 102,
    EarlyHints: 103,
    Ok: 200,
    Created: 201,
    Accepted: 202,
    NonAuthoritativeInformation: 203,
    NoContent: 204,
    ResetContent: 205,
    PartialContent: 206,
    MultiStatus: 207,
    AlreadyReported: 208,
    ImUsed: 226,
    MultipleChoices: 300,
    MovedPermanently: 301,
    Found: 302,
    SeeOther: 303,
    NotModified: 304,
    UseProxy: 305,
    Unused: 306,
    TemporaryRedirect: 307,
    PermanentRedirect: 308,
    BadRequest: 400,
    Unauthorized: 401,
    PaymentRequired: 402,
    Forbidden: 403,
    NotFound: 404,
    MethodNotAllowed: 405,
    NotAcceptable: 406,
    ProxyAuthenticationRequired: 407,
    RequestTimeout: 408,
    Conflict: 409,
    Gone: 410,
    LengthRequired: 411,
    PreconditionFailed: 412,
    PayloadTooLarge: 413,
    UriTooLong: 414,
    UnsupportedMediaType: 415,
    RangeNotSatisfiable: 416,
    ExpectationFailed: 417,
    ImATeapot: 418,
    MisdirectedRequest: 421,
    UnprocessableEntity: 422,
    Locked: 423,
    FailedDependency: 424,
    TooEarly: 425,
    UpgradeRequired: 426,
    PreconditionRequired: 428,
    TooManyRequests: 429,
    RequestHeaderFieldsTooLarge: 431,
    UnavailableForLegalReasons: 451,
    InternalServerError: 500,
    NotImplemented: 501,
    BadGateway: 502,
    ServiceUnavailable: 503,
    GatewayTimeout: 504,
    HttpVersionNotSupported: 505,
    VariantAlsoNegotiates: 506,
    InsufficientStorage: 507,
    LoopDetected: 508,
    NotExtended: 510,
    NetworkAuthenticationRequired: 511,
  };
  Object.entries(_f).forEach(([t, e]) => {
    _f[e] = t;
  });
  const PN = _f;
  function __(t) {
    const e = new zc(t),
      n = n_(zc.prototype.request, e);
    return (
      ye.extend(n, zc.prototype, e, { allOwnKeys: !0 }),
      ye.extend(n, e, null, { allOwnKeys: !0 }),
      (n.create = function (i) {
        return __(Ws(t, i));
      }),
      n
    );
  }
  const an = __(Zg);
  an.Axios = zc;
  an.CanceledError = Nl;
  an.CancelToken = EN;
  an.isCancel = b_;
  an.VERSION = C_;
  an.toFormData = cd;
  an.AxiosError = at;
  an.Cancel = an.CanceledError;
  an.all = function (e) {
    return Promise.all(e);
  };
  an.spread = RN;
  an.isAxiosError = TN;
  an.mergeConfig = Ws;
  an.AxiosHeaders = Jr;
  an.formToJSON = (t) => v_(ye.isHTMLForm(t) ? new FormData(t) : t);
  an.getAdapter = x_.getAdapter;
  an.HttpStatusCode = PN;
  an.default = an;
  const AN = an;
  function cu(t) {
    return (
      (cu =
        typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
          ? function (e) {
              return typeof e;
            }
          : function (e) {
              return e &&
                typeof Symbol == "function" &&
                e.constructor === Symbol &&
                e !== Symbol.prototype
                ? "symbol"
                : typeof e;
            }),
      cu(t)
    );
  }
  function Fc(t, e) {
    if (!t.vueAxiosInstalled) {
      var n = w_(e) ? ON(e) : e;
      if (MN(n)) {
        var r = LN(t);
        if (r) {
          var i = r < 3 ? kN : IN;
          Object.keys(n).forEach(function (o) {
            i(t, o, n[o]);
          }),
            (t.vueAxiosInstalled = !0);
        } else console.error("[vue-axios] unknown Vue version");
      } else
        console.error(
          "[vue-axios] configuration is invalid, expected options are either <axios_instance> or { <registration_key>: <axios_instance> }"
        );
    }
  }
  function kN(t, e, n) {
    Object.defineProperty(t.prototype, e, {
      get: function () {
        return n;
      },
    }),
      (t[e] = n);
  }
  function IN(t, e, n) {
    (t.config.globalProperties[e] = n), (t[e] = n);
  }
  function w_(t) {
    return t && typeof t.get == "function" && typeof t.post == "function";
  }
  function ON(t) {
    return { axios: t, $http: t };
  }
  function MN(t) {
    return (
      cu(t) === "object" &&
      Object.keys(t).every(function (e) {
        return w_(t[e]);
      })
    );
  }
  function LN(t) {
    return t && t.version && Number(t.version.split(".")[0]);
  }
  (typeof In > "u" ? "undefined" : cu(In)) == "object"
    ? (Hn.exports = Fc)
    : typeof define == "function" && define.amd
    ? define([], function () {
        return Fc;
      })
    : window.Vue && window.axios && window.Vue.use && Vue.use(Fc, window.axios);
  function Lv(t, e, n, r) {
    return (
      ((e = e.split ? e.split(".") : e.slice(0))
        .slice(0, -1)
        .reduce(function (i, o) {
          return /^(__proto__|constructor|prototype)$/.test(o)
            ? {}
            : (i[o] = i[o] || {});
        }, t)[e.pop()] = n),
      t
    );
  }
  function $v(t, e) {
    return t ?? e;
  }
  function Rr(t, e, n, r) {
    return $v($v(n[e], r[e]), t);
  }
  function $N(t) {
    var e = t || {};
    return function (n) {
      var r = (function () {
        try {
          return n.options.persistedState || {};
        } catch {
          return {};
        }
      })();
      if (Rr(!0, "persist", r, e) !== !1) {
        var i,
          o = Rr(n.store.$id, "key", r, {}),
          s = Rr(!1, "overwrite", r, e),
          a = Rr(
            (function () {
              try {
                return window.localStorage;
              } catch {
                return {
                  getItem: function () {},
                  setItem: function () {},
                  removeItem: function () {},
                };
              }
            })(),
            "storage",
            r,
            e
          ),
          l = Rr(
            function () {
              return !0;
            },
            "filter",
            r,
            e
          ),
          c = Rr(JSON.stringify, "serialize", r, e),
          u = Rr(JSON.parse, "deserialize", r, e),
          d = Rr(
            function (S) {
              return S;
            },
            "migrate",
            r,
            {}
          ),
          h = Rr(
            function (S, x) {
              return x;
            },
            "merge",
            r,
            {}
          ),
          g = Rr(
            function (S) {
              var x = S.setItem("@@", "1"),
                E = function () {
                  S.removeItem("@@");
                };
              x instanceof Promise ? x.then(E) : E();
            },
            "assertStorage",
            r,
            e
          ),
          f = new Promise(function (S) {
            i = S;
          }),
          p = 0;
        n.store.$persistedState = {
          isReady: function () {
            return f;
          },
          pending: !1,
        };
        try {
          var b;
          R();
        } catch {
          i();
        }
        n.store.$subscribe(function (S, x) {
          if (l(S, x) !== !1) {
            Array.isArray(r.includePaths) &&
              (x = r.includePaths.reduce(function (v, y) {
                return Lv(
                  v,
                  y,
                  (function (T, A, I) {
                    return (T = (A.split ? A.split(".") : A).reduce(function (
                      L,
                      j
                    ) {
                      return L && L[j];
                    },
                    T)) === void 0
                      ? I
                      : T;
                  })(x, y, void 0)
                );
              }, {})),
              Array.isArray(r.excludePaths) &&
                ((x = u(c(x))),
                r.excludePaths.forEach(function (v) {
                  return Lv(x, v, void 0);
                }, {}));
            var E = c(x),
              w = a.setItem(o, E);
            w instanceof Promise &&
              (++p,
              (n.store.$persistedState.pending = p !== 0),
              w
                .catch(function () {})
                .finally(function () {
                  --p, (n.store.$persistedState.pending = p !== 0);
                }));
          }
        });
      }
      function m(S) {
        (r.beforeHydrate || function () {})(n.store.$state);
        var x = h(n.store.$state, S);
        s ? (n.store.$state = x) : n.store.$patch(x), i();
      }
      function _(S) {
        if (S != null) {
          var x = u(S),
            E = d(x);
          E instanceof Promise ? E.then(m) : m(E);
        } else i();
      }
      function R() {
        var S = a.getItem(o);
        S instanceof Promise ? S.then(_) : _(S);
      }
    };
  }
  const DN = { key: 0 },
    zN = {
      __name: "SiteSettingsFree",
      props: { site: String },
      setup(t) {
        const e = t,
          n =
            /Chrome/.test(navigator.userAgent) &&
            /Google Inc/.test(navigator.vendor),
          r = qn(),
          {
            enableAgeFilter: i,
            minMaxAge: o,
            enableDistanceFilter: s,
            maxDistance: a,
            enableMinPicturesFilter: l,
            minPictures: c,
            bannedWords: u,
          } = _r(r),
          d = { 25: "25", 50: "50", 75: "75" },
          h = { 50: "50", 100: "100", 150: "200" },
          g = { 2: "2", 8: "8" };
        return (f, p) => {
          const b = Fl,
            m = zl,
            _ = Jo,
            R = hi,
            S = Dl,
            x = td,
            E = di;
          return !N(n) && e.site === "bumble"
            ? (Ie(),
              nn("div", DN, [
                At("h3", null, be(f.$i18n("BROWSER_NOT_SUPPORTED")), 1),
                At(
                  "p",
                  null,
                  be(f.$i18n("SUPPORTED_BROWSERS")) + ": Chrome",
                  1
                ),
              ]))
            : (Ie(),
              He(
                E,
                { key: 1, "label-placement": "top", column: 1 },
                {
                  default: B(() => [
                    F(
                      R,
                      { label: f.$i18n("MIN_MAX_AGE") },
                      {
                        default: B(() => [
                          F(_, null, {
                            default: B(() => [
                              F(
                                b,
                                {
                                  value: N(i),
                                  "onUpdate:value":
                                    p[0] ||
                                    (p[0] = (w) =>
                                      xe(i) ? (i.value = w) : null),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": f.$i18n("ENABLE_MIN_MAX_AGE"),
                                },
                                null,
                                8,
                                ["value", "aria-label"]
                              ),
                              F(
                                m,
                                {
                                  value: N(o),
                                  "onUpdate:value":
                                    p[1] ||
                                    (p[1] = (w) =>
                                      xe(o) ? (o.value = w) : null),
                                  marks: d,
                                  size: "small",
                                  range: "",
                                  min: 18,
                                  max: 99,
                                  step: 1,
                                  disabled: !N(i),
                                  "aria-label": f.$i18n("MIN_MAX_AGE"),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    e.site === "tinder" || e.site === "bumble"
                      ? (Ie(),
                        He(
                          R,
                          { key: 0, label: f.$i18n("MAX_DISTANCE") },
                          {
                            default: B(() => [
                              F(_, null, {
                                default: B(() => [
                                  F(
                                    b,
                                    {
                                      value: N(s),
                                      "onUpdate:value":
                                        p[2] ||
                                        (p[2] = (w) =>
                                          xe(s) ? (s.value = w) : null),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": f.$i18n(
                                        "ENABLE_MAX_DISTANCE"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "aria-label"]
                                  ),
                                  F(
                                    m,
                                    {
                                      value: N(a),
                                      "onUpdate:value":
                                        p[3] ||
                                        (p[3] = (w) =>
                                          xe(a) ? (a.value = w) : null),
                                      marks: h,
                                      size: "small",
                                      min: 0,
                                      max: 200,
                                      step: 5,
                                      disabled: !N(s),
                                      "aria-label": f.$i18n("MAX_DISTANCE"),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    e.site !== "pof"
                      ? (Ie(),
                        He(
                          R,
                          { key: 1, label: f.$i18n("MIN_PICTURES") },
                          {
                            default: B(() => [
                              F(_, null, {
                                default: B(() => [
                                  F(
                                    b,
                                    {
                                      value: N(l),
                                      "onUpdate:value":
                                        p[4] ||
                                        (p[4] = (w) =>
                                          xe(l) ? (l.value = w) : null),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": f.$i18n(
                                        "ENABLE_MIN_PICTURES"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "aria-label"]
                                  ),
                                  F(
                                    m,
                                    {
                                      value: N(c),
                                      "onUpdate:value":
                                        p[5] ||
                                        (p[5] = (w) =>
                                          xe(c) ? (c.value = w) : null),
                                      marks: g,
                                      size: "small",
                                      min: 1,
                                      max: 10,
                                      step: 1,
                                      disabled: !N(l),
                                      "aria-label": f.$i18n("MIN_PICTURES"),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    F(R, null, {
                      label: B(() => [
                        F(
                          S,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(f.$i18n("BANNED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(" " + be(f.$i18n("BANNED_WORDS_TOOLTIP")), 1),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        Se(),
                        F(
                          x,
                          {
                            value: N(u),
                            "onUpdate:value":
                              p[6] ||
                              (p[6] = (w) => (xe(u) ? (u.value = w) : null)),
                            max: 10,
                            size: "small",
                            "aria-label": f.$i18n("BANNED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                  ]),
                  _: 1,
                }
              ));
        };
      },
    },
    FN = { key: 0 },
    BN = {
      __name: "SiteSettingsBasic",
      props: { site: String },
      setup(t) {
        const e = t,
          n =
            /Chrome/.test(navigator.userAgent) &&
            /Google Inc/.test(navigator.vendor),
          r = qn(),
          {
            enableMaxSwipesFilter: i,
            maxSwipes: o,
            enableLeftSwipesPercentageFilter: s,
            leftSwipePercentages: a,
            enableAgeFilter: l,
            minMaxAge: c,
            enableHeightFilter: u,
            minMaxHeight: d,
            enableDistanceFilter: h,
            maxDistance: g,
            skipEmptyDistance: f,
            enableMinPicturesFilter: p,
            minPictures: b,
            bannedWords: m,
            preferredWords: _,
            requiredWords: R,
            noEmptyDescription: S,
            onlyVerifyedProfiles: x,
            onlyRecentlyActive: E,
          } = _r(r),
          w = { 250: "250", 500: "500", 750: "750" },
          v = { 25: "25", 50: "50", 75: "75" },
          y = { 25: "25", 50: "50", 75: "75" },
          T = { 25: "150", 50: "180" },
          A = { 50: "50", 100: "100", 150: "200" },
          I = { 2: "2", 8: "8" };
        return (L, j) => {
          const k = Fl,
            O = zl,
            D = Jo,
            Y = hi,
            se = Ju,
            de = Dl,
            fe = td,
            z = di;
          return !N(n) && e.site === "bumble"
            ? (Ie(),
              nn("div", FN, [
                At("h3", null, be(L.$i18n("BROWSER_NOT_SUPPORTED")), 1),
                At(
                  "p",
                  null,
                  be(L.$i18n("SUPPORTED_BROWSERS")) + ": Chrome",
                  1
                ),
              ]))
            : (Ie(),
              He(
                z,
                { key: 1, "label-placement": "top", column: 1 },
                {
                  default: B(() => [
                    F(
                      Y,
                      { label: L.$i18n("MAX_SWIPES") },
                      {
                        default: B(() => [
                          F(D, null, {
                            default: B(() => [
                              F(
                                k,
                                {
                                  value: N(i),
                                  "onUpdate:value":
                                    j[0] ||
                                    (j[0] = (ee) =>
                                      xe(i) ? (i.value = ee) : null),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": L.$i18n("ENABLE_MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "aria-label"]
                              ),
                              F(
                                O,
                                {
                                  value: N(o),
                                  "onUpdate:value":
                                    j[1] ||
                                    (j[1] = (ee) =>
                                      xe(o) ? (o.value = ee) : null),
                                  marks: w,
                                  size: "small",
                                  range: "",
                                  min: 10,
                                  max: 1e3,
                                  step: 10,
                                  disabled: !N(i),
                                  "aria-label": L.$i18n("MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      Y,
                      { label: L.$i18n("LEFT_SWIPES_PERCENTAGE") },
                      {
                        default: B(() => [
                          F(D, null, {
                            default: B(() => [
                              F(
                                k,
                                {
                                  value: N(s),
                                  "onUpdate:value":
                                    j[2] ||
                                    (j[2] = (ee) =>
                                      xe(s) ? (s.value = ee) : null),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": L.$i18n("ENABLE_MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "aria-label"]
                              ),
                              F(
                                O,
                                {
                                  value: N(a),
                                  "onUpdate:value":
                                    j[3] ||
                                    (j[3] = (ee) =>
                                      xe(a) ? (a.value = ee) : null),
                                  marks: v,
                                  size: "small",
                                  range: "",
                                  min: 0,
                                  max: 100,
                                  step: 5,
                                  disabled: !N(s),
                                  "aria-label": L.$i18n("MAX_SWIPES"),
                                  "format-tooltip": (ee) => `${ee}%`,
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      Y,
                      { label: L.$i18n("MIN_MAX_AGE") },
                      {
                        default: B(() => [
                          F(D, null, {
                            default: B(() => [
                              F(
                                k,
                                {
                                  value: N(l),
                                  "onUpdate:value":
                                    j[4] ||
                                    (j[4] = (ee) =>
                                      xe(l) ? (l.value = ee) : null),
                                  disabled: N(s),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": L.$i18n("ENABLE_MIN_MAX_AGE"),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                              F(
                                O,
                                {
                                  value: N(c),
                                  "onUpdate:value":
                                    j[5] ||
                                    (j[5] = (ee) =>
                                      xe(c) ? (c.value = ee) : null),
                                  marks: y,
                                  size: "small",
                                  range: "",
                                  min: 18,
                                  max: 99,
                                  step: 1,
                                  disabled: !N(l) || N(s),
                                  "aria-label": L.$i18n("MIN_MAX_AGE"),
                                  "format-tooltip": (ee) =>
                                    `${ee} ` + L.$i18n("YEARS"),
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      Y,
                      { label: L.$i18n("MIN_MAX_HEIGHT") },
                      {
                        default: B(() => [
                          F(D, null, {
                            default: B(() => [
                              F(
                                k,
                                {
                                  value: N(u),
                                  "onUpdate:value":
                                    j[6] ||
                                    (j[6] = (ee) =>
                                      xe(u) ? (u.value = ee) : null),
                                  disabled: N(s),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": L.$i18n(
                                    "ENABLE_MIN_MAX_HEIGHT"
                                  ),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                              F(
                                O,
                                {
                                  value: N(d),
                                  "onUpdate:value":
                                    j[7] ||
                                    (j[7] = (ee) =>
                                      xe(d) ? (d.value = ee) : null),
                                  marks: T,
                                  size: "small",
                                  range: "",
                                  min: 100,
                                  max: 230,
                                  step: 1,
                                  disabled: !N(u) || N(s),
                                  "aria-label": L.$i18n("MIN_MAX_HEIGHT"),
                                  "format-tooltip": (ee) => `${ee} cm`,
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    e.site === "tinder" || e.site === "bumble"
                      ? (Ie(),
                        He(
                          Y,
                          { key: 0, label: L.$i18n("MAX_DISTANCE") },
                          {
                            default: B(() => [
                              F(D, null, {
                                default: B(() => [
                                  F(
                                    k,
                                    {
                                      value: N(h),
                                      "onUpdate:value":
                                        j[8] ||
                                        (j[8] = (ee) =>
                                          xe(h) ? (h.value = ee) : null),
                                      disabled: N(s),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": L.$i18n(
                                        "ENABLE_MAX_DISTANCE"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                  F(
                                    O,
                                    {
                                      value: N(g),
                                      "onUpdate:value":
                                        j[9] ||
                                        (j[9] = (ee) =>
                                          xe(g) ? (g.value = ee) : null),
                                      marks: A,
                                      size: "small",
                                      min: 0,
                                      max: 200,
                                      step: 5,
                                      disabled: !N(h) || N(s),
                                      "aria-label": L.$i18n("MAX_DISTANCE"),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    F(Y, null, {
                      default: B(() => [
                        F(D, null, {
                          default: B(() => [
                            F(
                              se,
                              {
                                checked: N(f),
                                "onUpdate:checked":
                                  j[10] ||
                                  (j[10] = (ee) =>
                                    xe(f) ? (f.value = ee) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(L.$i18n("SKIP_EMPTY_DISTANCE")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    }),
                    e.site !== "pof"
                      ? (Ie(),
                        He(
                          Y,
                          { key: 1, label: L.$i18n("MIN_PICTURES") },
                          {
                            default: B(() => [
                              F(D, null, {
                                default: B(() => [
                                  F(
                                    k,
                                    {
                                      value: N(p),
                                      "onUpdate:value":
                                        j[11] ||
                                        (j[11] = (ee) =>
                                          xe(p) ? (p.value = ee) : null),
                                      disabled: N(s),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": L.$i18n(
                                        "ENABLE_MIN_PICTURES"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                  F(
                                    O,
                                    {
                                      value: N(b),
                                      "onUpdate:value":
                                        j[12] ||
                                        (j[12] = (ee) =>
                                          xe(b) ? (b.value = ee) : null),
                                      marks: I,
                                      size: "small",
                                      min: 1,
                                      max: 10,
                                      step: 1,
                                      disabled: !N(p) || N(s),
                                      "aria-label": L.$i18n("MIN_PICTURES"),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    F(Y, null, {
                      default: B(() => [
                        F(D, null, {
                          default: B(() => [
                            F(
                              se,
                              {
                                checked: N(S),
                                "onUpdate:checked":
                                  j[13] ||
                                  (j[13] = (ee) =>
                                    xe(S) ? (S.value = ee) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(L.$i18n("NO_EMPTY_DESCRIPTION")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                            e.site === "tinder" ||
                            e.site === "bumble" ||
                            e.site === "lovoo" ||
                            e.site === "badoo"
                              ? (Ie(),
                                He(
                                  se,
                                  {
                                    key: 0,
                                    checked: N(x),
                                    "onUpdate:checked":
                                      j[14] ||
                                      (j[14] = (ee) =>
                                        xe(x) ? (x.value = ee) : null),
                                    disabled: N(s),
                                    size: "small",
                                  },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(L.$i18n("ONLY_VERIFYED_PROFILES")),
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                  8,
                                  ["checked", "disabled"]
                                ))
                              : et("", !0),
                            e.site === "tinder"
                              ? (Ie(),
                                He(
                                  se,
                                  {
                                    key: 1,
                                    checked: N(E),
                                    "onUpdate:checked":
                                      j[15] ||
                                      (j[15] = (ee) =>
                                        xe(E) ? (E.value = ee) : null),
                                    disabled: N(s),
                                    size: "small",
                                  },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(L.$i18n("ONLY_RECENTLY_ACTIVE")),
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                  8,
                                  ["checked", "disabled"]
                                ))
                              : et("", !0),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    }),
                    F(Y, null, {
                      label: B(() => [
                        F(
                          de,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(L.$i18n("BANNED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(" " + be(L.$i18n("BANNED_WORDS_TOOLTIP")), 1),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        Se(),
                        F(
                          fe,
                          {
                            value: N(m),
                            "onUpdate:value":
                              j[16] ||
                              (j[16] = (ee) => (xe(m) ? (m.value = ee) : null)),
                            disabled: N(s),
                            max: 20,
                            size: "small",
                            "aria-label": L.$i18n("BANNED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                    F(Y, null, {
                      label: B(() => [
                        F(
                          de,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(L.$i18n("PREFERRED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(
                                " " + be(L.$i18n("PREFERRED_WORDS_TOOLTIP")),
                                1
                              ),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        F(
                          fe,
                          {
                            value: N(_),
                            "onUpdate:value":
                              j[17] ||
                              (j[17] = (ee) => (xe(_) ? (_.value = ee) : null)),
                            disabled: N(s),
                            max: 20,
                            size: "small",
                            "aria-label": L.$i18n("PREFERRED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                    F(Y, null, {
                      label: B(() => [
                        F(
                          de,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(L.$i18n("REQUIRED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(
                                " " + be(L.$i18n("REQUIRED_WORDS_TOOLTIP")),
                                1
                              ),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        F(
                          fe,
                          {
                            value: N(R),
                            "onUpdate:value":
                              j[18] ||
                              (j[18] = (ee) => (xe(R) ? (R.value = ee) : null)),
                            disabled: N(s),
                            max: 20,
                            size: "small",
                            "aria-label": L.$i18n("REQUIRED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                  ]),
                  _: 1,
                }
              ));
        };
      },
    },
    NN = { key: 0 },
    HN = {
      __name: "SiteSettingsPro",
      props: { site: String },
      setup(t) {
        const e = t,
          n =
            /Chrome/.test(navigator.userAgent) &&
            /Google Inc/.test(navigator.vendor),
          r = qn(),
          {
            enableMaxSwipesFilter: i,
            maxSwipes: o,
            enableLeftSwipesPercentageFilter: s,
            leftSwipePercentages: a,
            enableAgeFilter: l,
            minMaxAge: c,
            enableHeightFilter: u,
            minMaxHeight: d,
            enableDistanceFilter: h,
            maxDistance: g,
            skipEmptyDistance: f,
            extendedDistance: p,
            enableMinPicturesFilter: b,
            minPictures: m,
            bannedWords: _,
            preferredWords: R,
            requiredWords: S,
            noEmptyDescription: x,
            onlyVerifyedProfiles: E,
            onlyRecentlyActive: w,
          } = _r(r),
          v = {
            250: "250",
            1e3: "1000",
            2e3: "2000",
            3e3: "3000",
            4e3: "4000",
            5e3: "5000",
          },
          y = { 25: "25", 50: "50", 75: "75" },
          T = { 25: "25", 50: "50", 75: "75" },
          A = { 25: "150", 50: "180" },
          I = { 50: "50", 100: "100", 150: "200" },
          L = { 500: "500", 1e3: "1000", 1500: "1500", 2e3: "2000" },
          j = { 2: "2", 8: "8" };
        return (k, O) => {
          const D = Fl,
            Y = zl,
            se = Jo,
            de = hi,
            fe = Ju,
            z = Dl,
            ee = td,
            ue = di;
          return !N(n) && e.site === "bumble"
            ? (Ie(),
              nn("div", NN, [
                At("h3", null, be(k.$i18n("BROWSER_NOT_SUPPORTED")), 1),
                At(
                  "p",
                  null,
                  be(k.$i18n("SUPPORTED_BROWSERS")) + ": Chrome",
                  1
                ),
              ]))
            : (Ie(),
              He(
                ue,
                { key: 1, "label-placement": "top", column: 1 },
                {
                  default: B(() => [
                    F(
                      de,
                      { label: k.$i18n("MAX_SWIPES") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(i),
                                  "onUpdate:value":
                                    O[0] ||
                                    (O[0] = (K) =>
                                      xe(i) ? (i.value = K) : null),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n("ENABLE_MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(o),
                                  "onUpdate:value":
                                    O[1] ||
                                    (O[1] = (K) =>
                                      xe(o) ? (o.value = K) : null),
                                  marks: v,
                                  size: "small",
                                  range: "",
                                  min: 10,
                                  max: 5e3,
                                  step: 10,
                                  disabled: !N(i),
                                  "aria-label": k.$i18n("MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      de,
                      { label: k.$i18n("LEFT_SWIPES_PERCENTAGE") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(s),
                                  "onUpdate:value":
                                    O[2] ||
                                    (O[2] = (K) =>
                                      xe(s) ? (s.value = K) : null),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n("ENABLE_MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(a),
                                  "onUpdate:value":
                                    O[3] ||
                                    (O[3] = (K) =>
                                      xe(a) ? (a.value = K) : null),
                                  marks: y,
                                  size: "small",
                                  range: "",
                                  min: 0,
                                  max: 100,
                                  step: 5,
                                  disabled: !N(s),
                                  "aria-label": k.$i18n("MAX_SWIPES"),
                                  "format-tooltip": (K) => `${K}%`,
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      de,
                      { label: k.$i18n("MIN_MAX_AGE") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(l),
                                  "onUpdate:value":
                                    O[4] ||
                                    (O[4] = (K) =>
                                      xe(l) ? (l.value = K) : null),
                                  disabled: N(s),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n("ENABLE_MIN_MAX_AGE"),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(c),
                                  "onUpdate:value":
                                    O[5] ||
                                    (O[5] = (K) =>
                                      xe(c) ? (c.value = K) : null),
                                  marks: T,
                                  size: "small",
                                  range: "",
                                  min: 18,
                                  max: 99,
                                  step: 1,
                                  disabled: !N(l) || N(s),
                                  "aria-label": k.$i18n("MIN_MAX_AGE"),
                                  "format-tooltip": (K) =>
                                    `${K} ` + k.$i18n("YEARS"),
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      de,
                      { label: k.$i18n("MIN_MAX_HEIGHT") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(u),
                                  "onUpdate:value":
                                    O[6] ||
                                    (O[6] = (K) =>
                                      xe(u) ? (u.value = K) : null),
                                  disabled: N(s),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n(
                                    "ENABLE_MIN_MAX_HEIGHT"
                                  ),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(d),
                                  "onUpdate:value":
                                    O[7] ||
                                    (O[7] = (K) =>
                                      xe(d) ? (d.value = K) : null),
                                  marks: A,
                                  size: "small",
                                  range: "",
                                  min: 100,
                                  max: 230,
                                  step: 1,
                                  disabled: !N(u) || N(s),
                                  "aria-label": k.$i18n("MIN_MAX_HEIGHT"),
                                  "format-tooltip": (K) => `${K} cm`,
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    e.site === "tinder" || e.site === "bumble"
                      ? (Ie(),
                        He(
                          de,
                          { key: 0, label: k.$i18n("MAX_DISTANCE") },
                          {
                            default: B(() => [
                              F(se, null, {
                                default: B(() => [
                                  F(
                                    D,
                                    {
                                      value: N(h),
                                      "onUpdate:value":
                                        O[8] ||
                                        (O[8] = (K) =>
                                          xe(h) ? (h.value = K) : null),
                                      disabled: N(s),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": k.$i18n(
                                        "ENABLE_MAX_DISTANCE"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                  N(p)
                                    ? (Ie(),
                                      He(
                                        Y,
                                        {
                                          key: 0,
                                          value: N(g),
                                          "onUpdate:value":
                                            O[9] ||
                                            (O[9] = (K) =>
                                              xe(g) ? (g.value = K) : null),
                                          marks: L,
                                          size: "small",
                                          min: 0,
                                          max: 2500,
                                          step: 5,
                                          disabled: !N(h) || N(s),
                                          "aria-label": k.$i18n("MAX_DISTANCE"),
                                        },
                                        null,
                                        8,
                                        ["value", "disabled", "aria-label"]
                                      ))
                                    : (Ie(),
                                      He(
                                        Y,
                                        {
                                          key: 1,
                                          value: N(g),
                                          "onUpdate:value":
                                            O[10] ||
                                            (O[10] = (K) =>
                                              xe(g) ? (g.value = K) : null),
                                          marks: I,
                                          size: "small",
                                          min: 0,
                                          max: 200,
                                          step: 5,
                                          disabled: !N(h) || N(s),
                                          "aria-label": k.$i18n("MAX_DISTANCE"),
                                        },
                                        null,
                                        8,
                                        ["value", "disabled", "aria-label"]
                                      )),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    F(de, null, {
                      default: B(() => [
                        F(se, null, {
                          default: B(() => [
                            F(
                              fe,
                              {
                                checked: N(f),
                                "onUpdate:checked":
                                  O[11] ||
                                  (O[11] = (K) =>
                                    xe(f) ? (f.value = K) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(k.$i18n("SKIP_EMPTY_DISTANCE")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                            F(
                              fe,
                              {
                                checked: N(p),
                                "onUpdate:checked":
                                  O[12] ||
                                  (O[12] = (K) =>
                                    xe(p) ? (p.value = K) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(k.$i18n("EXTENDED_DISTANCE")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    }),
                    e.site !== "pof"
                      ? (Ie(),
                        He(
                          de,
                          { key: 1, label: k.$i18n("MIN_PICTURES") },
                          {
                            default: B(() => [
                              F(se, null, {
                                default: B(() => [
                                  F(
                                    D,
                                    {
                                      value: N(b),
                                      "onUpdate:value":
                                        O[13] ||
                                        (O[13] = (K) =>
                                          xe(b) ? (b.value = K) : null),
                                      disabled: N(s),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": k.$i18n(
                                        "ENABLE_MIN_PICTURES"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                  F(
                                    Y,
                                    {
                                      value: N(m),
                                      "onUpdate:value":
                                        O[14] ||
                                        (O[14] = (K) =>
                                          xe(m) ? (m.value = K) : null),
                                      marks: j,
                                      size: "small",
                                      min: 1,
                                      max: 10,
                                      step: 1,
                                      disabled: !N(b) || N(s),
                                      "aria-label": k.$i18n("MIN_PICTURES"),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    F(de, null, {
                      default: B(() => [
                        F(se, null, {
                          default: B(() => [
                            F(
                              fe,
                              {
                                checked: N(x),
                                "onUpdate:checked":
                                  O[15] ||
                                  (O[15] = (K) =>
                                    xe(x) ? (x.value = K) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(k.$i18n("NO_EMPTY_DESCRIPTION")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                            e.site === "tinder" ||
                            e.site === "bumble" ||
                            e.site === "lovoo" ||
                            e.site === "badoo"
                              ? (Ie(),
                                He(
                                  fe,
                                  {
                                    key: 0,
                                    checked: N(E),
                                    "onUpdate:checked":
                                      O[16] ||
                                      (O[16] = (K) =>
                                        xe(E) ? (E.value = K) : null),
                                    disabled: N(s),
                                    size: "small",
                                  },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(k.$i18n("ONLY_VERIFYED_PROFILES")),
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                  8,
                                  ["checked", "disabled"]
                                ))
                              : et("", !0),
                            e.site === "tinder"
                              ? (Ie(),
                                He(
                                  fe,
                                  {
                                    key: 1,
                                    checked: N(w),
                                    "onUpdate:checked":
                                      O[17] ||
                                      (O[17] = (K) =>
                                        xe(w) ? (w.value = K) : null),
                                    disabled: N(s),
                                    size: "small",
                                  },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(k.$i18n("ONLY_RECENTLY_ACTIVE")),
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                  8,
                                  ["checked", "disabled"]
                                ))
                              : et("", !0),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    }),
                    F(de, null, {
                      label: B(() => [
                        F(
                          z,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(k.$i18n("BANNED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(" " + be(k.$i18n("BANNED_WORDS_TOOLTIP")), 1),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        Se(),
                        F(
                          ee,
                          {
                            value: N(_),
                            "onUpdate:value":
                              O[18] ||
                              (O[18] = (K) => (xe(_) ? (_.value = K) : null)),
                            disabled: N(s),
                            max: 50,
                            size: "small",
                            "aria-label": k.$i18n("BANNED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                    F(de, null, {
                      label: B(() => [
                        F(
                          z,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(k.$i18n("PREFERRED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(
                                " " + be(k.$i18n("PREFERRED_WORDS_TOOLTIP")),
                                1
                              ),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        F(
                          ee,
                          {
                            value: N(R),
                            "onUpdate:value":
                              O[19] ||
                              (O[19] = (K) => (xe(R) ? (R.value = K) : null)),
                            disabled: N(s),
                            max: 50,
                            size: "small",
                            "aria-label": k.$i18n("PREFERRED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                    F(de, null, {
                      label: B(() => [
                        F(
                          z,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(k.$i18n("REQUIRED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(
                                " " + be(k.$i18n("REQUIRED_WORDS_TOOLTIP")),
                                1
                              ),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        F(
                          ee,
                          {
                            value: N(S),
                            "onUpdate:value":
                              O[20] ||
                              (O[20] = (K) => (xe(S) ? (S.value = K) : null)),
                            disabled: N(s),
                            max: 50,
                            size: "small",
                            "aria-label": k.$i18n("REQUIRED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                  ]),
                  _: 1,
                }
              ));
        };
      },
    },
    WN = { key: 0 },
    jN = {
      __name: "SiteSettingsUltimate",
      props: { site: String },
      setup(t) {
        const e = t,
          n =
            /Chrome/.test(navigator.userAgent) &&
            /Google Inc/.test(navigator.vendor),
          r = qn(),
          {
            enableMaxSwipesFilter: i,
            maxSwipes: o,
            enableLeftSwipesPercentageFilter: s,
            leftSwipePercentages: a,
            enableAgeFilter: l,
            minMaxAge: c,
            enableHeightFilter: u,
            minMaxHeight: d,
            enableDistanceFilter: h,
            maxDistance: g,
            skipEmptyDistance: f,
            extendedDistance: p,
            enableMinPicturesFilter: b,
            minPictures: m,
            bannedWords: _,
            preferredWords: R,
            requiredWords: S,
            noEmptyDescription: x,
            onlyVerifyedProfiles: E,
            onlyRecentlyActive: w,
          } = _r(r),
          v = {
            250: "250",
            1e3: "1000",
            2e3: "2000",
            3e3: "3000",
            4e3: "4000",
            5e3: "5000",
          },
          y = { 25: "25", 50: "50", 75: "75" },
          T = { 25: "25", 50: "50", 75: "75" },
          A = { 25: "150", 50: "180" },
          I = { 50: "50", 100: "100", 150: "200" },
          L = { 500: "500", 1e3: "1000", 1500: "1500", 2e3: "2000" },
          j = { 2: "2", 8: "8" };
        return (k, O) => {
          const D = Fl,
            Y = zl,
            se = Jo,
            de = hi,
            fe = Ju,
            z = Dl,
            ee = td,
            ue = di;
          return !N(n) && e.site === "bumble"
            ? (Ie(),
              nn("div", WN, [
                At("h3", null, be(k.$i18n("BROWSER_NOT_SUPPORTED")), 1),
                At(
                  "p",
                  null,
                  be(k.$i18n("SUPPORTED_BROWSERS")) + ": Chrome",
                  1
                ),
              ]))
            : (Ie(),
              He(
                ue,
                { key: 1, "label-placement": "top", column: 1 },
                {
                  default: B(() => [
                    F(
                      de,
                      { label: k.$i18n("MAX_SWIPES") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(i),
                                  "onUpdate:value":
                                    O[0] ||
                                    (O[0] = (K) =>
                                      xe(i) ? (i.value = K) : null),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n("ENABLE_MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(o),
                                  "onUpdate:value":
                                    O[1] ||
                                    (O[1] = (K) =>
                                      xe(o) ? (o.value = K) : null),
                                  marks: v,
                                  size: "small",
                                  range: "",
                                  min: 10,
                                  max: 5e3,
                                  step: 10,
                                  disabled: !N(i),
                                  "aria-label": k.$i18n("MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      de,
                      { label: k.$i18n("LEFT_SWIPES_PERCENTAGE") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(s),
                                  "onUpdate:value":
                                    O[2] ||
                                    (O[2] = (K) =>
                                      xe(s) ? (s.value = K) : null),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n("ENABLE_MAX_SWIPES"),
                                },
                                null,
                                8,
                                ["value", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(a),
                                  "onUpdate:value":
                                    O[3] ||
                                    (O[3] = (K) =>
                                      xe(a) ? (a.value = K) : null),
                                  marks: y,
                                  size: "small",
                                  range: "",
                                  min: 0,
                                  max: 100,
                                  step: 5,
                                  disabled: !N(s),
                                  "aria-label": k.$i18n("MAX_SWIPES"),
                                  "format-tooltip": (K) => `${K}%`,
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      de,
                      { label: k.$i18n("MIN_MAX_AGE") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(l),
                                  "onUpdate:value":
                                    O[4] ||
                                    (O[4] = (K) =>
                                      xe(l) ? (l.value = K) : null),
                                  disabled: N(s),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n("ENABLE_MIN_MAX_AGE"),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(c),
                                  "onUpdate:value":
                                    O[5] ||
                                    (O[5] = (K) =>
                                      xe(c) ? (c.value = K) : null),
                                  marks: T,
                                  size: "small",
                                  range: "",
                                  min: 18,
                                  max: 99,
                                  step: 1,
                                  disabled: !N(l) || N(s),
                                  "aria-label": k.$i18n("MIN_MAX_AGE"),
                                  "format-tooltip": (K) =>
                                    `${K} ` + k.$i18n("YEARS"),
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    F(
                      de,
                      { label: k.$i18n("MIN_MAX_HEIGHT") },
                      {
                        default: B(() => [
                          F(se, null, {
                            default: B(() => [
                              F(
                                D,
                                {
                                  value: N(u),
                                  "onUpdate:value":
                                    O[6] ||
                                    (O[6] = (K) =>
                                      xe(u) ? (u.value = K) : null),
                                  disabled: N(s),
                                  size: "small",
                                  style: { "margin-right": "10px" },
                                  "aria-label": k.$i18n(
                                    "ENABLE_MIN_MAX_HEIGHT"
                                  ),
                                },
                                null,
                                8,
                                ["value", "disabled", "aria-label"]
                              ),
                              F(
                                Y,
                                {
                                  value: N(d),
                                  "onUpdate:value":
                                    O[7] ||
                                    (O[7] = (K) =>
                                      xe(d) ? (d.value = K) : null),
                                  marks: A,
                                  size: "small",
                                  range: "",
                                  min: 100,
                                  max: 230,
                                  step: 1,
                                  disabled: !N(u) || N(s),
                                  "aria-label": k.$i18n("MIN_MAX_HEIGHT"),
                                  "format-tooltip": (K) => `${K} cm`,
                                },
                                null,
                                8,
                                [
                                  "value",
                                  "disabled",
                                  "aria-label",
                                  "format-tooltip",
                                ]
                              ),
                            ]),
                            _: 1,
                          }),
                        ]),
                        _: 1,
                      },
                      8,
                      ["label"]
                    ),
                    e.site === "tinder" || e.site === "bumble"
                      ? (Ie(),
                        He(
                          de,
                          { key: 0, label: k.$i18n("MAX_DISTANCE") },
                          {
                            default: B(() => [
                              F(se, null, {
                                default: B(() => [
                                  F(
                                    D,
                                    {
                                      value: N(h),
                                      "onUpdate:value":
                                        O[8] ||
                                        (O[8] = (K) =>
                                          xe(h) ? (h.value = K) : null),
                                      disabled: N(s),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": k.$i18n(
                                        "ENABLE_MAX_DISTANCE"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                  N(p)
                                    ? (Ie(),
                                      He(
                                        Y,
                                        {
                                          key: 0,
                                          value: N(g),
                                          "onUpdate:value":
                                            O[9] ||
                                            (O[9] = (K) =>
                                              xe(g) ? (g.value = K) : null),
                                          marks: L,
                                          size: "small",
                                          min: 0,
                                          max: 2500,
                                          step: 5,
                                          disabled: !N(h) || N(s),
                                          "aria-label": k.$i18n("MAX_DISTANCE"),
                                        },
                                        null,
                                        8,
                                        ["value", "disabled", "aria-label"]
                                      ))
                                    : (Ie(),
                                      He(
                                        Y,
                                        {
                                          key: 1,
                                          value: N(g),
                                          "onUpdate:value":
                                            O[10] ||
                                            (O[10] = (K) =>
                                              xe(g) ? (g.value = K) : null),
                                          marks: I,
                                          size: "small",
                                          min: 0,
                                          max: 200,
                                          step: 5,
                                          disabled: !N(h) || N(s),
                                          "aria-label": k.$i18n("MAX_DISTANCE"),
                                        },
                                        null,
                                        8,
                                        ["value", "disabled", "aria-label"]
                                      )),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    F(de, null, {
                      default: B(() => [
                        F(se, null, {
                          default: B(() => [
                            F(
                              fe,
                              {
                                checked: N(f),
                                "onUpdate:checked":
                                  O[11] ||
                                  (O[11] = (K) =>
                                    xe(f) ? (f.value = K) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(k.$i18n("SKIP_EMPTY_DISTANCE")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                            F(
                              fe,
                              {
                                checked: N(p),
                                "onUpdate:checked":
                                  O[12] ||
                                  (O[12] = (K) =>
                                    xe(p) ? (p.value = K) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(k.$i18n("EXTENDED_DISTANCE")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    }),
                    e.site !== "pof"
                      ? (Ie(),
                        He(
                          de,
                          { key: 1, label: k.$i18n("MIN_PICTURES") },
                          {
                            default: B(() => [
                              F(se, null, {
                                default: B(() => [
                                  F(
                                    D,
                                    {
                                      value: N(b),
                                      "onUpdate:value":
                                        O[13] ||
                                        (O[13] = (K) =>
                                          xe(b) ? (b.value = K) : null),
                                      disabled: N(s),
                                      size: "small",
                                      style: { "margin-right": "10px" },
                                      "aria-label": k.$i18n(
                                        "ENABLE_MIN_PICTURES"
                                      ),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                  F(
                                    Y,
                                    {
                                      value: N(m),
                                      "onUpdate:value":
                                        O[14] ||
                                        (O[14] = (K) =>
                                          xe(m) ? (m.value = K) : null),
                                      marks: j,
                                      size: "small",
                                      min: 1,
                                      max: 10,
                                      step: 1,
                                      disabled: !N(b) || N(s),
                                      "aria-label": k.$i18n("MIN_PICTURES"),
                                    },
                                    null,
                                    8,
                                    ["value", "disabled", "aria-label"]
                                  ),
                                ]),
                                _: 1,
                              }),
                            ]),
                            _: 1,
                          },
                          8,
                          ["label"]
                        ))
                      : et("", !0),
                    F(de, null, {
                      default: B(() => [
                        F(se, null, {
                          default: B(() => [
                            F(
                              fe,
                              {
                                checked: N(x),
                                "onUpdate:checked":
                                  O[15] ||
                                  (O[15] = (K) =>
                                    xe(x) ? (x.value = K) : null),
                                disabled: N(s),
                                size: "small",
                              },
                              {
                                default: B(() => [
                                  Se(be(k.$i18n("NO_EMPTY_DESCRIPTION")), 1),
                                ]),
                                _: 1,
                              },
                              8,
                              ["checked", "disabled"]
                            ),
                            e.site === "tinder" ||
                            e.site === "bumble" ||
                            e.site === "lovoo" ||
                            e.site === "badoo"
                              ? (Ie(),
                                He(
                                  fe,
                                  {
                                    key: 0,
                                    checked: N(E),
                                    "onUpdate:checked":
                                      O[16] ||
                                      (O[16] = (K) =>
                                        xe(E) ? (E.value = K) : null),
                                    disabled: N(s),
                                    size: "small",
                                  },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(k.$i18n("ONLY_VERIFYED_PROFILES")),
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                  8,
                                  ["checked", "disabled"]
                                ))
                              : et("", !0),
                            e.site === "tinder"
                              ? (Ie(),
                                He(
                                  fe,
                                  {
                                    key: 1,
                                    checked: N(w),
                                    "onUpdate:checked":
                                      O[17] ||
                                      (O[17] = (K) =>
                                        xe(w) ? (w.value = K) : null),
                                    disabled: N(s),
                                    size: "small",
                                  },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(k.$i18n("ONLY_RECENTLY_ACTIVE")),
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  },
                                  8,
                                  ["checked", "disabled"]
                                ))
                              : et("", !0),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    }),
                    F(de, null, {
                      label: B(() => [
                        F(
                          z,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(k.$i18n("BANNED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(" " + be(k.$i18n("BANNED_WORDS_TOOLTIP")), 1),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        F(
                          ee,
                          {
                            value: N(_),
                            "onUpdate:value":
                              O[18] ||
                              (O[18] = (K) => (xe(_) ? (_.value = K) : null)),
                            disabled: N(s),
                            size: "small",
                            "aria-label": k.$i18n("BANNED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                    F(de, null, {
                      label: B(() => [
                        F(
                          z,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(k.$i18n("PREFERRED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(
                                " " + be(k.$i18n("PREFERRED_WORDS_TOOLTIP")),
                                1
                              ),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        F(
                          ee,
                          {
                            value: N(R),
                            "onUpdate:value":
                              O[19] ||
                              (O[19] = (K) => (xe(R) ? (R.value = K) : null)),
                            disabled: N(s),
                            size: "small",
                            "aria-label": k.$i18n("PREFERRED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                    F(de, null, {
                      label: B(() => [
                        F(
                          z,
                          { placement: "top-start", trigger: "hover" },
                          {
                            trigger: B(() => [
                              Se(be(k.$i18n("REQUIRED_WORDS")), 1),
                            ]),
                            default: B(() => [
                              Se(
                                " " + be(k.$i18n("REQUIRED_WORDS_TOOLTIP")),
                                1
                              ),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      default: B(() => [
                        F(
                          ee,
                          {
                            value: N(S),
                            "onUpdate:value":
                              O[20] ||
                              (O[20] = (K) => (xe(S) ? (S.value = K) : null)),
                            disabled: N(s),
                            size: "small",
                            "aria-label": k.$i18n("REQUIRED_WORDS"),
                          },
                          null,
                          8,
                          ["value", "disabled", "aria-label"]
                        ),
                      ]),
                      _: 1,
                    }),
                  ]),
                  _: 1,
                }
              ));
        };
      },
    },
    ho = {
      __name: "SiteSettings",
      props: { site: String },
      setup(t) {
        const e = qn(),
          {
            isBasic: n,
            isPro: r,
            isUltimate: i,
            subscriptionActive: o,
            deviceRegistered: s,
          } = _r(e);
        return (a, l) =>
          N(n) && N(o) && N(s)
            ? (Ie(), He(BN, { key: 0, site: t.site }, null, 8, ["site"]))
            : N(r) && N(o) && N(s)
            ? (Ie(), He(HN, { key: 1, site: t.site }, null, 8, ["site"]))
            : N(i) && N(o) && N(s)
            ? (Ie(), He(jN, { key: 2, site: t.site }, null, 8, ["site"]))
            : (Ie(), He(zN, { key: 3, site: t.site }, null, 8, ["site"]));
      },
    },
    UN = {
      __name: "Settings",
      setup(t) {
        const e = Zs(),
          n = nd(),
          r = qn(),
          {
            isBasic: i,
            isPro: o,
            isUltimate: s,
            maxSwipesRandomNumber: a,
            showTinder: l,
            showBumble: c,
            showOkCupid: u,
            showLovoo: d,
            showBadoo: h,
            showPoF: g,
            showZoosk: f,
          } = _r(r),
          p = function () {
            e.push({ name: "stats" });
          },
          b = function () {
            e.push({ name: "subscription" });
          },
          m = function () {
            e.push({ name: "options" });
          },
          _ = function () {
            window.open("https://www.auto-swiper.ch/#faq");
          },
          R = U(null);
        Vt(async () => {
          wt.tabs.query({ active: !0, currentWindow: !0 }).then((x) => {
            x[0].url
              ? x[0].url.includes("bumble")
                ? (R.value = "bumble")
                : x[0].url.includes("tinder")
                ? (R.value = "tinder")
                : x[0].url.includes("okcupid")
                ? (R.value = "okcupid")
                : x[0].url.includes("lovoo")
                ? (R.value = "lovoo")
                : x[0].url.includes("badoo")
                ? (R.value = "badoo")
                : x[0].url.includes("pof")
                ? (R.value = "pof")
                : x[0].url.includes("zoosk") && (R.value = "zoosk")
              : (R.value = "tinder");
          });
        });
        const S = function () {
          wt.tabs.query({ active: !0, currentWindow: !0 }).then((x) => {
            const E = parseInt(x[0].id.toString());
            if (!x[0].url) {
              n.warning(wt.i18n.getMessage("ERROR_NOT_SUPPORTED_SITE"));
              return;
            }
            if (
              (r.isFree && r.dailySwipes >= 25000) ||
              (r.isBasic && r.dailySwipes >= 5e3)
            ) {
              n.warning(wt.i18n.getMessage("ERROR_MAX_SWIPES"));
              return;
            }
            try {
              wt.tabs.update(x[0].id, { autoDiscardable: !1 });
            } catch {}
            const w = (y, T) => Math.random() * (T - y) + y;
            a.value = Math.round(w(r.maxSwipes[0], r.maxSwipes[1]));
            const v = JSON.parse(
              JSON.stringify({
                uuid: De(r.uuid),
                isFree: De(r.isFree),
                isBasic: De(r.isBasic),
                isPro: De(r.isPro),
                isUltimate: De(r.isUltimate),
                userId: De(r.userId),
                userEmail: De(r.loginEmail),
                enableMaxSwipesFilter: De(r.enableMaxSwipesFilter),
                maxSwipes: De(r.maxSwipesRandomNumber),
                enableLeftSwipesPercentageFilter: De(
                  r.enableLeftSwipesPercentageFilter
                ),
                leftSwipePercentage: De(r.leftSwipePercentages),
                enableAgeFilter: De(r.enableAgeFilter),
                minMaxAge: De(r.minMaxAge),
                enableHeightFilter: De(r.enableHeightFilter),
                minMaxHeight: De(r.minMaxHeight),
                enableDistanceFilter: De(r.enableDistanceFilter),
                maxDistance: De(r.maxDistance),
                skipEmptyDistance: De(r.skipEmptyDistance),
                enableMinPicturesFilter: De(r.enableMinPicturesFilter),
                minPictures: De(r.minPictures),
                minMaxSwipeTime: De(r.minMaxSwipeTime),
                enableBreak: De(r.enableBreak),
                breakBetweenSwipes: De(r.breakBetweenSwipes),
                breakDuration: De(r.breakDuration),
                enableAutomaticPageReload: De(r.enableAutomaticPageReload),
                reloadPageBetweenSwipes: De(r.reloadPageBetweenSwipes),
                enableDelayAfterPageReload: De(r.enableDelayAfterPageReload),
                delayBetweenAfterPageReload: De(r.delayBetweenAfterPageReload),
                noEmptyDescription: De(r.noEmptyDescription),
                onlyVerifyedProfiles: De(r.onlyVerifyedProfiles),
                onlyRecentlyActive: De(r.onlyRecentlyActive),
                enableRandomUsageSimulation: De(r.enableRandomUsageSimulation),
                randomUsageSimulation: De(r.randomUsageSimulation),
                bannedWords: De(r.bannedWords),
                preferredWords: De(r.preferredWords),
                requiredWords: De(r.requiredWords),
                stats: De(r.stats),
                log: De(r.log),
                tabId: E,
                withNotification: De(r.withNotification),
              })
            );
            Lt("sent: auto-swiper-message-contentjs-start"),
              wt.tabs
                .sendMessage(E, {
                  action: "auto-swiper-message-contentjs-start",
                  options: v,
                })
                .then((y) => {
                  e.push({ name: "progress" });
                })
                .catch((y) => {
                  y && Lt(y);
                });
          });
        };
        return (x, E) => {
          const w = f6,
            v = v6,
            y = NC,
            T = hi,
            A = Xn,
            I = Qo,
            L = di;
          return (
            Ie(),
            He(
              L,
              { "label-placement": "top", column: 1 },
              {
                default: B(() => [
                  F(T, null, {
                    default: B(() => [
                      F(
                        y,
                        { style: { "max-height": "480px" } },
                        {
                          default: B(() => [
                            R.value
                              ? (Ie(),
                                He(
                                  v,
                                  {
                                    key: 0,
                                    "justify-content": "space-evenly",
                                    type: "line",
                                    size: "small",
                                    animated: "",
                                    "default-value": R.value,
                                  },
                                  {
                                    default: B(() => [
                                      N(l)
                                        ? (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 0,
                                              name: "tinder",
                                              tab: "Tinder",
                                              "aria-label": "Tinder",
                                              "display-directive": "show",
                                            },
                                            {
                                              default: B(() => [
                                                F(ho, { site: "tinder" }),
                                              ]),
                                              _: 1,
                                            }
                                          ))
                                        : et("", !0),
                                      N(c)
                                        ? (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 1,
                                              name: "bumble",
                                              tab: "Bumble",
                                              "aria-label": "Bumble",
                                              "display-directive": "show",
                                            },
                                            {
                                              default: B(() => [
                                                F(ho, { site: "bumble" }),
                                              ]),
                                              _: 1,
                                            }
                                          ))
                                        : et("", !0),
                                      N(u)
                                        ? (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 2,
                                              name: "okcupid",
                                              tab: "OkCupid",
                                              "aria-label": "OkCupid",
                                              "display-directive": "show",
                                            },
                                            {
                                              default: B(() => [
                                                F(ho, { site: "okcupid" }),
                                              ]),
                                              _: 1,
                                            }
                                          ))
                                        : et("", !0),
                                      N(d)
                                        ? (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 3,
                                              name: "lovoo",
                                              tab: "Lovoo",
                                              "aria-label": "Lovoo",
                                              "display-directive": "show",
                                            },
                                            {
                                              default: B(() => [
                                                F(ho, { site: "lovoo" }),
                                              ]),
                                              _: 1,
                                            }
                                          ))
                                        : et("", !0),
                                      N(h)
                                        ? (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 4,
                                              name: "badoo",
                                              tab: "Badoo",
                                              "aria-label": "Badoo",
                                              "display-directive": "show",
                                            },
                                            {
                                              default: B(() => [
                                                F(ho, { site: "badoo" }),
                                              ]),
                                              _: 1,
                                            }
                                          ))
                                        : et("", !0),
                                      N(g)
                                        ? (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 5,
                                              name: "pof",
                                              tab: "PoF",
                                              "aria-label": "PoF",
                                              "display-directive": "show",
                                            },
                                            {
                                              default: B(() => [
                                                F(ho, { site: "pof" }),
                                              ]),
                                              _: 1,
                                            }
                                          ))
                                        : et("", !0),
                                      N(f)
                                        ? (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 6,
                                              name: "zoosk",
                                              tab: "Zoosk",
                                              "aria-label": "Zoosk",
                                              "display-directive": "show",
                                            },
                                            {
                                              default: B(() => [
                                                F(ho, { site: "zoosk" }),
                                              ]),
                                              _: 1,
                                            }
                                          ))
                                        : et("", !0),
                                    ]),
                                    _: 1,
                                  },
                                  8,
                                  ["default-value"]
                                ))
                              : et("", !0),
                          ]),
                          _: 1,
                        }
                      ),
                    ]),
                    _: 1,
                  }),
                  F(T, null, {
                    default: B(() => [
                      F(
                        I,
                        { justify: "space-between", inline: "" },
                        {
                          default: B(() => [
                            F(
                              A,
                              { type: "primary", size: "small", onClick: S },
                              {
                                default: B(() => [Se(be(x.$i18n("SWIPE")), 1)]),
                                _: 1,
                              }
                            ),
                            N(i) || N(o) || N(s)
                              ? (Ie(),
                                He(
                                  A,
                                  {
                                    key: 0,
                                    type: "info",
                                    size: "small",
                                    onClick: p,
                                  },
                                  {
                                    default: B(() => [
                                      Se(be(x.$i18n("STATS")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ))
                              : et("", !0),
                            F(
                              A,
                              { type: "success", size: "small", onClick: b },
                              {
                                default: B(() => [
                                  Se(be(x.$i18n("SUBSCRIPTION")), 1),
                                ]),
                                _: 1,
                              }
                            ),
                            F(
                              A,
                              { type: "warning", size: "small", onClick: m },
                              {
                                default: B(() => [
                                  Se(be(x.$i18n("OPTIONS")), 1),
                                ]),
                                _: 1,
                              }
                            ),
                            F(
                              A,
                              { type: "error", size: "small", onClick: _ },
                              {
                                default: B(() => [Se(be(x.$i18n("FAQ")), 1)]),
                                _: 1,
                              }
                            ),
                          ]),
                          _: 1,
                        }
                      ),
                    ]),
                    _: 1,
                  }),
                ]),
                _: 1,
              }
            )
          );
        };
      },
    };
  var S_ = { exports: {} };
  (function (t, e) {
    (function (n, r) {
      r();
    })(yo, function () {
      function n(c, u) {
        return (
          typeof u > "u"
            ? (u = { autoBom: !1 })
            : typeof u != "object" &&
              (console.warn(
                "Deprecated: Expected third argument to be a object"
              ),
              (u = { autoBom: !u })),
          u.autoBom &&
          /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
            c.type
          )
            ? new Blob(["\uFEFF", c], { type: c.type })
            : c
        );
      }
      function r(c, u, d) {
        var h = new XMLHttpRequest();
        h.open("GET", c),
          (h.responseType = "blob"),
          (h.onload = function () {
            l(h.response, u, d);
          }),
          (h.onerror = function () {
            console.error("could not download file");
          }),
          h.send();
      }
      function i(c) {
        var u = new XMLHttpRequest();
        u.open("HEAD", c, !1);
        try {
          u.send();
        } catch {}
        return 200 <= u.status && 299 >= u.status;
      }
      function o(c) {
        try {
          c.dispatchEvent(new MouseEvent("click"));
        } catch {
          var u = document.createEvent("MouseEvents");
          u.initMouseEvent(
            "click",
            !0,
            !0,
            window,
            0,
            0,
            0,
            80,
            20,
            !1,
            !1,
            !1,
            !1,
            0,
            null
          ),
            c.dispatchEvent(u);
        }
      }
      var s =
          typeof window == "object" && window.window === window
            ? window
            : typeof self == "object" && self.self === self
            ? self
            : typeof yo == "object" && yo.global === yo
            ? yo
            : void 0,
        a =
          s.navigator &&
          /Macintosh/.test(navigator.userAgent) &&
          /AppleWebKit/.test(navigator.userAgent) &&
          !/Safari/.test(navigator.userAgent),
        l =
          s.saveAs ||
          (typeof window != "object" || window !== s
            ? function () {}
            : "download" in HTMLAnchorElement.prototype && !a
            ? function (c, u, d) {
                var h = s.URL || s.webkitURL,
                  g = document.createElement("a");
                (u = u || c.name || "download"),
                  (g.download = u),
                  (g.rel = "noopener"),
                  typeof c == "string"
                    ? ((g.href = c),
                      g.origin === location.origin
                        ? o(g)
                        : i(g.href)
                        ? r(c, u, d)
                        : o(g, (g.target = "_blank")))
                    : ((g.href = h.createObjectURL(c)),
                      setTimeout(function () {
                        h.revokeObjectURL(g.href);
                      }, 4e4),
                      setTimeout(function () {
                        o(g);
                      }, 0));
              }
            : "msSaveOrOpenBlob" in navigator
            ? function (c, u, d) {
                if (((u = u || c.name || "download"), typeof c != "string"))
                  navigator.msSaveOrOpenBlob(n(c, d), u);
                else if (i(c)) r(c, u, d);
                else {
                  var h = document.createElement("a");
                  (h.href = c),
                    (h.target = "_blank"),
                    setTimeout(function () {
                      o(h);
                    });
                }
              }
            : function (c, u, d, h) {
                if (
                  ((h = h || open("", "_blank")),
                  h &&
                    (h.document.title = h.document.body.innerText =
                      "downloading..."),
                  typeof c == "string")
                )
                  return r(c, u, d);
                var g = c.type === "application/octet-stream",
                  f = /constructor/i.test(s.HTMLElement) || s.safari,
                  p = /CriOS\/[\d]+/.test(navigator.userAgent);
                if ((p || (g && f) || a) && typeof FileReader < "u") {
                  var b = new FileReader();
                  (b.onloadend = function () {
                    var R = b.result;
                    (R = p
                      ? R
                      : R.replace(/^data:[^;]*;/, "data:attachment/file;")),
                      h ? (h.location.href = R) : (location = R),
                      (h = null);
                  }),
                    b.readAsDataURL(c);
                } else {
                  var m = s.URL || s.webkitURL,
                    _ = m.createObjectURL(c);
                  h ? (h.location = _) : (location.href = _),
                    (h = null),
                    setTimeout(function () {
                      m.revokeObjectURL(_);
                    }, 4e4);
                }
              });
      (s.saveAs = l.saveAs = l), (t.exports = l);
    });
  })(S_);
  var wf = S_.exports,
    E_ = { exports: {} };
  /* @license
Papa Parse
v5.4.1
https://github.com/mholt/PapaParse
License: MIT
*/ (function (t, e) {
    (function (n, r) {
      t.exports = r();
    })(yo, function n() {
      var r =
          typeof self < "u"
            ? self
            : typeof window < "u"
            ? window
            : r !== void 0
            ? r
            : {},
        i = !r.document && !!r.postMessage,
        o = r.IS_PAPA_WORKER || !1,
        s = {},
        a = 0,
        l = {
          parse: function (v, y) {
            var T = (y = y || {}).dynamicTyping || !1;
            if (
              (w(T) && ((y.dynamicTypingFunction = T), (T = {})),
              (y.dynamicTyping = T),
              (y.transform = !!w(y.transform) && y.transform),
              y.worker && l.WORKERS_SUPPORTED)
            ) {
              var A = (function () {
                if (!l.WORKERS_SUPPORTED) return !1;
                var L =
                    ((k = r.URL || r.webkitURL || null),
                    (O = n.toString()),
                    l.BLOB_URL ||
                      (l.BLOB_URL = k.createObjectURL(
                        new Blob(
                          [
                            "var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ",
                            "(",
                            O,
                            ")();",
                          ],
                          { type: "text/javascript" }
                        )
                      ))),
                  j = new r.Worker(L),
                  k,
                  O;
                return (j.onmessage = _), (j.id = a++), (s[j.id] = j);
              })();
              return (
                (A.userStep = y.step),
                (A.userChunk = y.chunk),
                (A.userComplete = y.complete),
                (A.userError = y.error),
                (y.step = w(y.step)),
                (y.chunk = w(y.chunk)),
                (y.complete = w(y.complete)),
                (y.error = w(y.error)),
                delete y.worker,
                void A.postMessage({ input: v, config: y, workerId: A.id })
              );
            }
            var I = null;
            return (
              l.NODE_STREAM_INPUT,
              typeof v == "string"
                ? ((v = (function (L) {
                    return L.charCodeAt(0) === 65279 ? L.slice(1) : L;
                  })(v)),
                  (I = y.download ? new d(y) : new g(y)))
                : v.readable === !0 && w(v.read) && w(v.on)
                ? (I = new f(y))
                : ((r.File && v instanceof File) || v instanceof Object) &&
                  (I = new h(y)),
              I.stream(v)
            );
          },
          unparse: function (v, y) {
            var T = !1,
              A = !0,
              I = ",",
              L = `\r
`,
              j = '"',
              k = j + j,
              O = !1,
              D = null,
              Y = !1;
            (function () {
              if (typeof y == "object") {
                if (
                  (typeof y.delimiter != "string" ||
                    l.BAD_DELIMITERS.filter(function (z) {
                      return y.delimiter.indexOf(z) !== -1;
                    }).length ||
                    (I = y.delimiter),
                  (typeof y.quotes == "boolean" ||
                    typeof y.quotes == "function" ||
                    Array.isArray(y.quotes)) &&
                    (T = y.quotes),
                  (typeof y.skipEmptyLines != "boolean" &&
                    typeof y.skipEmptyLines != "string") ||
                    (O = y.skipEmptyLines),
                  typeof y.newline == "string" && (L = y.newline),
                  typeof y.quoteChar == "string" && (j = y.quoteChar),
                  typeof y.header == "boolean" && (A = y.header),
                  Array.isArray(y.columns))
                ) {
                  if (y.columns.length === 0)
                    throw new Error("Option columns is empty");
                  D = y.columns;
                }
                y.escapeChar !== void 0 && (k = y.escapeChar + j),
                  (typeof y.escapeFormulae == "boolean" ||
                    y.escapeFormulae instanceof RegExp) &&
                    (Y =
                      y.escapeFormulae instanceof RegExp
                        ? y.escapeFormulae
                        : /^[=+\-@\t\r].*$/);
              }
            })();
            var se = new RegExp(b(j), "g");
            if (
              (typeof v == "string" && (v = JSON.parse(v)), Array.isArray(v))
            ) {
              if (!v.length || Array.isArray(v[0])) return de(null, v, O);
              if (typeof v[0] == "object")
                return de(D || Object.keys(v[0]), v, O);
            } else if (typeof v == "object")
              return (
                typeof v.data == "string" && (v.data = JSON.parse(v.data)),
                Array.isArray(v.data) &&
                  (v.fields || (v.fields = (v.meta && v.meta.fields) || D),
                  v.fields ||
                    (v.fields = Array.isArray(v.data[0])
                      ? v.fields
                      : typeof v.data[0] == "object"
                      ? Object.keys(v.data[0])
                      : []),
                  Array.isArray(v.data[0]) ||
                    typeof v.data[0] == "object" ||
                    (v.data = [v.data])),
                de(v.fields || [], v.data || [], O)
              );
            throw new Error("Unable to serialize unrecognized input");
            function de(z, ee, ue) {
              var K = "";
              typeof z == "string" && (z = JSON.parse(z)),
                typeof ee == "string" && (ee = JSON.parse(ee));
              var _e = Array.isArray(z) && 0 < z.length,
                ie = !Array.isArray(ee[0]);
              if (_e && A) {
                for (var pe = 0; pe < z.length; pe++)
                  0 < pe && (K += I), (K += fe(z[pe], pe));
                0 < ee.length && (K += L);
              }
              for (var re = 0; re < ee.length; re++) {
                var ge = _e ? z.length : ee[re].length,
                  ke = !1,
                  Me = _e
                    ? Object.keys(ee[re]).length === 0
                    : ee[re].length === 0;
                if (
                  (ue &&
                    !_e &&
                    (ke =
                      ue === "greedy"
                        ? ee[re].join("").trim() === ""
                        : ee[re].length === 1 && ee[re][0].length === 0),
                  ue === "greedy" && _e)
                ) {
                  for (var P = [], $ = 0; $ < ge; $++) {
                    var H = ie ? z[$] : $;
                    P.push(ee[re][H]);
                  }
                  ke = P.join("").trim() === "";
                }
                if (!ke) {
                  for (var ae = 0; ae < ge; ae++) {
                    0 < ae && !Me && (K += I);
                    var le = _e && ie ? z[ae] : ae;
                    K += fe(ee[re][le], ae);
                  }
                  re < ee.length - 1 && (!ue || (0 < ge && !Me)) && (K += L);
                }
              }
              return K;
            }
            function fe(z, ee) {
              if (z == null) return "";
              if (z.constructor === Date) return JSON.stringify(z).slice(1, 25);
              var ue = !1;
              Y &&
                typeof z == "string" &&
                Y.test(z) &&
                ((z = "'" + z), (ue = !0));
              var K = z.toString().replace(se, k);
              return (ue =
                ue ||
                T === !0 ||
                (typeof T == "function" && T(z, ee)) ||
                (Array.isArray(T) && T[ee]) ||
                (function (_e, ie) {
                  for (var pe = 0; pe < ie.length; pe++)
                    if (-1 < _e.indexOf(ie[pe])) return !0;
                  return !1;
                })(K, l.BAD_DELIMITERS) ||
                -1 < K.indexOf(I) ||
                K.charAt(0) === " " ||
                K.charAt(K.length - 1) === " ")
                ? j + K + j
                : K;
            }
          },
        };
      if (
        ((l.RECORD_SEP = ""),
        (l.UNIT_SEP = ""),
        (l.BYTE_ORDER_MARK = "\uFEFF"),
        (l.BAD_DELIMITERS = [
          "\r",
          `
`,
          '"',
          l.BYTE_ORDER_MARK,
        ]),
        (l.WORKERS_SUPPORTED = !i && !!r.Worker),
        (l.NODE_STREAM_INPUT = 1),
        (l.LocalChunkSize = 10485760),
        (l.RemoteChunkSize = 5242880),
        (l.DefaultDelimiter = ","),
        (l.Parser = m),
        (l.ParserHandle = p),
        (l.NetworkStreamer = d),
        (l.FileStreamer = h),
        (l.StringStreamer = g),
        (l.ReadableStreamStreamer = f),
        r.jQuery)
      ) {
        var c = r.jQuery;
        c.fn.parse = function (v) {
          var y = v.config || {},
            T = [];
          return (
            this.each(function (L) {
              if (
                !(
                  c(this).prop("tagName").toUpperCase() === "INPUT" &&
                  c(this).attr("type").toLowerCase() === "file" &&
                  r.FileReader
                ) ||
                !this.files ||
                this.files.length === 0
              )
                return !0;
              for (var j = 0; j < this.files.length; j++)
                T.push({
                  file: this.files[j],
                  inputElem: this,
                  instanceConfig: c.extend({}, y),
                });
            }),
            A(),
            this
          );
          function A() {
            if (T.length !== 0) {
              var L,
                j,
                k,
                O,
                D = T[0];
              if (w(v.before)) {
                var Y = v.before(D.file, D.inputElem);
                if (typeof Y == "object") {
                  if (Y.action === "abort")
                    return (
                      (L = "AbortError"),
                      (j = D.file),
                      (k = D.inputElem),
                      (O = Y.reason),
                      void (w(v.error) && v.error({ name: L }, j, k, O))
                    );
                  if (Y.action === "skip") return void I();
                  typeof Y.config == "object" &&
                    (D.instanceConfig = c.extend(D.instanceConfig, Y.config));
                } else if (Y === "skip") return void I();
              }
              var se = D.instanceConfig.complete;
              (D.instanceConfig.complete = function (de) {
                w(se) && se(de, D.file, D.inputElem), I();
              }),
                l.parse(D.file, D.instanceConfig);
            } else w(v.complete) && v.complete();
          }
          function I() {
            T.splice(0, 1), A();
          }
        };
      }
      function u(v) {
        (this._handle = null),
          (this._finished = !1),
          (this._completed = !1),
          (this._halted = !1),
          (this._input = null),
          (this._baseIndex = 0),
          (this._partialLine = ""),
          (this._rowCount = 0),
          (this._start = 0),
          (this._nextChunk = null),
          (this.isFirstChunk = !0),
          (this._completeResults = { data: [], errors: [], meta: {} }),
          function (y) {
            var T = x(y);
            (T.chunkSize = parseInt(T.chunkSize)),
              y.step || y.chunk || (T.chunkSize = null),
              (this._handle = new p(T)),
              ((this._handle.streamer = this)._config = T);
          }.call(this, v),
          (this.parseChunk = function (y, T) {
            if (this.isFirstChunk && w(this._config.beforeFirstChunk)) {
              var A = this._config.beforeFirstChunk(y);
              A !== void 0 && (y = A);
            }
            (this.isFirstChunk = !1), (this._halted = !1);
            var I = this._partialLine + y;
            this._partialLine = "";
            var L = this._handle.parse(I, this._baseIndex, !this._finished);
            if (!this._handle.paused() && !this._handle.aborted()) {
              var j = L.meta.cursor;
              this._finished ||
                ((this._partialLine = I.substring(j - this._baseIndex)),
                (this._baseIndex = j)),
                L && L.data && (this._rowCount += L.data.length);
              var k =
                this._finished ||
                (this._config.preview &&
                  this._rowCount >= this._config.preview);
              if (o)
                r.postMessage({
                  results: L,
                  workerId: l.WORKER_ID,
                  finished: k,
                });
              else if (w(this._config.chunk) && !T) {
                if (
                  (this._config.chunk(L, this._handle),
                  this._handle.paused() || this._handle.aborted())
                )
                  return void (this._halted = !0);
                (L = void 0), (this._completeResults = void 0);
              }
              return (
                this._config.step ||
                  this._config.chunk ||
                  ((this._completeResults.data =
                    this._completeResults.data.concat(L.data)),
                  (this._completeResults.errors =
                    this._completeResults.errors.concat(L.errors)),
                  (this._completeResults.meta = L.meta)),
                this._completed ||
                  !k ||
                  !w(this._config.complete) ||
                  (L && L.meta.aborted) ||
                  (this._config.complete(this._completeResults, this._input),
                  (this._completed = !0)),
                k || (L && L.meta.paused) || this._nextChunk(),
                L
              );
            }
            this._halted = !0;
          }),
          (this._sendError = function (y) {
            w(this._config.error)
              ? this._config.error(y)
              : o &&
                this._config.error &&
                r.postMessage({
                  workerId: l.WORKER_ID,
                  error: y,
                  finished: !1,
                });
          });
      }
      function d(v) {
        var y;
        (v = v || {}).chunkSize || (v.chunkSize = l.RemoteChunkSize),
          u.call(this, v),
          (this._nextChunk = i
            ? function () {
                this._readChunk(), this._chunkLoaded();
              }
            : function () {
                this._readChunk();
              }),
          (this.stream = function (T) {
            (this._input = T), this._nextChunk();
          }),
          (this._readChunk = function () {
            if (this._finished) this._chunkLoaded();
            else {
              if (
                ((y = new XMLHttpRequest()),
                this._config.withCredentials &&
                  (y.withCredentials = this._config.withCredentials),
                i ||
                  ((y.onload = E(this._chunkLoaded, this)),
                  (y.onerror = E(this._chunkError, this))),
                y.open(
                  this._config.downloadRequestBody ? "POST" : "GET",
                  this._input,
                  !i
                ),
                this._config.downloadRequestHeaders)
              ) {
                var T = this._config.downloadRequestHeaders;
                for (var A in T) y.setRequestHeader(A, T[A]);
              }
              if (this._config.chunkSize) {
                var I = this._start + this._config.chunkSize - 1;
                y.setRequestHeader("Range", "bytes=" + this._start + "-" + I);
              }
              try {
                y.send(this._config.downloadRequestBody);
              } catch (L) {
                this._chunkError(L.message);
              }
              i && y.status === 0 && this._chunkError();
            }
          }),
          (this._chunkLoaded = function () {
            y.readyState === 4 &&
              (y.status < 200 || 400 <= y.status
                ? this._chunkError()
                : ((this._start += this._config.chunkSize
                    ? this._config.chunkSize
                    : y.responseText.length),
                  (this._finished =
                    !this._config.chunkSize ||
                    this._start >=
                      (function (T) {
                        var A = T.getResponseHeader("Content-Range");
                        return A === null
                          ? -1
                          : parseInt(A.substring(A.lastIndexOf("/") + 1));
                      })(y)),
                  this.parseChunk(y.responseText)));
          }),
          (this._chunkError = function (T) {
            var A = y.statusText || T;
            this._sendError(new Error(A));
          });
      }
      function h(v) {
        var y, T;
        (v = v || {}).chunkSize || (v.chunkSize = l.LocalChunkSize),
          u.call(this, v);
        var A = typeof FileReader < "u";
        (this.stream = function (I) {
          (this._input = I),
            (T = I.slice || I.webkitSlice || I.mozSlice),
            A
              ? (((y = new FileReader()).onload = E(this._chunkLoaded, this)),
                (y.onerror = E(this._chunkError, this)))
              : (y = new FileReaderSync()),
            this._nextChunk();
        }),
          (this._nextChunk = function () {
            this._finished ||
              (this._config.preview &&
                !(this._rowCount < this._config.preview)) ||
              this._readChunk();
          }),
          (this._readChunk = function () {
            var I = this._input;
            if (this._config.chunkSize) {
              var L = Math.min(
                this._start + this._config.chunkSize,
                this._input.size
              );
              I = T.call(I, this._start, L);
            }
            var j = y.readAsText(I, this._config.encoding);
            A || this._chunkLoaded({ target: { result: j } });
          }),
          (this._chunkLoaded = function (I) {
            (this._start += this._config.chunkSize),
              (this._finished =
                !this._config.chunkSize || this._start >= this._input.size),
              this.parseChunk(I.target.result);
          }),
          (this._chunkError = function () {
            this._sendError(y.error);
          });
      }
      function g(v) {
        var y;
        u.call(this, (v = v || {})),
          (this.stream = function (T) {
            return (y = T), this._nextChunk();
          }),
          (this._nextChunk = function () {
            if (!this._finished) {
              var T,
                A = this._config.chunkSize;
              return (
                A
                  ? ((T = y.substring(0, A)), (y = y.substring(A)))
                  : ((T = y), (y = "")),
                (this._finished = !y),
                this.parseChunk(T)
              );
            }
          });
      }
      function f(v) {
        u.call(this, (v = v || {}));
        var y = [],
          T = !0,
          A = !1;
        (this.pause = function () {
          u.prototype.pause.apply(this, arguments), this._input.pause();
        }),
          (this.resume = function () {
            u.prototype.resume.apply(this, arguments), this._input.resume();
          }),
          (this.stream = function (I) {
            (this._input = I),
              this._input.on("data", this._streamData),
              this._input.on("end", this._streamEnd),
              this._input.on("error", this._streamError);
          }),
          (this._checkIsFinished = function () {
            A && y.length === 1 && (this._finished = !0);
          }),
          (this._nextChunk = function () {
            this._checkIsFinished(),
              y.length ? this.parseChunk(y.shift()) : (T = !0);
          }),
          (this._streamData = E(function (I) {
            try {
              y.push(
                typeof I == "string" ? I : I.toString(this._config.encoding)
              ),
                T &&
                  ((T = !1),
                  this._checkIsFinished(),
                  this.parseChunk(y.shift()));
            } catch (L) {
              this._streamError(L);
            }
          }, this)),
          (this._streamError = E(function (I) {
            this._streamCleanUp(), this._sendError(I);
          }, this)),
          (this._streamEnd = E(function () {
            this._streamCleanUp(), (A = !0), this._streamData("");
          }, this)),
          (this._streamCleanUp = E(function () {
            this._input.removeListener("data", this._streamData),
              this._input.removeListener("end", this._streamEnd),
              this._input.removeListener("error", this._streamError);
          }, this));
      }
      function p(v) {
        var y,
          T,
          A,
          I = Math.pow(2, 53),
          L = -I,
          j = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/,
          k =
            /^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/,
          O = this,
          D = 0,
          Y = 0,
          se = !1,
          de = !1,
          fe = [],
          z = { data: [], errors: [], meta: {} };
        if (w(v.step)) {
          var ee = v.step;
          v.step = function (re) {
            if (((z = re), _e())) K();
            else {
              if ((K(), z.data.length === 0)) return;
              (D += re.data.length),
                v.preview && D > v.preview
                  ? T.abort()
                  : ((z.data = z.data[0]), ee(z, O));
            }
          };
        }
        function ue(re) {
          return v.skipEmptyLines === "greedy"
            ? re.join("").trim() === ""
            : re.length === 1 && re[0].length === 0;
        }
        function K() {
          return (
            z &&
              A &&
              (pe(
                "Delimiter",
                "UndetectableDelimiter",
                "Unable to auto-detect delimiting character; defaulted to '" +
                  l.DefaultDelimiter +
                  "'"
              ),
              (A = !1)),
            v.skipEmptyLines &&
              (z.data = z.data.filter(function (re) {
                return !ue(re);
              })),
            _e() &&
              (function () {
                if (!z) return;
                function re(ke, Me) {
                  w(v.transformHeader) && (ke = v.transformHeader(ke, Me)),
                    fe.push(ke);
                }
                if (Array.isArray(z.data[0])) {
                  for (var ge = 0; _e() && ge < z.data.length; ge++)
                    z.data[ge].forEach(re);
                  z.data.splice(0, 1);
                } else z.data.forEach(re);
              })(),
            (function () {
              if (!z || (!v.header && !v.dynamicTyping && !v.transform))
                return z;
              function re(ke, Me) {
                var P,
                  $ = v.header ? {} : [];
                for (P = 0; P < ke.length; P++) {
                  var H = P,
                    ae = ke[P];
                  v.header && (H = P >= fe.length ? "__parsed_extra" : fe[P]),
                    v.transform && (ae = v.transform(ae, H)),
                    (ae = ie(H, ae)),
                    H === "__parsed_extra"
                      ? (($[H] = $[H] || []), $[H].push(ae))
                      : ($[H] = ae);
                }
                return (
                  v.header &&
                    (P > fe.length
                      ? pe(
                          "FieldMismatch",
                          "TooManyFields",
                          "Too many fields: expected " +
                            fe.length +
                            " fields but parsed " +
                            P,
                          Y + Me
                        )
                      : P < fe.length &&
                        pe(
                          "FieldMismatch",
                          "TooFewFields",
                          "Too few fields: expected " +
                            fe.length +
                            " fields but parsed " +
                            P,
                          Y + Me
                        )),
                  $
                );
              }
              var ge = 1;
              return (
                !z.data.length || Array.isArray(z.data[0])
                  ? ((z.data = z.data.map(re)), (ge = z.data.length))
                  : (z.data = re(z.data, 0)),
                v.header && z.meta && (z.meta.fields = fe),
                (Y += ge),
                z
              );
            })()
          );
        }
        function _e() {
          return v.header && fe.length === 0;
        }
        function ie(re, ge) {
          return (
            (ke = re),
            v.dynamicTypingFunction &&
              v.dynamicTyping[ke] === void 0 &&
              (v.dynamicTyping[ke] = v.dynamicTypingFunction(ke)),
            (v.dynamicTyping[ke] || v.dynamicTyping) === !0
              ? ge === "true" ||
                ge === "TRUE" ||
                (ge !== "false" &&
                  ge !== "FALSE" &&
                  ((function (Me) {
                    if (j.test(Me)) {
                      var P = parseFloat(Me);
                      if (L < P && P < I) return !0;
                    }
                    return !1;
                  })(ge)
                    ? parseFloat(ge)
                    : k.test(ge)
                    ? new Date(ge)
                    : ge === ""
                    ? null
                    : ge))
              : ge
          );
          var ke;
        }
        function pe(re, ge, ke, Me) {
          var P = { type: re, code: ge, message: ke };
          Me !== void 0 && (P.row = Me), z.errors.push(P);
        }
        (this.parse = function (re, ge, ke) {
          var Me = v.quoteChar || '"';
          if (
            (v.newline ||
              (v.newline = (function (H, ae) {
                H = H.substring(0, 1048576);
                var le = new RegExp(b(ae) + "([^]*?)" + b(ae), "gm"),
                  he = (H = H.replace(le, "")).split("\r"),
                  Z = H.split(`
`),
                  W = 1 < Z.length && Z[0].length < he[0].length;
                if (he.length === 1 || W)
                  return `
`;
                for (var Q = 0, J = 0; J < he.length; J++)
                  he[J][0] ===
                    `
` && Q++;
                return Q >= he.length / 2
                  ? `\r
`
                  : "\r";
              })(re, Me)),
            (A = !1),
            v.delimiter)
          )
            w(v.delimiter) &&
              ((v.delimiter = v.delimiter(re)),
              (z.meta.delimiter = v.delimiter));
          else {
            var P = (function (H, ae, le, he, Z) {
              var W, Q, J, G;
              Z = Z || [",", "	", "|", ";", l.RECORD_SEP, l.UNIT_SEP];
              for (var X = 0; X < Z.length; X++) {
                var V = Z[X],
                  me = 0,
                  we = 0,
                  Pe = 0;
                J = void 0;
                for (
                  var ze = new m({
                      comments: he,
                      delimiter: V,
                      newline: ae,
                      preview: 10,
                    }).parse(H),
                    Ne = 0;
                  Ne < ze.data.length;
                  Ne++
                )
                  if (le && ue(ze.data[Ne])) Pe++;
                  else {
                    var Fe = ze.data[Ne].length;
                    (we += Fe),
                      J !== void 0
                        ? 0 < Fe && ((me += Math.abs(Fe - J)), (J = Fe))
                        : (J = Fe);
                  }
                0 < ze.data.length && (we /= ze.data.length - Pe),
                  (Q === void 0 || me <= Q) &&
                    (G === void 0 || G < we) &&
                    1.99 < we &&
                    ((Q = me), (W = V), (G = we));
              }
              return { successful: !!(v.delimiter = W), bestDelimiter: W };
            })(
              re,
              v.newline,
              v.skipEmptyLines,
              v.comments,
              v.delimitersToGuess
            );
            P.successful
              ? (v.delimiter = P.bestDelimiter)
              : ((A = !0), (v.delimiter = l.DefaultDelimiter)),
              (z.meta.delimiter = v.delimiter);
          }
          var $ = x(v);
          return (
            v.preview && v.header && $.preview++,
            (y = re),
            (T = new m($)),
            (z = T.parse(y, ge, ke)),
            K(),
            se ? { meta: { paused: !0 } } : z || { meta: { paused: !1 } }
          );
        }),
          (this.paused = function () {
            return se;
          }),
          (this.pause = function () {
            (se = !0),
              T.abort(),
              (y = w(v.chunk) ? "" : y.substring(T.getCharIndex()));
          }),
          (this.resume = function () {
            O.streamer._halted
              ? ((se = !1), O.streamer.parseChunk(y, !0))
              : setTimeout(O.resume, 3);
          }),
          (this.aborted = function () {
            return de;
          }),
          (this.abort = function () {
            (de = !0),
              T.abort(),
              (z.meta.aborted = !0),
              w(v.complete) && v.complete(z),
              (y = "");
          });
      }
      function b(v) {
        return v.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      }
      function m(v) {
        var y,
          T = (v = v || {}).delimiter,
          A = v.newline,
          I = v.comments,
          L = v.step,
          j = v.preview,
          k = v.fastMode,
          O = (y =
            v.quoteChar === void 0 || v.quoteChar === null ? '"' : v.quoteChar);
        if (
          (v.escapeChar !== void 0 && (O = v.escapeChar),
          (typeof T != "string" || -1 < l.BAD_DELIMITERS.indexOf(T)) &&
            (T = ","),
          I === T)
        )
          throw new Error("Comment character same as delimiter");
        I === !0
          ? (I = "#")
          : (typeof I != "string" || -1 < l.BAD_DELIMITERS.indexOf(I)) &&
            (I = !1),
          A !==
            `
` &&
            A !== "\r" &&
            A !==
              `\r
` &&
            (A = `
`);
        var D = 0,
          Y = !1;
        (this.parse = function (se, de, fe) {
          if (typeof se != "string") throw new Error("Input must be a string");
          var z = se.length,
            ee = T.length,
            ue = A.length,
            K = I.length,
            _e = w(L),
            ie = [],
            pe = [],
            re = [],
            ge = (D = 0);
          if (!se) return Qe();
          if (v.header && !de) {
            var ke = se.split(A)[0].split(T),
              Me = [],
              P = {},
              $ = !1;
            for (var H in ke) {
              var ae = ke[H];
              w(v.transformHeader) && (ae = v.transformHeader(ae, H));
              var le = ae,
                he = P[ae] || 0;
              for (
                0 < he && (($ = !0), (le = ae + "_" + he)), P[ae] = he + 1;
                Me.includes(le);

              )
                le = le + "_" + he;
              Me.push(le);
            }
            if ($) {
              var Z = se.split(A);
              (Z[0] = Me.join(T)), (se = Z.join(A));
            }
          }
          if (k || (k !== !1 && se.indexOf(y) === -1)) {
            for (var W = se.split(A), Q = 0; Q < W.length; Q++) {
              if (((re = W[Q]), (D += re.length), Q !== W.length - 1))
                D += A.length;
              else if (fe) return Qe();
              if (!I || re.substring(0, K) !== I) {
                if (_e) {
                  if (((ie = []), Pe(re.split(T)), It(), Y)) return Qe();
                } else Pe(re.split(T));
                if (j && j <= Q) return (ie = ie.slice(0, j)), Qe(!0);
              }
            }
            return Qe();
          }
          for (
            var J = se.indexOf(T, D),
              G = se.indexOf(A, D),
              X = new RegExp(b(O) + b(y), "g"),
              V = se.indexOf(y, D);
            ;

          )
            if (se[D] !== y)
              if (I && re.length === 0 && se.substring(D, D + K) === I) {
                if (G === -1) return Qe();
                (D = G + ue), (G = se.indexOf(A, D)), (J = se.indexOf(T, D));
              } else if (J !== -1 && (J < G || G === -1))
                re.push(se.substring(D, J)),
                  (D = J + ee),
                  (J = se.indexOf(T, D));
              else {
                if (G === -1) break;
                if ((re.push(se.substring(D, G)), Fe(G + ue), _e && (It(), Y)))
                  return Qe();
                if (j && ie.length >= j) return Qe(!0);
              }
            else
              for (V = D, D++; ; ) {
                if ((V = se.indexOf(y, V + 1)) === -1)
                  return (
                    fe ||
                      pe.push({
                        type: "Quotes",
                        code: "MissingQuotes",
                        message: "Quoted field unterminated",
                        row: ie.length,
                        index: D,
                      }),
                    Ne()
                  );
                if (V === z - 1) return Ne(se.substring(D, V).replace(X, y));
                if (y !== O || se[V + 1] !== O) {
                  if (y === O || V === 0 || se[V - 1] !== O) {
                    J !== -1 && J < V + 1 && (J = se.indexOf(T, V + 1)),
                      G !== -1 && G < V + 1 && (G = se.indexOf(A, V + 1));
                    var me = ze(G === -1 ? J : Math.min(J, G));
                    if (se.substr(V + 1 + me, ee) === T) {
                      re.push(se.substring(D, V).replace(X, y)),
                        se[(D = V + 1 + me + ee)] !== y &&
                          (V = se.indexOf(y, D)),
                        (J = se.indexOf(T, D)),
                        (G = se.indexOf(A, D));
                      break;
                    }
                    var we = ze(G);
                    if (se.substring(V + 1 + we, V + 1 + we + ue) === A) {
                      if (
                        (re.push(se.substring(D, V).replace(X, y)),
                        Fe(V + 1 + we + ue),
                        (J = se.indexOf(T, D)),
                        (V = se.indexOf(y, D)),
                        _e && (It(), Y))
                      )
                        return Qe();
                      if (j && ie.length >= j) return Qe(!0);
                      break;
                    }
                    pe.push({
                      type: "Quotes",
                      code: "InvalidQuotes",
                      message: "Trailing quote on quoted field is malformed",
                      row: ie.length,
                      index: D,
                    }),
                      V++;
                  }
                } else V++;
              }
          return Ne();
          function Pe(rt) {
            ie.push(rt), (ge = D);
          }
          function ze(rt) {
            var ln = 0;
            if (rt !== -1) {
              var ve = se.substring(V + 1, rt);
              ve && ve.trim() === "" && (ln = ve.length);
            }
            return ln;
          }
          function Ne(rt) {
            return (
              fe ||
                (rt === void 0 && (rt = se.substring(D)),
                re.push(rt),
                (D = z),
                Pe(re),
                _e && It()),
              Qe()
            );
          }
          function Fe(rt) {
            (D = rt), Pe(re), (re = []), (G = se.indexOf(A, D));
          }
          function Qe(rt) {
            return {
              data: ie,
              errors: pe,
              meta: {
                delimiter: T,
                linebreak: A,
                aborted: Y,
                truncated: !!rt,
                cursor: ge + (de || 0),
              },
            };
          }
          function It() {
            L(Qe()), (ie = []), (pe = []);
          }
        }),
          (this.abort = function () {
            Y = !0;
          }),
          (this.getCharIndex = function () {
            return D;
          });
      }
      function _(v) {
        var y = v.data,
          T = s[y.workerId],
          A = !1;
        if (y.error) T.userError(y.error, y.file);
        else if (y.results && y.results.data) {
          var I = {
            abort: function () {
              (A = !0),
                R(y.workerId, { data: [], errors: [], meta: { aborted: !0 } });
            },
            pause: S,
            resume: S,
          };
          if (w(T.userStep)) {
            for (
              var L = 0;
              L < y.results.data.length &&
              (T.userStep(
                {
                  data: y.results.data[L],
                  errors: y.results.errors,
                  meta: y.results.meta,
                },
                I
              ),
              !A);
              L++
            );
            delete y.results;
          } else
            w(T.userChunk) &&
              (T.userChunk(y.results, I, y.file), delete y.results);
        }
        y.finished && !A && R(y.workerId, y.results);
      }
      function R(v, y) {
        var T = s[v];
        w(T.userComplete) && T.userComplete(y), T.terminate(), delete s[v];
      }
      function S() {
        throw new Error("Not implemented.");
      }
      function x(v) {
        if (typeof v != "object" || v === null) return v;
        var y = Array.isArray(v) ? [] : {};
        for (var T in v) y[T] = x(v[T]);
        return y;
      }
      function E(v, y) {
        return function () {
          v.apply(y, arguments);
        };
      }
      function w(v) {
        return typeof v == "function";
      }
      return (
        o &&
          (r.onmessage = function (v) {
            var y = v.data;
            if (
              (l.WORKER_ID === void 0 && y && (l.WORKER_ID = y.workerId),
              typeof y.input == "string")
            )
              r.postMessage({
                workerId: l.WORKER_ID,
                results: l.parse(y.input, y.config),
                finished: !0,
              });
            else if (
              (r.File && y.input instanceof File) ||
              y.input instanceof Object
            ) {
              var T = l.parse(y.input, y.config);
              T &&
                r.postMessage({
                  workerId: l.WORKER_ID,
                  results: T,
                  finished: !0,
                });
            }
          }),
        ((d.prototype = Object.create(u.prototype)).constructor = d),
        ((h.prototype = Object.create(u.prototype)).constructor = h),
        ((g.prototype = Object.create(g.prototype)).constructor = g),
        ((f.prototype = Object.create(u.prototype)).constructor = f),
        l
      );
    });
  })(E_);
  var VN = E_.exports;
  const GN = Bf(VN),
    XN = {
      __name: "Stats",
      setup(t) {
        const e = Zs(),
          n = qn(),
          { isPro: r, isUltimate: i } = _r(n),
          o = U({});
        Vt(async () => {
          let d = n.stats;
          if (d.bannedWords) {
            const h = Object.fromEntries(
              Object.entries(d.bannedWords).sort(([, g], [, f]) => f - g)
            );
            d.bannedWords = h;
          }
          if (d.preferredWords) {
            const h = Object.fromEntries(
              Object.entries(d.preferredWords).sort(([, g], [, f]) => f - g)
            );
            d.preferredWords = h;
          }
          o.value = d;
        });
        const s = function () {
            e.push({ name: "settings" });
          },
          a = function () {
            const d = [];
            n.log.forEach(function (f) {
              f.datetime || (f.datetime = null), d.push(Object.assign({}, f));
            });
            const h = GN.unparse(d),
              g = new File([h], "auto-swiper-log.csv", {
                type: "text/csv;charset=utf-8",
              });
            wf.saveAs(g);
          },
          l = function () {
            const d = [];
            n.log.forEach(function (g) {
              g.datetime || (g.datetime = null), d.push(Object.assign({}, g));
            });
            const h = new File([JSON.stringify(d)], "auto-swiper-log.json", {
              type: "application/json;charset=utf-8",
            });
            wf.saveAs(h);
          },
          c = function () {
            (n.stats = {
              swipes_left: 0,
              swipes_right: 0,
              bannedWords: {},
              preferredWords: {},
            }),
              e.push({ name: "settings" });
          },
          u = function () {
            (n.log = []), e.push({ name: "settings" });
          };
        return (d, h) => {
          const g = zg,
            f = Jo,
            p = Qo,
            b = hi,
            m = Xn,
            _ = di;
          return (
            Ie(),
            He(
              _,
              { "label-placement": "top", column: 1 },
              {
                default: B(() => [
                  F(
                    b,
                    { label: d.$i18n("SWIPES") },
                    {
                      default: B(() => [
                        F(p, null, {
                          default: B(() => [
                            F(f, null, {
                              default: B(() => [
                                F(
                                  g,
                                  { bordered: !1, type: "warning" },
                                  {
                                    default: B(() => [
                                      Se(be(d.$i18n("LEFT")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                                F(
                                  g,
                                  { bordered: !1 },
                                  {
                                    default: B(() => [
                                      Se(be(o.value.swipes_left), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            }),
                            F(f, null, {
                              default: B(() => [
                                F(
                                  g,
                                  { bordered: !1, type: "success" },
                                  {
                                    default: B(() => [
                                      Se(be(d.$i18n("RIGHT")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                                F(
                                  g,
                                  { bordered: !1 },
                                  {
                                    default: B(() => [
                                      Se(be(o.value.swipes_right), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            }),
                            F(f, null, {
                              default: B(() => [
                                F(
                                  g,
                                  { bordered: !1, type: "info" },
                                  {
                                    default: B(() => [
                                      Se(be(d.$i18n("TOTAL")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                                F(
                                  g,
                                  { bordered: !1 },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(
                                          o.value.swipes_left +
                                            o.value.swipes_right
                                        ),
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            }),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    },
                    8,
                    ["label"]
                  ),
                  F(
                    b,
                    { label: d.$i18n("BANNED_WORDS") },
                    {
                      default: B(() => [
                        F(p, null, {
                          default: B(() => [
                            (Ie(!0),
                            nn(
                              pt,
                              null,
                              Zp(
                                o.value.bannedWords,
                                (R, S) => (
                                  Ie(),
                                  He(
                                    f,
                                    { key: S },
                                    {
                                      default: B(() => [
                                        F(
                                          g,
                                          { bordered: !1, type: "warning" },
                                          {
                                            default: B(() => [Se(be(S), 1)]),
                                            _: 2,
                                          },
                                          1024
                                        ),
                                        F(
                                          g,
                                          { bordered: !1 },
                                          {
                                            default: B(() => [Se(be(R), 1)]),
                                            _: 2,
                                          },
                                          1024
                                        ),
                                      ]),
                                      _: 2,
                                    },
                                    1024
                                  )
                                )
                              ),
                              128
                            )),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    },
                    8,
                    ["label"]
                  ),
                  F(
                    b,
                    { label: d.$i18n("PREFERRED_WORDS") },
                    {
                      default: B(() => [
                        F(p, null, {
                          default: B(() => [
                            (Ie(!0),
                            nn(
                              pt,
                              null,
                              Zp(
                                o.value.preferredWords,
                                (R, S) => (
                                  Ie(),
                                  He(
                                    f,
                                    { key: S },
                                    {
                                      default: B(() => [
                                        F(
                                          g,
                                          { bordered: !1, type: "success" },
                                          {
                                            default: B(() => [Se(be(S), 1)]),
                                            _: 2,
                                          },
                                          1024
                                        ),
                                        F(
                                          g,
                                          { bordered: !1 },
                                          {
                                            default: B(() => [Se(be(R), 1)]),
                                            _: 2,
                                          },
                                          1024
                                        ),
                                      ]),
                                      _: 2,
                                    },
                                    1024
                                  )
                                )
                              ),
                              128
                            )),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    },
                    8,
                    ["label"]
                  ),
                  F(b, null, {
                    default: B(() => [
                      F(p, null, {
                        default: B(() => [
                          F(
                            m,
                            { size: "small", onClick: s },
                            {
                              default: B(() => [Se(be(d.$i18n("BACK")), 1)]),
                              _: 1,
                            }
                          ),
                          N(r) || N(i)
                            ? (Ie(),
                              He(
                                m,
                                {
                                  key: 0,
                                  type: "primary",
                                  size: "small",
                                  onClick: a,
                                },
                                {
                                  default: B(() => [
                                    Se(be(d.$i18n("DOWNLOAD_LOG_CSV")), 1),
                                  ]),
                                  _: 1,
                                }
                              ))
                            : et("", !0),
                          N(r) || N(i)
                            ? (Ie(),
                              He(
                                m,
                                {
                                  key: 1,
                                  type: "primary",
                                  size: "small",
                                  onClick: l,
                                },
                                {
                                  default: B(() => [
                                    Se(be(d.$i18n("DOWNLOAD_LOG_JSON")), 1),
                                  ]),
                                  _: 1,
                                }
                              ))
                            : et("", !0),
                          F(
                            m,
                            { type: "error", size: "small", onClick: c },
                            {
                              default: B(() => [
                                Se(be(d.$i18n("RESET_STATS")), 1),
                              ]),
                              _: 1,
                            }
                          ),
                          F(
                            m,
                            { type: "error", size: "small", onClick: u },
                            {
                              default: B(() => [
                                Se(be(d.$i18n("RESET_LOG")), 1),
                              ]),
                              _: 1,
                            }
                          ),
                        ]),
                        _: 1,
                      }),
                    ]),
                    _: 1,
                  }),
                ]),
                _: 1,
              }
            )
          );
        };
      },
    },
    KN = { key: 0 },
    YN = { key: 0 },
    qN = { key: 1 },
    ZN = { key: 2 },
    JN = { key: 3 },
    QN = { key: 0 },
    eH = { key: 1 },
    tH = { key: 0 },
    nH = { key: 1 },
    rH = { key: 0 },
    iH = {
      __name: "Subscription",
      setup(t) {
        const e = nd(),
          n = Zs(),
          r = Ve("axios"),
          i = qn(),
          o = U(!1),
          {
            deviceRegistered: s,
            loginEmail: a,
            loginPassword: l,
            loginToken: c,
            isFree: u,
            isBasic: d,
            isPro: h,
            isUltimate: g,
          } = _r(i),
          f = ce(() =>
            /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
          ),
          p = function () {
            n.push({ name: "settings" });
          },
          b = () => {
            window.open("https://www.auto-swiper.ch/#pricing");
          },
          m = () => {
            window.open("https://www.auto-swiper.ch/#pricing");
          },
          _ = () => {
            window.open("https://payment.auto-swiper.ch");
          },
          R = async () => {
            (o.value = !0), i.loginToken.length < 20 && (await od(i, r, e));
            const x = {
              method: "GET",
              url: tB,
              params: { uuid: i.uuid },
              headers: { Authorization: "Bearer " + c.value },
            };
            r.request(x)
              .then(function (E) {
                let w = E.data;
                switch (
                  (Lt(w),
                  (o.value = !1),
                  (i.userId = w.user_id),
                  (i.deviceRegistered = w.device_active),
                  (i.subscriptionActive = w.subscription_active),
                  (i.subscriptionRenewDate = w.subscription_renew_date),
                  (i.subscriptionCanceled = w.subscription_canceled),
                  (i.isFree = !1),
                  (i.isBasic = !1),
                  (i.isPro = !1),
                  (i.isUltimate = !1),
                  w.subscription_plan_id)
                ) {
                  case 1:
                    i.isBasic = !0;
                    break;
                  case 2:
                    i.isPro = !0;
                    break;
                  case 3:
                    i.isUltimate = !0;
                    break;
                  default:
                    i.isFree = !0;
                    break;
                }
                t_(r, i, e), i.subscriptionActive || vf(i);
              })
              .catch(function (E) {
                Lt(E),
                  (o.value = !1),
                  e.warning(wt.i18n.getMessage("ERROR_LOGIN_REQUEST"));
              });
          },
          S = () => {
            (i.deviceRegistered = !1),
              (i.subscriptionActive = !1),
              (i.subscriptionRenewDate = null),
              (i.isFree = !0),
              (i.isBasic = !1),
              (i.isPro = !1),
              (i.isUltimate = !1),
              (i.loginEmail = ""),
              (i.loginPassword = ""),
              (i.loginToken = "");
          };
        return (x, E) => {
          const w = qu,
            v = Qo,
            y = Xn,
            T = Hg,
            A = hi,
            I = di;
          return (
            Ie(),
            He(
              I,
              { "label-placement": "top", column: 1 },
              {
                default: B(() => [
                  F(A, null, {
                    default: B(() => [
                      N(s) === !1
                        ? (Ie(),
                          He(
                            T,
                            {
                              key: 0,
                              title: x.$i18n("LOGIN"),
                              segmented: { content: !0, footer: "soft" },
                            },
                            {
                              action: B(() => [
                                F(v, null, {
                                  default: B(() => [
                                    F(
                                      y,
                                      {
                                        loading: o.value,
                                        type: "primary",
                                        size: "small",
                                        disabled:
                                          N(a).length < 5 &&
                                          N(l).length < 3 &&
                                          N(c).length < 20,
                                        onClick: R,
                                      },
                                      {
                                        default: B(() => [
                                          Se(be(x.$i18n("LOGIN")), 1),
                                        ]),
                                        _: 1,
                                      },
                                      8,
                                      ["loading", "disabled"]
                                    ),
                                    f.value
                                      ? et("", !0)
                                      : (Ie(),
                                        He(
                                          y,
                                          {
                                            key: 0,
                                            type: "error",
                                            size: "small",
                                            onClick: m,
                                          },
                                          {
                                            default: B(() => [
                                              Se(be(x.$i18n("REGISTER")), 1),
                                            ]),
                                            _: 1,
                                          }
                                        )),
                                    f.value
                                      ? et("", !0)
                                      : (Ie(),
                                        He(
                                          y,
                                          {
                                            key: 1,
                                            type: "info",
                                            size: "small",
                                            onClick: b,
                                          },
                                          {
                                            default: B(() => [
                                              Se(be(x.$i18n("PRICING")), 1),
                                            ]),
                                            _: 1,
                                          }
                                        )),
                                  ]),
                                  _: 1,
                                }),
                              ]),
                              default: B(() => [
                                F(
                                  v,
                                  { vertical: "" },
                                  {
                                    default: B(() => [
                                      F(
                                        w,
                                        {
                                          value: N(a),
                                          "onUpdate:value":
                                            E[0] ||
                                            (E[0] = (L) =>
                                              xe(a) ? (a.value = L) : null),
                                          type: "text",
                                          placeholder: "E-Mail",
                                        },
                                        null,
                                        8,
                                        ["value"]
                                      ),
                                      F(
                                        w,
                                        {
                                          value: N(l),
                                          "onUpdate:value":
                                            E[1] ||
                                            (E[1] = (L) =>
                                              xe(l) ? (l.value = L) : null),
                                          type: "password",
                                          placeholder: "Password",
                                        },
                                        null,
                                        8,
                                        ["value"]
                                      ),
                                      f.value
                                        ? et("", !0)
                                        : (Ie(), nn("hr", KN)),
                                      f.value
                                        ? et("", !0)
                                        : (Ie(),
                                          He(
                                            w,
                                            {
                                              key: 1,
                                              value: N(c),
                                              "onUpdate:value":
                                                E[2] ||
                                                (E[2] = (L) =>
                                                  xe(c) ? (c.value = L) : null),
                                              type: "text",
                                              placeholder: "Login-Token",
                                            },
                                            null,
                                            8,
                                            ["value"]
                                          )),
                                    ]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            },
                            8,
                            ["title"]
                          ))
                        : (Ie(),
                          He(
                            T,
                            {
                              key: 1,
                              title: x.$i18n("SUBSCRIPTION"),
                              segmented: { content: !0, footer: "soft" },
                            },
                            {
                              action: B(() => [
                                F(v, null, {
                                  default: B(() => [
                                    F(
                                      y,
                                      {
                                        type: "info",
                                        size: "small",
                                        onClick: _,
                                      },
                                      {
                                        default: B(() => [
                                          Se(
                                            be(x.$i18n("BILLING_DASHBOARD")),
                                            1
                                          ),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                    F(
                                      y,
                                      {
                                        type: "error",
                                        size: "small",
                                        onClick: S,
                                      },
                                      {
                                        default: B(() => [
                                          Se(be(x.$i18n("LOGOUT")), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                }),
                              ]),
                              default: B(() => [
                                F(
                                  v,
                                  { vertical: "" },
                                  {
                                    default: B(() => [
                                      At("span", null, [
                                        Se(" UUID:  "),
                                        At("span", null, be(N(i).uuid), 1),
                                      ]),
                                      At("span", null, [
                                        Se(
                                          be(x.$i18n("SUBSCRIPTION_PLAN")) +
                                            ":  ",
                                          1
                                        ),
                                        N(i).isFree
                                          ? (Ie(), nn("span", YN, "Free"))
                                          : et("", !0),
                                        N(i).isBasic
                                          ? (Ie(), nn("span", qN, "Basic"))
                                          : et("", !0),
                                        N(i).isPro
                                          ? (Ie(), nn("span", ZN, "Pro"))
                                          : et("", !0),
                                        N(i).isUltimate
                                          ? (Ie(), nn("span", JN, "Ultimate"))
                                          : et("", !0),
                                      ]),
                                      At("span", null, [
                                        Se(
                                          be(x.$i18n("SUBSCRIPTION_STATUS")) +
                                            ":  ",
                                          1
                                        ),
                                        N(i).subscriptionActive
                                          ? (Ie(),
                                            nn(
                                              "span",
                                              QN,
                                              be(x.$i18n("ACTIVE")),
                                              1
                                            ))
                                          : (Ie(),
                                            nn(
                                              "span",
                                              eH,
                                              be(x.$i18n("NOT_ACTIVE")),
                                              1
                                            )),
                                      ]),
                                      At("span", null, [
                                        Se(
                                          be(x.$i18n("SUBSCRIPTION_CANCELED")) +
                                            ":  ",
                                          1
                                        ),
                                        N(i).subscriptionCanceled
                                          ? (Ie(),
                                            nn(
                                              "span",
                                              tH,
                                              be(x.$i18n("YES")),
                                              1
                                            ))
                                          : (Ie(),
                                            nn(
                                              "span",
                                              nH,
                                              be(x.$i18n("NO")),
                                              1
                                            )),
                                      ]),
                                      N(i).subscriptionCanceled
                                        ? et("", !0)
                                        : (Ie(),
                                          nn("span", rH, [
                                            Se(
                                              be(
                                                x.$i18n(
                                                  "SUBSCRIPTION_RENEWDATE"
                                                )
                                              ) + ":  ",
                                              1
                                            ),
                                            At(
                                              "span",
                                              null,
                                              be(N(i).subscriptionRenewDate),
                                              1
                                            ),
                                          ])),
                                    ]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            },
                            8,
                            ["title"]
                          )),
                    ]),
                    _: 1,
                  }),
                  F(A, null, {
                    default: B(() => [
                      F(
                        y,
                        { size: "small", onClick: p },
                        { default: B(() => [Se(be(x.$i18n("BACK")), 1)]), _: 1 }
                      ),
                    ]),
                    _: 1,
                  }),
                ]),
                _: 1,
              }
            )
          );
        };
      },
    },
    oH = {
      __name: "Rate",
      setup(t) {
        const e = Zs(),
          n = qn(),
          r = function () {
            const o = navigator.userAgent;
            o.match(/edg/i)
              ? window.open(
                  "https://microsoftedge.microsoft.com/addons/detail/auto-swiper/lnenhbhcpcjfnfijcbnaocgmgcjimdgi"
                )
              : o.match(/chrome|chromium|crios/i)
              ? window.open(
                  "https://chrome.google.com/webstore/detail/auto-swiper/knhjggkkeoamjgogdmmefekofllomhea"
                )
              : o.match(/firefox|fxios/i)
              ? window.open(
                  "https://addons.mozilla.org/en-US/firefox/addon/auto-swiper/"
                )
              : o.match(/safari/i)
              ? (/iPad|iPhone|iPod/.test(navigator.platform) ||
                  (navigator.platform === "MacIntel" &&
                    navigator.maxTouchPoints > 1),
                window.open(
                  "https://apps.apple.com/ch/app/auto-swiper/id1643180136"
                ))
              : o.match(/opr\//i),
              (n.askForRating = !1),
              e.push({ name: "settings" });
          },
          i = function () {
            (n.swipesTillAskForRating = 16), e.push({ name: "settings" });
          };
        return (o, s) => {
          const a = Xn,
            l = Qo;
          return (
            Ie(),
            nn(
              pt,
              null,
              [
                At("div", null, [
                  At("h1", null, be(o.$i18n("RATE")), 1),
                  At("h2", null, be(o.$i18n("RATE_INFORMATION")), 1),
                ]),
                F(l, null, {
                  default: B(() => [
                    F(
                      a,
                      { onClick: r, type: "primary" },
                      {
                        default: B(() => [Se(be(o.$i18n("RATE_NOW")), 1)]),
                        _: 1,
                      }
                    ),
                    F(
                      a,
                      { onClick: i },
                      {
                        default: B(() => [Se(be(o.$i18n("RATE_NOT_NOW")), 1)]),
                        _: 1,
                      }
                    ),
                  ]),
                  _: 1,
                }),
              ],
              64
            )
          );
        };
      },
    },
    sH = {
      __name: "Progress",
      setup(t) {
        const e = qn(),
          {
            isFree: n,
            isBasic: r,
            enableMaxSwipesFilter: i,
            maxSwipes: o,
            swipeCounts: s,
            lastSwipeProfile: a,
            maxSwipesRandomNumber: l,
          } = _r(e),
          c = U(!1),
          u = ce(() =>
            s.value.left ? Math.round((s.value.left / s.value.total) * 100) : 0
          ),
          d = function () {
            Lt("recived: auto-swiper-message-contentjs-stop"),
              wt.tabs.query({ active: !0, currentWindow: !0 }).then((h) => {
                (c.value = !0),
                  wt.tabs.sendMessage(h[0].id, {
                    action: "auto-swiper-message-contentjs-stop",
                  });
              });
          };
        return (h, g) => {
          const f = zg,
            p = Jo,
            b = Qo,
            m = hi,
            _ = Xn,
            R = di;
          return (
            Ie(),
            He(
              R,
              { "label-placement": "top", column: 1 },
              {
                default: B(() => [
                  F(
                    m,
                    { label: h.$i18n("SWIPES") },
                    {
                      default: B(() => [
                        F(b, null, {
                          default: B(() => [
                            F(p, null, {
                              default: B(() => [
                                F(
                                  f,
                                  { bordered: !1, type: "warning" },
                                  {
                                    default: B(() => [
                                      Se(be(h.$i18n("LEFT")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                                F(
                                  f,
                                  { bordered: !1 },
                                  {
                                    default: B(() => [
                                      Se(
                                        be(N(s).left) +
                                          " / " +
                                          be(u.value) +
                                          "% ",
                                        1
                                      ),
                                    ]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            }),
                            F(p, null, {
                              default: B(() => [
                                F(
                                  f,
                                  { bordered: !1, type: "success" },
                                  {
                                    default: B(() => [
                                      Se(be(h.$i18n("RIGHT")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                                F(
                                  f,
                                  { bordered: !1 },
                                  {
                                    default: B(() => [Se(be(N(s).right), 1)]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            }),
                            F(p, null, {
                              default: B(() => [
                                F(
                                  f,
                                  { bordered: !1, type: "info" },
                                  {
                                    default: B(() => [
                                      Se(be(h.$i18n("TOTAL")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                                F(
                                  f,
                                  { bordered: !1 },
                                  {
                                    default: B(() => [Se(be(N(s).total), 1)]),
                                    _: 1,
                                  }
                                ),
                                N(i)
                                  ? (Ie(),
                                    He(
                                      f,
                                      { key: 0, bordered: !1, type: "error" },
                                      {
                                        default: B(() => [Se(be(N(l)), 1)]),
                                        _: 1,
                                      }
                                    ))
                                  : N(n)
                                  ? (Ie(),
                                    He(
                                      f,
                                      { key: 1, bordered: !1, type: "error" },
                                      { default: B(() => [Se(" 5000 ")]), _: 1 }
                                    ))
                                  : N(r)
                                  ? (Ie(),
                                    He(
                                      f,
                                      { key: 2, bordered: !1, type: "error" },
                                      { default: B(() => [Se(" 1000 ")]), _: 1 }
                                    ))
                                  : et("", !0),
                              ]),
                              _: 1,
                            }),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    },
                    8,
                    ["label"]
                  ),
                  N(a).reason
                    ? (Ie(),
                      He(
                        m,
                        { key: 0, label: h.$i18n("LAST_LEFT_SWIPE") },
                        {
                          default: B(() => [
                            F(b, null, {
                              default: B(() => [
                                F(p, null, {
                                  default: B(() => [
                                    F(
                                      f,
                                      { bordered: !1, type: "info" },
                                      {
                                        default: B(() => [
                                          Se(be(h.$i18n("NAME")), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                    F(
                                      f,
                                      { bordered: !1 },
                                      {
                                        default: B(() => [
                                          Se(be(N(a).name), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                }),
                                F(p, null, {
                                  default: B(() => [
                                    F(
                                      f,
                                      { bordered: !1, type: "info" },
                                      {
                                        default: B(() => [
                                          Se(be(h.$i18n("AGE")), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                    F(
                                      f,
                                      { bordered: !1 },
                                      {
                                        default: B(() => [Se(be(N(a).age), 1)]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                }),
                                N(a).height
                                  ? (Ie(),
                                    He(
                                      p,
                                      { key: 0 },
                                      {
                                        default: B(() => [
                                          F(
                                            f,
                                            { bordered: !1, type: "info" },
                                            {
                                              default: B(() => [
                                                Se(be(h.$i18n("HEIGHT")), 1),
                                              ]),
                                              _: 1,
                                            }
                                          ),
                                          F(
                                            f,
                                            { bordered: !1 },
                                            {
                                              default: B(() => [
                                                Se(be(N(a).height) + "cm ", 1),
                                              ]),
                                              _: 1,
                                            }
                                          ),
                                        ]),
                                        _: 1,
                                      }
                                    ))
                                  : et("", !0),
                                F(p, null, {
                                  default: B(() => [
                                    F(
                                      f,
                                      { bordered: !1, type: "info" },
                                      {
                                        default: B(() => [
                                          Se(be(h.$i18n("DISTANCE")), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                    F(
                                      f,
                                      { bordered: !1 },
                                      {
                                        default: B(() => [
                                          Se(be(N(a).distance), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                }),
                              ]),
                              _: 1,
                            }),
                          ]),
                          _: 1,
                        },
                        8,
                        ["label"]
                      ))
                    : et("", !0),
                  N(a).reason
                    ? (Ie(),
                      He(
                        m,
                        { key: 1 },
                        {
                          default: B(() => [
                            F(b, null, {
                              default: B(() => [
                                F(p, null, {
                                  default: B(() => [
                                    F(
                                      f,
                                      { bordered: !1, type: "warning" },
                                      {
                                        default: B(() => [
                                          Se(be(h.$i18n("REASON")), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                    F(
                                      f,
                                      { bordered: !1 },
                                      {
                                        default: B(() => [
                                          Se(be(N(a).reason), 1),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                }),
                              ]),
                              _: 1,
                            }),
                          ]),
                          _: 1,
                        }
                      ))
                    : et("", !0),
                  F(m, null, {
                    default: B(() => [
                      F(
                        _,
                        {
                          type: "error",
                          size: "small",
                          onClick: d,
                          loading: c.value,
                        },
                        {
                          default: B(() => [Se(be(h.$i18n("STOP")), 1)]),
                          _: 1,
                        },
                        8,
                        ["loading"]
                      ),
                    ]),
                    _: 1,
                  }),
                ]),
                _: 1,
              }
            )
          );
        };
      },
    };
  class fi {
    constructor(e) {
      this.propagationStopped,
        this.defaultPrevented,
        (this.type = e),
        (this.target = null);
    }
    preventDefault() {
      this.defaultPrevented = !0;
    }
    stopPropagation() {
      this.propagationStopped = !0;
    }
  }
  const js = { PROPERTYCHANGE: "propertychange" };
  class ep {
    constructor() {
      this.disposed = !1;
    }
    dispose() {
      this.disposed || ((this.disposed = !0), this.disposeInternal());
    }
    disposeInternal() {}
  }
  function aH(t, e, n) {
    let r, i;
    n = n || Xi;
    let o = 0,
      s = t.length,
      a = !1;
    for (; o < s; )
      (r = o + ((s - o) >> 1)),
        (i = +n(t[r], e)),
        i < 0 ? (o = r + 1) : ((s = r), (a = !i));
    return a ? o : ~o;
  }
  function Xi(t, e) {
    return t > e ? 1 : t < e ? -1 : 0;
  }
  function tp(t, e, n) {
    if (t[0] <= e) return 0;
    const r = t.length;
    if (e <= t[r - 1]) return r - 1;
    if (typeof n == "function") {
      for (let i = 1; i < r; ++i) {
        const o = t[i];
        if (o === e) return i;
        if (o < e) return n(e, t[i - 1], o) > 0 ? i - 1 : i;
      }
      return r - 1;
    }
    if (n > 0) {
      for (let i = 1; i < r; ++i) if (t[i] < e) return i - 1;
      return r - 1;
    }
    if (n < 0) {
      for (let i = 1; i < r; ++i) if (t[i] <= e) return i;
      return r - 1;
    }
    for (let i = 1; i < r; ++i) {
      if (t[i] == e) return i;
      if (t[i] < e) return t[i - 1] - e < e - t[i] ? i - 1 : i;
    }
    return r - 1;
  }
  function lH(t, e, n) {
    for (; e < n; ) {
      const r = t[e];
      (t[e] = t[n]), (t[n] = r), ++e, --n;
    }
  }
  function np(t, e) {
    const n = Array.isArray(e) ? e : [e],
      r = n.length;
    for (let i = 0; i < r; i++) t[t.length] = n[i];
  }
  function no(t, e) {
    const n = t.length;
    if (n !== e.length) return !1;
    for (let r = 0; r < n; r++) if (t[r] !== e[r]) return !1;
    return !0;
  }
  function cH(t, e, n) {
    const r = e || Xi;
    return t.every(function (i, o) {
      if (o === 0) return !0;
      const s = r(t[o - 1], i);
      return !(s > 0 || (n && s === 0));
    });
  }
  function dl() {
    return !0;
  }
  function dd() {
    return !1;
  }
  function Us() {}
  function R_(t) {
    let e = !1,
      n,
      r,
      i;
    return function () {
      const o = Array.prototype.slice.call(arguments);
      return (
        (!e || this !== i || !no(o, r)) &&
          ((e = !0), (i = this), (r = o), (n = t.apply(this, arguments))),
        n
      );
    };
  }
  function Hl(t) {
    for (const e in t) delete t[e];
  }
  function Vs(t) {
    let e;
    for (e in t) return !1;
    return !e;
  }
  class hd extends ep {
    constructor(e) {
      super(),
        (this.eventTarget_ = e),
        (this.pendingRemovals_ = null),
        (this.dispatching_ = null),
        (this.listeners_ = null);
    }
    addEventListener(e, n) {
      if (!e || !n) return;
      const r = this.listeners_ || (this.listeners_ = {}),
        i = r[e] || (r[e] = []);
      i.includes(n) || i.push(n);
    }
    dispatchEvent(e) {
      const n = typeof e == "string",
        r = n ? e : e.type,
        i = this.listeners_ && this.listeners_[r];
      if (!i) return;
      const o = n ? new fi(e) : e;
      o.target || (o.target = this.eventTarget_ || this);
      const s = this.dispatching_ || (this.dispatching_ = {}),
        a = this.pendingRemovals_ || (this.pendingRemovals_ = {});
      r in s || ((s[r] = 0), (a[r] = 0)), ++s[r];
      let l;
      for (let c = 0, u = i.length; c < u; ++c)
        if (
          ("handleEvent" in i[c]
            ? (l = i[c].handleEvent(o))
            : (l = i[c].call(this, o)),
          l === !1 || o.propagationStopped)
        ) {
          l = !1;
          break;
        }
      if (--s[r] === 0) {
        let c = a[r];
        for (delete a[r]; c--; ) this.removeEventListener(r, Us);
        delete s[r];
      }
      return l;
    }
    disposeInternal() {
      this.listeners_ && Hl(this.listeners_);
    }
    getListeners(e) {
      return (this.listeners_ && this.listeners_[e]) || void 0;
    }
    hasListener(e) {
      return this.listeners_
        ? e
          ? e in this.listeners_
          : Object.keys(this.listeners_).length > 0
        : !1;
    }
    removeEventListener(e, n) {
      if (!this.listeners_) return;
      const r = this.listeners_[e];
      if (!r) return;
      const i = r.indexOf(n);
      i !== -1 &&
        (this.pendingRemovals_ && e in this.pendingRemovals_
          ? ((r[i] = Us), ++this.pendingRemovals_[e])
          : (r.splice(i, 1), r.length === 0 && delete this.listeners_[e]));
    }
  }
  const it = {
    CHANGE: "change",
    ERROR: "error",
    BLUR: "blur",
    CLEAR: "clear",
    CONTEXTMENU: "contextmenu",
    CLICK: "click",
    DBLCLICK: "dblclick",
    DRAGENTER: "dragenter",
    DRAGOVER: "dragover",
    DROP: "drop",
    FOCUS: "focus",
    KEYDOWN: "keydown",
    KEYPRESS: "keypress",
    LOAD: "load",
    RESIZE: "resize",
    TOUCHMOVE: "touchmove",
    WHEEL: "wheel",
  };
  function ft(t, e, n, r, i) {
    if ((r && r !== t && (n = n.bind(r)), i)) {
      const s = n;
      n = function () {
        t.removeEventListener(e, n), s.apply(this, arguments);
      };
    }
    const o = { target: t, type: e, listener: n };
    return t.addEventListener(e, n), o;
  }
  function uu(t, e, n, r) {
    return ft(t, e, n, r, !0);
  }
  function Wt(t) {
    t && t.target && (t.target.removeEventListener(t.type, t.listener), Hl(t));
  }
  class Wl extends hd {
    constructor() {
      super(),
        (this.on = this.onInternal),
        (this.once = this.onceInternal),
        (this.un = this.unInternal),
        (this.revision_ = 0);
    }
    changed() {
      ++this.revision_, this.dispatchEvent(it.CHANGE);
    }
    getRevision() {
      return this.revision_;
    }
    onInternal(e, n) {
      if (Array.isArray(e)) {
        const r = e.length,
          i = new Array(r);
        for (let o = 0; o < r; ++o) i[o] = ft(this, e[o], n);
        return i;
      }
      return ft(this, e, n);
    }
    onceInternal(e, n) {
      let r;
      if (Array.isArray(e)) {
        const i = e.length;
        r = new Array(i);
        for (let o = 0; o < i; ++o) r[o] = uu(this, e[o], n);
      } else r = uu(this, e, n);
      return (n.ol_key = r), r;
    }
    unInternal(e, n) {
      const r = n.ol_key;
      if (r) uH(r);
      else if (Array.isArray(e))
        for (let i = 0, o = e.length; i < o; ++i)
          this.removeEventListener(e[i], n);
      else this.removeEventListener(e, n);
    }
  }
  Wl.prototype.on;
  Wl.prototype.once;
  Wl.prototype.un;
  function uH(t) {
    if (Array.isArray(t)) for (let e = 0, n = t.length; e < n; ++e) Wt(t[e]);
    else Wt(t);
  }
  function dt() {
    throw new Error("Unimplemented abstract method.");
  }
  let dH = 0;
  function xt(t) {
    return t.ol_uid || (t.ol_uid = String(++dH));
  }
  class Dv extends fi {
    constructor(e, n, r) {
      super(e), (this.key = n), (this.oldValue = r);
    }
  }
  class Nr extends Wl {
    constructor(e) {
      super(),
        this.on,
        this.once,
        this.un,
        xt(this),
        (this.values_ = null),
        e !== void 0 && this.setProperties(e);
    }
    get(e) {
      let n;
      return (
        this.values_ && this.values_.hasOwnProperty(e) && (n = this.values_[e]),
        n
      );
    }
    getKeys() {
      return (this.values_ && Object.keys(this.values_)) || [];
    }
    getProperties() {
      return (this.values_ && Object.assign({}, this.values_)) || {};
    }
    getPropertiesInternal() {
      return this.values_;
    }
    hasProperties() {
      return !!this.values_;
    }
    notify(e, n) {
      let r;
      (r = `change:${e}`),
        this.hasListener(r) && this.dispatchEvent(new Dv(r, e, n)),
        (r = js.PROPERTYCHANGE),
        this.hasListener(r) && this.dispatchEvent(new Dv(r, e, n));
    }
    addChangeListener(e, n) {
      this.addEventListener(`change:${e}`, n);
    }
    removeChangeListener(e, n) {
      this.removeEventListener(`change:${e}`, n);
    }
    set(e, n, r) {
      const i = this.values_ || (this.values_ = {});
      if (r) i[e] = n;
      else {
        const o = i[e];
        (i[e] = n), o !== n && this.notify(e, o);
      }
    }
    setProperties(e, n) {
      for (const r in e) this.set(r, e[r], n);
    }
    applyProperties(e) {
      e.values_ &&
        Object.assign(this.values_ || (this.values_ = {}), e.values_);
    }
    unset(e, n) {
      if (this.values_ && e in this.values_) {
        const r = this.values_[e];
        delete this.values_[e],
          Vs(this.values_) && (this.values_ = null),
          n || this.notify(e, r);
      }
    }
  }
  const zn = { ADD: "add", REMOVE: "remove" },
    zv = { LENGTH: "length" };
  class yc extends fi {
    constructor(e, n, r) {
      super(e), (this.element = n), (this.index = r);
    }
  }
  class Or extends Nr {
    constructor(e, n) {
      if (
        (super(),
        this.on,
        this.once,
        this.un,
        (n = n || {}),
        (this.unique_ = !!n.unique),
        (this.array_ = e || []),
        this.unique_)
      )
        for (let r = 0, i = this.array_.length; r < i; ++r)
          this.assertUnique_(this.array_[r], r);
      this.updateLength_();
    }
    clear() {
      for (; this.getLength() > 0; ) this.pop();
    }
    extend(e) {
      for (let n = 0, r = e.length; n < r; ++n) this.push(e[n]);
      return this;
    }
    forEach(e) {
      const n = this.array_;
      for (let r = 0, i = n.length; r < i; ++r) e(n[r], r, n);
    }
    getArray() {
      return this.array_;
    }
    item(e) {
      return this.array_[e];
    }
    getLength() {
      return this.get(zv.LENGTH);
    }
    insertAt(e, n) {
      if (e < 0 || e > this.getLength())
        throw new Error("Index out of bounds: " + e);
      this.unique_ && this.assertUnique_(n),
        this.array_.splice(e, 0, n),
        this.updateLength_(),
        this.dispatchEvent(new yc(zn.ADD, n, e));
    }
    pop() {
      return this.removeAt(this.getLength() - 1);
    }
    push(e) {
      this.unique_ && this.assertUnique_(e);
      const n = this.getLength();
      return this.insertAt(n, e), this.getLength();
    }
    remove(e) {
      const n = this.array_;
      for (let r = 0, i = n.length; r < i; ++r)
        if (n[r] === e) return this.removeAt(r);
    }
    removeAt(e) {
      if (e < 0 || e >= this.getLength()) return;
      const n = this.array_[e];
      return (
        this.array_.splice(e, 1),
        this.updateLength_(),
        this.dispatchEvent(new yc(zn.REMOVE, n, e)),
        n
      );
    }
    setAt(e, n) {
      const r = this.getLength();
      if (e >= r) {
        this.insertAt(e, n);
        return;
      }
      if (e < 0) throw new Error("Index out of bounds: " + e);
      this.unique_ && this.assertUnique_(n, e);
      const i = this.array_[e];
      (this.array_[e] = n),
        this.dispatchEvent(new yc(zn.REMOVE, i, e)),
        this.dispatchEvent(new yc(zn.ADD, n, e));
    }
    updateLength_() {
      this.set(zv.LENGTH, this.array_.length);
    }
    assertUnique_(e, n) {
      for (let r = 0, i = this.array_.length; r < i; ++r)
        if (this.array_[r] === e && r !== n)
          throw new Error("Duplicate item added to a unique collection");
    }
  }
  const Ki =
      typeof navigator < "u" && typeof navigator.userAgent < "u"
        ? navigator.userAgent.toLowerCase()
        : "",
    hH = Ki.includes("firefox"),
    fH = Ki.includes("safari") && !Ki.includes("chrom");
  fH &&
    (Ki.includes("version/15.4") ||
      /cpu (os|iphone os) 15_4 like mac os x/.test(Ki));
  const gH = Ki.includes("webkit") && !Ki.includes("edge"),
    T_ = Ki.includes("macintosh"),
    P_ = typeof devicePixelRatio < "u" ? devicePixelRatio : 1,
    rp =
      typeof WorkerGlobalScope < "u" &&
      typeof OffscreenCanvas < "u" &&
      self instanceof WorkerGlobalScope,
    A_ = typeof Image < "u" && Image.prototype.decode,
    k_ = (function () {
      let t = !1;
      try {
        const e = Object.defineProperty({}, "passive", {
          get: function () {
            t = !0;
          },
        });
        window.addEventListener("_", null, e),
          window.removeEventListener("_", null, e);
      } catch {}
      return t;
    })();
  function ut(t, e) {
    if (!t) throw new Error(e);
  }
  new Array(6);
  function vr() {
    return [1, 0, 0, 1, 0, 0];
  }
  function pH(t, e, n, r, i, o, s) {
    return (
      (t[0] = e), (t[1] = n), (t[2] = r), (t[3] = i), (t[4] = o), (t[5] = s), t
    );
  }
  function mH(t, e) {
    return (
      (t[0] = e[0]),
      (t[1] = e[1]),
      (t[2] = e[2]),
      (t[3] = e[3]),
      (t[4] = e[4]),
      (t[5] = e[5]),
      t
    );
  }
  function fn(t, e) {
    const n = e[0],
      r = e[1];
    return (
      (e[0] = t[0] * n + t[2] * r + t[4]),
      (e[1] = t[1] * n + t[3] * r + t[5]),
      e
    );
  }
  function vH(t, e, n) {
    return pH(t, e, 0, 0, n, 0, 0);
  }
  function oi(t, e, n, r, i, o, s, a) {
    const l = Math.sin(o),
      c = Math.cos(o);
    return (
      (t[0] = r * c),
      (t[1] = i * l),
      (t[2] = -r * l),
      (t[3] = i * c),
      (t[4] = s * r * c - a * r * l + e),
      (t[5] = s * i * l + a * i * c + n),
      t
    );
  }
  function ip(t, e) {
    const n = bH(e);
    ut(n !== 0, "Transformation matrix cannot be inverted");
    const r = e[0],
      i = e[1],
      o = e[2],
      s = e[3],
      a = e[4],
      l = e[5];
    return (
      (t[0] = s / n),
      (t[1] = -i / n),
      (t[2] = -o / n),
      (t[3] = r / n),
      (t[4] = (o * l - s * a) / n),
      (t[5] = -(r * l - i * a) / n),
      t
    );
  }
  function bH(t) {
    return t[0] * t[3] - t[1] * t[2];
  }
  let Fv;
  function I_(t) {
    const e = "matrix(" + t.join(", ") + ")";
    if (rp) return e;
    const n = Fv || (Fv = document.createElement("div"));
    return (n.style.transform = e), n.style.transform;
  }
  const hn = {
    UNKNOWN: 0,
    INTERSECTING: 1,
    ABOVE: 2,
    RIGHT: 4,
    BELOW: 8,
    LEFT: 16,
  };
  function Bv(t) {
    const e = ur();
    for (let n = 0, r = t.length; n < r; ++n) ja(e, t[n]);
    return e;
  }
  function op(t, e, n) {
    return n
      ? ((n[0] = t[0] - e),
        (n[1] = t[1] - e),
        (n[2] = t[2] + e),
        (n[3] = t[3] + e),
        n)
      : [t[0] - e, t[1] - e, t[2] + e, t[3] + e];
  }
  function O_(t, e) {
    return e
      ? ((e[0] = t[0]), (e[1] = t[1]), (e[2] = t[2]), (e[3] = t[3]), e)
      : t.slice();
  }
  function M_(t, e, n) {
    let r, i;
    return (
      e < t[0] ? (r = t[0] - e) : t[2] < e ? (r = e - t[2]) : (r = 0),
      n < t[1] ? (i = t[1] - n) : t[3] < n ? (i = n - t[3]) : (i = 0),
      r * r + i * i
    );
  }
  function fd(t, e) {
    return L_(t, e[0], e[1]);
  }
  function bs(t, e) {
    return t[0] <= e[0] && e[2] <= t[2] && t[1] <= e[1] && e[3] <= t[3];
  }
  function L_(t, e, n) {
    return t[0] <= e && e <= t[2] && t[1] <= n && n <= t[3];
  }
  function Sf(t, e) {
    const n = t[0],
      r = t[1],
      i = t[2],
      o = t[3],
      s = e[0],
      a = e[1];
    let l = hn.UNKNOWN;
    return (
      s < n ? (l = l | hn.LEFT) : s > i && (l = l | hn.RIGHT),
      a < r ? (l = l | hn.BELOW) : a > o && (l = l | hn.ABOVE),
      l === hn.UNKNOWN && (l = hn.INTERSECTING),
      l
    );
  }
  function ur() {
    return [1 / 0, 1 / 0, -1 / 0, -1 / 0];
  }
  function Yi(t, e, n, r, i) {
    return i
      ? ((i[0] = t), (i[1] = e), (i[2] = n), (i[3] = r), i)
      : [t, e, n, r];
  }
  function gd(t) {
    return Yi(1 / 0, 1 / 0, -1 / 0, -1 / 0, t);
  }
  function $_(t, e) {
    const n = t[0],
      r = t[1];
    return Yi(n, r, n, r, e);
  }
  function sp(t, e, n, r, i) {
    const o = gd(i);
    return D_(o, t, e, n, r);
  }
  function hl(t, e) {
    return t[0] == e[0] && t[2] == e[2] && t[1] == e[1] && t[3] == e[3];
  }
  function yH(t, e) {
    return (
      e[0] < t[0] && (t[0] = e[0]),
      e[2] > t[2] && (t[2] = e[2]),
      e[1] < t[1] && (t[1] = e[1]),
      e[3] > t[3] && (t[3] = e[3]),
      t
    );
  }
  function ja(t, e) {
    e[0] < t[0] && (t[0] = e[0]),
      e[0] > t[2] && (t[2] = e[0]),
      e[1] < t[1] && (t[1] = e[1]),
      e[1] > t[3] && (t[3] = e[1]);
  }
  function D_(t, e, n, r, i) {
    for (; n < r; n += i) xH(t, e[n], e[n + 1]);
    return t;
  }
  function xH(t, e, n) {
    (t[0] = Math.min(t[0], e)),
      (t[1] = Math.min(t[1], n)),
      (t[2] = Math.max(t[2], e)),
      (t[3] = Math.max(t[3], n));
  }
  function z_(t, e) {
    let n;
    return (
      (n = e(pd(t))),
      n || ((n = e(md(t))), n) || ((n = e(vd(t))), n) || ((n = e(es(t))), n)
        ? n
        : !1
    );
  }
  function Ef(t) {
    let e = 0;
    return bd(t) || (e = Dt(t) * Yn(t)), e;
  }
  function pd(t) {
    return [t[0], t[1]];
  }
  function md(t) {
    return [t[2], t[1]];
  }
  function zo(t) {
    return [(t[0] + t[2]) / 2, (t[1] + t[3]) / 2];
  }
  function CH(t, e) {
    let n;
    if (e === "bottom-left") n = pd(t);
    else if (e === "bottom-right") n = md(t);
    else if (e === "top-left") n = es(t);
    else if (e === "top-right") n = vd(t);
    else throw new Error("Invalid corner");
    return n;
  }
  function Rf(t, e, n, r, i) {
    const [o, s, a, l, c, u, d, h] = Tf(t, e, n, r);
    return Yi(
      Math.min(o, a, c, d),
      Math.min(s, l, u, h),
      Math.max(o, a, c, d),
      Math.max(s, l, u, h),
      i
    );
  }
  function Tf(t, e, n, r) {
    const i = (e * r[0]) / 2,
      o = (e * r[1]) / 2,
      s = Math.cos(n),
      a = Math.sin(n),
      l = i * s,
      c = i * a,
      u = o * s,
      d = o * a,
      h = t[0],
      g = t[1];
    return [
      h - l + d,
      g - c - u,
      h - l - d,
      g - c + u,
      h + l - d,
      g + c + u,
      h + l + d,
      g + c - u,
      h - l + d,
      g - c - u,
    ];
  }
  function Yn(t) {
    return t[3] - t[1];
  }
  function Ua(t, e, n) {
    const r = n || ur();
    return (
      Bn(t, e)
        ? (t[0] > e[0] ? (r[0] = t[0]) : (r[0] = e[0]),
          t[1] > e[1] ? (r[1] = t[1]) : (r[1] = e[1]),
          t[2] < e[2] ? (r[2] = t[2]) : (r[2] = e[2]),
          t[3] < e[3] ? (r[3] = t[3]) : (r[3] = e[3]))
        : gd(r),
      r
    );
  }
  function es(t) {
    return [t[0], t[3]];
  }
  function vd(t) {
    return [t[2], t[3]];
  }
  function Dt(t) {
    return t[2] - t[0];
  }
  function Bn(t, e) {
    return t[0] <= e[2] && t[2] >= e[0] && t[1] <= e[3] && t[3] >= e[1];
  }
  function bd(t) {
    return t[2] < t[0] || t[3] < t[1];
  }
  function _H(t, e) {
    return e
      ? ((e[0] = t[0]), (e[1] = t[1]), (e[2] = t[2]), (e[3] = t[3]), e)
      : t;
  }
  function wH(t, e, n) {
    let r = !1;
    const i = Sf(t, e),
      o = Sf(t, n);
    if (i === hn.INTERSECTING || o === hn.INTERSECTING) r = !0;
    else {
      const s = t[0],
        a = t[1],
        l = t[2],
        c = t[3],
        u = e[0],
        d = e[1],
        h = n[0],
        g = n[1],
        f = (g - d) / (h - u);
      let p, b;
      o & hn.ABOVE &&
        !(i & hn.ABOVE) &&
        ((p = h - (g - c) / f), (r = p >= s && p <= l)),
        !r &&
          o & hn.RIGHT &&
          !(i & hn.RIGHT) &&
          ((b = g - (h - l) * f), (r = b >= a && b <= c)),
        !r &&
          o & hn.BELOW &&
          !(i & hn.BELOW) &&
          ((p = h - (g - a) / f), (r = p >= s && p <= l)),
        !r &&
          o & hn.LEFT &&
          !(i & hn.LEFT) &&
          ((b = g - (h - s) * f), (r = b >= a && b <= c));
    }
    return r;
  }
  function F_(t, e) {
    const n = e.getExtent(),
      r = zo(t);
    if (e.canWrapX() && (r[0] < n[0] || r[0] >= n[2])) {
      const i = Dt(n),
        s = Math.floor((r[0] - n[0]) / i) * i;
      (t[0] -= s), (t[2] -= s);
    }
    return t;
  }
  function SH(t, e) {
    if (e.canWrapX()) {
      const n = e.getExtent();
      if (!isFinite(t[0]) || !isFinite(t[2])) return [[n[0], t[1], n[2], t[3]]];
      F_(t, e);
      const r = Dt(n);
      if (Dt(t) > r) return [[n[0], t[1], n[2], t[3]]];
      if (t[0] < n[0])
        return [
          [t[0] + r, t[1], n[2], t[3]],
          [n[0], t[1], t[2], t[3]],
        ];
      if (t[2] > n[2])
        return [
          [t[0], t[1], n[2], t[3]],
          [n[0], t[1], t[2] - r, t[3]],
        ];
    }
    return [t];
  }
  const fl = {
    name: "rgb",
    min: [0, 0, 0],
    max: [255, 255, 255],
    channel: ["red", "green", "blue"],
    alias: ["RGB"],
  };
  var mn = {
    name: "xyz",
    min: [0, 0, 0],
    channel: ["X", "Y", "Z"],
    alias: ["XYZ", "ciexyz", "cie1931"],
  };
  mn.whitepoint = {
    2: {
      A: [109.85, 100, 35.585],
      C: [98.074, 100, 118.232],
      D50: [96.422, 100, 82.521],
      D55: [95.682, 100, 92.149],
      D65: [95.045592705167, 100, 108.9057750759878],
      D75: [94.972, 100, 122.638],
      F2: [99.187, 100, 67.395],
      F7: [95.044, 100, 108.755],
      F11: [100.966, 100, 64.37],
      E: [100, 100, 100],
    },
    10: {
      A: [111.144, 100, 35.2],
      C: [97.285, 100, 116.145],
      D50: [96.72, 100, 81.427],
      D55: [95.799, 100, 90.926],
      D65: [94.811, 100, 107.304],
      D75: [94.416, 100, 120.641],
      F2: [103.28, 100, 69.026],
      F7: [95.792, 100, 107.687],
      F11: [103.866, 100, 65.627],
      E: [100, 100, 100],
    },
  };
  mn.max = mn.whitepoint[2].D65;
  mn.rgb = function (t, e) {
    e = e || mn.whitepoint[2].E;
    var n = t[0] / e[0],
      r = t[1] / e[1],
      i = t[2] / e[2],
      o,
      s,
      a;
    return (
      (o =
        n * 3.240969941904521 + r * -1.537383177570093 + i * -0.498610760293),
      (s =
        n * -0.96924363628087 + r * 1.87596750150772 + i * 0.041555057407175),
      (a =
        n * 0.055630079696993 + r * -0.20397695888897 + i * 1.056971514242878),
      (o =
        o > 0.0031308 ? 1.055 * Math.pow(o, 1 / 2.4) - 0.055 : (o = o * 12.92)),
      (s =
        s > 0.0031308 ? 1.055 * Math.pow(s, 1 / 2.4) - 0.055 : (s = s * 12.92)),
      (a =
        a > 0.0031308 ? 1.055 * Math.pow(a, 1 / 2.4) - 0.055 : (a = a * 12.92)),
      (o = Math.min(Math.max(0, o), 1)),
      (s = Math.min(Math.max(0, s), 1)),
      (a = Math.min(Math.max(0, a), 1)),
      [o * 255, s * 255, a * 255]
    );
  };
  fl.xyz = function (t, e) {
    var n = t[0] / 255,
      r = t[1] / 255,
      i = t[2] / 255;
    (n = n > 0.04045 ? Math.pow((n + 0.055) / 1.055, 2.4) : n / 12.92),
      (r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92),
      (i = i > 0.04045 ? Math.pow((i + 0.055) / 1.055, 2.4) : i / 12.92);
    var o = n * 0.41239079926595 + r * 0.35758433938387 + i * 0.18048078840183,
      s = n * 0.21263900587151 + r * 0.71516867876775 + i * 0.072192315360733,
      a = n * 0.019330818715591 + r * 0.11919477979462 + i * 0.95053215224966;
    return (e = e || mn.whitepoint[2].E), [o * e[0], s * e[1], a * e[2]];
  };
  const ap = {
    name: "luv",
    min: [0, -134, -140],
    max: [100, 224, 122],
    channel: ["lightness", "u", "v"],
    alias: ["LUV", "cieluv", "cie1976"],
    xyz: function (t, e, n) {
      var r, i, o, s, a, l, c, u, d, h, g, f, p;
      if (((o = t[0]), (s = t[1]), (a = t[2]), o === 0)) return [0, 0, 0];
      var b = 0.0011070564598794539;
      return (
        (e = e || "D65"),
        (n = n || 2),
        (d = mn.whitepoint[n][e][0]),
        (h = mn.whitepoint[n][e][1]),
        (g = mn.whitepoint[n][e][2]),
        (f = (4 * d) / (d + 15 * h + 3 * g)),
        (p = (9 * h) / (d + 15 * h + 3 * g)),
        (r = s / (13 * o) + f || 0),
        (i = a / (13 * o) + p || 0),
        (c = o > 8 ? h * Math.pow((o + 16) / 116, 3) : h * o * b),
        (l = (c * 9 * r) / (4 * i) || 0),
        (u = (c * (12 - 3 * r - 20 * i)) / (4 * i) || 0),
        [l, c, u]
      );
    },
  };
  mn.luv = function (t, e, n) {
    var r,
      i,
      o,
      s,
      a,
      l,
      c,
      u,
      d,
      h,
      g,
      f,
      p,
      b = 0.008856451679035631,
      m = 903.2962962962961;
    (e = e || "D65"),
      (n = n || 2),
      (d = mn.whitepoint[n][e][0]),
      (h = mn.whitepoint[n][e][1]),
      (g = mn.whitepoint[n][e][2]),
      (f = (4 * d) / (d + 15 * h + 3 * g)),
      (p = (9 * h) / (d + 15 * h + 3 * g)),
      (l = t[0]),
      (c = t[1]),
      (u = t[2]),
      (r = (4 * l) / (l + 15 * c + 3 * u) || 0),
      (i = (9 * c) / (l + 15 * c + 3 * u) || 0);
    var _ = c / h;
    return (
      (o = _ <= b ? m * _ : 116 * Math.pow(_, 1 / 3) - 16),
      (s = 13 * o * (r - f)),
      (a = 13 * o * (i - p)),
      [o, s, a]
    );
  };
  var B_ = {
    name: "lchuv",
    channel: ["lightness", "chroma", "hue"],
    alias: ["LCHuv", "cielchuv"],
    min: [0, 0, 0],
    max: [100, 100, 360],
    luv: function (t) {
      var e = t[0],
        n = t[1],
        r = t[2],
        i,
        o,
        s;
      return (
        (s = (r / 360) * 2 * Math.PI),
        (i = n * Math.cos(s)),
        (o = n * Math.sin(s)),
        [e, i, o]
      );
    },
    xyz: function (t) {
      return ap.xyz(B_.luv(t));
    },
  };
  ap.lchuv = function (t) {
    var e = t[0],
      n = t[1],
      r = t[2],
      i = Math.sqrt(n * n + r * r),
      o = Math.atan2(r, n),
      s = (o * 360) / 2 / Math.PI;
    return s < 0 && (s += 360), [e, i, s];
  };
  mn.lchuv = function (t) {
    return ap.lchuv(mn.luv(t));
  };
  var EH = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50],
  };
  const Nv = Bf(EH);
  var Hv = {
    red: 0,
    orange: 60,
    yellow: 120,
    green: 180,
    blue: 240,
    purple: 300,
  };
  function RH(t) {
    var u, d;
    var e,
      n = [],
      r = 1,
      i;
    if (typeof t == "number")
      return {
        space: "rgb",
        values: [t >>> 16, (t & 65280) >>> 8, t & 255],
        alpha: 1,
      };
    if (typeof t == "number")
      return {
        space: "rgb",
        values: [t >>> 16, (t & 65280) >>> 8, t & 255],
        alpha: 1,
      };
    if (((t = String(t).toLowerCase()), Nv[t]))
      (n = Nv[t].slice()), (i = "rgb");
    else if (t === "transparent") (r = 0), (i = "rgb"), (n = [0, 0, 0]);
    else if (t[0] === "#") {
      var o = t.slice(1),
        s = o.length,
        a = s <= 4;
      (r = 1),
        a
          ? ((n = [
              parseInt(o[0] + o[0], 16),
              parseInt(o[1] + o[1], 16),
              parseInt(o[2] + o[2], 16),
            ]),
            s === 4 && (r = parseInt(o[3] + o[3], 16) / 255))
          : ((n = [
              parseInt(o[0] + o[1], 16),
              parseInt(o[2] + o[3], 16),
              parseInt(o[4] + o[5], 16),
            ]),
            s === 8 && (r = parseInt(o[6] + o[7], 16) / 255)),
        n[0] || (n[0] = 0),
        n[1] || (n[1] = 0),
        n[2] || (n[2] = 0),
        (i = "rgb");
    } else if (
      (e =
        /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\s*\(([^\)]*)\)/.exec(
          t
        ))
    ) {
      var l = e[1];
      i = l.replace(/a$/, "");
      var c = i === "cmyk" ? 4 : i === "gray" ? 1 : 3;
      (n = e[2].trim().split(/\s*[,\/]\s*|\s+/)),
        i === "color" && (i = n.shift()),
        (n = n.map(function (h, g) {
          if (h[h.length - 1] === "%")
            return (
              (h = parseFloat(h) / 100),
              g === 3
                ? h
                : i === "rgb"
                ? h * 255
                : i[0] === "h" || (i[0] === "l" && !g)
                ? h * 100
                : i === "lab"
                ? h * 125
                : i === "lch"
                ? g < 2
                  ? h * 150
                  : h * 360
                : i[0] === "o" && !g
                ? h
                : i === "oklab"
                ? h * 0.4
                : i === "oklch"
                ? g < 2
                  ? h * 0.4
                  : h * 360
                : h
            );
          if (i[g] === "h" || (g === 2 && i[i.length - 1] === "h")) {
            if (Hv[h] !== void 0) return Hv[h];
            if (h.endsWith("deg")) return parseFloat(h);
            if (h.endsWith("turn")) return parseFloat(h) * 360;
            if (h.endsWith("grad")) return (parseFloat(h) * 360) / 400;
            if (h.endsWith("rad")) return (parseFloat(h) * 180) / Math.PI;
          }
          return h === "none" ? 0 : parseFloat(h);
        })),
        (r = n.length > c ? n.pop() : 1);
    } else
      /[0-9](?:\s|\/|,)/.test(t) &&
        ((n = t.match(/([0-9]+)/g).map(function (h) {
          return parseFloat(h);
        })),
        (i =
          ((d = (u = t.match(/([a-z])/gi)) == null ? void 0 : u.join("")) ==
          null
            ? void 0
            : d.toLowerCase()) || "rgb"));
    return { space: i, values: n, alpha: r };
  }
  const yh = {
    name: "hsl",
    min: [0, 0, 0],
    max: [360, 100, 100],
    channel: ["hue", "saturation", "lightness"],
    alias: ["HSL"],
    rgb: function (t) {
      var e = t[0] / 360,
        n = t[1] / 100,
        r = t[2] / 100,
        i,
        o,
        s,
        a,
        l,
        c = 0;
      if (n === 0) return (l = r * 255), [l, l, l];
      for (
        o = r < 0.5 ? r * (1 + n) : r + n - r * n, i = 2 * r - o, a = [0, 0, 0];
        c < 3;

      )
        (s = e + (1 / 3) * -(c - 1)),
          s < 0 ? s++ : s > 1 && s--,
          (l =
            6 * s < 1
              ? i + (o - i) * 6 * s
              : 2 * s < 1
              ? o
              : 3 * s < 2
              ? i + (o - i) * (2 / 3 - s) * 6
              : i),
          (a[c++] = l * 255);
      return a;
    },
  };
  fl.hsl = function (t) {
    var e = t[0] / 255,
      n = t[1] / 255,
      r = t[2] / 255,
      i = Math.min(e, n, r),
      o = Math.max(e, n, r),
      s = o - i,
      a,
      l,
      c;
    return (
      o === i
        ? (a = 0)
        : e === o
        ? (a = (n - r) / s)
        : n === o
        ? (a = 2 + (r - e) / s)
        : r === o && (a = 4 + (e - n) / s),
      (a = Math.min(a * 60, 360)),
      a < 0 && (a += 360),
      (c = (i + o) / 2),
      o === i ? (l = 0) : c <= 0.5 ? (l = s / (o + i)) : (l = s / (2 - o - i)),
      [a, l * 100, c * 100]
    );
  };
  function TH(t) {
    Array.isArray(t) && t.raw && (t = String.raw(...arguments)),
      t instanceof Number && (t = +t);
    var e,
      n = RH(t);
    if (!n.space) return [];
    const r = n.space[0] === "h" ? yh.min : fl.min,
      i = n.space[0] === "h" ? yh.max : fl.max;
    return (
      (e = Array(3)),
      (e[0] = Math.min(Math.max(n.values[0], r[0]), i[0])),
      (e[1] = Math.min(Math.max(n.values[1], r[1]), i[1])),
      (e[2] = Math.min(Math.max(n.values[2], r[2]), i[2])),
      n.space[0] === "h" && (e = yh.rgb(e)),
      e.push(Math.min(Math.max(n.alpha, 0), 1)),
      e
    );
  }
  function on(t, e, n) {
    return Math.min(Math.max(t, e), n);
  }
  function PH(t, e, n, r, i, o) {
    const s = i - n,
      a = o - r;
    if (s !== 0 || a !== 0) {
      const l = ((t - n) * s + (e - r) * a) / (s * s + a * a);
      l > 1 ? ((n = i), (r = o)) : l > 0 && ((n += s * l), (r += a * l));
    }
    return Ps(t, e, n, r);
  }
  function Ps(t, e, n, r) {
    const i = n - t,
      o = r - e;
    return i * i + o * o;
  }
  function AH(t) {
    const e = t.length;
    for (let r = 0; r < e; r++) {
      let i = r,
        o = Math.abs(t[r][r]);
      for (let a = r + 1; a < e; a++) {
        const l = Math.abs(t[a][r]);
        l > o && ((o = l), (i = a));
      }
      if (o === 0) return null;
      const s = t[i];
      (t[i] = t[r]), (t[r] = s);
      for (let a = r + 1; a < e; a++) {
        const l = -t[a][r] / t[r][r];
        for (let c = r; c < e + 1; c++)
          r == c ? (t[a][c] = 0) : (t[a][c] += l * t[r][c]);
      }
    }
    const n = new Array(e);
    for (let r = e - 1; r >= 0; r--) {
      n[r] = t[r][e] / t[r][r];
      for (let i = r - 1; i >= 0; i--) t[i][e] -= t[i][r] * n[r];
    }
    return n;
  }
  function Bc(t) {
    return (t * Math.PI) / 180;
  }
  function As(t, e) {
    const n = t % e;
    return n * e < 0 ? n + e : n;
  }
  function er(t, e, n) {
    return t + n * (e - t);
  }
  function lp(t, e) {
    const n = Math.pow(10, e);
    return Math.round(t * n) / n;
  }
  function xc(t, e) {
    return Math.floor(lp(t, e));
  }
  function Cc(t, e) {
    return Math.ceil(lp(t, e));
  }
  function N_(t) {
    return typeof t == "string" ? t : W_(t);
  }
  const kH = 1024,
    _a = {};
  let xh = 0;
  function IH(t) {
    if (t.length === 4) return t;
    const e = t.slice();
    return (e[3] = 1), e;
  }
  function Wv(t) {
    const e = mn.lchuv(fl.xyz(t));
    return (e[3] = t[3]), e;
  }
  function OH(t) {
    const e = mn.rgb(B_.xyz(t));
    return (e[3] = t[3]), e;
  }
  function cp(t) {
    if (_a.hasOwnProperty(t)) return _a[t];
    if (xh >= kH) {
      let n = 0;
      for (const r in _a) n++ & 3 || (delete _a[r], --xh);
    }
    const e = TH(t);
    if (e.length !== 4) throw new Error('Failed to parse "' + t + '" as color');
    for (const n of e)
      if (isNaN(n)) throw new Error('Failed to parse "' + t + '" as color');
    return H_(e), (_a[t] = e), ++xh, e;
  }
  function du(t) {
    return Array.isArray(t) ? t : cp(t);
  }
  function H_(t) {
    return (
      (t[0] = on((t[0] + 0.5) | 0, 0, 255)),
      (t[1] = on((t[1] + 0.5) | 0, 0, 255)),
      (t[2] = on((t[2] + 0.5) | 0, 0, 255)),
      (t[3] = on(t[3], 0, 1)),
      t
    );
  }
  function W_(t) {
    let e = t[0];
    e != (e | 0) && (e = (e + 0.5) | 0);
    let n = t[1];
    n != (n | 0) && (n = (n + 0.5) | 0);
    let r = t[2];
    r != (r | 0) && (r = (r + 0.5) | 0);
    const i = t[3] === void 0 ? 1 : Math.round(t[3] * 100) / 100;
    return "rgba(" + e + "," + n + "," + r + "," + i + ")";
  }
  function MH(t) {
    try {
      return cp(t), !0;
    } catch {
      return !1;
    }
  }
  class LH {
    constructor() {
      (this.cache_ = {}), (this.cacheSize_ = 0), (this.maxCacheSize_ = 32);
    }
    clear() {
      (this.cache_ = {}), (this.cacheSize_ = 0);
    }
    canExpireCache() {
      return this.cacheSize_ > this.maxCacheSize_;
    }
    expire() {
      if (this.canExpireCache()) {
        let e = 0;
        for (const n in this.cache_) {
          const r = this.cache_[n];
          !(e++ & 3) &&
            !r.hasListener() &&
            (delete this.cache_[n], --this.cacheSize_);
        }
      }
    }
    get(e, n, r) {
      const i = jv(e, n, r);
      return i in this.cache_ ? this.cache_[i] : null;
    }
    set(e, n, r, i) {
      const o = jv(e, n, r);
      (this.cache_[o] = i), ++this.cacheSize_;
    }
    setSize(e) {
      (this.maxCacheSize_ = e), this.expire();
    }
  }
  function jv(t, e, n) {
    const r = n ? N_(n) : "null";
    return e + ":" + t + ":" + r;
  }
  const hu = new LH(),
    Tt = {
      OPACITY: "opacity",
      VISIBLE: "visible",
      EXTENT: "extent",
      Z_INDEX: "zIndex",
      MAX_RESOLUTION: "maxResolution",
      MIN_RESOLUTION: "minResolution",
      MAX_ZOOM: "maxZoom",
      MIN_ZOOM: "minZoom",
      SOURCE: "source",
      MAP: "map",
    };
  class j_ extends Nr {
    constructor(e) {
      super(), this.on, this.once, this.un, (this.background_ = e.background);
      const n = Object.assign({}, e);
      typeof e.properties == "object" &&
        (delete n.properties, Object.assign(n, e.properties)),
        (n[Tt.OPACITY] = e.opacity !== void 0 ? e.opacity : 1),
        ut(typeof n[Tt.OPACITY] == "number", "Layer opacity must be a number"),
        (n[Tt.VISIBLE] = e.visible !== void 0 ? e.visible : !0),
        (n[Tt.Z_INDEX] = e.zIndex),
        (n[Tt.MAX_RESOLUTION] =
          e.maxResolution !== void 0 ? e.maxResolution : 1 / 0),
        (n[Tt.MIN_RESOLUTION] =
          e.minResolution !== void 0 ? e.minResolution : 0),
        (n[Tt.MIN_ZOOM] = e.minZoom !== void 0 ? e.minZoom : -1 / 0),
        (n[Tt.MAX_ZOOM] = e.maxZoom !== void 0 ? e.maxZoom : 1 / 0),
        (this.className_ = n.className !== void 0 ? n.className : "ol-layer"),
        delete n.className,
        this.setProperties(n),
        (this.state_ = null);
    }
    getBackground() {
      return this.background_;
    }
    getClassName() {
      return this.className_;
    }
    getLayerState(e) {
      const n = this.state_ || { layer: this, managed: e === void 0 ? !0 : e },
        r = this.getZIndex();
      return (
        (n.opacity = on(Math.round(this.getOpacity() * 100) / 100, 0, 1)),
        (n.visible = this.getVisible()),
        (n.extent = this.getExtent()),
        (n.zIndex = r === void 0 && !n.managed ? 1 / 0 : r),
        (n.maxResolution = this.getMaxResolution()),
        (n.minResolution = Math.max(this.getMinResolution(), 0)),
        (n.minZoom = this.getMinZoom()),
        (n.maxZoom = this.getMaxZoom()),
        (this.state_ = n),
        n
      );
    }
    getLayersArray(e) {
      return dt();
    }
    getLayerStatesArray(e) {
      return dt();
    }
    getExtent() {
      return this.get(Tt.EXTENT);
    }
    getMaxResolution() {
      return this.get(Tt.MAX_RESOLUTION);
    }
    getMinResolution() {
      return this.get(Tt.MIN_RESOLUTION);
    }
    getMinZoom() {
      return this.get(Tt.MIN_ZOOM);
    }
    getMaxZoom() {
      return this.get(Tt.MAX_ZOOM);
    }
    getOpacity() {
      return this.get(Tt.OPACITY);
    }
    getSourceState() {
      return dt();
    }
    getVisible() {
      return this.get(Tt.VISIBLE);
    }
    getZIndex() {
      return this.get(Tt.Z_INDEX);
    }
    setBackground(e) {
      (this.background_ = e), this.changed();
    }
    setExtent(e) {
      this.set(Tt.EXTENT, e);
    }
    setMaxResolution(e) {
      this.set(Tt.MAX_RESOLUTION, e);
    }
    setMinResolution(e) {
      this.set(Tt.MIN_RESOLUTION, e);
    }
    setMaxZoom(e) {
      this.set(Tt.MAX_ZOOM, e);
    }
    setMinZoom(e) {
      this.set(Tt.MIN_ZOOM, e);
    }
    setOpacity(e) {
      ut(typeof e == "number", "Layer opacity must be a number"),
        this.set(Tt.OPACITY, e);
    }
    setVisible(e) {
      this.set(Tt.VISIBLE, e);
    }
    setZIndex(e) {
      this.set(Tt.Z_INDEX, e);
    }
    disposeInternal() {
      this.state_ && ((this.state_.layer = null), (this.state_ = null)),
        super.disposeInternal();
    }
  }
  const Dr = {
      PRERENDER: "prerender",
      POSTRENDER: "postrender",
      PRECOMPOSE: "precompose",
      POSTCOMPOSE: "postcompose",
      RENDERCOMPLETE: "rendercomplete",
    },
    Cn = { ANIMATING: 0, INTERACTING: 1 },
    fr = { CENTER: "center", RESOLUTION: "resolution", ROTATION: "rotation" },
    $H = 42,
    up = 256,
    gl = {
      radians: 6370997 / (2 * Math.PI),
      degrees: (2 * Math.PI * 6370997) / 360,
      ft: 0.3048,
      m: 1,
      "us-ft": 1200 / 3937,
    };
  class U_ {
    constructor(e) {
      (this.code_ = e.code),
        (this.units_ = e.units),
        (this.extent_ = e.extent !== void 0 ? e.extent : null),
        (this.worldExtent_ = e.worldExtent !== void 0 ? e.worldExtent : null),
        (this.axisOrientation_ =
          e.axisOrientation !== void 0 ? e.axisOrientation : "enu"),
        (this.global_ = e.global !== void 0 ? e.global : !1),
        (this.canWrapX_ = !!(this.global_ && this.extent_)),
        (this.getPointResolutionFunc_ = e.getPointResolution),
        (this.defaultTileGrid_ = null),
        (this.metersPerUnit_ = e.metersPerUnit);
    }
    canWrapX() {
      return this.canWrapX_;
    }
    getCode() {
      return this.code_;
    }
    getExtent() {
      return this.extent_;
    }
    getUnits() {
      return this.units_;
    }
    getMetersPerUnit() {
      return this.metersPerUnit_ || gl[this.units_];
    }
    getWorldExtent() {
      return this.worldExtent_;
    }
    getAxisOrientation() {
      return this.axisOrientation_;
    }
    isGlobal() {
      return this.global_;
    }
    setGlobal(e) {
      (this.global_ = e), (this.canWrapX_ = !!(e && this.extent_));
    }
    getDefaultTileGrid() {
      return this.defaultTileGrid_;
    }
    setDefaultTileGrid(e) {
      this.defaultTileGrid_ = e;
    }
    setExtent(e) {
      (this.extent_ = e), (this.canWrapX_ = !!(this.global_ && e));
    }
    setWorldExtent(e) {
      this.worldExtent_ = e;
    }
    setGetPointResolution(e) {
      this.getPointResolutionFunc_ = e;
    }
    getPointResolutionFunc() {
      return this.getPointResolutionFunc_;
    }
  }
  const jl = 6378137,
    ys = Math.PI * jl,
    DH = [-ys, -ys, ys, ys],
    zH = [-180, -85, 180, 85],
    _c = jl * Math.log(Math.tan(Math.PI / 2));
  class ss extends U_ {
    constructor(e) {
      super({
        code: e,
        units: "m",
        extent: DH,
        global: !0,
        worldExtent: zH,
        getPointResolution: function (n, r) {
          return n / Math.cosh(r[1] / jl);
        },
      });
    }
  }
  const Uv = [
    new ss("EPSG:3857"),
    new ss("EPSG:102100"),
    new ss("EPSG:102113"),
    new ss("EPSG:900913"),
    new ss("http://www.opengis.net/def/crs/EPSG/0/3857"),
    new ss("http://www.opengis.net/gml/srs/epsg.xml#3857"),
  ];
  function FH(t, e, n) {
    const r = t.length;
    (n = n > 1 ? n : 2),
      e === void 0 && (n > 2 ? (e = t.slice()) : (e = new Array(r)));
    for (let i = 0; i < r; i += n) {
      e[i] = (ys * t[i]) / 180;
      let o = jl * Math.log(Math.tan((Math.PI * (+t[i + 1] + 90)) / 360));
      o > _c ? (o = _c) : o < -_c && (o = -_c), (e[i + 1] = o);
    }
    return e;
  }
  function BH(t, e, n) {
    const r = t.length;
    (n = n > 1 ? n : 2),
      e === void 0 && (n > 2 ? (e = t.slice()) : (e = new Array(r)));
    for (let i = 0; i < r; i += n)
      (e[i] = (180 * t[i]) / ys),
        (e[i + 1] = (360 * Math.atan(Math.exp(t[i + 1] / jl))) / Math.PI - 90);
    return e;
  }
  const NH = 6378137,
    Vv = [-180, -90, 180, 90],
    HH = (Math.PI * NH) / 180;
  class fo extends U_ {
    constructor(e, n) {
      super({
        code: e,
        units: "degrees",
        extent: Vv,
        axisOrientation: n,
        global: !0,
        metersPerUnit: HH,
        worldExtent: Vv,
      });
    }
  }
  const Gv = [
    new fo("CRS:84"),
    new fo("EPSG:4326", "neu"),
    new fo("urn:ogc:def:crs:OGC:1.3:CRS84"),
    new fo("urn:ogc:def:crs:OGC:2:84"),
    new fo("http://www.opengis.net/def/crs/OGC/1.3/CRS84"),
    new fo("http://www.opengis.net/gml/srs/epsg.xml#4326", "neu"),
    new fo("http://www.opengis.net/def/crs/EPSG/0/4326", "neu"),
  ];
  let Pf = {};
  function WH(t) {
    return (
      Pf[t] ||
      Pf[t.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\w+)$/, "EPSG:$3")] ||
      null
    );
  }
  function jH(t, e) {
    Pf[t] = e;
  }
  let ks = {};
  function fu(t, e, n) {
    const r = t.getCode(),
      i = e.getCode();
    r in ks || (ks[r] = {}), (ks[r][i] = n);
  }
  function UH(t, e) {
    let n;
    return t in ks && e in ks[t] && (n = ks[t][e]), n;
  }
  function VH(t, e) {
    return (t[0] += +e[0]), (t[1] += +e[1]), t;
  }
  function gu(t, e) {
    let n = !0;
    for (let r = t.length - 1; r >= 0; --r)
      if (t[r] != e[r]) {
        n = !1;
        break;
      }
    return n;
  }
  function dp(t, e) {
    const n = Math.cos(e),
      r = Math.sin(e),
      i = t[0] * n - t[1] * r,
      o = t[1] * n + t[0] * r;
    return (t[0] = i), (t[1] = o), t;
  }
  function GH(t, e) {
    return (t[0] *= e), (t[1] *= e), t;
  }
  function V_(t, e) {
    if (e.canWrapX()) {
      const n = Dt(e.getExtent()),
        r = XH(t, e, n);
      r && (t[0] -= r * n);
    }
    return t;
  }
  function XH(t, e, n) {
    const r = e.getExtent();
    let i = 0;
    return (
      e.canWrapX() &&
        (t[0] < r[0] || t[0] > r[2]) &&
        ((n = n || Dt(r)), (i = Math.floor((t[0] - r[0]) / n))),
      i
    );
  }
  const KH = 63710088e-1;
  function Xv(t, e, n) {
    n = n || KH;
    const r = Bc(t[1]),
      i = Bc(e[1]),
      o = (i - r) / 2,
      s = Bc(e[0] - t[0]) / 2,
      a =
        Math.sin(o) * Math.sin(o) +
        Math.sin(s) * Math.sin(s) * Math.cos(r) * Math.cos(i);
    return 2 * n * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  }
  function G_(...t) {
    console.warn(...t);
  }
  let Af = !0;
  function X_(t) {
    Af = !(t === void 0 ? !0 : t);
  }
  function hp(t, e) {
    if (e !== void 0) {
      for (let n = 0, r = t.length; n < r; ++n) e[n] = t[n];
      e = e;
    } else e = t.slice();
    return e;
  }
  function K_(t, e) {
    if (e !== void 0 && t !== e) {
      for (let n = 0, r = t.length; n < r; ++n) e[n] = t[n];
      t = e;
    }
    return t;
  }
  function YH(t) {
    jH(t.getCode(), t), fu(t, t, hp);
  }
  function qH(t) {
    t.forEach(YH);
  }
  function dr(t) {
    return typeof t == "string" ? WH(t) : t || null;
  }
  function Kv(t, e, n, r) {
    t = dr(t);
    let i;
    const o = t.getPointResolutionFunc();
    if (o) {
      if (((i = o(e, n)), r && r !== t.getUnits())) {
        const s = t.getMetersPerUnit();
        s && (i = (i * s) / gl[r]);
      }
    } else {
      const s = t.getUnits();
      if ((s == "degrees" && !r) || r == "degrees") i = e;
      else {
        const a = gp(t, dr("EPSG:4326"));
        if (a === K_ && s !== "degrees") i = e * t.getMetersPerUnit();
        else {
          let c = [
            n[0] - e / 2,
            n[1],
            n[0] + e / 2,
            n[1],
            n[0],
            n[1] - e / 2,
            n[0],
            n[1] + e / 2,
          ];
          c = a(c, c, 2);
          const u = Xv(c.slice(0, 2), c.slice(2, 4)),
            d = Xv(c.slice(4, 6), c.slice(6, 8));
          i = (u + d) / 2;
        }
        const l = r ? gl[r] : t.getMetersPerUnit();
        l !== void 0 && (i /= l);
      }
    }
    return i;
  }
  function Yv(t) {
    qH(t),
      t.forEach(function (e) {
        t.forEach(function (n) {
          e !== n && fu(e, n, hp);
        });
      });
  }
  function ZH(t, e, n, r) {
    t.forEach(function (i) {
      e.forEach(function (o) {
        fu(i, o, n), fu(o, i, r);
      });
    });
  }
  function fp(t, e) {
    return t ? (typeof t == "string" ? dr(t) : t) : dr(e);
  }
  function go(t, e) {
    return X_(), pp(t, "EPSG:4326", e !== void 0 ? e : "EPSG:3857");
  }
  function fs(t, e) {
    if (t === e) return !0;
    const n = t.getUnits() === e.getUnits();
    return (t.getCode() === e.getCode() || gp(t, e) === hp) && n;
  }
  function gp(t, e) {
    const n = t.getCode(),
      r = e.getCode();
    let i = UH(n, r);
    return i || (i = K_), i;
  }
  function pu(t, e) {
    const n = dr(t),
      r = dr(e);
    return gp(n, r);
  }
  function pp(t, e, n) {
    return pu(e, n)(t, void 0, t.length);
  }
  function kf(t, e) {
    return t;
  }
  function Gr(t, e) {
    return (
      Af &&
        !gu(t, [0, 0]) &&
        t[0] >= -180 &&
        t[0] <= 180 &&
        t[1] >= -90 &&
        t[1] <= 90 &&
        ((Af = !1),
        G_(
          "Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates."
        )),
      t
    );
  }
  function Y_(t, e) {
    return t;
  }
  function To(t, e) {
    return t;
  }
  function JH() {
    Yv(Uv), Yv(Gv), ZH(Gv, Uv, FH, BH);
  }
  JH();
  function qv(t, e, n) {
    return function (r, i, o, s, a) {
      if (!r) return;
      if (!i && !e) return r;
      const l = e ? 0 : o[0] * i,
        c = e ? 0 : o[1] * i,
        u = a ? a[0] : 0,
        d = a ? a[1] : 0;
      let h = t[0] + l / 2 + u,
        g = t[2] - l / 2 + u,
        f = t[1] + c / 2 + d,
        p = t[3] - c / 2 + d;
      h > g && ((h = (g + h) / 2), (g = h)),
        f > p && ((f = (p + f) / 2), (p = f));
      let b = on(r[0], h, g),
        m = on(r[1], f, p);
      if (s && n && i) {
        const _ = 30 * i;
        (b +=
          -_ * Math.log(1 + Math.max(0, h - r[0]) / _) +
          _ * Math.log(1 + Math.max(0, r[0] - g) / _)),
          (m +=
            -_ * Math.log(1 + Math.max(0, f - r[1]) / _) +
            _ * Math.log(1 + Math.max(0, r[1] - p) / _));
      }
      return [b, m];
    };
  }
  function QH(t) {
    return t;
  }
  function mp(t, e, n, r) {
    const i = Dt(e) / n[0],
      o = Yn(e) / n[1];
    return r ? Math.min(t, Math.max(i, o)) : Math.min(t, Math.min(i, o));
  }
  function vp(t, e, n) {
    let r = Math.min(t, e);
    const i = 50;
    return (
      (r *= Math.log(1 + i * Math.max(0, t / e - 1)) / i + 1),
      n &&
        ((r = Math.max(r, n)),
        (r /= Math.log(1 + i * Math.max(0, n / t - 1)) / i + 1)),
      on(r, n / 2, e * 2)
    );
  }
  function eW(t, e, n, r) {
    return (
      (e = e !== void 0 ? e : !0),
      function (i, o, s, a) {
        if (i !== void 0) {
          const l = t[0],
            c = t[t.length - 1],
            u = n ? mp(l, n, s, r) : l;
          if (a) return e ? vp(i, u, c) : on(i, c, u);
          const d = Math.min(u, i),
            h = Math.floor(tp(t, d, o));
          return t[h] > u && h < t.length - 1 ? t[h + 1] : t[h];
        }
      }
    );
  }
  function tW(t, e, n, r, i, o) {
    return (
      (r = r !== void 0 ? r : !0),
      (n = n !== void 0 ? n : 0),
      function (s, a, l, c) {
        if (s !== void 0) {
          const u = i ? mp(e, i, l, o) : e;
          if (c) return r ? vp(s, u, n) : on(s, n, u);
          const d = 1e-9,
            h = Math.ceil(Math.log(e / u) / Math.log(t) - d),
            g = -a * (0.5 - d) + 0.5,
            f = Math.min(u, s),
            p = Math.floor(Math.log(e / f) / Math.log(t) + g),
            b = Math.max(h, p),
            m = e / Math.pow(t, b);
          return on(m, n, u);
        }
      }
    );
  }
  function Zv(t, e, n, r, i) {
    return (
      (n = n !== void 0 ? n : !0),
      function (o, s, a, l) {
        if (o !== void 0) {
          const c = r ? mp(t, r, a, i) : t;
          return !n || !l ? on(o, e, c) : vp(o, c, e);
        }
      }
    );
  }
  function bp(t) {
    if (t !== void 0) return 0;
  }
  function Jv(t) {
    if (t !== void 0) return t;
  }
  function nW(t) {
    const e = (2 * Math.PI) / t;
    return function (n, r) {
      if (r) return n;
      if (n !== void 0) return (n = Math.floor(n / e + 0.5) * e), n;
    };
  }
  function rW(t) {
    const e = t === void 0 ? Bc(5) : t;
    return function (n, r) {
      return r || n === void 0 ? n : Math.abs(n) <= e ? 0 : n;
    };
  }
  function q_(t) {
    return Math.pow(t, 3);
  }
  function oa(t) {
    return 1 - q_(1 - t);
  }
  function iW(t) {
    return 3 * t * t - 2 * t * t * t;
  }
  function oW(t) {
    return t;
  }
  function Wi(t, e, n, r, i, o) {
    o = o || [];
    let s = 0;
    for (let a = e; a < n; a += r) {
      const l = t[a],
        c = t[a + 1];
      (o[s++] = i[0] * l + i[2] * c + i[4]),
        (o[s++] = i[1] * l + i[3] * c + i[5]);
    }
    return o && o.length != s && (o.length = s), o;
  }
  function Z_(t, e, n, r, i, o, s) {
    s = s || [];
    const a = Math.cos(i),
      l = Math.sin(i),
      c = o[0],
      u = o[1];
    let d = 0;
    for (let h = e; h < n; h += r) {
      const g = t[h] - c,
        f = t[h + 1] - u;
      (s[d++] = c + g * a - f * l), (s[d++] = u + g * l + f * a);
      for (let p = h + 2; p < h + r; ++p) s[d++] = t[p];
    }
    return s && s.length != d && (s.length = d), s;
  }
  function sW(t, e, n, r, i, o, s, a) {
    a = a || [];
    const l = s[0],
      c = s[1];
    let u = 0;
    for (let d = e; d < n; d += r) {
      const h = t[d] - l,
        g = t[d + 1] - c;
      (a[u++] = l + i * h), (a[u++] = c + o * g);
      for (let f = d + 2; f < d + r; ++f) a[u++] = t[f];
    }
    return a && a.length != u && (a.length = u), a;
  }
  function aW(t, e, n, r, i, o, s) {
    s = s || [];
    let a = 0;
    for (let l = e; l < n; l += r) {
      (s[a++] = t[l] + i), (s[a++] = t[l + 1] + o);
      for (let c = l + 2; c < l + r; ++c) s[a++] = t[c];
    }
    return s && s.length != a && (s.length = a), s;
  }
  const Qv = vr();
  class lW extends Nr {
    constructor() {
      super(),
        (this.extent_ = ur()),
        (this.extentRevision_ = -1),
        (this.simplifiedGeometryMaxMinSquaredTolerance = 0),
        (this.simplifiedGeometryRevision = 0),
        (this.simplifyTransformedInternal = R_((e, n, r) => {
          if (!r) return this.getSimplifiedGeometry(n);
          const i = this.clone();
          return i.applyTransform(r), i.getSimplifiedGeometry(n);
        }));
    }
    simplifyTransformed(e, n) {
      return this.simplifyTransformedInternal(this.getRevision(), e, n);
    }
    clone() {
      return dt();
    }
    closestPointXY(e, n, r, i) {
      return dt();
    }
    containsXY(e, n) {
      const r = this.getClosestPoint([e, n]);
      return r[0] === e && r[1] === n;
    }
    getClosestPoint(e, n) {
      return (
        (n = n || [NaN, NaN]), this.closestPointXY(e[0], e[1], n, 1 / 0), n
      );
    }
    intersectsCoordinate(e) {
      return this.containsXY(e[0], e[1]);
    }
    computeExtent(e) {
      return dt();
    }
    getExtent(e) {
      if (this.extentRevision_ != this.getRevision()) {
        const n = this.computeExtent(this.extent_);
        (isNaN(n[0]) || isNaN(n[1])) && gd(n),
          (this.extentRevision_ = this.getRevision());
      }
      return _H(this.extent_, e);
    }
    rotate(e, n) {
      dt();
    }
    scale(e, n, r) {
      dt();
    }
    simplify(e) {
      return this.getSimplifiedGeometry(e * e);
    }
    getSimplifiedGeometry(e) {
      return dt();
    }
    getType() {
      return dt();
    }
    applyTransform(e) {
      dt();
    }
    intersectsExtent(e) {
      return dt();
    }
    translate(e, n) {
      dt();
    }
    transform(e, n) {
      const r = dr(e),
        i =
          r.getUnits() == "tile-pixels"
            ? function (o, s, a) {
                const l = r.getExtent(),
                  c = r.getWorldExtent(),
                  u = Yn(c) / Yn(l);
                return (
                  oi(Qv, c[0], c[3], u, -u, 0, 0, 0),
                  Wi(o, 0, o.length, a, Qv, s),
                  pu(r, n)(o, s, a)
                );
              }
            : pu(r, n);
      return this.applyTransform(i), this;
    }
  }
  class yp extends lW {
    constructor() {
      super(), (this.layout = "XY"), (this.stride = 2), this.flatCoordinates;
    }
    computeExtent(e) {
      return sp(
        this.flatCoordinates,
        0,
        this.flatCoordinates.length,
        this.stride,
        e
      );
    }
    getCoordinates() {
      return dt();
    }
    getFirstCoordinate() {
      return this.flatCoordinates.slice(0, this.stride);
    }
    getFlatCoordinates() {
      return this.flatCoordinates;
    }
    getLastCoordinate() {
      return this.flatCoordinates.slice(
        this.flatCoordinates.length - this.stride
      );
    }
    getLayout() {
      return this.layout;
    }
    getSimplifiedGeometry(e) {
      if (
        (this.simplifiedGeometryRevision !== this.getRevision() &&
          ((this.simplifiedGeometryMaxMinSquaredTolerance = 0),
          (this.simplifiedGeometryRevision = this.getRevision())),
        e < 0 ||
          (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&
            e <= this.simplifiedGeometryMaxMinSquaredTolerance))
      )
        return this;
      const n = this.getSimplifiedGeometryInternal(e);
      return n.getFlatCoordinates().length < this.flatCoordinates.length
        ? n
        : ((this.simplifiedGeometryMaxMinSquaredTolerance = e), this);
    }
    getSimplifiedGeometryInternal(e) {
      return this;
    }
    getStride() {
      return this.stride;
    }
    setFlatCoordinates(e, n) {
      (this.stride = eb(e)), (this.layout = e), (this.flatCoordinates = n);
    }
    setCoordinates(e, n) {
      dt();
    }
    setLayout(e, n, r) {
      let i;
      if (e) i = eb(e);
      else {
        for (let o = 0; o < r; ++o) {
          if (n.length === 0) {
            (this.layout = "XY"), (this.stride = 2);
            return;
          }
          n = n[0];
        }
        (i = n.length), (e = cW(i));
      }
      (this.layout = e), (this.stride = i);
    }
    applyTransform(e) {
      this.flatCoordinates &&
        (e(this.flatCoordinates, this.flatCoordinates, this.stride),
        this.changed());
    }
    rotate(e, n) {
      const r = this.getFlatCoordinates();
      if (r) {
        const i = this.getStride();
        Z_(r, 0, r.length, i, e, n, r), this.changed();
      }
    }
    scale(e, n, r) {
      n === void 0 && (n = e), r || (r = zo(this.getExtent()));
      const i = this.getFlatCoordinates();
      if (i) {
        const o = this.getStride();
        sW(i, 0, i.length, o, e, n, r, i), this.changed();
      }
    }
    translate(e, n) {
      const r = this.getFlatCoordinates();
      if (r) {
        const i = this.getStride();
        aW(r, 0, r.length, i, e, n, r), this.changed();
      }
    }
  }
  function cW(t) {
    let e;
    return (
      t == 2 ? (e = "XY") : t == 3 ? (e = "XYZ") : t == 4 && (e = "XYZM"), e
    );
  }
  function eb(t) {
    let e;
    return (
      t == "XY"
        ? (e = 2)
        : t == "XYZ" || t == "XYM"
        ? (e = 3)
        : t == "XYZM" && (e = 4),
      e
    );
  }
  function uW(t, e, n) {
    const r = t.getFlatCoordinates();
    if (!r) return null;
    const i = t.getStride();
    return Wi(r, 0, r.length, i, e, n);
  }
  function tb(t, e, n, r, i, o, s) {
    const a = t[e],
      l = t[e + 1],
      c = t[n] - a,
      u = t[n + 1] - l;
    let d;
    if (c === 0 && u === 0) d = e;
    else {
      const h = ((i - a) * c + (o - l) * u) / (c * c + u * u);
      if (h > 1) d = n;
      else if (h > 0) {
        for (let g = 0; g < r; ++g) s[g] = er(t[e + g], t[n + g], h);
        s.length = r;
        return;
      } else d = e;
    }
    for (let h = 0; h < r; ++h) s[h] = t[d + h];
    s.length = r;
  }
  function J_(t, e, n, r, i) {
    let o = t[e],
      s = t[e + 1];
    for (e += r; e < n; e += r) {
      const a = t[e],
        l = t[e + 1],
        c = Ps(o, s, a, l);
      c > i && (i = c), (o = a), (s = l);
    }
    return i;
  }
  function dW(t, e, n, r, i) {
    for (let o = 0, s = n.length; o < s; ++o) {
      const a = n[o];
      (i = J_(t, e, a, r, i)), (e = a);
    }
    return i;
  }
  function Q_(t, e, n, r, i, o, s, a, l, c, u) {
    if (e == n) return c;
    let d, h;
    if (i === 0) {
      if (((h = Ps(s, a, t[e], t[e + 1])), h < c)) {
        for (d = 0; d < r; ++d) l[d] = t[e + d];
        return (l.length = r), h;
      }
      return c;
    }
    u = u || [NaN, NaN];
    let g = e + r;
    for (; g < n; )
      if ((tb(t, g - r, g, r, s, a, u), (h = Ps(s, a, u[0], u[1])), h < c)) {
        for (c = h, d = 0; d < r; ++d) l[d] = u[d];
        (l.length = r), (g += r);
      } else g += r * Math.max(((Math.sqrt(h) - Math.sqrt(c)) / i) | 0, 1);
    if (o && (tb(t, n - r, e, r, s, a, u), (h = Ps(s, a, u[0], u[1])), h < c)) {
      for (c = h, d = 0; d < r; ++d) l[d] = u[d];
      l.length = r;
    }
    return c;
  }
  function hW(t, e, n, r, i, o, s, a, l, c, u) {
    u = u || [NaN, NaN];
    for (let d = 0, h = n.length; d < h; ++d) {
      const g = n[d];
      (c = Q_(t, e, g, r, i, o, s, a, l, c, u)), (e = g);
    }
    return c;
  }
  function fW(t, e, n, r) {
    for (let i = 0, o = n.length; i < o; ++i) t[e++] = n[i];
    return e;
  }
  function ew(t, e, n, r) {
    for (let i = 0, o = n.length; i < o; ++i) {
      const s = n[i];
      for (let a = 0; a < r; ++a) t[e++] = s[a];
    }
    return e;
  }
  function gW(t, e, n, r, i) {
    i = i || [];
    let o = 0;
    for (let s = 0, a = n.length; s < a; ++s) {
      const l = ew(t, e, n[s], r);
      (i[o++] = l), (e = l);
    }
    return (i.length = o), i;
  }
  function xp(t, e, n, r, i, o, s) {
    const a = (n - e) / r;
    if (a < 3) {
      for (; e < n; e += r) (o[s++] = t[e]), (o[s++] = t[e + 1]);
      return s;
    }
    const l = new Array(a);
    (l[0] = 1), (l[a - 1] = 1);
    const c = [e, n - r];
    let u = 0;
    for (; c.length > 0; ) {
      const d = c.pop(),
        h = c.pop();
      let g = 0;
      const f = t[h],
        p = t[h + 1],
        b = t[d],
        m = t[d + 1];
      for (let _ = h + r; _ < d; _ += r) {
        const R = t[_],
          S = t[_ + 1],
          x = PH(R, S, f, p, b, m);
        x > g && ((u = _), (g = x));
      }
      g > i &&
        ((l[(u - e) / r] = 1),
        h + r < u && c.push(h, u),
        u + r < d && c.push(u, d));
    }
    for (let d = 0; d < a; ++d)
      l[d] && ((o[s++] = t[e + d * r]), (o[s++] = t[e + d * r + 1]));
    return s;
  }
  function pW(t, e, n, r, i, o, s, a) {
    for (let l = 0, c = n.length; l < c; ++l) {
      const u = n[l];
      (s = xp(t, e, u, r, i, o, s)), a.push(s), (e = u);
    }
    return s;
  }
  function bo(t, e) {
    return e * Math.round(t / e);
  }
  function mW(t, e, n, r, i, o, s) {
    if (e == n) return s;
    let a = bo(t[e], i),
      l = bo(t[e + 1], i);
    (e += r), (o[s++] = a), (o[s++] = l);
    let c, u;
    do
      if (((c = bo(t[e], i)), (u = bo(t[e + 1], i)), (e += r), e == n))
        return (o[s++] = c), (o[s++] = u), s;
    while (c == a && u == l);
    for (; e < n; ) {
      const d = bo(t[e], i),
        h = bo(t[e + 1], i);
      if (((e += r), d == c && h == u)) continue;
      const g = c - a,
        f = u - l,
        p = d - a,
        b = h - l;
      if (
        g * b == f * p &&
        ((g < 0 && p < g) || g == p || (g > 0 && p > g)) &&
        ((f < 0 && b < f) || f == b || (f > 0 && b > f))
      ) {
        (c = d), (u = h);
        continue;
      }
      (o[s++] = c), (o[s++] = u), (a = c), (l = u), (c = d), (u = h);
    }
    return (o[s++] = c), (o[s++] = u), s;
  }
  function tw(t, e, n, r, i, o, s, a) {
    for (let l = 0, c = n.length; l < c; ++l) {
      const u = n[l];
      (s = mW(t, e, u, r, i, o, s)), a.push(s), (e = u);
    }
    return s;
  }
  function xs(t, e, n, r, i) {
    i = i !== void 0 ? i : [];
    let o = 0;
    for (let s = e; s < n; s += r) i[o++] = t.slice(s, s + r);
    return (i.length = o), i;
  }
  function mu(t, e, n, r, i) {
    i = i !== void 0 ? i : [];
    let o = 0;
    for (let s = 0, a = n.length; s < a; ++s) {
      const l = n[s];
      (i[o++] = xs(t, e, l, r, i[o])), (e = l);
    }
    return (i.length = o), i;
  }
  function nb(t, e, n, r, i) {
    i = i !== void 0 ? i : [];
    let o = 0;
    for (let s = 0, a = n.length; s < a; ++s) {
      const l = n[s];
      (i[o++] = l.length === 1 && l[0] === e ? [] : mu(t, e, l, r, i[o])),
        (e = l[l.length - 1]);
    }
    return (i.length = o), i;
  }
  function nw(t, e, n, r) {
    let i = 0,
      o = t[n - r],
      s = t[n - r + 1];
    for (; e < n; e += r) {
      const a = t[e],
        l = t[e + 1];
      (i += s * a - o * l), (o = a), (s = l);
    }
    return i / 2;
  }
  function vW(t, e, n, r) {
    let i = 0;
    for (let o = 0, s = n.length; o < s; ++o) {
      const a = n[o];
      (i += nw(t, e, a, r)), (e = a);
    }
    return i;
  }
  class pl extends yp {
    constructor(e, n) {
      super(),
        (this.maxDelta_ = -1),
        (this.maxDeltaRevision_ = -1),
        n !== void 0 && !Array.isArray(e[0])
          ? this.setFlatCoordinates(n, e)
          : this.setCoordinates(e, n);
    }
    clone() {
      return new pl(this.flatCoordinates.slice(), this.layout);
    }
    closestPointXY(e, n, r, i) {
      return i < M_(this.getExtent(), e, n)
        ? i
        : (this.maxDeltaRevision_ != this.getRevision() &&
            ((this.maxDelta_ = Math.sqrt(
              J_(
                this.flatCoordinates,
                0,
                this.flatCoordinates.length,
                this.stride,
                0
              )
            )),
            (this.maxDeltaRevision_ = this.getRevision())),
          Q_(
            this.flatCoordinates,
            0,
            this.flatCoordinates.length,
            this.stride,
            this.maxDelta_,
            !0,
            e,
            n,
            r,
            i
          ));
    }
    getArea() {
      return nw(
        this.flatCoordinates,
        0,
        this.flatCoordinates.length,
        this.stride
      );
    }
    getCoordinates() {
      return xs(
        this.flatCoordinates,
        0,
        this.flatCoordinates.length,
        this.stride
      );
    }
    getSimplifiedGeometryInternal(e) {
      const n = [];
      return (
        (n.length = xp(
          this.flatCoordinates,
          0,
          this.flatCoordinates.length,
          this.stride,
          e,
          n,
          0
        )),
        new pl(n, "XY")
      );
    }
    getType() {
      return "LinearRing";
    }
    intersectsExtent(e) {
      return !1;
    }
    setCoordinates(e, n) {
      this.setLayout(n, e, 1),
        this.flatCoordinates || (this.flatCoordinates = []),
        (this.flatCoordinates.length = ew(
          this.flatCoordinates,
          0,
          e,
          this.stride
        )),
        this.changed();
    }
  }
  class Cp extends yp {
    constructor(e, n) {
      super(), this.setCoordinates(e, n);
    }
    clone() {
      const e = new Cp(this.flatCoordinates.slice(), this.layout);
      return e.applyProperties(this), e;
    }
    closestPointXY(e, n, r, i) {
      const o = this.flatCoordinates,
        s = Ps(e, n, o[0], o[1]);
      if (s < i) {
        const a = this.stride;
        for (let l = 0; l < a; ++l) r[l] = o[l];
        return (r.length = a), s;
      }
      return i;
    }
    getCoordinates() {
      return this.flatCoordinates.slice();
    }
    computeExtent(e) {
      return $_(this.flatCoordinates, e);
    }
    getType() {
      return "Point";
    }
    intersectsExtent(e) {
      return L_(e, this.flatCoordinates[0], this.flatCoordinates[1]);
    }
    setCoordinates(e, n) {
      this.setLayout(n, e, 0),
        this.flatCoordinates || (this.flatCoordinates = []),
        (this.flatCoordinates.length = fW(
          this.flatCoordinates,
          0,
          e,
          this.stride
        )),
        this.changed();
    }
  }
  const Nc = Cp;
  function bW(t, e, n, r, i) {
    return !z_(i, function (s) {
      return !Po(t, e, n, r, s[0], s[1]);
    });
  }
  function Po(t, e, n, r, i, o) {
    let s = 0,
      a = t[n - r],
      l = t[n - r + 1];
    for (; e < n; e += r) {
      const c = t[e],
        u = t[e + 1];
      l <= o
        ? u > o && (c - a) * (o - l) - (i - a) * (u - l) > 0 && s++
        : u <= o && (c - a) * (o - l) - (i - a) * (u - l) < 0 && s--,
        (a = c),
        (l = u);
    }
    return s !== 0;
  }
  function rw(t, e, n, r, i, o) {
    if (n.length === 0 || !Po(t, e, n[0], r, i, o)) return !1;
    for (let s = 1, a = n.length; s < a; ++s)
      if (Po(t, n[s - 1], n[s], r, i, o)) return !1;
    return !0;
  }
  function _p(t, e, n, r, i, o, s) {
    let a, l, c, u, d, h, g;
    const f = i[o + 1],
      p = [];
    for (let _ = 0, R = n.length; _ < R; ++_) {
      const S = n[_];
      for (u = t[S - r], h = t[S - r + 1], a = e; a < S; a += r)
        (d = t[a]),
          (g = t[a + 1]),
          ((f <= h && g <= f) || (h <= f && f <= g)) &&
            ((c = ((f - h) / (g - h)) * (d - u) + u), p.push(c)),
          (u = d),
          (h = g);
    }
    let b = NaN,
      m = -1 / 0;
    for (p.sort(Xi), u = p[0], a = 1, l = p.length; a < l; ++a) {
      d = p[a];
      const _ = Math.abs(d - u);
      _ > m && ((c = (u + d) / 2), rw(t, e, n, r, c, f) && ((b = c), (m = _))),
        (u = d);
    }
    return isNaN(b) && (b = i[o]), s ? (s.push(b, f, m), s) : [b, f, m];
  }
  function yW(t, e, n, r, i) {
    let o = [];
    for (let s = 0, a = n.length; s < a; ++s) {
      const l = n[s];
      (o = _p(t, e, l, r, i, 2 * s, o)), (e = l[l.length - 1]);
    }
    return o;
  }
  function xW(t, e, n, r, i) {
    let o;
    for (e += r; e < n; e += r)
      if (((o = i(t.slice(e - r, e), t.slice(e, e + r))), o)) return o;
    return !1;
  }
  function iw(t, e, n, r, i) {
    const o = D_(ur(), t, e, n, r);
    return Bn(i, o)
      ? bs(i, o) ||
        (o[0] >= i[0] && o[2] <= i[2]) ||
        (o[1] >= i[1] && o[3] <= i[3])
        ? !0
        : xW(t, e, n, r, function (s, a) {
            return wH(i, s, a);
          })
      : !1;
  }
  function ow(t, e, n, r, i) {
    return !!(
      iw(t, e, n, r, i) ||
      Po(t, e, n, r, i[0], i[1]) ||
      Po(t, e, n, r, i[0], i[3]) ||
      Po(t, e, n, r, i[2], i[1]) ||
      Po(t, e, n, r, i[2], i[3])
    );
  }
  function CW(t, e, n, r, i) {
    if (!ow(t, e, n[0], r, i)) return !1;
    if (n.length === 1) return !0;
    for (let o = 1, s = n.length; o < s; ++o)
      if (bW(t, n[o - 1], n[o], r, i) && !iw(t, n[o - 1], n[o], r, i))
        return !1;
    return !0;
  }
  function _W(t, e, n, r) {
    for (; e < n - r; ) {
      for (let i = 0; i < r; ++i) {
        const o = t[e + i];
        (t[e + i] = t[n - r + i]), (t[n - r + i] = o);
      }
      (e += r), (n -= r);
    }
  }
  function wp(t, e, n, r) {
    let i = 0,
      o = t[n - r],
      s = t[n - r + 1];
    for (; e < n; e += r) {
      const a = t[e],
        l = t[e + 1];
      (i += (a - o) * (l + s)), (o = a), (s = l);
    }
    return i === 0 ? void 0 : i > 0;
  }
  function wW(t, e, n, r, i) {
    i = i !== void 0 ? i : !1;
    for (let o = 0, s = n.length; o < s; ++o) {
      const a = n[o],
        l = wp(t, e, a, r);
      if (o === 0) {
        if ((i && l) || (!i && !l)) return !1;
      } else if ((i && !l) || (!i && l)) return !1;
      e = a;
    }
    return !0;
  }
  function rb(t, e, n, r, i) {
    i = i !== void 0 ? i : !1;
    for (let o = 0, s = n.length; o < s; ++o) {
      const a = n[o],
        l = wp(t, e, a, r);
      (o === 0 ? (i && l) || (!i && !l) : (i && !l) || (!i && l)) &&
        _W(t, e, a, r),
        (e = a);
    }
    return e;
  }
  function SW(t, e) {
    const n = [];
    let r = 0,
      i = 0,
      o;
    for (let s = 0, a = e.length; s < a; ++s) {
      const l = e[s],
        c = wp(t, r, l, 2);
      if ((o === void 0 && (o = c), c === o)) n.push(e.slice(i, s + 1));
      else {
        if (n.length === 0) continue;
        n[n.length - 1].push(e[i]);
      }
      (i = s + 1), (r = l);
    }
    return n;
  }
  class ml extends yp {
    constructor(e, n, r) {
      super(),
        (this.ends_ = []),
        (this.flatInteriorPointRevision_ = -1),
        (this.flatInteriorPoint_ = null),
        (this.maxDelta_ = -1),
        (this.maxDeltaRevision_ = -1),
        (this.orientedRevision_ = -1),
        (this.orientedFlatCoordinates_ = null),
        n !== void 0 && r
          ? (this.setFlatCoordinates(n, e), (this.ends_ = r))
          : this.setCoordinates(e, n);
    }
    appendLinearRing(e) {
      this.flatCoordinates
        ? np(this.flatCoordinates, e.getFlatCoordinates())
        : (this.flatCoordinates = e.getFlatCoordinates().slice()),
        this.ends_.push(this.flatCoordinates.length),
        this.changed();
    }
    clone() {
      const e = new ml(
        this.flatCoordinates.slice(),
        this.layout,
        this.ends_.slice()
      );
      return e.applyProperties(this), e;
    }
    closestPointXY(e, n, r, i) {
      return i < M_(this.getExtent(), e, n)
        ? i
        : (this.maxDeltaRevision_ != this.getRevision() &&
            ((this.maxDelta_ = Math.sqrt(
              dW(this.flatCoordinates, 0, this.ends_, this.stride, 0)
            )),
            (this.maxDeltaRevision_ = this.getRevision())),
          hW(
            this.flatCoordinates,
            0,
            this.ends_,
            this.stride,
            this.maxDelta_,
            !0,
            e,
            n,
            r,
            i
          ));
    }
    containsXY(e, n) {
      return rw(
        this.getOrientedFlatCoordinates(),
        0,
        this.ends_,
        this.stride,
        e,
        n
      );
    }
    getArea() {
      return vW(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);
    }
    getCoordinates(e) {
      let n;
      return (
        e !== void 0
          ? ((n = this.getOrientedFlatCoordinates().slice()),
            rb(n, 0, this.ends_, this.stride, e))
          : (n = this.flatCoordinates),
        mu(n, 0, this.ends_, this.stride)
      );
    }
    getEnds() {
      return this.ends_;
    }
    getFlatInteriorPoint() {
      if (this.flatInteriorPointRevision_ != this.getRevision()) {
        const e = zo(this.getExtent());
        (this.flatInteriorPoint_ = _p(
          this.getOrientedFlatCoordinates(),
          0,
          this.ends_,
          this.stride,
          e,
          0
        )),
          (this.flatInteriorPointRevision_ = this.getRevision());
      }
      return this.flatInteriorPoint_;
    }
    getInteriorPoint() {
      return new Nc(this.getFlatInteriorPoint(), "XYM");
    }
    getLinearRingCount() {
      return this.ends_.length;
    }
    getLinearRing(e) {
      return e < 0 || this.ends_.length <= e
        ? null
        : new pl(
            this.flatCoordinates.slice(
              e === 0 ? 0 : this.ends_[e - 1],
              this.ends_[e]
            ),
            this.layout
          );
    }
    getLinearRings() {
      const e = this.layout,
        n = this.flatCoordinates,
        r = this.ends_,
        i = [];
      let o = 0;
      for (let s = 0, a = r.length; s < a; ++s) {
        const l = r[s],
          c = new pl(n.slice(o, l), e);
        i.push(c), (o = l);
      }
      return i;
    }
    getOrientedFlatCoordinates() {
      if (this.orientedRevision_ != this.getRevision()) {
        const e = this.flatCoordinates;
        wW(e, 0, this.ends_, this.stride)
          ? (this.orientedFlatCoordinates_ = e)
          : ((this.orientedFlatCoordinates_ = e.slice()),
            (this.orientedFlatCoordinates_.length = rb(
              this.orientedFlatCoordinates_,
              0,
              this.ends_,
              this.stride
            ))),
          (this.orientedRevision_ = this.getRevision());
      }
      return this.orientedFlatCoordinates_;
    }
    getSimplifiedGeometryInternal(e) {
      const n = [],
        r = [];
      return (
        (n.length = tw(
          this.flatCoordinates,
          0,
          this.ends_,
          this.stride,
          Math.sqrt(e),
          n,
          0,
          r
        )),
        new ml(n, "XY", r)
      );
    }
    getType() {
      return "Polygon";
    }
    intersectsExtent(e) {
      return CW(
        this.getOrientedFlatCoordinates(),
        0,
        this.ends_,
        this.stride,
        e
      );
    }
    setCoordinates(e, n) {
      this.setLayout(n, e, 2),
        this.flatCoordinates || (this.flatCoordinates = []);
      const r = gW(this.flatCoordinates, 0, e, this.stride, this.ends_);
      (this.flatCoordinates.length = r.length === 0 ? 0 : r[r.length - 1]),
        this.changed();
    }
  }
  function ib(t) {
    if (bd(t)) throw new Error("Cannot create polygon from empty extent");
    const e = t[0],
      n = t[1],
      r = t[2],
      i = t[3],
      o = [e, n, e, i, r, i, r, n, e, n];
    return new ml(o, "XY", [o.length]);
  }
  const Ch = 0;
  class EW extends Nr {
    constructor(e) {
      super(),
        this.on,
        this.once,
        this.un,
        (e = Object.assign({}, e)),
        (this.hints_ = [0, 0]),
        (this.animations_ = []),
        this.updateAnimationKey_,
        (this.projection_ = fp(e.projection, "EPSG:3857")),
        (this.viewportSize_ = [100, 100]),
        (this.targetCenter_ = null),
        this.targetResolution_,
        this.targetRotation_,
        (this.nextCenter_ = null),
        this.nextResolution_,
        this.nextRotation_,
        (this.cancelAnchor_ = void 0),
        e.projection && X_(),
        e.center && (e.center = Gr(e.center, this.projection_)),
        e.extent && (e.extent = To(e.extent, this.projection_)),
        this.applyOptions_(e);
    }
    applyOptions_(e) {
      const n = Object.assign({}, e);
      for (const a in fr) delete n[a];
      this.setProperties(n, !0);
      const r = TW(e);
      (this.maxResolution_ = r.maxResolution),
        (this.minResolution_ = r.minResolution),
        (this.zoomFactor_ = r.zoomFactor),
        (this.resolutions_ = e.resolutions),
        (this.padding_ = e.padding),
        (this.minZoom_ = r.minZoom);
      const i = RW(e),
        o = r.constraint,
        s = PW(e);
      (this.constraints_ = { center: i, resolution: o, rotation: s }),
        this.setRotation(e.rotation !== void 0 ? e.rotation : 0),
        this.setCenterInternal(e.center !== void 0 ? e.center : null),
        e.resolution !== void 0
          ? this.setResolution(e.resolution)
          : e.zoom !== void 0 && this.setZoom(e.zoom);
    }
    get padding() {
      return this.padding_;
    }
    set padding(e) {
      let n = this.padding_;
      this.padding_ = e;
      const r = this.getCenterInternal();
      if (r) {
        const i = e || [0, 0, 0, 0];
        n = n || [0, 0, 0, 0];
        const o = this.getResolution(),
          s = (o / 2) * (i[3] - n[3] + n[1] - i[1]),
          a = (o / 2) * (i[0] - n[0] + n[2] - i[2]);
        this.setCenterInternal([r[0] + s, r[1] - a]);
      }
    }
    getUpdatedOptions_(e) {
      const n = this.getProperties();
      return (
        n.resolution !== void 0
          ? (n.resolution = this.getResolution())
          : (n.zoom = this.getZoom()),
        (n.center = this.getCenterInternal()),
        (n.rotation = this.getRotation()),
        Object.assign({}, n, e)
      );
    }
    animate(e) {
      this.isDef() && !this.getAnimating() && this.resolveConstraints(0);
      const n = new Array(arguments.length);
      for (let r = 0; r < n.length; ++r) {
        let i = arguments[r];
        i.center &&
          ((i = Object.assign({}, i)),
          (i.center = Gr(i.center, this.getProjection()))),
          i.anchor &&
            ((i = Object.assign({}, i)),
            (i.anchor = Gr(i.anchor, this.getProjection()))),
          (n[r] = i);
      }
      this.animateInternal.apply(this, n);
    }
    animateInternal(e) {
      let n = arguments.length,
        r;
      n > 1 &&
        typeof arguments[n - 1] == "function" &&
        ((r = arguments[n - 1]), --n);
      let i = 0;
      for (; i < n && !this.isDef(); ++i) {
        const u = arguments[i];
        u.center && this.setCenterInternal(u.center),
          u.zoom !== void 0
            ? this.setZoom(u.zoom)
            : u.resolution && this.setResolution(u.resolution),
          u.rotation !== void 0 && this.setRotation(u.rotation);
      }
      if (i === n) {
        r && wc(r, !0);
        return;
      }
      let o = Date.now(),
        s = this.targetCenter_.slice(),
        a = this.targetResolution_,
        l = this.targetRotation_;
      const c = [];
      for (; i < n; ++i) {
        const u = arguments[i],
          d = {
            start: o,
            complete: !1,
            anchor: u.anchor,
            duration: u.duration !== void 0 ? u.duration : 1e3,
            easing: u.easing || iW,
            callback: r,
          };
        if (
          (u.center &&
            ((d.sourceCenter = s),
            (d.targetCenter = u.center.slice()),
            (s = d.targetCenter)),
          u.zoom !== void 0
            ? ((d.sourceResolution = a),
              (d.targetResolution = this.getResolutionForZoom(u.zoom)),
              (a = d.targetResolution))
            : u.resolution &&
              ((d.sourceResolution = a),
              (d.targetResolution = u.resolution),
              (a = d.targetResolution)),
          u.rotation !== void 0)
        ) {
          d.sourceRotation = l;
          const h = As(u.rotation - l + Math.PI, 2 * Math.PI) - Math.PI;
          (d.targetRotation = l + h), (l = d.targetRotation);
        }
        AW(d) ? (d.complete = !0) : (o += d.duration), c.push(d);
      }
      this.animations_.push(c),
        this.setHint(Cn.ANIMATING, 1),
        this.updateAnimations_();
    }
    getAnimating() {
      return this.hints_[Cn.ANIMATING] > 0;
    }
    getInteracting() {
      return this.hints_[Cn.INTERACTING] > 0;
    }
    cancelAnimations() {
      this.setHint(Cn.ANIMATING, -this.hints_[Cn.ANIMATING]);
      let e;
      for (let n = 0, r = this.animations_.length; n < r; ++n) {
        const i = this.animations_[n];
        if ((i[0].callback && wc(i[0].callback, !1), !e))
          for (let o = 0, s = i.length; o < s; ++o) {
            const a = i[o];
            if (!a.complete) {
              e = a.anchor;
              break;
            }
          }
      }
      (this.animations_.length = 0),
        (this.cancelAnchor_ = e),
        (this.nextCenter_ = null),
        (this.nextResolution_ = NaN),
        (this.nextRotation_ = NaN);
    }
    updateAnimations_() {
      if (
        (this.updateAnimationKey_ !== void 0 &&
          (cancelAnimationFrame(this.updateAnimationKey_),
          (this.updateAnimationKey_ = void 0)),
        !this.getAnimating())
      )
        return;
      const e = Date.now();
      let n = !1;
      for (let r = this.animations_.length - 1; r >= 0; --r) {
        const i = this.animations_[r];
        let o = !0;
        for (let s = 0, a = i.length; s < a; ++s) {
          const l = i[s];
          if (l.complete) continue;
          const c = e - l.start;
          let u = l.duration > 0 ? c / l.duration : 1;
          u >= 1 ? ((l.complete = !0), (u = 1)) : (o = !1);
          const d = l.easing(u);
          if (l.sourceCenter) {
            const h = l.sourceCenter[0],
              g = l.sourceCenter[1],
              f = l.targetCenter[0],
              p = l.targetCenter[1];
            this.nextCenter_ = l.targetCenter;
            const b = h + d * (f - h),
              m = g + d * (p - g);
            this.targetCenter_ = [b, m];
          }
          if (l.sourceResolution && l.targetResolution) {
            const h =
              d === 1
                ? l.targetResolution
                : l.sourceResolution +
                  d * (l.targetResolution - l.sourceResolution);
            if (l.anchor) {
              const g = this.getViewportSize_(this.getRotation()),
                f = this.constraints_.resolution(h, 0, g, !0);
              this.targetCenter_ = this.calculateCenterZoom(f, l.anchor);
            }
            (this.nextResolution_ = l.targetResolution),
              (this.targetResolution_ = h),
              this.applyTargetState_(!0);
          }
          if (l.sourceRotation !== void 0 && l.targetRotation !== void 0) {
            const h =
              d === 1
                ? As(l.targetRotation + Math.PI, 2 * Math.PI) - Math.PI
                : l.sourceRotation + d * (l.targetRotation - l.sourceRotation);
            if (l.anchor) {
              const g = this.constraints_.rotation(h, !0);
              this.targetCenter_ = this.calculateCenterRotate(g, l.anchor);
            }
            (this.nextRotation_ = l.targetRotation), (this.targetRotation_ = h);
          }
          if ((this.applyTargetState_(!0), (n = !0), !l.complete)) break;
        }
        if (o) {
          (this.animations_[r] = null),
            this.setHint(Cn.ANIMATING, -1),
            (this.nextCenter_ = null),
            (this.nextResolution_ = NaN),
            (this.nextRotation_ = NaN);
          const s = i[0].callback;
          s && wc(s, !0);
        }
      }
      (this.animations_ = this.animations_.filter(Boolean)),
        n &&
          this.updateAnimationKey_ === void 0 &&
          (this.updateAnimationKey_ = requestAnimationFrame(
            this.updateAnimations_.bind(this)
          ));
    }
    calculateCenterRotate(e, n) {
      let r;
      const i = this.getCenterInternal();
      return (
        i !== void 0 &&
          ((r = [i[0] - n[0], i[1] - n[1]]),
          dp(r, e - this.getRotation()),
          VH(r, n)),
        r
      );
    }
    calculateCenterZoom(e, n) {
      let r;
      const i = this.getCenterInternal(),
        o = this.getResolution();
      if (i !== void 0 && o !== void 0) {
        const s = n[0] - (e * (n[0] - i[0])) / o,
          a = n[1] - (e * (n[1] - i[1])) / o;
        r = [s, a];
      }
      return r;
    }
    getViewportSize_(e) {
      const n = this.viewportSize_;
      if (e) {
        const r = n[0],
          i = n[1];
        return [
          Math.abs(r * Math.cos(e)) + Math.abs(i * Math.sin(e)),
          Math.abs(r * Math.sin(e)) + Math.abs(i * Math.cos(e)),
        ];
      }
      return n;
    }
    setViewportSize(e) {
      (this.viewportSize_ = Array.isArray(e) ? e.slice() : [100, 100]),
        this.getAnimating() || this.resolveConstraints(0);
    }
    getCenter() {
      const e = this.getCenterInternal();
      return e && kf(e, this.getProjection());
    }
    getCenterInternal() {
      return this.get(fr.CENTER);
    }
    getConstraints() {
      return this.constraints_;
    }
    getConstrainResolution() {
      return this.get("constrainResolution");
    }
    getHints(e) {
      return e !== void 0
        ? ((e[0] = this.hints_[0]), (e[1] = this.hints_[1]), e)
        : this.hints_.slice();
    }
    calculateExtent(e) {
      const n = this.calculateExtentInternal(e);
      return Y_(n, this.getProjection());
    }
    calculateExtentInternal(e) {
      e = e || this.getViewportSizeMinusPadding_();
      const n = this.getCenterInternal();
      ut(n, "The view center is not defined");
      const r = this.getResolution();
      ut(r !== void 0, "The view resolution is not defined");
      const i = this.getRotation();
      return (
        ut(i !== void 0, "The view rotation is not defined"), Rf(n, r, i, e)
      );
    }
    getMaxResolution() {
      return this.maxResolution_;
    }
    getMinResolution() {
      return this.minResolution_;
    }
    getMaxZoom() {
      return this.getZoomForResolution(this.minResolution_);
    }
    setMaxZoom(e) {
      this.applyOptions_(this.getUpdatedOptions_({ maxZoom: e }));
    }
    getMinZoom() {
      return this.getZoomForResolution(this.maxResolution_);
    }
    setMinZoom(e) {
      this.applyOptions_(this.getUpdatedOptions_({ minZoom: e }));
    }
    setConstrainResolution(e) {
      this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: e }));
    }
    getProjection() {
      return this.projection_;
    }
    getResolution() {
      return this.get(fr.RESOLUTION);
    }
    getResolutions() {
      return this.resolutions_;
    }
    getResolutionForExtent(e, n) {
      return this.getResolutionForExtentInternal(
        To(e, this.getProjection()),
        n
      );
    }
    getResolutionForExtentInternal(e, n) {
      n = n || this.getViewportSizeMinusPadding_();
      const r = Dt(e) / n[0],
        i = Yn(e) / n[1];
      return Math.max(r, i);
    }
    getResolutionForValueFunction(e) {
      e = e || 2;
      const n = this.getConstrainedResolution(this.maxResolution_),
        r = this.minResolution_,
        i = Math.log(n / r) / Math.log(e);
      return function (o) {
        return n / Math.pow(e, o * i);
      };
    }
    getRotation() {
      return this.get(fr.ROTATION);
    }
    getValueForResolutionFunction(e) {
      const n = Math.log(e || 2),
        r = this.getConstrainedResolution(this.maxResolution_),
        i = this.minResolution_,
        o = Math.log(r / i) / n;
      return function (s) {
        return Math.log(r / s) / n / o;
      };
    }
    getViewportSizeMinusPadding_(e) {
      let n = this.getViewportSize_(e);
      const r = this.padding_;
      return r && (n = [n[0] - r[1] - r[3], n[1] - r[0] - r[2]]), n;
    }
    getState() {
      const e = this.getProjection(),
        n = this.getResolution(),
        r = this.getRotation();
      let i = this.getCenterInternal();
      const o = this.padding_;
      if (o) {
        const s = this.getViewportSizeMinusPadding_();
        i = _h(
          i,
          this.getViewportSize_(),
          [s[0] / 2 + o[3], s[1] / 2 + o[0]],
          n,
          r
        );
      }
      return {
        center: i.slice(0),
        projection: e !== void 0 ? e : null,
        resolution: n,
        nextCenter: this.nextCenter_,
        nextResolution: this.nextResolution_,
        nextRotation: this.nextRotation_,
        rotation: r,
        zoom: this.getZoom(),
      };
    }
    getViewStateAndExtent() {
      return { viewState: this.getState(), extent: this.calculateExtent() };
    }
    getZoom() {
      let e;
      const n = this.getResolution();
      return n !== void 0 && (e = this.getZoomForResolution(n)), e;
    }
    getZoomForResolution(e) {
      let n = this.minZoom_ || 0,
        r,
        i;
      if (this.resolutions_) {
        const o = tp(this.resolutions_, e, 1);
        (n = o),
          (r = this.resolutions_[o]),
          o == this.resolutions_.length - 1
            ? (i = 2)
            : (i = r / this.resolutions_[o + 1]);
      } else (r = this.maxResolution_), (i = this.zoomFactor_);
      return n + Math.log(r / e) / Math.log(i);
    }
    getResolutionForZoom(e) {
      if (this.resolutions_) {
        if (this.resolutions_.length <= 1) return 0;
        const n = on(Math.floor(e), 0, this.resolutions_.length - 2),
          r = this.resolutions_[n] / this.resolutions_[n + 1];
        return this.resolutions_[n] / Math.pow(r, on(e - n, 0, 1));
      }
      return (
        this.maxResolution_ / Math.pow(this.zoomFactor_, e - this.minZoom_)
      );
    }
    fit(e, n) {
      let r;
      if (
        (ut(
          Array.isArray(e) || typeof e.getSimplifiedGeometry == "function",
          "Invalid extent or geometry provided as `geometry`"
        ),
        Array.isArray(e))
      ) {
        ut(!bd(e), "Cannot fit empty extent provided as `geometry`");
        const i = To(e, this.getProjection());
        r = ib(i);
      } else if (e.getType() === "Circle") {
        const i = To(e.getExtent(), this.getProjection());
        (r = ib(i)), r.rotate(this.getRotation(), zo(i));
      } else r = e;
      this.fitInternal(r, n);
    }
    rotatedExtentForGeometry(e) {
      const n = this.getRotation(),
        r = Math.cos(n),
        i = Math.sin(-n),
        o = e.getFlatCoordinates(),
        s = e.getStride();
      let a = 1 / 0,
        l = 1 / 0,
        c = -1 / 0,
        u = -1 / 0;
      for (let d = 0, h = o.length; d < h; d += s) {
        const g = o[d] * r - o[d + 1] * i,
          f = o[d] * i + o[d + 1] * r;
        (a = Math.min(a, g)),
          (l = Math.min(l, f)),
          (c = Math.max(c, g)),
          (u = Math.max(u, f));
      }
      return [a, l, c, u];
    }
    fitInternal(e, n) {
      n = n || {};
      let r = n.size;
      r || (r = this.getViewportSizeMinusPadding_());
      const i = n.padding !== void 0 ? n.padding : [0, 0, 0, 0],
        o = n.nearest !== void 0 ? n.nearest : !1;
      let s;
      n.minResolution !== void 0
        ? (s = n.minResolution)
        : n.maxZoom !== void 0
        ? (s = this.getResolutionForZoom(n.maxZoom))
        : (s = 0);
      const a = this.rotatedExtentForGeometry(e);
      let l = this.getResolutionForExtentInternal(a, [
        r[0] - i[1] - i[3],
        r[1] - i[0] - i[2],
      ]);
      (l = isNaN(l) ? s : Math.max(l, s)),
        (l = this.getConstrainedResolution(l, o ? 0 : 1));
      const c = this.getRotation(),
        u = Math.sin(c),
        d = Math.cos(c),
        h = zo(a);
      (h[0] += ((i[1] - i[3]) / 2) * l), (h[1] += ((i[0] - i[2]) / 2) * l);
      const g = h[0] * d - h[1] * u,
        f = h[1] * d + h[0] * u,
        p = this.getConstrainedCenter([g, f], l),
        b = n.callback ? n.callback : Us;
      n.duration !== void 0
        ? this.animateInternal(
            {
              resolution: l,
              center: p,
              duration: n.duration,
              easing: n.easing,
            },
            b
          )
        : ((this.targetResolution_ = l),
          (this.targetCenter_ = p),
          this.applyTargetState_(!1, !0),
          wc(b, !0));
    }
    centerOn(e, n, r) {
      this.centerOnInternal(Gr(e, this.getProjection()), n, r);
    }
    centerOnInternal(e, n, r) {
      this.setCenterInternal(
        _h(e, n, r, this.getResolution(), this.getRotation())
      );
    }
    calculateCenterShift(e, n, r, i) {
      let o;
      const s = this.padding_;
      if (s && e) {
        const a = this.getViewportSizeMinusPadding_(-r),
          l = _h(e, i, [a[0] / 2 + s[3], a[1] / 2 + s[0]], n, r);
        o = [e[0] - l[0], e[1] - l[1]];
      }
      return o;
    }
    isDef() {
      return !!this.getCenterInternal() && this.getResolution() !== void 0;
    }
    adjustCenter(e) {
      const n = kf(this.targetCenter_, this.getProjection());
      this.setCenter([n[0] + e[0], n[1] + e[1]]);
    }
    adjustCenterInternal(e) {
      const n = this.targetCenter_;
      this.setCenterInternal([n[0] + e[0], n[1] + e[1]]);
    }
    adjustResolution(e, n) {
      (n = n && Gr(n, this.getProjection())),
        this.adjustResolutionInternal(e, n);
    }
    adjustResolutionInternal(e, n) {
      const r = this.getAnimating() || this.getInteracting(),
        i = this.getViewportSize_(this.getRotation()),
        o = this.constraints_.resolution(this.targetResolution_ * e, 0, i, r);
      n && (this.targetCenter_ = this.calculateCenterZoom(o, n)),
        (this.targetResolution_ *= e),
        this.applyTargetState_();
    }
    adjustZoom(e, n) {
      this.adjustResolution(Math.pow(this.zoomFactor_, -e), n);
    }
    adjustRotation(e, n) {
      n && (n = Gr(n, this.getProjection())), this.adjustRotationInternal(e, n);
    }
    adjustRotationInternal(e, n) {
      const r = this.getAnimating() || this.getInteracting(),
        i = this.constraints_.rotation(this.targetRotation_ + e, r);
      n && (this.targetCenter_ = this.calculateCenterRotate(i, n)),
        (this.targetRotation_ += e),
        this.applyTargetState_();
    }
    setCenter(e) {
      this.setCenterInternal(e && Gr(e, this.getProjection()));
    }
    setCenterInternal(e) {
      (this.targetCenter_ = e), this.applyTargetState_();
    }
    setHint(e, n) {
      return (this.hints_[e] += n), this.changed(), this.hints_[e];
    }
    setResolution(e) {
      (this.targetResolution_ = e), this.applyTargetState_();
    }
    setRotation(e) {
      (this.targetRotation_ = e), this.applyTargetState_();
    }
    setZoom(e) {
      this.setResolution(this.getResolutionForZoom(e));
    }
    applyTargetState_(e, n) {
      const r = this.getAnimating() || this.getInteracting() || n,
        i = this.constraints_.rotation(this.targetRotation_, r),
        o = this.getViewportSize_(i),
        s = this.constraints_.resolution(this.targetResolution_, 0, o, r),
        a = this.constraints_.center(
          this.targetCenter_,
          s,
          o,
          r,
          this.calculateCenterShift(this.targetCenter_, s, i, o)
        );
      this.get(fr.ROTATION) !== i && this.set(fr.ROTATION, i),
        this.get(fr.RESOLUTION) !== s &&
          (this.set(fr.RESOLUTION, s), this.set("zoom", this.getZoom(), !0)),
        (!a || !this.get(fr.CENTER) || !gu(this.get(fr.CENTER), a)) &&
          this.set(fr.CENTER, a),
        this.getAnimating() && !e && this.cancelAnimations(),
        (this.cancelAnchor_ = void 0);
    }
    resolveConstraints(e, n, r) {
      e = e !== void 0 ? e : 200;
      const i = n || 0,
        o = this.constraints_.rotation(this.targetRotation_),
        s = this.getViewportSize_(o),
        a = this.constraints_.resolution(this.targetResolution_, i, s),
        l = this.constraints_.center(
          this.targetCenter_,
          a,
          s,
          !1,
          this.calculateCenterShift(this.targetCenter_, a, o, s)
        );
      if (e === 0 && !this.cancelAnchor_) {
        (this.targetResolution_ = a),
          (this.targetRotation_ = o),
          (this.targetCenter_ = l),
          this.applyTargetState_();
        return;
      }
      (r = r || (e === 0 ? this.cancelAnchor_ : void 0)),
        (this.cancelAnchor_ = void 0),
        (this.getResolution() !== a ||
          this.getRotation() !== o ||
          !this.getCenterInternal() ||
          !gu(this.getCenterInternal(), l)) &&
          (this.getAnimating() && this.cancelAnimations(),
          this.animateInternal({
            rotation: o,
            center: l,
            resolution: a,
            duration: e,
            easing: oa,
            anchor: r,
          }));
    }
    beginInteraction() {
      this.resolveConstraints(0), this.setHint(Cn.INTERACTING, 1);
    }
    endInteraction(e, n, r) {
      (r = r && Gr(r, this.getProjection())),
        this.endInteractionInternal(e, n, r);
    }
    endInteractionInternal(e, n, r) {
      this.getInteracting() &&
        (this.setHint(Cn.INTERACTING, -1), this.resolveConstraints(e, n, r));
    }
    getConstrainedCenter(e, n) {
      const r = this.getViewportSize_(this.getRotation());
      return this.constraints_.center(e, n || this.getResolution(), r);
    }
    getConstrainedZoom(e, n) {
      const r = this.getResolutionForZoom(e);
      return this.getZoomForResolution(this.getConstrainedResolution(r, n));
    }
    getConstrainedResolution(e, n) {
      n = n || 0;
      const r = this.getViewportSize_(this.getRotation());
      return this.constraints_.resolution(e, n, r);
    }
  }
  function wc(t, e) {
    setTimeout(function () {
      t(e);
    }, 0);
  }
  function RW(t) {
    if (t.extent !== void 0) {
      const n =
        t.smoothExtentConstraint !== void 0 ? t.smoothExtentConstraint : !0;
      return qv(t.extent, t.constrainOnlyCenter, n);
    }
    const e = fp(t.projection, "EPSG:3857");
    if (t.multiWorld !== !0 && e.isGlobal()) {
      const n = e.getExtent().slice();
      return (n[0] = -1 / 0), (n[2] = 1 / 0), qv(n, !1, !1);
    }
    return QH;
  }
  function TW(t) {
    let e,
      n,
      r,
      s = t.minZoom !== void 0 ? t.minZoom : Ch,
      a = t.maxZoom !== void 0 ? t.maxZoom : 28;
    const l = t.zoomFactor !== void 0 ? t.zoomFactor : 2,
      c = t.multiWorld !== void 0 ? t.multiWorld : !1,
      u =
        t.smoothResolutionConstraint !== void 0
          ? t.smoothResolutionConstraint
          : !0,
      d = t.showFullExtent !== void 0 ? t.showFullExtent : !1,
      h = fp(t.projection, "EPSG:3857"),
      g = h.getExtent();
    let f = t.constrainOnlyCenter,
      p = t.extent;
    if (
      (!c && !p && h.isGlobal() && ((f = !1), (p = g)),
      t.resolutions !== void 0)
    ) {
      const b = t.resolutions;
      (n = b[s]),
        (r = b[a] !== void 0 ? b[a] : b[b.length - 1]),
        t.constrainResolution
          ? (e = eW(b, u, !f && p, d))
          : (e = Zv(n, r, u, !f && p, d));
    } else {
      const m =
          (g
            ? Math.max(Dt(g), Yn(g))
            : (360 * gl.degrees) / h.getMetersPerUnit()) /
          up /
          Math.pow(2, Ch),
        _ = m / Math.pow(2, 28 - Ch);
      (n = t.maxResolution),
        n !== void 0 ? (s = 0) : (n = m / Math.pow(l, s)),
        (r = t.minResolution),
        r === void 0 &&
          (t.maxZoom !== void 0
            ? t.maxResolution !== void 0
              ? (r = n / Math.pow(l, a))
              : (r = m / Math.pow(l, a))
            : (r = _)),
        (a = s + Math.floor(Math.log(n / r) / Math.log(l))),
        (r = n / Math.pow(l, a - s)),
        t.constrainResolution
          ? (e = tW(l, n, r, u, !f && p, d))
          : (e = Zv(n, r, u, !f && p, d));
    }
    return {
      constraint: e,
      maxResolution: n,
      minResolution: r,
      minZoom: s,
      zoomFactor: l,
    };
  }
  function PW(t) {
    if (t.enableRotation !== void 0 ? t.enableRotation : !0) {
      const n = t.constrainRotation;
      return n === void 0 || n === !0
        ? rW()
        : n === !1
        ? Jv
        : typeof n == "number"
        ? nW(n)
        : Jv;
    }
    return bp;
  }
  function AW(t) {
    return !(
      (t.sourceCenter &&
        t.targetCenter &&
        !gu(t.sourceCenter, t.targetCenter)) ||
      t.sourceResolution !== t.targetResolution ||
      t.sourceRotation !== t.targetRotation
    );
  }
  function _h(t, e, n, r, i) {
    const o = Math.cos(-i);
    let s = Math.sin(-i),
      a = t[0] * o - t[1] * s,
      l = t[1] * o + t[0] * s;
    (a += (e[0] / 2 - n[0]) * r), (l += (n[1] - e[1] / 2) * r), (s = -s);
    const c = a * o - l * s,
      u = l * o + a * s;
    return [c, u];
  }
  const Ar = EW;
  class kW extends j_ {
    constructor(e) {
      const n = Object.assign({}, e);
      delete n.source,
        super(n),
        this.on,
        this.once,
        this.un,
        (this.mapPrecomposeKey_ = null),
        (this.mapRenderKey_ = null),
        (this.sourceChangeKey_ = null),
        (this.renderer_ = null),
        (this.sourceReady_ = !1),
        (this.rendered = !1),
        e.render && (this.render = e.render),
        e.map && this.setMap(e.map),
        this.addChangeListener(Tt.SOURCE, this.handleSourcePropertyChange_);
      const r = e.source ? e.source : null;
      this.setSource(r);
    }
    getLayersArray(e) {
      return (e = e || []), e.push(this), e;
    }
    getLayerStatesArray(e) {
      return (e = e || []), e.push(this.getLayerState()), e;
    }
    getSource() {
      return this.get(Tt.SOURCE) || null;
    }
    getRenderSource() {
      return this.getSource();
    }
    getSourceState() {
      const e = this.getSource();
      return e ? e.getState() : "undefined";
    }
    handleSourceChange_() {
      this.changed(),
        !(this.sourceReady_ || this.getSource().getState() !== "ready") &&
          ((this.sourceReady_ = !0), this.dispatchEvent("sourceready"));
    }
    handleSourcePropertyChange_() {
      this.sourceChangeKey_ &&
        (Wt(this.sourceChangeKey_), (this.sourceChangeKey_ = null)),
        (this.sourceReady_ = !1);
      const e = this.getSource();
      e &&
        ((this.sourceChangeKey_ = ft(
          e,
          it.CHANGE,
          this.handleSourceChange_,
          this
        )),
        e.getState() === "ready" &&
          ((this.sourceReady_ = !0),
          setTimeout(() => {
            this.dispatchEvent("sourceready");
          }, 0))),
        this.changed();
    }
    getFeatures(e) {
      return this.renderer_
        ? this.renderer_.getFeatures(e)
        : Promise.resolve([]);
    }
    getData(e) {
      return !this.renderer_ || !this.rendered
        ? null
        : this.renderer_.getData(e);
    }
    isVisible(e) {
      let n;
      const r = this.getMapInternal();
      !e && r && (e = r.getView()),
        e instanceof Ar
          ? (n = { viewState: e.getState(), extent: e.calculateExtent() })
          : (n = e),
        !n.layerStatesArray &&
          r &&
          (n.layerStatesArray = r.getLayerGroup().getLayerStatesArray());
      let i;
      n.layerStatesArray
        ? (i = n.layerStatesArray.find((s) => s.layer === this))
        : (i = this.getLayerState());
      const o = this.getExtent();
      return Sp(i, n.viewState) && (!o || Bn(o, n.extent));
    }
    getAttributions(e) {
      if (!this.isVisible(e)) return [];
      let n;
      const r = this.getSource();
      if ((r && (n = r.getAttributions()), !n)) return [];
      const i = e instanceof Ar ? e.getViewStateAndExtent() : e;
      let o = n(i);
      return Array.isArray(o) || (o = [o]), o;
    }
    render(e, n) {
      const r = this.getRenderer();
      return r.prepareFrame(e)
        ? ((this.rendered = !0), r.renderFrame(e, n))
        : null;
    }
    unrender() {
      this.rendered = !1;
    }
    setMapInternal(e) {
      e || this.unrender(), this.set(Tt.MAP, e);
    }
    getMapInternal() {
      return this.get(Tt.MAP);
    }
    setMap(e) {
      this.mapPrecomposeKey_ &&
        (Wt(this.mapPrecomposeKey_), (this.mapPrecomposeKey_ = null)),
        e || this.changed(),
        this.mapRenderKey_ &&
          (Wt(this.mapRenderKey_), (this.mapRenderKey_ = null)),
        e &&
          ((this.mapPrecomposeKey_ = ft(
            e,
            Dr.PRECOMPOSE,
            function (n) {
              const i = n.frameState.layerStatesArray,
                o = this.getLayerState(!1);
              ut(
                !i.some(function (s) {
                  return s.layer === o.layer;
                }),
                "A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both."
              ),
                i.push(o);
            },
            this
          )),
          (this.mapRenderKey_ = ft(this, it.CHANGE, e.render, e)),
          this.changed());
    }
    setSource(e) {
      this.set(Tt.SOURCE, e);
    }
    getRenderer() {
      return (
        this.renderer_ || (this.renderer_ = this.createRenderer()),
        this.renderer_
      );
    }
    hasRenderer() {
      return !!this.renderer_;
    }
    createRenderer() {
      return null;
    }
    disposeInternal() {
      this.renderer_ && (this.renderer_.dispose(), delete this.renderer_),
        this.setSource(null),
        super.disposeInternal();
    }
  }
  function Sp(t, e) {
    if (!t.visible) return !1;
    const n = e.resolution;
    if (n < t.minResolution || n >= t.maxResolution) return !1;
    const r = e.zoom;
    return r > t.minZoom && r <= t.maxZoom;
  }
  const yd = kW;
  class IW extends ep {
    constructor(e) {
      super(), (this.map_ = e);
    }
    dispatchRenderEvent(e, n) {
      dt();
    }
    calculateMatrices2D(e) {
      const n = e.viewState,
        r = e.coordinateToPixelTransform,
        i = e.pixelToCoordinateTransform;
      oi(
        r,
        e.size[0] / 2,
        e.size[1] / 2,
        1 / n.resolution,
        -1 / n.resolution,
        -n.rotation,
        -n.center[0],
        -n.center[1]
      ),
        ip(i, r);
    }
    forEachFeatureAtCoordinate(e, n, r, i, o, s, a, l) {
      let c;
      const u = n.viewState;
      function d(S, x, E, w) {
        return o.call(s, x, S ? E : null, w);
      }
      const h = u.projection,
        g = V_(e.slice(), h),
        f = [[0, 0]];
      if (h.canWrapX() && i) {
        const S = h.getExtent(),
          x = Dt(S);
        f.push([-x, 0], [x, 0]);
      }
      const p = n.layerStatesArray,
        b = p.length,
        m = [],
        _ = [];
      for (let S = 0; S < f.length; S++)
        for (let x = b - 1; x >= 0; --x) {
          const E = p[x],
            w = E.layer;
          if (w.hasRenderer() && Sp(E, u) && a.call(l, w)) {
            const v = w.getRenderer(),
              y = w.getSource();
            if (v && y) {
              const T = y.getWrapX() ? g : e,
                A = d.bind(null, E.managed);
              (_[0] = T[0] + f[S][0]),
                (_[1] = T[1] + f[S][1]),
                (c = v.forEachFeatureAtCoordinate(_, n, r, A, m));
            }
            if (c) return c;
          }
        }
      if (m.length === 0) return;
      const R = 1 / m.length;
      return (
        m.forEach((S, x) => (S.distanceSq += x * R)),
        m.sort((S, x) => S.distanceSq - x.distanceSq),
        m.some((S) => (c = S.callback(S.feature, S.layer, S.geometry))),
        c
      );
    }
    hasFeatureAtCoordinate(e, n, r, i, o, s) {
      return (
        this.forEachFeatureAtCoordinate(e, n, r, i, dl, this, o, s) !== void 0
      );
    }
    getMap() {
      return this.map_;
    }
    renderFrame(e) {
      dt();
    }
    flushDeclutterItems(e) {}
    scheduleExpireIconCache(e) {
      hu.canExpireCache() && e.postRenderFunctions.push(OW);
    }
  }
  function OW(t, e) {
    hu.expire();
  }
  class sw extends fi {
    constructor(e, n, r, i) {
      super(e),
        (this.inversePixelTransform = n),
        (this.frameState = r),
        (this.context = i);
    }
  }
  const Sc = "ol-hidden",
    xd = "ol-unselectable",
    Ep = "ol-control",
    ob = "ol-collapsed",
    MW = new RegExp(
      [
        "^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)",
        "(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)",
        "(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)",
        "(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?",
        "(?:small|large)|medium|smaller|larger|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))",
        "(?:\\s*\\/\\s*(normal|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])?))",
        `?\\s*([-,\\"\\'\\sa-z]+?)\\s*$`,
      ].join(""),
      "i"
    ),
    sb = ["style", "variant", "weight", "size", "lineHeight", "family"],
    aw = function (t) {
      const e = t.match(MW);
      if (!e) return null;
      const n = {
        lineHeight: "normal",
        size: "1.2em",
        style: "normal",
        weight: "normal",
        variant: "normal",
      };
      for (let r = 0, i = sb.length; r < i; ++r) {
        const o = e[r + 1];
        o !== void 0 && (n[sb[r]] = o);
      }
      return (n.families = n.family.split(/,\s?/)), n;
    };
  function On(t, e, n, r) {
    let i;
    return (
      n && n.length
        ? (i = n.shift())
        : rp
        ? (i = new OffscreenCanvas(t || 300, e || 300))
        : (i = document.createElement("canvas")),
      t && (i.width = t),
      e && (i.height = e),
      i.getContext("2d", r)
    );
  }
  function Cd(t) {
    const e = t.canvas;
    (e.width = 1), (e.height = 1), t.clearRect(0, 0, 1, 1);
  }
  function ab(t, e) {
    const n = e.parentNode;
    n && n.replaceChild(t, e);
  }
  function If(t) {
    return t && t.parentNode ? t.parentNode.removeChild(t) : null;
  }
  function LW(t) {
    for (; t.lastChild; ) t.removeChild(t.lastChild);
  }
  function $W(t, e) {
    const n = t.childNodes;
    for (let r = 0; ; ++r) {
      const i = n[r],
        o = e[r];
      if (!i && !o) break;
      if (i !== o) {
        if (!i) {
          t.appendChild(o);
          continue;
        }
        if (!o) {
          t.removeChild(i), --r;
          continue;
        }
        t.insertBefore(o, i);
      }
    }
  }
  const lw = "10px sans-serif",
    Fn = "#000",
    Gs = "round",
    Qr = [],
    ei = 0,
    Xs = "round",
    vl = 10,
    bl = "#000",
    yl = "center",
    vu = "middle",
    Ao = [0, 0, 0, 0],
    xl = 1,
    Xr = new Nr();
  let gs = null,
    Of;
  const Mf = {},
    DW = (function () {
      const e = "32px ",
        n = ["monospace", "serif"],
        r = n.length,
        i = "wmytzilWMYTZIL@#/&?$%10";
      let o, s;
      function a(c, u, d) {
        let h = !0;
        for (let g = 0; g < r; ++g) {
          const f = n[g];
          if (((s = bu(c + " " + u + " " + e + f, i)), d != f)) {
            const p = bu(c + " " + u + " " + e + d + "," + f, i);
            h = h && p != s;
          }
        }
        return !!h;
      }
      function l() {
        let c = !0;
        const u = Xr.getKeys();
        for (let d = 0, h = u.length; d < h; ++d) {
          const g = u[d];
          Xr.get(g) < 100 &&
            (a.apply(
              this,
              g.split(`
`)
            )
              ? (Hl(Mf), (gs = null), (Of = void 0), Xr.set(g, 100))
              : (Xr.set(g, Xr.get(g) + 1, !0), (c = !1)));
        }
        c && (clearInterval(o), (o = void 0));
      }
      return function (c) {
        const u = aw(c);
        if (!u) return;
        const d = u.families;
        for (let h = 0, g = d.length; h < g; ++h) {
          const f = d[h],
            p =
              u.style +
              `
` +
              u.weight +
              `
` +
              f;
          Xr.get(p) === void 0 &&
            (Xr.set(p, 100, !0),
            a(u.style, u.weight, f) ||
              (Xr.set(p, 0, !0), o === void 0 && (o = setInterval(l, 32))));
        }
      };
    })(),
    zW = (function () {
      let t;
      return function (e) {
        let n = Mf[e];
        if (n == null) {
          if (rp) {
            const r = aw(e),
              i = cw(e, "Žg");
            n =
              (isNaN(Number(r.lineHeight)) ? 1.2 : Number(r.lineHeight)) *
              (i.actualBoundingBoxAscent + i.actualBoundingBoxDescent);
          } else
            t ||
              ((t = document.createElement("div")),
              (t.innerHTML = "M"),
              (t.style.minHeight = "0"),
              (t.style.maxHeight = "none"),
              (t.style.height = "auto"),
              (t.style.padding = "0"),
              (t.style.border = "none"),
              (t.style.position = "absolute"),
              (t.style.display = "block"),
              (t.style.left = "-99999px")),
              (t.style.font = e),
              document.body.appendChild(t),
              (n = t.offsetHeight),
              document.body.removeChild(t);
          Mf[e] = n;
        }
        return n;
      };
    })();
  function cw(t, e) {
    return (
      gs || (gs = On(1, 1)),
      t != Of && ((gs.font = t), (Of = gs.font)),
      gs.measureText(e)
    );
  }
  function bu(t, e) {
    return cw(t, e).width;
  }
  function lb(t, e, n) {
    if (e in n) return n[e];
    const r = e
      .split(
        `
`
      )
      .reduce((i, o) => Math.max(i, bu(t, o)), 0);
    return (n[e] = r), r;
  }
  function FW(t, e) {
    const n = [],
      r = [],
      i = [];
    let o = 0,
      s = 0,
      a = 0,
      l = 0;
    for (let c = 0, u = e.length; c <= u; c += 2) {
      const d = e[c];
      if (
        d ===
          `
` ||
        c === u
      ) {
        (o = Math.max(o, s)), i.push(s), (s = 0), (a += l);
        continue;
      }
      const h = e[c + 1] || t.font,
        g = bu(h, d);
      n.push(g), (s += g);
      const f = zW(h);
      r.push(f), (l = Math.max(l, f));
    }
    return { width: o, height: a, widths: n, heights: r, lineWidths: i };
  }
  function BW(t, e, n, r, i, o, s, a, l, c, u) {
    t.save(),
      n !== 1 && (t.globalAlpha *= n),
      e && t.transform.apply(t, e),
      r.contextInstructions
        ? (t.translate(l, c), t.scale(u[0], u[1]), NW(r, t))
        : u[0] < 0 || u[1] < 0
        ? (t.translate(l, c),
          t.scale(u[0], u[1]),
          t.drawImage(r, i, o, s, a, 0, 0, s, a))
        : t.drawImage(r, i, o, s, a, l, c, s * u[0], a * u[1]),
      t.restore();
  }
  function NW(t, e) {
    const n = t.contextInstructions;
    for (let r = 0, i = n.length; r < i; r += 2)
      Array.isArray(n[r + 1])
        ? e[n[r]].apply(e, n[r + 1])
        : (e[n[r]] = n[r + 1]);
  }
  class HW extends IW {
    constructor(e) {
      super(e),
        (this.fontChangeListenerKey_ = ft(
          Xr,
          js.PROPERTYCHANGE,
          e.redrawText.bind(e)
        )),
        (this.element_ = document.createElement("div"));
      const n = this.element_.style;
      (n.position = "absolute"),
        (n.width = "100%"),
        (n.height = "100%"),
        (n.zIndex = "0"),
        (this.element_.className = xd + " ol-layers");
      const r = e.getViewport();
      r.insertBefore(this.element_, r.firstChild || null),
        (this.children_ = []),
        (this.renderedVisible_ = !0),
        (this.declutterLayers_ = []);
    }
    dispatchRenderEvent(e, n) {
      const r = this.getMap();
      if (r.hasListener(e)) {
        const i = new sw(e, void 0, n);
        r.dispatchEvent(i);
      }
    }
    disposeInternal() {
      Wt(this.fontChangeListenerKey_),
        this.element_.parentNode.removeChild(this.element_),
        super.disposeInternal();
    }
    renderFrame(e) {
      if (!e) {
        this.renderedVisible_ &&
          ((this.element_.style.display = "none"),
          (this.renderedVisible_ = !1));
        return;
      }
      this.calculateMatrices2D(e), this.dispatchRenderEvent(Dr.PRECOMPOSE, e);
      const n = e.layerStatesArray.sort(function (s, a) {
          return s.zIndex - a.zIndex;
        }),
        r = e.viewState;
      this.children_.length = 0;
      const i = this.declutterLayers_;
      i.length = 0;
      let o = null;
      for (let s = 0, a = n.length; s < a; ++s) {
        const l = n[s];
        e.layerIndex = s;
        const c = l.layer,
          u = c.getSourceState();
        if (!Sp(l, r) || (u != "ready" && u != "undefined")) {
          c.unrender();
          continue;
        }
        const d = c.render(e, o);
        d &&
          (d !== o && (this.children_.push(d), (o = d)),
          "getDeclutter" in c && i.push(c));
      }
      this.flushDeclutterItems(e),
        $W(this.element_, this.children_),
        this.dispatchRenderEvent(Dr.POSTCOMPOSE, e),
        this.renderedVisible_ ||
          ((this.element_.style.display = ""), (this.renderedVisible_ = !0)),
        this.scheduleExpireIconCache(e);
    }
    flushDeclutterItems(e) {
      const n = this.declutterLayers_;
      for (let r = n.length - 1; r >= 0; --r) n[r].renderDeclutter(e);
      n.length = 0;
    }
  }
  class $i extends fi {
    constructor(e, n) {
      super(e), (this.layer = n);
    }
  }
  const wh = { LAYERS: "layers" };
  class sa extends j_ {
    constructor(e) {
      e = e || {};
      const n = Object.assign({}, e);
      delete n.layers;
      let r = e.layers;
      super(n),
        this.on,
        this.once,
        this.un,
        (this.layersListenerKeys_ = []),
        (this.listenerKeys_ = {}),
        this.addChangeListener(wh.LAYERS, this.handleLayersChanged_),
        r
          ? Array.isArray(r)
            ? (r = new Or(r.slice(), { unique: !0 }))
            : ut(
                typeof r.getArray == "function",
                "Expected `layers` to be an array or a `Collection`"
              )
          : (r = new Or(void 0, { unique: !0 })),
        this.setLayers(r);
    }
    handleLayerChange_() {
      this.changed();
    }
    handleLayersChanged_() {
      this.layersListenerKeys_.forEach(Wt),
        (this.layersListenerKeys_.length = 0);
      const e = this.getLayers();
      this.layersListenerKeys_.push(
        ft(e, zn.ADD, this.handleLayersAdd_, this),
        ft(e, zn.REMOVE, this.handleLayersRemove_, this)
      );
      for (const r in this.listenerKeys_) this.listenerKeys_[r].forEach(Wt);
      Hl(this.listenerKeys_);
      const n = e.getArray();
      for (let r = 0, i = n.length; r < i; r++) {
        const o = n[r];
        this.registerLayerListeners_(o),
          this.dispatchEvent(new $i("addlayer", o));
      }
      this.changed();
    }
    registerLayerListeners_(e) {
      const n = [
        ft(e, js.PROPERTYCHANGE, this.handleLayerChange_, this),
        ft(e, it.CHANGE, this.handleLayerChange_, this),
      ];
      e instanceof sa &&
        n.push(
          ft(e, "addlayer", this.handleLayerGroupAdd_, this),
          ft(e, "removelayer", this.handleLayerGroupRemove_, this)
        ),
        (this.listenerKeys_[xt(e)] = n);
    }
    handleLayerGroupAdd_(e) {
      this.dispatchEvent(new $i("addlayer", e.layer));
    }
    handleLayerGroupRemove_(e) {
      this.dispatchEvent(new $i("removelayer", e.layer));
    }
    handleLayersAdd_(e) {
      const n = e.element;
      this.registerLayerListeners_(n),
        this.dispatchEvent(new $i("addlayer", n)),
        this.changed();
    }
    handleLayersRemove_(e) {
      const n = e.element,
        r = xt(n);
      this.listenerKeys_[r].forEach(Wt),
        delete this.listenerKeys_[r],
        this.dispatchEvent(new $i("removelayer", n)),
        this.changed();
    }
    getLayers() {
      return this.get(wh.LAYERS);
    }
    setLayers(e) {
      const n = this.getLayers();
      if (n) {
        const r = n.getArray();
        for (let i = 0, o = r.length; i < o; ++i)
          this.dispatchEvent(new $i("removelayer", r[i]));
      }
      this.set(wh.LAYERS, e);
    }
    getLayersArray(e) {
      return (
        (e = e !== void 0 ? e : []),
        this.getLayers().forEach(function (n) {
          n.getLayersArray(e);
        }),
        e
      );
    }
    getLayerStatesArray(e) {
      const n = e !== void 0 ? e : [],
        r = n.length;
      this.getLayers().forEach(function (s) {
        s.getLayerStatesArray(n);
      });
      const i = this.getLayerState();
      let o = i.zIndex;
      !e && i.zIndex === void 0 && (o = 0);
      for (let s = r, a = n.length; s < a; s++) {
        const l = n[s];
        (l.opacity *= i.opacity),
          (l.visible = l.visible && i.visible),
          (l.maxResolution = Math.min(l.maxResolution, i.maxResolution)),
          (l.minResolution = Math.max(l.minResolution, i.minResolution)),
          (l.minZoom = Math.max(l.minZoom, i.minZoom)),
          (l.maxZoom = Math.min(l.maxZoom, i.maxZoom)),
          i.extent !== void 0 &&
            (l.extent !== void 0
              ? (l.extent = Ua(l.extent, i.extent))
              : (l.extent = i.extent)),
          l.zIndex === void 0 && (l.zIndex = o);
      }
      return n;
    }
    getSourceState() {
      return "ready";
    }
  }
  class ps extends fi {
    constructor(e, n, r) {
      super(e), (this.map = n), (this.frameState = r !== void 0 ? r : null);
    }
  }
  class Pi extends ps {
    constructor(e, n, r, i, o, s) {
      super(e, n, o),
        (this.originalEvent = r),
        (this.pixel_ = null),
        (this.coordinate_ = null),
        (this.dragging = i !== void 0 ? i : !1),
        (this.activePointers = s);
    }
    get pixel() {
      return (
        this.pixel_ ||
          (this.pixel_ = this.map.getEventPixel(this.originalEvent)),
        this.pixel_
      );
    }
    set pixel(e) {
      this.pixel_ = e;
    }
    get coordinate() {
      return (
        this.coordinate_ ||
          (this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel)),
        this.coordinate_
      );
    }
    set coordinate(e) {
      this.coordinate_ = e;
    }
    preventDefault() {
      super.preventDefault(),
        "preventDefault" in this.originalEvent &&
          this.originalEvent.preventDefault();
    }
    stopPropagation() {
      super.stopPropagation(),
        "stopPropagation" in this.originalEvent &&
          this.originalEvent.stopPropagation();
    }
  }
  const Xt = {
      SINGLECLICK: "singleclick",
      CLICK: it.CLICK,
      DBLCLICK: it.DBLCLICK,
      POINTERDRAG: "pointerdrag",
      POINTERMOVE: "pointermove",
      POINTERDOWN: "pointerdown",
      POINTERUP: "pointerup",
      POINTEROVER: "pointerover",
      POINTEROUT: "pointerout",
      POINTERENTER: "pointerenter",
      POINTERLEAVE: "pointerleave",
      POINTERCANCEL: "pointercancel",
    },
    Lf = {
      POINTERMOVE: "pointermove",
      POINTERDOWN: "pointerdown",
      POINTERUP: "pointerup",
      POINTEROVER: "pointerover",
      POINTEROUT: "pointerout",
      POINTERENTER: "pointerenter",
      POINTERLEAVE: "pointerleave",
      POINTERCANCEL: "pointercancel",
    };
  class WW extends hd {
    constructor(e, n) {
      super(e),
        (this.map_ = e),
        this.clickTimeoutId_,
        (this.emulateClicks_ = !1),
        (this.dragging_ = !1),
        (this.dragListenerKeys_ = []),
        (this.moveTolerance_ = n === void 0 ? 1 : n),
        (this.down_ = null);
      const r = this.map_.getViewport();
      (this.activePointers_ = []),
        (this.trackedTouches_ = {}),
        (this.element_ = r),
        (this.pointerdownListenerKey_ = ft(
          r,
          Lf.POINTERDOWN,
          this.handlePointerDown_,
          this
        )),
        this.originalPointerMoveEvent_,
        (this.relayedListenerKey_ = ft(
          r,
          Lf.POINTERMOVE,
          this.relayMoveEvent_,
          this
        )),
        (this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this)),
        this.element_.addEventListener(
          it.TOUCHMOVE,
          this.boundHandleTouchMove_,
          k_ ? { passive: !1 } : !1
        );
    }
    emulateClick_(e) {
      let n = new Pi(Xt.CLICK, this.map_, e);
      this.dispatchEvent(n),
        this.clickTimeoutId_ !== void 0
          ? (clearTimeout(this.clickTimeoutId_),
            (this.clickTimeoutId_ = void 0),
            (n = new Pi(Xt.DBLCLICK, this.map_, e)),
            this.dispatchEvent(n))
          : (this.clickTimeoutId_ = setTimeout(() => {
              this.clickTimeoutId_ = void 0;
              const r = new Pi(Xt.SINGLECLICK, this.map_, e);
              this.dispatchEvent(r);
            }, 250));
    }
    updateActivePointers_(e) {
      const n = e,
        r = n.pointerId;
      if (n.type == Xt.POINTERUP || n.type == Xt.POINTERCANCEL) {
        delete this.trackedTouches_[r];
        for (const i in this.trackedTouches_)
          if (this.trackedTouches_[i].target !== n.target) {
            delete this.trackedTouches_[i];
            break;
          }
      } else
        (n.type == Xt.POINTERDOWN || n.type == Xt.POINTERMOVE) &&
          (this.trackedTouches_[r] = n);
      this.activePointers_ = Object.values(this.trackedTouches_);
    }
    handlePointerUp_(e) {
      this.updateActivePointers_(e);
      const n = new Pi(
        Xt.POINTERUP,
        this.map_,
        e,
        void 0,
        void 0,
        this.activePointers_
      );
      this.dispatchEvent(n),
        this.emulateClicks_ &&
          !n.defaultPrevented &&
          !this.dragging_ &&
          this.isMouseActionButton_(e) &&
          this.emulateClick_(this.down_),
        this.activePointers_.length === 0 &&
          (this.dragListenerKeys_.forEach(Wt),
          (this.dragListenerKeys_.length = 0),
          (this.dragging_ = !1),
          (this.down_ = null));
    }
    isMouseActionButton_(e) {
      return e.button === 0;
    }
    handlePointerDown_(e) {
      (this.emulateClicks_ = this.activePointers_.length === 0),
        this.updateActivePointers_(e);
      const n = new Pi(
        Xt.POINTERDOWN,
        this.map_,
        e,
        void 0,
        void 0,
        this.activePointers_
      );
      if (
        (this.dispatchEvent(n),
        (this.down_ = new PointerEvent(e.type, e)),
        Object.defineProperty(this.down_, "target", {
          writable: !1,
          value: e.target,
        }),
        this.dragListenerKeys_.length === 0)
      ) {
        const r = this.map_.getOwnerDocument();
        this.dragListenerKeys_.push(
          ft(r, Xt.POINTERMOVE, this.handlePointerMove_, this),
          ft(r, Xt.POINTERUP, this.handlePointerUp_, this),
          ft(this.element_, Xt.POINTERCANCEL, this.handlePointerUp_, this)
        ),
          this.element_.getRootNode &&
            this.element_.getRootNode() !== r &&
            this.dragListenerKeys_.push(
              ft(
                this.element_.getRootNode(),
                Xt.POINTERUP,
                this.handlePointerUp_,
                this
              )
            );
      }
    }
    handlePointerMove_(e) {
      if (this.isMoving_(e)) {
        this.updateActivePointers_(e), (this.dragging_ = !0);
        const n = new Pi(
          Xt.POINTERDRAG,
          this.map_,
          e,
          this.dragging_,
          void 0,
          this.activePointers_
        );
        this.dispatchEvent(n);
      }
    }
    relayMoveEvent_(e) {
      this.originalPointerMoveEvent_ = e;
      const n = !!(this.down_ && this.isMoving_(e));
      this.dispatchEvent(new Pi(Xt.POINTERMOVE, this.map_, e, n));
    }
    handleTouchMove_(e) {
      const n = this.originalPointerMoveEvent_;
      (!n || n.defaultPrevented) &&
        (typeof e.cancelable != "boolean" || e.cancelable === !0) &&
        e.preventDefault();
    }
    isMoving_(e) {
      return (
        this.dragging_ ||
        Math.abs(e.clientX - this.down_.clientX) > this.moveTolerance_ ||
        Math.abs(e.clientY - this.down_.clientY) > this.moveTolerance_
      );
    }
    disposeInternal() {
      this.relayedListenerKey_ &&
        (Wt(this.relayedListenerKey_), (this.relayedListenerKey_ = null)),
        this.element_.removeEventListener(
          it.TOUCHMOVE,
          this.boundHandleTouchMove_
        ),
        this.pointerdownListenerKey_ &&
          (Wt(this.pointerdownListenerKey_),
          (this.pointerdownListenerKey_ = null)),
        this.dragListenerKeys_.forEach(Wt),
        (this.dragListenerKeys_.length = 0),
        (this.element_ = null),
        super.disposeInternal();
    }
  }
  const Ai = {
      POSTRENDER: "postrender",
      MOVESTART: "movestart",
      MOVEEND: "moveend",
      LOADSTART: "loadstart",
      LOADEND: "loadend",
    },
    xn = {
      LAYERGROUP: "layergroup",
      SIZE: "size",
      TARGET: "target",
      VIEW: "view",
    },
    yu = 1 / 0;
  class jW {
    constructor(e, n) {
      (this.priorityFunction_ = e),
        (this.keyFunction_ = n),
        (this.elements_ = []),
        (this.priorities_ = []),
        (this.queuedElements_ = {});
    }
    clear() {
      (this.elements_.length = 0),
        (this.priorities_.length = 0),
        Hl(this.queuedElements_);
    }
    dequeue() {
      const e = this.elements_,
        n = this.priorities_,
        r = e[0];
      e.length == 1
        ? ((e.length = 0), (n.length = 0))
        : ((e[0] = e.pop()), (n[0] = n.pop()), this.siftUp_(0));
      const i = this.keyFunction_(r);
      return delete this.queuedElements_[i], r;
    }
    enqueue(e) {
      ut(
        !(this.keyFunction_(e) in this.queuedElements_),
        "Tried to enqueue an `element` that was already added to the queue"
      );
      const n = this.priorityFunction_(e);
      return n != yu
        ? (this.elements_.push(e),
          this.priorities_.push(n),
          (this.queuedElements_[this.keyFunction_(e)] = !0),
          this.siftDown_(0, this.elements_.length - 1),
          !0)
        : !1;
    }
    getCount() {
      return this.elements_.length;
    }
    getLeftChildIndex_(e) {
      return e * 2 + 1;
    }
    getRightChildIndex_(e) {
      return e * 2 + 2;
    }
    getParentIndex_(e) {
      return (e - 1) >> 1;
    }
    heapify_() {
      let e;
      for (e = (this.elements_.length >> 1) - 1; e >= 0; e--) this.siftUp_(e);
    }
    isEmpty() {
      return this.elements_.length === 0;
    }
    isKeyQueued(e) {
      return e in this.queuedElements_;
    }
    isQueued(e) {
      return this.isKeyQueued(this.keyFunction_(e));
    }
    siftUp_(e) {
      const n = this.elements_,
        r = this.priorities_,
        i = n.length,
        o = n[e],
        s = r[e],
        a = e;
      for (; e < i >> 1; ) {
        const l = this.getLeftChildIndex_(e),
          c = this.getRightChildIndex_(e),
          u = c < i && r[c] < r[l] ? c : l;
        (n[e] = n[u]), (r[e] = r[u]), (e = u);
      }
      (n[e] = o), (r[e] = s), this.siftDown_(a, e);
    }
    siftDown_(e, n) {
      const r = this.elements_,
        i = this.priorities_,
        o = r[n],
        s = i[n];
      for (; n > e; ) {
        const a = this.getParentIndex_(n);
        if (i[a] > s) (r[n] = r[a]), (i[n] = i[a]), (n = a);
        else break;
      }
      (r[n] = o), (i[n] = s);
    }
    reprioritize() {
      const e = this.priorityFunction_,
        n = this.elements_,
        r = this.priorities_;
      let i = 0;
      const o = n.length;
      let s, a, l;
      for (a = 0; a < o; ++a)
        (s = n[a]),
          (l = e(s)),
          l == yu
            ? delete this.queuedElements_[this.keyFunction_(s)]
            : ((r[i] = l), (n[i++] = s));
      (n.length = i), (r.length = i), this.heapify_();
    }
  }
  const qe = { IDLE: 0, LOADING: 1, LOADED: 2, ERROR: 3, EMPTY: 4 };
  class UW extends jW {
    constructor(e, n) {
      super(
        function (r) {
          return e.apply(null, r);
        },
        function (r) {
          return r[0].getKey();
        }
      ),
        (this.boundHandleTileChange_ = this.handleTileChange.bind(this)),
        (this.tileChangeCallback_ = n),
        (this.tilesLoading_ = 0),
        (this.tilesLoadingKeys_ = {});
    }
    enqueue(e) {
      const n = super.enqueue(e);
      return (
        n && e[0].addEventListener(it.CHANGE, this.boundHandleTileChange_), n
      );
    }
    getTilesLoading() {
      return this.tilesLoading_;
    }
    handleTileChange(e) {
      const n = e.target,
        r = n.getState();
      if (r === qe.LOADED || r === qe.ERROR || r === qe.EMPTY) {
        r !== qe.ERROR &&
          n.removeEventListener(it.CHANGE, this.boundHandleTileChange_);
        const i = n.getKey();
        i in this.tilesLoadingKeys_ &&
          (delete this.tilesLoadingKeys_[i], --this.tilesLoading_),
          this.tileChangeCallback_();
      }
    }
    loadMoreTiles(e, n) {
      let r = 0,
        i,
        o,
        s;
      for (; this.tilesLoading_ < e && r < n && this.getCount() > 0; )
        (o = this.dequeue()[0]),
          (s = o.getKey()),
          (i = o.getState()),
          i === qe.IDLE &&
            !(s in this.tilesLoadingKeys_) &&
            ((this.tilesLoadingKeys_[s] = !0),
            ++this.tilesLoading_,
            ++r,
            o.load());
    }
  }
  function VW(t, e, n, r, i) {
    if (!t || !(n in t.wantedTiles) || !t.wantedTiles[n][e.getKey()]) return yu;
    const o = t.viewState.center,
      s = r[0] - o[0],
      a = r[1] - o[1];
    return 65536 * Math.log(i) + Math.sqrt(s * s + a * a) / i;
  }
  class Rp extends Nr {
    constructor(e) {
      super();
      const n = e.element;
      n &&
        !e.target &&
        !n.style.pointerEvents &&
        (n.style.pointerEvents = "auto"),
        (this.element = n || null),
        (this.target_ = null),
        (this.map_ = null),
        (this.listenerKeys = []),
        e.render && (this.render = e.render),
        e.target && this.setTarget(e.target);
    }
    disposeInternal() {
      If(this.element), super.disposeInternal();
    }
    getMap() {
      return this.map_;
    }
    setMap(e) {
      this.map_ && If(this.element);
      for (let n = 0, r = this.listenerKeys.length; n < r; ++n)
        Wt(this.listenerKeys[n]);
      (this.listenerKeys.length = 0),
        (this.map_ = e),
        e &&
          ((this.target_
            ? this.target_
            : e.getOverlayContainerStopEvent()
          ).appendChild(this.element),
          this.render !== Us &&
            this.listenerKeys.push(ft(e, Ai.POSTRENDER, this.render, this)),
          e.render());
    }
    render(e) {}
    setTarget(e) {
      this.target_ = typeof e == "string" ? document.getElementById(e) : e;
    }
  }
  class GW extends Rp {
    constructor(e) {
      (e = e || {}),
        super({
          element: document.createElement("div"),
          render: e.render,
          target: e.target,
        }),
        (this.ulElement_ = document.createElement("ul")),
        (this.collapsed_ = e.collapsed !== void 0 ? e.collapsed : !0),
        (this.userCollapsed_ = this.collapsed_),
        (this.overrideCollapsible_ = e.collapsible !== void 0),
        (this.collapsible_ = e.collapsible !== void 0 ? e.collapsible : !0),
        this.collapsible_ || (this.collapsed_ = !1);
      const n = e.className !== void 0 ? e.className : "ol-attribution",
        r = e.tipLabel !== void 0 ? e.tipLabel : "Attributions",
        i = e.expandClassName !== void 0 ? e.expandClassName : n + "-expand",
        o = e.collapseLabel !== void 0 ? e.collapseLabel : "›",
        s =
          e.collapseClassName !== void 0
            ? e.collapseClassName
            : n + "-collapse";
      typeof o == "string"
        ? ((this.collapseLabel_ = document.createElement("span")),
          (this.collapseLabel_.textContent = o),
          (this.collapseLabel_.className = s))
        : (this.collapseLabel_ = o);
      const a = e.label !== void 0 ? e.label : "i";
      typeof a == "string"
        ? ((this.label_ = document.createElement("span")),
          (this.label_.textContent = a),
          (this.label_.className = i))
        : (this.label_ = a);
      const l =
        this.collapsible_ && !this.collapsed_
          ? this.collapseLabel_
          : this.label_;
      (this.toggleButton_ = document.createElement("button")),
        this.toggleButton_.setAttribute("type", "button"),
        this.toggleButton_.setAttribute(
          "aria-expanded",
          String(!this.collapsed_)
        ),
        (this.toggleButton_.title = r),
        this.toggleButton_.appendChild(l),
        this.toggleButton_.addEventListener(
          it.CLICK,
          this.handleClick_.bind(this),
          !1
        );
      const c =
          n +
          " " +
          xd +
          " " +
          Ep +
          (this.collapsed_ && this.collapsible_ ? " " + ob : "") +
          (this.collapsible_ ? "" : " ol-uncollapsible"),
        u = this.element;
      (u.className = c),
        u.appendChild(this.toggleButton_),
        u.appendChild(this.ulElement_),
        (this.renderedAttributions_ = []),
        (this.renderedVisible_ = !0);
    }
    collectSourceAttributions_(e) {
      const n = Array.from(
          new Set(
            this.getMap()
              .getAllLayers()
              .flatMap((i) => i.getAttributions(e))
          )
        ),
        r = !this.getMap()
          .getAllLayers()
          .some(
            (i) =>
              i.getSource() && i.getSource().getAttributionsCollapsible() === !1
          );
      return this.overrideCollapsible_ || this.setCollapsible(r), n;
    }
    updateElement_(e) {
      if (!e) {
        this.renderedVisible_ &&
          ((this.element.style.display = "none"), (this.renderedVisible_ = !1));
        return;
      }
      const n = this.collectSourceAttributions_(e),
        r = n.length > 0;
      if (
        (this.renderedVisible_ != r &&
          ((this.element.style.display = r ? "" : "none"),
          (this.renderedVisible_ = r)),
        !no(n, this.renderedAttributions_))
      ) {
        LW(this.ulElement_);
        for (let i = 0, o = n.length; i < o; ++i) {
          const s = document.createElement("li");
          (s.innerHTML = n[i]), this.ulElement_.appendChild(s);
        }
        this.renderedAttributions_ = n;
      }
    }
    handleClick_(e) {
      e.preventDefault(),
        this.handleToggle_(),
        (this.userCollapsed_ = this.collapsed_);
    }
    handleToggle_() {
      this.element.classList.toggle(ob),
        this.collapsed_
          ? ab(this.collapseLabel_, this.label_)
          : ab(this.label_, this.collapseLabel_),
        (this.collapsed_ = !this.collapsed_),
        this.toggleButton_.setAttribute(
          "aria-expanded",
          String(!this.collapsed_)
        );
    }
    getCollapsible() {
      return this.collapsible_;
    }
    setCollapsible(e) {
      this.collapsible_ !== e &&
        ((this.collapsible_ = e),
        this.element.classList.toggle("ol-uncollapsible"),
        this.userCollapsed_ && this.handleToggle_());
    }
    setCollapsed(e) {
      (this.userCollapsed_ = e),
        !(!this.collapsible_ || this.collapsed_ === e) && this.handleToggle_();
    }
    getCollapsed() {
      return this.collapsed_;
    }
    render(e) {
      this.updateElement_(e.frameState);
    }
  }
  const XW = GW;
  class KW extends Rp {
    constructor(e) {
      (e = e || {}),
        super({
          element: document.createElement("div"),
          render: e.render,
          target: e.target,
        });
      const n = e.className !== void 0 ? e.className : "ol-rotate",
        r = e.label !== void 0 ? e.label : "⇧",
        i = e.compassClassName !== void 0 ? e.compassClassName : "ol-compass";
      (this.label_ = null),
        typeof r == "string"
          ? ((this.label_ = document.createElement("span")),
            (this.label_.className = i),
            (this.label_.textContent = r))
          : ((this.label_ = r), this.label_.classList.add(i));
      const o = e.tipLabel ? e.tipLabel : "Reset rotation",
        s = document.createElement("button");
      (s.className = n + "-reset"),
        s.setAttribute("type", "button"),
        (s.title = o),
        s.appendChild(this.label_),
        s.addEventListener(it.CLICK, this.handleClick_.bind(this), !1);
      const a = n + " " + xd + " " + Ep,
        l = this.element;
      (l.className = a),
        l.appendChild(s),
        (this.callResetNorth_ = e.resetNorth ? e.resetNorth : void 0),
        (this.duration_ = e.duration !== void 0 ? e.duration : 250),
        (this.autoHide_ = e.autoHide !== void 0 ? e.autoHide : !0),
        (this.rotation_ = void 0),
        this.autoHide_ && this.element.classList.add(Sc);
    }
    handleClick_(e) {
      e.preventDefault(),
        this.callResetNorth_ !== void 0
          ? this.callResetNorth_()
          : this.resetNorth_();
    }
    resetNorth_() {
      const n = this.getMap().getView();
      if (!n) return;
      const r = n.getRotation();
      r !== void 0 &&
        (this.duration_ > 0 && r % (2 * Math.PI) !== 0
          ? n.animate({ rotation: 0, duration: this.duration_, easing: oa })
          : n.setRotation(0));
    }
    render(e) {
      const n = e.frameState;
      if (!n) return;
      const r = n.viewState.rotation;
      if (r != this.rotation_) {
        const i = "rotate(" + r + "rad)";
        if (this.autoHide_) {
          const o = this.element.classList.contains(Sc);
          !o && r === 0
            ? this.element.classList.add(Sc)
            : o && r !== 0 && this.element.classList.remove(Sc);
        }
        this.label_.style.transform = i;
      }
      this.rotation_ = r;
    }
  }
  const YW = KW;
  class qW extends Rp {
    constructor(e) {
      (e = e || {}),
        super({ element: document.createElement("div"), target: e.target });
      const n = e.className !== void 0 ? e.className : "ol-zoom",
        r = e.delta !== void 0 ? e.delta : 1,
        i = e.zoomInClassName !== void 0 ? e.zoomInClassName : n + "-in",
        o = e.zoomOutClassName !== void 0 ? e.zoomOutClassName : n + "-out",
        s = e.zoomInLabel !== void 0 ? e.zoomInLabel : "+",
        a = e.zoomOutLabel !== void 0 ? e.zoomOutLabel : "–",
        l = e.zoomInTipLabel !== void 0 ? e.zoomInTipLabel : "Zoom in",
        c = e.zoomOutTipLabel !== void 0 ? e.zoomOutTipLabel : "Zoom out",
        u = document.createElement("button");
      (u.className = i),
        u.setAttribute("type", "button"),
        (u.title = l),
        u.appendChild(typeof s == "string" ? document.createTextNode(s) : s),
        u.addEventListener(it.CLICK, this.handleClick_.bind(this, r), !1);
      const d = document.createElement("button");
      (d.className = o),
        d.setAttribute("type", "button"),
        (d.title = c),
        d.appendChild(typeof a == "string" ? document.createTextNode(a) : a),
        d.addEventListener(it.CLICK, this.handleClick_.bind(this, -r), !1);
      const h = n + " " + xd + " " + Ep,
        g = this.element;
      (g.className = h),
        g.appendChild(u),
        g.appendChild(d),
        (this.duration_ = e.duration !== void 0 ? e.duration : 250);
    }
    handleClick_(e, n) {
      n.preventDefault(), this.zoomByDelta_(e);
    }
    zoomByDelta_(e) {
      const r = this.getMap().getView();
      if (!r) return;
      const i = r.getZoom();
      if (i !== void 0) {
        const o = r.getConstrainedZoom(i + e);
        this.duration_ > 0
          ? (r.getAnimating() && r.cancelAnimations(),
            r.animate({ zoom: o, duration: this.duration_, easing: oa }))
          : r.setZoom(o);
      }
    }
  }
  const ZW = qW;
  function JW(t) {
    t = t || {};
    const e = new Or();
    return (
      (t.zoom !== void 0 ? t.zoom : !0) && e.push(new ZW(t.zoomOptions)),
      (t.rotate !== void 0 ? t.rotate : !0) && e.push(new YW(t.rotateOptions)),
      (t.attribution !== void 0 ? t.attribution : !0) &&
        e.push(new XW(t.attributionOptions)),
      e
    );
  }
  const cb = { ACTIVE: "active" };
  class Ul extends Nr {
    constructor(e) {
      super(),
        this.on,
        this.once,
        this.un,
        e && e.handleEvent && (this.handleEvent = e.handleEvent),
        (this.map_ = null),
        this.setActive(!0);
    }
    getActive() {
      return this.get(cb.ACTIVE);
    }
    getMap() {
      return this.map_;
    }
    handleEvent(e) {
      return !0;
    }
    setActive(e) {
      this.set(cb.ACTIVE, e);
    }
    setMap(e) {
      this.map_ = e;
    }
  }
  function QW(t, e, n) {
    const r = t.getCenterInternal();
    if (r) {
      const i = [r[0] + e[0], r[1] + e[1]];
      t.animateInternal({
        duration: n !== void 0 ? n : 250,
        easing: oW,
        center: t.getConstrainedCenter(i),
      });
    }
  }
  function Tp(t, e, n, r) {
    const i = t.getZoom();
    if (i === void 0) return;
    const o = t.getConstrainedZoom(i + e),
      s = t.getResolutionForZoom(o);
    t.getAnimating() && t.cancelAnimations(),
      t.animate({
        resolution: s,
        anchor: n,
        duration: r !== void 0 ? r : 250,
        easing: oa,
      });
  }
  class e7 extends Ul {
    constructor(e) {
      super(),
        (e = e || {}),
        (this.delta_ = e.delta ? e.delta : 1),
        (this.duration_ = e.duration !== void 0 ? e.duration : 250);
    }
    handleEvent(e) {
      let n = !1;
      if (e.type == Xt.DBLCLICK) {
        const r = e.originalEvent,
          i = e.map,
          o = e.coordinate,
          s = r.shiftKey ? -this.delta_ : this.delta_,
          a = i.getView();
        Tp(a, s, o, this.duration_), r.preventDefault(), (n = !0);
      }
      return !n;
    }
  }
  const t7 = e7;
  class Vl extends Ul {
    constructor(e) {
      (e = e || {}),
        super(e),
        e.handleDownEvent && (this.handleDownEvent = e.handleDownEvent),
        e.handleDragEvent && (this.handleDragEvent = e.handleDragEvent),
        e.handleMoveEvent && (this.handleMoveEvent = e.handleMoveEvent),
        e.handleUpEvent && (this.handleUpEvent = e.handleUpEvent),
        e.stopDown && (this.stopDown = e.stopDown),
        (this.handlingDownUpSequence = !1),
        (this.targetPointers = []);
    }
    getPointerCount() {
      return this.targetPointers.length;
    }
    handleDownEvent(e) {
      return !1;
    }
    handleDragEvent(e) {}
    handleEvent(e) {
      if (!e.originalEvent) return !0;
      let n = !1;
      if ((this.updateTrackedPointers_(e), this.handlingDownUpSequence)) {
        if (e.type == Xt.POINTERDRAG)
          this.handleDragEvent(e), e.originalEvent.preventDefault();
        else if (e.type == Xt.POINTERUP) {
          const r = this.handleUpEvent(e);
          this.handlingDownUpSequence = r && this.targetPointers.length > 0;
        }
      } else if (e.type == Xt.POINTERDOWN) {
        const r = this.handleDownEvent(e);
        (this.handlingDownUpSequence = r), (n = this.stopDown(r));
      } else e.type == Xt.POINTERMOVE && this.handleMoveEvent(e);
      return !n;
    }
    handleMoveEvent(e) {}
    handleUpEvent(e) {
      return !1;
    }
    stopDown(e) {
      return e;
    }
    updateTrackedPointers_(e) {
      e.activePointers && (this.targetPointers = e.activePointers);
    }
  }
  function Pp(t) {
    const e = t.length;
    let n = 0,
      r = 0;
    for (let i = 0; i < e; i++) (n += t[i].clientX), (r += t[i].clientY);
    return { clientX: n / e, clientY: r / e };
  }
  function $f(t) {
    const e = arguments;
    return function (n) {
      let r = !0;
      for (let i = 0, o = e.length; i < o && ((r = r && e[i](n)), !!r); ++i);
      return r;
    };
  }
  const n7 = function (t) {
      const e = t.originalEvent;
      return e.altKey && !(e.metaKey || e.ctrlKey) && e.shiftKey;
    },
    r7 = function (t) {
      const e = t.map.getTargetElement(),
        n = t.map.getOwnerDocument().activeElement;
      return e.contains(n);
    },
    uw = function (t) {
      return t.map.getTargetElement().hasAttribute("tabindex") ? r7(t) : !0;
    },
    i7 = dl,
    dw = function (t) {
      const e = t.originalEvent;
      return e.button == 0 && !(gH && T_ && e.ctrlKey);
    },
    hw = function (t) {
      const e = t.originalEvent;
      return !e.altKey && !(e.metaKey || e.ctrlKey) && !e.shiftKey;
    },
    o7 = function (t) {
      const e = t.originalEvent;
      return T_ ? e.metaKey : e.ctrlKey;
    },
    s7 = function (t) {
      const e = t.originalEvent;
      return !e.altKey && !(e.metaKey || e.ctrlKey) && e.shiftKey;
    },
    fw = function (t) {
      const e = t.originalEvent,
        n = e.target.tagName;
      return (
        n !== "INPUT" &&
        n !== "SELECT" &&
        n !== "TEXTAREA" &&
        !e.target.isContentEditable
      );
    },
    Sh = function (t) {
      const e = t.originalEvent;
      return (
        ut(e !== void 0, "mapBrowserEvent must originate from a pointer event"),
        e.pointerType == "mouse"
      );
    },
    a7 = function (t) {
      const e = t.originalEvent;
      return (
        ut(e !== void 0, "mapBrowserEvent must originate from a pointer event"),
        e.isPrimary && e.button === 0
      );
    };
  class l7 extends Vl {
    constructor(e) {
      super({ stopDown: dd }),
        (e = e || {}),
        (this.kinetic_ = e.kinetic),
        (this.lastCentroid = null),
        this.lastPointersCount_,
        (this.panning_ = !1);
      const n = e.condition ? e.condition : $f(hw, a7);
      (this.condition_ = e.onFocusOnly ? $f(uw, n) : n), (this.noKinetic_ = !1);
    }
    handleDragEvent(e) {
      const n = e.map;
      this.panning_ || ((this.panning_ = !0), n.getView().beginInteraction());
      const r = this.targetPointers,
        i = n.getEventPixel(Pp(r));
      if (r.length == this.lastPointersCount_) {
        if (
          (this.kinetic_ && this.kinetic_.update(i[0], i[1]), this.lastCentroid)
        ) {
          const o = [this.lastCentroid[0] - i[0], i[1] - this.lastCentroid[1]],
            a = e.map.getView();
          GH(o, a.getResolution()),
            dp(o, a.getRotation()),
            a.adjustCenterInternal(o);
        }
      } else this.kinetic_ && this.kinetic_.begin();
      (this.lastCentroid = i),
        (this.lastPointersCount_ = r.length),
        e.originalEvent.preventDefault();
    }
    handleUpEvent(e) {
      const n = e.map,
        r = n.getView();
      if (this.targetPointers.length === 0) {
        if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {
          const i = this.kinetic_.getDistance(),
            o = this.kinetic_.getAngle(),
            s = r.getCenterInternal(),
            a = n.getPixelFromCoordinateInternal(s),
            l = n.getCoordinateFromPixelInternal([
              a[0] - i * Math.cos(o),
              a[1] - i * Math.sin(o),
            ]);
          r.animateInternal({
            center: r.getConstrainedCenter(l),
            duration: 500,
            easing: oa,
          });
        }
        return this.panning_ && ((this.panning_ = !1), r.endInteraction()), !1;
      }
      return (
        this.kinetic_ && this.kinetic_.begin(), (this.lastCentroid = null), !0
      );
    }
    handleDownEvent(e) {
      if (this.targetPointers.length > 0 && this.condition_(e)) {
        const r = e.map.getView();
        return (
          (this.lastCentroid = null),
          r.getAnimating() && r.cancelAnimations(),
          this.kinetic_ && this.kinetic_.begin(),
          (this.noKinetic_ = this.targetPointers.length > 1),
          !0
        );
      }
      return !1;
    }
  }
  const c7 = l7;
  class u7 extends Vl {
    constructor(e) {
      (e = e || {}),
        super({ stopDown: dd }),
        (this.condition_ = e.condition ? e.condition : n7),
        (this.lastAngle_ = void 0),
        (this.duration_ = e.duration !== void 0 ? e.duration : 250);
    }
    handleDragEvent(e) {
      if (!Sh(e)) return;
      const n = e.map,
        r = n.getView();
      if (r.getConstraints().rotation === bp) return;
      const i = n.getSize(),
        o = e.pixel,
        s = Math.atan2(i[1] / 2 - o[1], o[0] - i[0] / 2);
      if (this.lastAngle_ !== void 0) {
        const a = s - this.lastAngle_;
        r.adjustRotationInternal(-a);
      }
      this.lastAngle_ = s;
    }
    handleUpEvent(e) {
      return Sh(e) ? (e.map.getView().endInteraction(this.duration_), !1) : !0;
    }
    handleDownEvent(e) {
      return Sh(e) && dw(e) && this.condition_(e)
        ? (e.map.getView().beginInteraction(), (this.lastAngle_ = void 0), !0)
        : !1;
    }
  }
  class d7 extends ep {
    constructor(e) {
      super(),
        (this.geometry_ = null),
        (this.element_ = document.createElement("div")),
        (this.element_.style.position = "absolute"),
        (this.element_.style.pointerEvents = "auto"),
        (this.element_.className = "ol-box " + e),
        (this.map_ = null),
        (this.startPixel_ = null),
        (this.endPixel_ = null);
    }
    disposeInternal() {
      this.setMap(null);
    }
    render_() {
      const e = this.startPixel_,
        n = this.endPixel_,
        r = "px",
        i = this.element_.style;
      (i.left = Math.min(e[0], n[0]) + r),
        (i.top = Math.min(e[1], n[1]) + r),
        (i.width = Math.abs(n[0] - e[0]) + r),
        (i.height = Math.abs(n[1] - e[1]) + r);
    }
    setMap(e) {
      if (this.map_) {
        this.map_.getOverlayContainer().removeChild(this.element_);
        const n = this.element_.style;
        (n.left = "inherit"),
          (n.top = "inherit"),
          (n.width = "inherit"),
          (n.height = "inherit");
      }
      (this.map_ = e),
        this.map_ && this.map_.getOverlayContainer().appendChild(this.element_);
    }
    setPixels(e, n) {
      (this.startPixel_ = e),
        (this.endPixel_ = n),
        this.createOrUpdateGeometry(),
        this.render_();
    }
    createOrUpdateGeometry() {
      const e = this.startPixel_,
        n = this.endPixel_,
        i = [e, [e[0], n[1]], n, [n[0], e[1]]].map(
          this.map_.getCoordinateFromPixelInternal,
          this.map_
        );
      (i[4] = i[0].slice()),
        this.geometry_
          ? this.geometry_.setCoordinates([i])
          : (this.geometry_ = new ml([i]));
    }
    getGeometry() {
      return this.geometry_;
    }
  }
  const Ec = {
    BOXSTART: "boxstart",
    BOXDRAG: "boxdrag",
    BOXEND: "boxend",
    BOXCANCEL: "boxcancel",
  };
  class Eh extends fi {
    constructor(e, n, r) {
      super(e), (this.coordinate = n), (this.mapBrowserEvent = r);
    }
  }
  class h7 extends Vl {
    constructor(e) {
      super(),
        this.on,
        this.once,
        this.un,
        (e = e || {}),
        (this.box_ = new d7(e.className || "ol-dragbox")),
        (this.minArea_ = e.minArea !== void 0 ? e.minArea : 64),
        e.onBoxEnd && (this.onBoxEnd = e.onBoxEnd),
        (this.startPixel_ = null),
        (this.condition_ = e.condition ? e.condition : dw),
        (this.boxEndCondition_ = e.boxEndCondition
          ? e.boxEndCondition
          : this.defaultBoxEndCondition);
    }
    defaultBoxEndCondition(e, n, r) {
      const i = r[0] - n[0],
        o = r[1] - n[1];
      return i * i + o * o >= this.minArea_;
    }
    getGeometry() {
      return this.box_.getGeometry();
    }
    handleDragEvent(e) {
      this.box_.setPixels(this.startPixel_, e.pixel),
        this.dispatchEvent(new Eh(Ec.BOXDRAG, e.coordinate, e));
    }
    handleUpEvent(e) {
      this.box_.setMap(null);
      const n = this.boxEndCondition_(e, this.startPixel_, e.pixel);
      return (
        n && this.onBoxEnd(e),
        this.dispatchEvent(
          new Eh(n ? Ec.BOXEND : Ec.BOXCANCEL, e.coordinate, e)
        ),
        !1
      );
    }
    handleDownEvent(e) {
      return this.condition_(e)
        ? ((this.startPixel_ = e.pixel),
          this.box_.setMap(e.map),
          this.box_.setPixels(this.startPixel_, this.startPixel_),
          this.dispatchEvent(new Eh(Ec.BOXSTART, e.coordinate, e)),
          !0)
        : !1;
    }
    onBoxEnd(e) {}
  }
  class f7 extends h7 {
    constructor(e) {
      e = e || {};
      const n = e.condition ? e.condition : s7;
      super({
        condition: n,
        className: e.className || "ol-dragzoom",
        minArea: e.minArea,
      }),
        (this.duration_ = e.duration !== void 0 ? e.duration : 200),
        (this.out_ = e.out !== void 0 ? e.out : !1);
    }
    onBoxEnd(e) {
      const r = this.getMap().getView();
      let i = this.getGeometry();
      if (this.out_) {
        const o = r.rotatedExtentForGeometry(i),
          s = r.getResolutionForExtentInternal(o),
          a = r.getResolution() / s;
        (i = i.clone()), i.scale(a * a);
      }
      r.fitInternal(i, { duration: this.duration_, easing: oa });
    }
  }
  const g7 = f7,
    po = {
      LEFT: "ArrowLeft",
      UP: "ArrowUp",
      RIGHT: "ArrowRight",
      DOWN: "ArrowDown",
    };
  class p7 extends Ul {
    constructor(e) {
      super(),
        (e = e || {}),
        (this.defaultCondition_ = function (n) {
          return hw(n) && fw(n);
        }),
        (this.condition_ =
          e.condition !== void 0 ? e.condition : this.defaultCondition_),
        (this.duration_ = e.duration !== void 0 ? e.duration : 100),
        (this.pixelDelta_ = e.pixelDelta !== void 0 ? e.pixelDelta : 128);
    }
    handleEvent(e) {
      let n = !1;
      if (e.type == it.KEYDOWN) {
        const r = e.originalEvent,
          i = r.key;
        if (
          this.condition_(e) &&
          (i == po.DOWN || i == po.LEFT || i == po.RIGHT || i == po.UP)
        ) {
          const s = e.map.getView(),
            a = s.getResolution() * this.pixelDelta_;
          let l = 0,
            c = 0;
          i == po.DOWN
            ? (c = -a)
            : i == po.LEFT
            ? (l = -a)
            : i == po.RIGHT
            ? (l = a)
            : (c = a);
          const u = [l, c];
          dp(u, s.getRotation()),
            QW(s, u, this.duration_),
            r.preventDefault(),
            (n = !0);
        }
      }
      return !n;
    }
  }
  class m7 extends Ul {
    constructor(e) {
      super(),
        (e = e || {}),
        (this.condition_ = e.condition
          ? e.condition
          : function (n) {
              return !o7(n) && fw(n);
            }),
        (this.delta_ = e.delta ? e.delta : 1),
        (this.duration_ = e.duration !== void 0 ? e.duration : 100);
    }
    handleEvent(e) {
      let n = !1;
      if (e.type == it.KEYDOWN || e.type == it.KEYPRESS) {
        const r = e.originalEvent,
          i = r.key;
        if (this.condition_(e) && (i === "+" || i === "-")) {
          const o = e.map,
            s = i === "+" ? this.delta_ : -this.delta_,
            a = o.getView();
          Tp(a, s, void 0, this.duration_), r.preventDefault(), (n = !0);
        }
      }
      return !n;
    }
  }
  const v7 = m7;
  class b7 {
    constructor(e, n, r) {
      (this.decay_ = e),
        (this.minVelocity_ = n),
        (this.delay_ = r),
        (this.points_ = []),
        (this.angle_ = 0),
        (this.initialVelocity_ = 0);
    }
    begin() {
      (this.points_.length = 0), (this.angle_ = 0), (this.initialVelocity_ = 0);
    }
    update(e, n) {
      this.points_.push(e, n, Date.now());
    }
    end() {
      if (this.points_.length < 6) return !1;
      const e = Date.now() - this.delay_,
        n = this.points_.length - 3;
      if (this.points_[n + 2] < e) return !1;
      let r = n - 3;
      for (; r > 0 && this.points_[r + 2] > e; ) r -= 3;
      const i = this.points_[n + 2] - this.points_[r + 2];
      if (i < 1e3 / 60) return !1;
      const o = this.points_[n] - this.points_[r],
        s = this.points_[n + 1] - this.points_[r + 1];
      return (
        (this.angle_ = Math.atan2(s, o)),
        (this.initialVelocity_ = Math.sqrt(o * o + s * s) / i),
        this.initialVelocity_ > this.minVelocity_
      );
    }
    getDistance() {
      return (this.minVelocity_ - this.initialVelocity_) / this.decay_;
    }
    getAngle() {
      return this.angle_;
    }
  }
  class y7 extends Ul {
    constructor(e) {
      (e = e || {}),
        super(e),
        (this.totalDelta_ = 0),
        (this.lastDelta_ = 0),
        (this.maxDelta_ = e.maxDelta !== void 0 ? e.maxDelta : 1),
        (this.duration_ = e.duration !== void 0 ? e.duration : 250),
        (this.timeout_ = e.timeout !== void 0 ? e.timeout : 80),
        (this.useAnchor_ = e.useAnchor !== void 0 ? e.useAnchor : !0),
        (this.constrainResolution_ =
          e.constrainResolution !== void 0 ? e.constrainResolution : !1);
      const n = e.condition ? e.condition : i7;
      (this.condition_ = e.onFocusOnly ? $f(uw, n) : n),
        (this.lastAnchor_ = null),
        (this.startTime_ = void 0),
        this.timeoutId_,
        (this.mode_ = void 0),
        (this.trackpadEventGap_ = 400),
        this.trackpadTimeoutId_,
        (this.deltaPerZoom_ = 300);
    }
    endInteraction_() {
      this.trackpadTimeoutId_ = void 0;
      const e = this.getMap();
      if (!e) return;
      e.getView().endInteraction(
        void 0,
        this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,
        this.lastAnchor_
      );
    }
    handleEvent(e) {
      if (!this.condition_(e) || e.type !== it.WHEEL) return !0;
      const r = e.map,
        i = e.originalEvent;
      i.preventDefault(), this.useAnchor_ && (this.lastAnchor_ = e.coordinate);
      let o;
      if (
        (e.type == it.WHEEL &&
          ((o = i.deltaY),
          hH && i.deltaMode === WheelEvent.DOM_DELTA_PIXEL && (o /= P_),
          i.deltaMode === WheelEvent.DOM_DELTA_LINE && (o *= 40)),
        o === 0)
      )
        return !1;
      this.lastDelta_ = o;
      const s = Date.now();
      this.startTime_ === void 0 && (this.startTime_ = s),
        (!this.mode_ || s - this.startTime_ > this.trackpadEventGap_) &&
          (this.mode_ = Math.abs(o) < 4 ? "trackpad" : "wheel");
      const a = r.getView();
      if (
        this.mode_ === "trackpad" &&
        !(a.getConstrainResolution() || this.constrainResolution_)
      )
        return (
          this.trackpadTimeoutId_
            ? clearTimeout(this.trackpadTimeoutId_)
            : (a.getAnimating() && a.cancelAnimations(), a.beginInteraction()),
          (this.trackpadTimeoutId_ = setTimeout(
            this.endInteraction_.bind(this),
            this.timeout_
          )),
          a.adjustZoom(-o / this.deltaPerZoom_, this.lastAnchor_),
          (this.startTime_ = s),
          !1
        );
      this.totalDelta_ += o;
      const l = Math.max(this.timeout_ - (s - this.startTime_), 0);
      return (
        clearTimeout(this.timeoutId_),
        (this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, r), l)),
        !1
      );
    }
    handleWheelZoom_(e) {
      const n = e.getView();
      n.getAnimating() && n.cancelAnimations();
      let r =
        -on(
          this.totalDelta_,
          -this.maxDelta_ * this.deltaPerZoom_,
          this.maxDelta_ * this.deltaPerZoom_
        ) / this.deltaPerZoom_;
      (n.getConstrainResolution() || this.constrainResolution_) &&
        (r = r ? (r > 0 ? 1 : -1) : 0),
        Tp(n, r, this.lastAnchor_, this.duration_),
        (this.mode_ = void 0),
        (this.totalDelta_ = 0),
        (this.lastAnchor_ = null),
        (this.startTime_ = void 0),
        (this.timeoutId_ = void 0);
    }
    setMouseAnchor(e) {
      (this.useAnchor_ = e), e || (this.lastAnchor_ = null);
    }
  }
  const x7 = y7;
  class C7 extends Vl {
    constructor(e) {
      e = e || {};
      const n = e;
      n.stopDown || (n.stopDown = dd),
        super(n),
        (this.anchor_ = null),
        (this.lastAngle_ = void 0),
        (this.rotating_ = !1),
        (this.rotationDelta_ = 0),
        (this.threshold_ = e.threshold !== void 0 ? e.threshold : 0.3),
        (this.duration_ = e.duration !== void 0 ? e.duration : 250);
    }
    handleDragEvent(e) {
      let n = 0;
      const r = this.targetPointers[0],
        i = this.targetPointers[1],
        o = Math.atan2(i.clientY - r.clientY, i.clientX - r.clientX);
      if (this.lastAngle_ !== void 0) {
        const l = o - this.lastAngle_;
        (this.rotationDelta_ += l),
          !this.rotating_ &&
            Math.abs(this.rotationDelta_) > this.threshold_ &&
            (this.rotating_ = !0),
          (n = l);
      }
      this.lastAngle_ = o;
      const s = e.map,
        a = s.getView();
      a.getConstraints().rotation !== bp &&
        ((this.anchor_ = s.getCoordinateFromPixelInternal(
          s.getEventPixel(Pp(this.targetPointers))
        )),
        this.rotating_ &&
          (s.render(), a.adjustRotationInternal(n, this.anchor_)));
    }
    handleUpEvent(e) {
      return this.targetPointers.length < 2
        ? (e.map.getView().endInteraction(this.duration_), !1)
        : !0;
    }
    handleDownEvent(e) {
      if (this.targetPointers.length >= 2) {
        const n = e.map;
        return (
          (this.anchor_ = null),
          (this.lastAngle_ = void 0),
          (this.rotating_ = !1),
          (this.rotationDelta_ = 0),
          this.handlingDownUpSequence || n.getView().beginInteraction(),
          !0
        );
      }
      return !1;
    }
  }
  class _7 extends Vl {
    constructor(e) {
      e = e || {};
      const n = e;
      n.stopDown || (n.stopDown = dd),
        super(n),
        (this.anchor_ = null),
        (this.duration_ = e.duration !== void 0 ? e.duration : 400),
        (this.lastDistance_ = void 0),
        (this.lastScaleDelta_ = 1);
    }
    handleDragEvent(e) {
      let n = 1;
      const r = this.targetPointers[0],
        i = this.targetPointers[1],
        o = r.clientX - i.clientX,
        s = r.clientY - i.clientY,
        a = Math.sqrt(o * o + s * s);
      this.lastDistance_ !== void 0 && (n = this.lastDistance_ / a),
        (this.lastDistance_ = a);
      const l = e.map,
        c = l.getView();
      n != 1 && (this.lastScaleDelta_ = n),
        (this.anchor_ = l.getCoordinateFromPixelInternal(
          l.getEventPixel(Pp(this.targetPointers))
        )),
        l.render(),
        c.adjustResolutionInternal(n, this.anchor_);
    }
    handleUpEvent(e) {
      if (this.targetPointers.length < 2) {
        const r = e.map.getView(),
          i = this.lastScaleDelta_ > 1 ? 1 : -1;
        return r.endInteraction(this.duration_, i), !1;
      }
      return !0;
    }
    handleDownEvent(e) {
      if (this.targetPointers.length >= 2) {
        const n = e.map;
        return (
          (this.anchor_ = null),
          (this.lastDistance_ = void 0),
          (this.lastScaleDelta_ = 1),
          this.handlingDownUpSequence || n.getView().beginInteraction(),
          !0
        );
      }
      return !1;
    }
  }
  const w7 = _7;
  function S7(t) {
    t = t || {};
    const e = new Or(),
      n = new b7(-0.005, 0.05, 100);
    return (
      (t.altShiftDragRotate !== void 0 ? t.altShiftDragRotate : !0) &&
        e.push(new u7()),
      (t.doubleClickZoom !== void 0 ? t.doubleClickZoom : !0) &&
        e.push(new t7({ delta: t.zoomDelta, duration: t.zoomDuration })),
      (t.dragPan !== void 0 ? t.dragPan : !0) &&
        e.push(new c7({ onFocusOnly: t.onFocusOnly, kinetic: n })),
      (t.pinchRotate !== void 0 ? t.pinchRotate : !0) && e.push(new C7()),
      (t.pinchZoom !== void 0 ? t.pinchZoom : !0) &&
        e.push(new w7({ duration: t.zoomDuration })),
      (t.keyboard !== void 0 ? t.keyboard : !0) &&
        (e.push(new p7()),
        e.push(new v7({ delta: t.zoomDelta, duration: t.zoomDuration }))),
      (t.mouseWheelZoom !== void 0 ? t.mouseWheelZoom : !0) &&
        e.push(
          new x7({ onFocusOnly: t.onFocusOnly, duration: t.zoomDuration })
        ),
      (t.shiftDragZoom !== void 0 ? t.shiftDragZoom : !0) &&
        e.push(new g7({ duration: t.zoomDuration })),
      e
    );
  }
  function ub(t) {
    return t[0] > 0 && t[1] > 0;
  }
  function E7(t, e, n) {
    return (
      n === void 0 && (n = [0, 0]),
      (n[0] = (t[0] * e + 0.5) | 0),
      (n[1] = (t[1] * e + 0.5) | 0),
      n
    );
  }
  function Kn(t, e) {
    return Array.isArray(t)
      ? t
      : (e === void 0 ? (e = [t, t]) : ((e[0] = t), (e[1] = t)), e);
  }
  function gw(t) {
    if (t instanceof yd) {
      t.setMapInternal(null);
      return;
    }
    t instanceof sa && t.getLayers().forEach(gw);
  }
  function pw(t, e) {
    if (t instanceof yd) {
      t.setMapInternal(e);
      return;
    }
    if (t instanceof sa) {
      const n = t.getLayers().getArray();
      for (let r = 0, i = n.length; r < i; ++r) pw(n[r], e);
    }
  }
  let R7 = class extends Nr {
    constructor(e) {
      super(), (e = e || {}), this.on, this.once, this.un;
      const n = T7(e);
      this.renderComplete_,
        (this.loaded_ = !0),
        (this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this)),
        (this.maxTilesLoading_ =
          e.maxTilesLoading !== void 0 ? e.maxTilesLoading : 16),
        (this.pixelRatio_ = e.pixelRatio !== void 0 ? e.pixelRatio : P_),
        this.postRenderTimeoutHandle_,
        this.animationDelayKey_,
        (this.animationDelay_ = this.animationDelay_.bind(this)),
        (this.coordinateToPixelTransform_ = vr()),
        (this.pixelToCoordinateTransform_ = vr()),
        (this.frameIndex_ = 0),
        (this.frameState_ = null),
        (this.previousExtent_ = null),
        (this.viewPropertyListenerKey_ = null),
        (this.viewChangeListenerKey_ = null),
        (this.layerGroupPropertyListenerKeys_ = null),
        (this.viewport_ = document.createElement("div")),
        (this.viewport_.className =
          "ol-viewport" + ("ontouchstart" in window ? " ol-touch" : "")),
        (this.viewport_.style.position = "relative"),
        (this.viewport_.style.overflow = "hidden"),
        (this.viewport_.style.width = "100%"),
        (this.viewport_.style.height = "100%"),
        (this.overlayContainer_ = document.createElement("div")),
        (this.overlayContainer_.style.position = "absolute"),
        (this.overlayContainer_.style.zIndex = "0"),
        (this.overlayContainer_.style.width = "100%"),
        (this.overlayContainer_.style.height = "100%"),
        (this.overlayContainer_.style.pointerEvents = "none"),
        (this.overlayContainer_.className = "ol-overlaycontainer"),
        this.viewport_.appendChild(this.overlayContainer_),
        (this.overlayContainerStopEvent_ = document.createElement("div")),
        (this.overlayContainerStopEvent_.style.position = "absolute"),
        (this.overlayContainerStopEvent_.style.zIndex = "0"),
        (this.overlayContainerStopEvent_.style.width = "100%"),
        (this.overlayContainerStopEvent_.style.height = "100%"),
        (this.overlayContainerStopEvent_.style.pointerEvents = "none"),
        (this.overlayContainerStopEvent_.className =
          "ol-overlaycontainer-stopevent"),
        this.viewport_.appendChild(this.overlayContainerStopEvent_),
        (this.mapBrowserEventHandler_ = null),
        (this.moveTolerance_ = e.moveTolerance),
        (this.keyboardEventTarget_ = n.keyboardEventTarget),
        (this.targetChangeHandlerKeys_ = null),
        (this.targetElement_ = null),
        (this.resizeObserver_ = new ResizeObserver(() => this.updateSize())),
        (this.controls = n.controls || JW()),
        (this.interactions = n.interactions || S7({ onFocusOnly: !0 })),
        (this.overlays_ = n.overlays),
        (this.overlayIdIndex_ = {}),
        (this.renderer_ = null),
        (this.postRenderFunctions_ = []),
        (this.tileQueue_ = new UW(
          this.getTilePriority.bind(this),
          this.handleTileChange_.bind(this)
        )),
        this.addChangeListener(xn.LAYERGROUP, this.handleLayerGroupChanged_),
        this.addChangeListener(xn.VIEW, this.handleViewChanged_),
        this.addChangeListener(xn.SIZE, this.handleSizeChanged_),
        this.addChangeListener(xn.TARGET, this.handleTargetChanged_),
        this.setProperties(n.values);
      const r = this;
      e.view &&
        !(e.view instanceof Ar) &&
        e.view.then(function (i) {
          r.setView(new Ar(i));
        }),
        this.controls.addEventListener(zn.ADD, (i) => {
          i.element.setMap(this);
        }),
        this.controls.addEventListener(zn.REMOVE, (i) => {
          i.element.setMap(null);
        }),
        this.interactions.addEventListener(zn.ADD, (i) => {
          i.element.setMap(this);
        }),
        this.interactions.addEventListener(zn.REMOVE, (i) => {
          i.element.setMap(null);
        }),
        this.overlays_.addEventListener(zn.ADD, (i) => {
          this.addOverlayInternal_(i.element);
        }),
        this.overlays_.addEventListener(zn.REMOVE, (i) => {
          const o = i.element.getId();
          o !== void 0 && delete this.overlayIdIndex_[o.toString()],
            i.element.setMap(null);
        }),
        this.controls.forEach((i) => {
          i.setMap(this);
        }),
        this.interactions.forEach((i) => {
          i.setMap(this);
        }),
        this.overlays_.forEach(this.addOverlayInternal_.bind(this));
    }
    addControl(e) {
      this.getControls().push(e);
    }
    addInteraction(e) {
      this.getInteractions().push(e);
    }
    addLayer(e) {
      this.getLayerGroup().getLayers().push(e);
    }
    handleLayerAdd_(e) {
      pw(e.layer, this);
    }
    addOverlay(e) {
      this.getOverlays().push(e);
    }
    addOverlayInternal_(e) {
      const n = e.getId();
      n !== void 0 && (this.overlayIdIndex_[n.toString()] = e), e.setMap(this);
    }
    disposeInternal() {
      this.controls.clear(),
        this.interactions.clear(),
        this.overlays_.clear(),
        this.resizeObserver_.disconnect(),
        this.setTarget(null),
        super.disposeInternal();
    }
    forEachFeatureAtPixel(e, n, r) {
      if (!this.frameState_ || !this.renderer_) return;
      const i = this.getCoordinateFromPixelInternal(e);
      r = r !== void 0 ? r : {};
      const o = r.hitTolerance !== void 0 ? r.hitTolerance : 0,
        s = r.layerFilter !== void 0 ? r.layerFilter : dl,
        a = r.checkWrapped !== !1;
      return this.renderer_.forEachFeatureAtCoordinate(
        i,
        this.frameState_,
        o,
        a,
        n,
        null,
        s,
        null
      );
    }
    getFeaturesAtPixel(e, n) {
      const r = [];
      return (
        this.forEachFeatureAtPixel(
          e,
          function (i) {
            r.push(i);
          },
          n
        ),
        r
      );
    }
    getAllLayers() {
      const e = [];
      function n(r) {
        r.forEach(function (i) {
          i instanceof sa ? n(i.getLayers()) : e.push(i);
        });
      }
      return n(this.getLayers()), e;
    }
    hasFeatureAtPixel(e, n) {
      if (!this.frameState_ || !this.renderer_) return !1;
      const r = this.getCoordinateFromPixelInternal(e);
      n = n !== void 0 ? n : {};
      const i = n.layerFilter !== void 0 ? n.layerFilter : dl,
        o = n.hitTolerance !== void 0 ? n.hitTolerance : 0,
        s = n.checkWrapped !== !1;
      return this.renderer_.hasFeatureAtCoordinate(
        r,
        this.frameState_,
        o,
        s,
        i,
        null
      );
    }
    getEventCoordinate(e) {
      return this.getCoordinateFromPixel(this.getEventPixel(e));
    }
    getEventCoordinateInternal(e) {
      return this.getCoordinateFromPixelInternal(this.getEventPixel(e));
    }
    getEventPixel(e) {
      const r = this.viewport_.getBoundingClientRect(),
        i = this.getSize(),
        o = r.width / i[0],
        s = r.height / i[1],
        a = "changedTouches" in e ? e.changedTouches[0] : e;
      return [(a.clientX - r.left) / o, (a.clientY - r.top) / s];
    }
    getTarget() {
      return this.get(xn.TARGET);
    }
    getTargetElement() {
      return this.targetElement_;
    }
    getCoordinateFromPixel(e) {
      return kf(
        this.getCoordinateFromPixelInternal(e),
        this.getView().getProjection()
      );
    }
    getCoordinateFromPixelInternal(e) {
      const n = this.frameState_;
      return n ? fn(n.pixelToCoordinateTransform, e.slice()) : null;
    }
    getControls() {
      return this.controls;
    }
    getOverlays() {
      return this.overlays_;
    }
    getOverlayById(e) {
      const n = this.overlayIdIndex_[e.toString()];
      return n !== void 0 ? n : null;
    }
    getInteractions() {
      return this.interactions;
    }
    getLayerGroup() {
      return this.get(xn.LAYERGROUP);
    }
    setLayers(e) {
      const n = this.getLayerGroup();
      if (e instanceof Or) {
        n.setLayers(e);
        return;
      }
      const r = n.getLayers();
      r.clear(), r.extend(e);
    }
    getLayers() {
      return this.getLayerGroup().getLayers();
    }
    getLoadingOrNotReady() {
      const e = this.getLayerGroup().getLayerStatesArray();
      for (let n = 0, r = e.length; n < r; ++n) {
        const i = e[n];
        if (!i.visible) continue;
        const o = i.layer.getRenderer();
        if (o && !o.ready) return !0;
        const s = i.layer.getSource();
        if (s && s.loading) return !0;
      }
      return !1;
    }
    getPixelFromCoordinate(e) {
      const n = Gr(e, this.getView().getProjection());
      return this.getPixelFromCoordinateInternal(n);
    }
    getPixelFromCoordinateInternal(e) {
      const n = this.frameState_;
      return n ? fn(n.coordinateToPixelTransform, e.slice(0, 2)) : null;
    }
    getRenderer() {
      return this.renderer_;
    }
    getSize() {
      return this.get(xn.SIZE);
    }
    getView() {
      return this.get(xn.VIEW);
    }
    getViewport() {
      return this.viewport_;
    }
    getOverlayContainer() {
      return this.overlayContainer_;
    }
    getOverlayContainerStopEvent() {
      return this.overlayContainerStopEvent_;
    }
    getOwnerDocument() {
      const e = this.getTargetElement();
      return e ? e.ownerDocument : document;
    }
    getTilePriority(e, n, r, i) {
      return VW(this.frameState_, e, n, r, i);
    }
    handleBrowserEvent(e, n) {
      n = n || e.type;
      const r = new Pi(n, this, e);
      this.handleMapBrowserEvent(r);
    }
    handleMapBrowserEvent(e) {
      if (!this.frameState_) return;
      const n = e.originalEvent,
        r = n.type;
      if (r === Lf.POINTERDOWN || r === it.WHEEL || r === it.KEYDOWN) {
        const i = this.getOwnerDocument(),
          o = this.viewport_.getRootNode ? this.viewport_.getRootNode() : i,
          s = n.target;
        if (
          this.overlayContainerStopEvent_.contains(s) ||
          !(o === i ? i.documentElement : o).contains(s)
        )
          return;
      }
      if (((e.frameState = this.frameState_), this.dispatchEvent(e) !== !1)) {
        const i = this.getInteractions().getArray().slice();
        for (let o = i.length - 1; o >= 0; o--) {
          const s = i[o];
          if (s.getMap() !== this || !s.getActive() || !this.getTargetElement())
            continue;
          if (!s.handleEvent(e) || e.propagationStopped) break;
        }
      }
    }
    handlePostRender() {
      const e = this.frameState_,
        n = this.tileQueue_;
      if (!n.isEmpty()) {
        let i = this.maxTilesLoading_,
          o = i;
        if (e) {
          const s = e.viewHints;
          if (s[Cn.ANIMATING] || s[Cn.INTERACTING]) {
            const a = Date.now() - e.time > 8;
            (i = a ? 0 : 8), (o = a ? 0 : 2);
          }
        }
        n.getTilesLoading() < i && (n.reprioritize(), n.loadMoreTiles(i, o));
      }
      e &&
        this.renderer_ &&
        !e.animate &&
        (this.renderComplete_ === !0
          ? (this.hasListener(Dr.RENDERCOMPLETE) &&
              this.renderer_.dispatchRenderEvent(Dr.RENDERCOMPLETE, e),
            this.loaded_ === !1 &&
              ((this.loaded_ = !0),
              this.dispatchEvent(new ps(Ai.LOADEND, this, e))))
          : this.loaded_ === !0 &&
            ((this.loaded_ = !1),
            this.dispatchEvent(new ps(Ai.LOADSTART, this, e))));
      const r = this.postRenderFunctions_;
      for (let i = 0, o = r.length; i < o; ++i) r[i](this, e);
      r.length = 0;
    }
    handleSizeChanged_() {
      this.getView() &&
        !this.getView().getAnimating() &&
        this.getView().resolveConstraints(0),
        this.render();
    }
    handleTargetChanged_() {
      if (this.mapBrowserEventHandler_) {
        for (let r = 0, i = this.targetChangeHandlerKeys_.length; r < i; ++r)
          Wt(this.targetChangeHandlerKeys_[r]);
        (this.targetChangeHandlerKeys_ = null),
          this.viewport_.removeEventListener(
            it.CONTEXTMENU,
            this.boundHandleBrowserEvent_
          ),
          this.viewport_.removeEventListener(
            it.WHEEL,
            this.boundHandleBrowserEvent_
          ),
          this.mapBrowserEventHandler_.dispose(),
          (this.mapBrowserEventHandler_ = null),
          If(this.viewport_);
      }
      if (this.targetElement_) {
        this.resizeObserver_.unobserve(this.targetElement_);
        const r = this.targetElement_.getRootNode();
        r instanceof ShadowRoot && this.resizeObserver_.unobserve(r.host),
          this.setSize(void 0);
      }
      const e = this.getTarget(),
        n = typeof e == "string" ? document.getElementById(e) : e;
      if (((this.targetElement_ = n), !n))
        this.renderer_ &&
          (clearTimeout(this.postRenderTimeoutHandle_),
          (this.postRenderTimeoutHandle_ = void 0),
          (this.postRenderFunctions_.length = 0),
          this.renderer_.dispose(),
          (this.renderer_ = null)),
          this.animationDelayKey_ &&
            (cancelAnimationFrame(this.animationDelayKey_),
            (this.animationDelayKey_ = void 0));
      else {
        n.appendChild(this.viewport_),
          this.renderer_ || (this.renderer_ = new HW(this)),
          (this.mapBrowserEventHandler_ = new WW(this, this.moveTolerance_));
        for (const o in Xt)
          this.mapBrowserEventHandler_.addEventListener(
            Xt[o],
            this.handleMapBrowserEvent.bind(this)
          );
        this.viewport_.addEventListener(
          it.CONTEXTMENU,
          this.boundHandleBrowserEvent_,
          !1
        ),
          this.viewport_.addEventListener(
            it.WHEEL,
            this.boundHandleBrowserEvent_,
            k_ ? { passive: !1 } : !1
          );
        const r = this.keyboardEventTarget_ ? this.keyboardEventTarget_ : n;
        this.targetChangeHandlerKeys_ = [
          ft(r, it.KEYDOWN, this.handleBrowserEvent, this),
          ft(r, it.KEYPRESS, this.handleBrowserEvent, this),
        ];
        const i = n.getRootNode();
        i instanceof ShadowRoot && this.resizeObserver_.observe(i.host),
          this.resizeObserver_.observe(n);
      }
      this.updateSize();
    }
    handleTileChange_() {
      this.render();
    }
    handleViewPropertyChanged_() {
      this.render();
    }
    handleViewChanged_() {
      this.viewPropertyListenerKey_ &&
        (Wt(this.viewPropertyListenerKey_),
        (this.viewPropertyListenerKey_ = null)),
        this.viewChangeListenerKey_ &&
          (Wt(this.viewChangeListenerKey_),
          (this.viewChangeListenerKey_ = null));
      const e = this.getView();
      e &&
        (this.updateViewportSize_(this.getSize()),
        (this.viewPropertyListenerKey_ = ft(
          e,
          js.PROPERTYCHANGE,
          this.handleViewPropertyChanged_,
          this
        )),
        (this.viewChangeListenerKey_ = ft(
          e,
          it.CHANGE,
          this.handleViewPropertyChanged_,
          this
        )),
        e.resolveConstraints(0)),
        this.render();
    }
    handleLayerGroupChanged_() {
      this.layerGroupPropertyListenerKeys_ &&
        (this.layerGroupPropertyListenerKeys_.forEach(Wt),
        (this.layerGroupPropertyListenerKeys_ = null));
      const e = this.getLayerGroup();
      e &&
        (this.handleLayerAdd_(new $i("addlayer", e)),
        (this.layerGroupPropertyListenerKeys_ = [
          ft(e, js.PROPERTYCHANGE, this.render, this),
          ft(e, it.CHANGE, this.render, this),
          ft(e, "addlayer", this.handleLayerAdd_, this),
          ft(e, "removelayer", this.handleLayerRemove_, this),
        ])),
        this.render();
    }
    isRendered() {
      return !!this.frameState_;
    }
    animationDelay_() {
      (this.animationDelayKey_ = void 0), this.renderFrame_(Date.now());
    }
    renderSync() {
      this.animationDelayKey_ && cancelAnimationFrame(this.animationDelayKey_),
        this.animationDelay_();
    }
    redrawText() {
      const e = this.getLayerGroup().getLayerStatesArray();
      for (let n = 0, r = e.length; n < r; ++n) {
        const i = e[n].layer;
        i.hasRenderer() && i.getRenderer().handleFontsChanged();
      }
    }
    render() {
      this.renderer_ &&
        this.animationDelayKey_ === void 0 &&
        (this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_));
    }
    flushDeclutterItems() {
      const e = this.frameState_;
      e && this.renderer_.flushDeclutterItems(e);
    }
    removeControl(e) {
      return this.getControls().remove(e);
    }
    removeInteraction(e) {
      return this.getInteractions().remove(e);
    }
    removeLayer(e) {
      return this.getLayerGroup().getLayers().remove(e);
    }
    handleLayerRemove_(e) {
      gw(e.layer);
    }
    removeOverlay(e) {
      return this.getOverlays().remove(e);
    }
    renderFrame_(e) {
      const n = this.getSize(),
        r = this.getView(),
        i = this.frameState_;
      let o = null;
      if (n !== void 0 && ub(n) && r && r.isDef()) {
        const s = r.getHints(
            this.frameState_ ? this.frameState_.viewHints : void 0
          ),
          a = r.getState();
        if (
          ((o = {
            animate: !1,
            coordinateToPixelTransform: this.coordinateToPixelTransform_,
            declutterTree: null,
            extent: Rf(a.center, a.resolution, a.rotation, n),
            index: this.frameIndex_++,
            layerIndex: 0,
            layerStatesArray: this.getLayerGroup().getLayerStatesArray(),
            pixelRatio: this.pixelRatio_,
            pixelToCoordinateTransform: this.pixelToCoordinateTransform_,
            postRenderFunctions: [],
            size: n,
            tileQueue: this.tileQueue_,
            time: e,
            usedTiles: {},
            viewState: a,
            viewHints: s,
            wantedTiles: {},
            mapId: xt(this),
            renderTargets: {},
          }),
          a.nextCenter && a.nextResolution)
        ) {
          const l = isNaN(a.nextRotation) ? a.rotation : a.nextRotation;
          o.nextExtent = Rf(a.nextCenter, a.nextResolution, l, n);
        }
      }
      (this.frameState_ = o),
        this.renderer_.renderFrame(o),
        o &&
          (o.animate && this.render(),
          Array.prototype.push.apply(
            this.postRenderFunctions_,
            o.postRenderFunctions
          ),
          i &&
            (!this.previousExtent_ ||
              (!bd(this.previousExtent_) &&
                !hl(o.extent, this.previousExtent_))) &&
            (this.dispatchEvent(new ps(Ai.MOVESTART, this, i)),
            (this.previousExtent_ = gd(this.previousExtent_))),
          this.previousExtent_ &&
            !o.viewHints[Cn.ANIMATING] &&
            !o.viewHints[Cn.INTERACTING] &&
            !hl(o.extent, this.previousExtent_) &&
            (this.dispatchEvent(new ps(Ai.MOVEEND, this, o)),
            O_(o.extent, this.previousExtent_))),
        this.dispatchEvent(new ps(Ai.POSTRENDER, this, o)),
        (this.renderComplete_ =
          this.hasListener(Ai.LOADSTART) ||
          this.hasListener(Ai.LOADEND) ||
          this.hasListener(Dr.RENDERCOMPLETE)
            ? !this.tileQueue_.getTilesLoading() &&
              !this.tileQueue_.getCount() &&
              !this.getLoadingOrNotReady()
            : void 0),
        this.postRenderTimeoutHandle_ ||
          (this.postRenderTimeoutHandle_ = setTimeout(() => {
            (this.postRenderTimeoutHandle_ = void 0), this.handlePostRender();
          }, 0));
    }
    setLayerGroup(e) {
      const n = this.getLayerGroup();
      n && this.handleLayerRemove_(new $i("removelayer", n)),
        this.set(xn.LAYERGROUP, e);
    }
    setSize(e) {
      this.set(xn.SIZE, e);
    }
    setTarget(e) {
      this.set(xn.TARGET, e);
    }
    setView(e) {
      if (!e || e instanceof Ar) {
        this.set(xn.VIEW, e);
        return;
      }
      this.set(xn.VIEW, new Ar());
      const n = this;
      e.then(function (r) {
        n.setView(new Ar(r));
      });
    }
    updateSize() {
      const e = this.getTargetElement();
      let n;
      if (e) {
        const i = getComputedStyle(e),
          o =
            e.offsetWidth -
            parseFloat(i.borderLeftWidth) -
            parseFloat(i.paddingLeft) -
            parseFloat(i.paddingRight) -
            parseFloat(i.borderRightWidth),
          s =
            e.offsetHeight -
            parseFloat(i.borderTopWidth) -
            parseFloat(i.paddingTop) -
            parseFloat(i.paddingBottom) -
            parseFloat(i.borderBottomWidth);
        !isNaN(o) &&
          !isNaN(s) &&
          ((n = [o, s]),
          !ub(n) &&
            (e.offsetWidth || e.offsetHeight || e.getClientRects().length) &&
            G_(
              "No map visible because the map container's width or height are 0."
            ));
      }
      const r = this.getSize();
      n && (!r || !no(n, r)) && (this.setSize(n), this.updateViewportSize_(n));
    }
    updateViewportSize_(e) {
      const n = this.getView();
      n && n.setViewportSize(e);
    }
  };
  function T7(t) {
    let e = null;
    t.keyboardEventTarget !== void 0 &&
      (e =
        typeof t.keyboardEventTarget == "string"
          ? document.getElementById(t.keyboardEventTarget)
          : t.keyboardEventTarget);
    const n = {},
      r =
        t.layers && typeof t.layers.getLayers == "function"
          ? t.layers
          : new sa({ layers: t.layers });
    (n[xn.LAYERGROUP] = r),
      (n[xn.TARGET] = t.target),
      (n[xn.VIEW] = t.view instanceof Ar ? t.view : new Ar());
    let i;
    t.controls !== void 0 &&
      (Array.isArray(t.controls)
        ? (i = new Or(t.controls.slice()))
        : (ut(
            typeof t.controls.getArray == "function",
            "Expected `controls` to be an array or an `ol/Collection.js`"
          ),
          (i = t.controls)));
    let o;
    t.interactions !== void 0 &&
      (Array.isArray(t.interactions)
        ? (o = new Or(t.interactions.slice()))
        : (ut(
            typeof t.interactions.getArray == "function",
            "Expected `interactions` to be an array or an `ol/Collection.js`"
          ),
          (o = t.interactions)));
    let s;
    return (
      t.overlays !== void 0
        ? Array.isArray(t.overlays)
          ? (s = new Or(t.overlays.slice()))
          : (ut(
              typeof t.overlays.getArray == "function",
              "Expected `overlays` to be an array or an `ol/Collection.js`"
            ),
            (s = t.overlays))
        : (s = new Or()),
      {
        controls: i,
        interactions: o,
        keyboardEventTarget: e,
        overlays: s,
        values: n,
      }
    );
  }
  const P7 = R7;
  class mw extends hd {
    constructor(e, n, r) {
      super(),
        (r = r || {}),
        (this.tileCoord = e),
        (this.state = n),
        (this.interimTile = null),
        (this.key = ""),
        (this.transition_ = r.transition === void 0 ? 250 : r.transition),
        (this.transitionStarts_ = {}),
        (this.interpolate = !!r.interpolate);
    }
    changed() {
      this.dispatchEvent(it.CHANGE);
    }
    release() {
      this.state === qe.ERROR && this.setState(qe.EMPTY);
    }
    getKey() {
      return this.key + "/" + this.tileCoord;
    }
    getInterimTile() {
      let e = this.interimTile;
      if (!e) return this;
      do {
        if (e.getState() == qe.LOADED) return (this.transition_ = 0), e;
        e = e.interimTile;
      } while (e);
      return this;
    }
    refreshInterimChain() {
      let e = this.interimTile;
      if (!e) return;
      let n = this;
      do {
        if (e.getState() == qe.LOADED) {
          e.interimTile = null;
          break;
        }
        e.getState() == qe.LOADING
          ? (n = e)
          : e.getState() == qe.IDLE
          ? (n.interimTile = e.interimTile)
          : (n = e),
          (e = n.interimTile);
      } while (e);
    }
    getTileCoord() {
      return this.tileCoord;
    }
    getState() {
      return this.state;
    }
    setState(e) {
      if (this.state !== qe.ERROR && this.state > e)
        throw new Error("Tile load sequence violation");
      (this.state = e), this.changed();
    }
    load() {
      dt();
    }
    getAlpha(e, n) {
      if (!this.transition_) return 1;
      let r = this.transitionStarts_[e];
      if (!r) (r = n), (this.transitionStarts_[e] = r);
      else if (r === -1) return 1;
      const i = n - r + 1e3 / 60;
      return i >= this.transition_ ? 1 : q_(i / this.transition_);
    }
    inTransition(e) {
      return this.transition_ ? this.transitionStarts_[e] !== -1 : !1;
    }
    endTransition(e) {
      this.transition_ && (this.transitionStarts_[e] = -1);
    }
  }
  const $t = { IDLE: 0, LOADING: 1, LOADED: 2, ERROR: 3, EMPTY: 4 };
  function A7(t, e, n) {
    const r = t;
    let i = !0,
      o = !1,
      s = !1;
    const a = [
      uu(r, it.LOAD, function () {
        (s = !0), o || e();
      }),
    ];
    return (
      r.src && A_
        ? ((o = !0),
          r
            .decode()
            .then(function () {
              i && e();
            })
            .catch(function (l) {
              i && (s ? e() : n());
            }))
        : a.push(uu(r, it.ERROR, n)),
      function () {
        (i = !1), a.forEach(Wt);
      }
    );
  }
  function k7(t, e) {
    return new Promise((n, r) => {
      function i() {
        s(), n(t);
      }
      function o() {
        s(), r(new Error("Image load error"));
      }
      function s() {
        t.removeEventListener("load", i), t.removeEventListener("error", o);
      }
      t.addEventListener("load", i),
        t.addEventListener("error", o),
        e && (t.src = e);
    });
  }
  function I7(t, e) {
    return (
      e && (t.src = e),
      t.src && A_
        ? new Promise((n, r) =>
            t
              .decode()
              .then(() => n(t))
              .catch((i) => (t.complete && t.width ? n(t) : r(i)))
          )
        : k7(t)
    );
  }
  class vw extends mw {
    constructor(e, n, r, i, o, s) {
      super(e, n, s),
        (this.crossOrigin_ = i),
        (this.src_ = r),
        (this.key = r),
        (this.image_ = new Image()),
        i !== null && (this.image_.crossOrigin = i),
        (this.unlisten_ = null),
        (this.tileLoadFunction_ = o);
    }
    getImage() {
      return this.image_;
    }
    setImage(e) {
      (this.image_ = e),
        (this.state = qe.LOADED),
        this.unlistenImage_(),
        this.changed();
    }
    handleImageError_() {
      (this.state = qe.ERROR),
        this.unlistenImage_(),
        (this.image_ = O7()),
        this.changed();
    }
    handleImageLoad_() {
      const e = this.image_;
      e.naturalWidth && e.naturalHeight
        ? (this.state = qe.LOADED)
        : (this.state = qe.EMPTY),
        this.unlistenImage_(),
        this.changed();
    }
    load() {
      this.state == qe.ERROR &&
        ((this.state = qe.IDLE),
        (this.image_ = new Image()),
        this.crossOrigin_ !== null &&
          (this.image_.crossOrigin = this.crossOrigin_)),
        this.state == qe.IDLE &&
          ((this.state = qe.LOADING),
          this.changed(),
          this.tileLoadFunction_(this, this.src_),
          (this.unlisten_ = A7(
            this.image_,
            this.handleImageLoad_.bind(this),
            this.handleImageError_.bind(this)
          )));
    }
    unlistenImage_() {
      this.unlisten_ && (this.unlisten_(), (this.unlisten_ = null));
    }
  }
  function O7() {
    const t = On(1, 1);
    return (t.fillStyle = "rgba(0,0,0,0)"), t.fillRect(0, 0, 1, 1), t.canvas;
  }
  const M7 = 0.5,
    L7 = 10,
    db = 0.25;
  class $7 {
    constructor(e, n, r, i, o, s) {
      (this.sourceProj_ = e), (this.targetProj_ = n);
      let a = {};
      const l = pu(this.targetProj_, this.sourceProj_);
      (this.transformInv_ = function (_) {
        const R = _[0] + "/" + _[1];
        return a[R] || (a[R] = l(_)), a[R];
      }),
        (this.maxSourceExtent_ = i),
        (this.errorThresholdSquared_ = o * o),
        (this.triangles_ = []),
        (this.wrapsXInSource_ = !1),
        (this.canWrapXInSource_ =
          this.sourceProj_.canWrapX() &&
          !!i &&
          !!this.sourceProj_.getExtent() &&
          Dt(i) >= Dt(this.sourceProj_.getExtent())),
        (this.sourceWorldWidth_ = this.sourceProj_.getExtent()
          ? Dt(this.sourceProj_.getExtent())
          : null),
        (this.targetWorldWidth_ = this.targetProj_.getExtent()
          ? Dt(this.targetProj_.getExtent())
          : null);
      const c = es(r),
        u = vd(r),
        d = md(r),
        h = pd(r),
        g = this.transformInv_(c),
        f = this.transformInv_(u),
        p = this.transformInv_(d),
        b = this.transformInv_(h),
        m =
          L7 +
          (s
            ? Math.max(0, Math.ceil(Math.log2(Ef(r) / (s * s * 256 * 256))))
            : 0);
      if ((this.addQuad_(c, u, d, h, g, f, p, b, m), this.wrapsXInSource_)) {
        let _ = 1 / 0;
        this.triangles_.forEach(function (R, S, x) {
          _ = Math.min(_, R.source[0][0], R.source[1][0], R.source[2][0]);
        }),
          this.triangles_.forEach((R) => {
            if (
              Math.max(R.source[0][0], R.source[1][0], R.source[2][0]) - _ >
              this.sourceWorldWidth_ / 2
            ) {
              const S = [
                [R.source[0][0], R.source[0][1]],
                [R.source[1][0], R.source[1][1]],
                [R.source[2][0], R.source[2][1]],
              ];
              S[0][0] - _ > this.sourceWorldWidth_ / 2 &&
                (S[0][0] -= this.sourceWorldWidth_),
                S[1][0] - _ > this.sourceWorldWidth_ / 2 &&
                  (S[1][0] -= this.sourceWorldWidth_),
                S[2][0] - _ > this.sourceWorldWidth_ / 2 &&
                  (S[2][0] -= this.sourceWorldWidth_);
              const x = Math.min(S[0][0], S[1][0], S[2][0]);
              Math.max(S[0][0], S[1][0], S[2][0]) - x <
                this.sourceWorldWidth_ / 2 && (R.source = S);
            }
          });
      }
      a = {};
    }
    addTriangle_(e, n, r, i, o, s) {
      this.triangles_.push({ source: [i, o, s], target: [e, n, r] });
    }
    addQuad_(e, n, r, i, o, s, a, l, c) {
      const u = Bv([o, s, a, l]),
        d = this.sourceWorldWidth_ ? Dt(u) / this.sourceWorldWidth_ : null,
        h = this.sourceWorldWidth_,
        g = this.sourceProj_.canWrapX() && d > 0.5 && d < 1;
      let f = !1;
      if (c > 0) {
        if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {
          const b = Bv([e, n, r, i]);
          f = Dt(b) / this.targetWorldWidth_ > db || f;
        }
        !g && this.sourceProj_.isGlobal() && d && (f = d > db || f);
      }
      if (
        !f &&
        this.maxSourceExtent_ &&
        isFinite(u[0]) &&
        isFinite(u[1]) &&
        isFinite(u[2]) &&
        isFinite(u[3]) &&
        !Bn(u, this.maxSourceExtent_)
      )
        return;
      let p = 0;
      if (
        !f &&
        (!isFinite(o[0]) ||
          !isFinite(o[1]) ||
          !isFinite(s[0]) ||
          !isFinite(s[1]) ||
          !isFinite(a[0]) ||
          !isFinite(a[1]) ||
          !isFinite(l[0]) ||
          !isFinite(l[1]))
      ) {
        if (c > 0) f = !0;
        else if (
          ((p =
            (!isFinite(o[0]) || !isFinite(o[1]) ? 8 : 0) +
            (!isFinite(s[0]) || !isFinite(s[1]) ? 4 : 0) +
            (!isFinite(a[0]) || !isFinite(a[1]) ? 2 : 0) +
            (!isFinite(l[0]) || !isFinite(l[1]) ? 1 : 0)),
          p != 1 && p != 2 && p != 4 && p != 8)
        )
          return;
      }
      if (c > 0) {
        if (!f) {
          const b = [(e[0] + r[0]) / 2, (e[1] + r[1]) / 2],
            m = this.transformInv_(b);
          let _;
          g
            ? (_ = (As(o[0], h) + As(a[0], h)) / 2 - As(m[0], h))
            : (_ = (o[0] + a[0]) / 2 - m[0]);
          const R = (o[1] + a[1]) / 2 - m[1];
          f = _ * _ + R * R > this.errorThresholdSquared_;
        }
        if (f) {
          if (Math.abs(e[0] - r[0]) <= Math.abs(e[1] - r[1])) {
            const b = [(n[0] + r[0]) / 2, (n[1] + r[1]) / 2],
              m = this.transformInv_(b),
              _ = [(i[0] + e[0]) / 2, (i[1] + e[1]) / 2],
              R = this.transformInv_(_);
            this.addQuad_(e, n, b, _, o, s, m, R, c - 1),
              this.addQuad_(_, b, r, i, R, m, a, l, c - 1);
          } else {
            const b = [(e[0] + n[0]) / 2, (e[1] + n[1]) / 2],
              m = this.transformInv_(b),
              _ = [(r[0] + i[0]) / 2, (r[1] + i[1]) / 2],
              R = this.transformInv_(_);
            this.addQuad_(e, b, _, i, o, m, R, l, c - 1),
              this.addQuad_(b, n, r, _, m, s, a, R, c - 1);
          }
          return;
        }
      }
      if (g) {
        if (!this.canWrapXInSource_) return;
        this.wrapsXInSource_ = !0;
      }
      p & 11 || this.addTriangle_(e, r, i, o, a, l),
        p & 14 || this.addTriangle_(e, r, n, o, a, s),
        p &&
          (p & 13 || this.addTriangle_(n, i, e, s, l, o),
          p & 7 || this.addTriangle_(n, i, r, s, l, a));
    }
    calculateSourceExtent() {
      const e = ur();
      return (
        this.triangles_.forEach(function (n, r, i) {
          const o = n.source;
          ja(e, o[0]), ja(e, o[1]), ja(e, o[2]);
        }),
        e
      );
    }
    getTriangles() {
      return this.triangles_;
    }
  }
  let Rh;
  const Is = [];
  function hb(t, e, n, r, i) {
    t.beginPath(),
      t.moveTo(0, 0),
      t.lineTo(e, n),
      t.lineTo(r, i),
      t.closePath(),
      t.save(),
      t.clip(),
      t.fillRect(0, 0, Math.max(e, r) + 1, Math.max(n, i)),
      t.restore();
  }
  function Th(t, e) {
    return (
      Math.abs(t[e * 4] - 210) > 2 || Math.abs(t[e * 4 + 3] - 0.75 * 255) > 2
    );
  }
  function D7() {
    if (Rh === void 0) {
      const t = On(6, 6, Is);
      (t.globalCompositeOperation = "lighter"),
        (t.fillStyle = "rgba(210, 0, 0, 0.75)"),
        hb(t, 4, 5, 4, 0),
        hb(t, 4, 5, 0, 5);
      const e = t.getImageData(0, 0, 3, 3).data;
      (Rh = Th(e, 0) || Th(e, 4) || Th(e, 8)), Cd(t), Is.push(t.canvas);
    }
    return Rh;
  }
  function fb(t, e, n, r) {
    const i = pp(n, e, t);
    let o = Kv(e, r, n);
    const s = e.getMetersPerUnit();
    s !== void 0 && (o *= s);
    const a = t.getMetersPerUnit();
    a !== void 0 && (o /= a);
    const l = t.getExtent();
    if (!l || fd(l, i)) {
      const c = Kv(t, o, i) / o;
      isFinite(c) && c > 0 && (o /= c);
    }
    return o;
  }
  function z7(t, e, n, r) {
    const i = zo(n);
    let o = fb(t, e, i, r);
    return (
      (!isFinite(o) || o <= 0) &&
        z_(n, function (s) {
          return (o = fb(t, e, s, r)), isFinite(o) && o > 0;
        }),
      o
    );
  }
  function F7(t, e, n, r, i, o, s, a, l, c, u, d, h) {
    const g = On(Math.round(n * t), Math.round(n * e), Is);
    if ((d || (g.imageSmoothingEnabled = !1), l.length === 0)) return g.canvas;
    g.scale(n, n);
    function f(_) {
      return Math.round(_ * n) / n;
    }
    g.globalCompositeOperation = "lighter";
    const p = ur();
    l.forEach(function (_, R, S) {
      yH(p, _.extent);
    });
    let b;
    if (!h || l.length !== 1 || c !== 0) {
      const _ = Dt(p),
        R = Yn(p);
      (b = On(Math.round((n * _) / r), Math.round((n * R) / r), Is)),
        d || (b.imageSmoothingEnabled = !1);
      const S = n / r;
      l.forEach(function (x, E, w) {
        const v = x.extent[0] - p[0],
          y = -(x.extent[3] - p[3]),
          T = Dt(x.extent),
          A = Yn(x.extent);
        x.image.width > 0 &&
          x.image.height > 0 &&
          b.drawImage(
            x.image,
            c,
            c,
            x.image.width - 2 * c,
            x.image.height - 2 * c,
            v * S,
            y * S,
            T * S,
            A * S
          );
      });
    }
    const m = es(s);
    return (
      a.getTriangles().forEach(function (_, R, S) {
        const x = _.source,
          E = _.target;
        let w = x[0][0],
          v = x[0][1],
          y = x[1][0],
          T = x[1][1],
          A = x[2][0],
          I = x[2][1];
        const L = f((E[0][0] - m[0]) / o),
          j = f(-(E[0][1] - m[1]) / o),
          k = f((E[1][0] - m[0]) / o),
          O = f(-(E[1][1] - m[1]) / o),
          D = f((E[2][0] - m[0]) / o),
          Y = f(-(E[2][1] - m[1]) / o),
          se = w,
          de = v;
        (w = 0), (v = 0), (y -= se), (T -= de), (A -= se), (I -= de);
        const fe = [
            [y, T, 0, 0, k - L],
            [A, I, 0, 0, D - L],
            [0, 0, y, T, O - j],
            [0, 0, A, I, Y - j],
          ],
          z = AH(fe);
        if (!z) return;
        if ((g.save(), g.beginPath(), D7() || !d)) {
          g.moveTo(k, O);
          const ue = 4,
            K = L - k,
            _e = j - O;
          for (let ie = 0; ie < ue; ie++)
            g.lineTo(k + f(((ie + 1) * K) / ue), O + f((ie * _e) / (ue - 1))),
              ie != ue - 1 &&
                g.lineTo(
                  k + f(((ie + 1) * K) / ue),
                  O + f(((ie + 1) * _e) / (ue - 1))
                );
          g.lineTo(D, Y);
        } else g.moveTo(k, O), g.lineTo(L, j), g.lineTo(D, Y);
        g.clip(),
          g.transform(z[0], z[2], z[1], z[3], L, j),
          g.translate(p[0] - se, p[3] - de);
        let ee;
        if (b) (ee = b.canvas), g.scale(r / n, -r / n);
        else {
          const ue = l[0],
            K = ue.extent;
          (ee = ue.image), g.scale(Dt(K) / ee.width, -Yn(K) / ee.height);
        }
        g.drawImage(ee, 0, 0), g.restore();
      }),
      b && (Cd(b), Is.push(b.canvas)),
      u &&
        (g.save(),
        (g.globalCompositeOperation = "source-over"),
        (g.strokeStyle = "black"),
        (g.lineWidth = 1),
        a.getTriangles().forEach(function (_, R, S) {
          const x = _.target,
            E = (x[0][0] - m[0]) / o,
            w = -(x[0][1] - m[1]) / o,
            v = (x[1][0] - m[0]) / o,
            y = -(x[1][1] - m[1]) / o,
            T = (x[2][0] - m[0]) / o,
            A = -(x[2][1] - m[1]) / o;
          g.beginPath(),
            g.moveTo(v, y),
            g.lineTo(E, w),
            g.lineTo(T, A),
            g.closePath(),
            g.stroke();
        }),
        g.restore()),
      g.canvas
    );
  }
  class Df extends mw {
    constructor(e, n, r, i, o, s, a, l, c, u, d, h) {
      super(o, qe.IDLE, h),
        (this.renderEdges_ = d !== void 0 ? d : !1),
        (this.pixelRatio_ = a),
        (this.gutter_ = l),
        (this.canvas_ = null),
        (this.sourceTileGrid_ = n),
        (this.targetTileGrid_ = i),
        (this.wrappedTileCoord_ = s || o),
        (this.sourceTiles_ = []),
        (this.sourcesListenerKeys_ = null),
        (this.sourceZ_ = 0);
      const g = i.getTileCoordExtent(this.wrappedTileCoord_),
        f = this.targetTileGrid_.getExtent();
      let p = this.sourceTileGrid_.getExtent();
      const b = f ? Ua(g, f) : g;
      if (Ef(b) === 0) {
        this.state = qe.EMPTY;
        return;
      }
      const m = e.getExtent();
      m && (p ? (p = Ua(p, m)) : (p = m));
      const _ = i.getResolution(this.wrappedTileCoord_[0]),
        R = z7(e, r, b, _);
      if (!isFinite(R) || R <= 0) {
        this.state = qe.EMPTY;
        return;
      }
      const S = u !== void 0 ? u : M7;
      if (
        ((this.triangulation_ = new $7(e, r, b, p, R * S, _)),
        this.triangulation_.getTriangles().length === 0)
      ) {
        this.state = qe.EMPTY;
        return;
      }
      this.sourceZ_ = n.getZForResolution(R);
      let x = this.triangulation_.calculateSourceExtent();
      if (
        (p &&
          (e.canWrapX()
            ? ((x[1] = on(x[1], p[1], p[3])), (x[3] = on(x[3], p[1], p[3])))
            : (x = Ua(x, p))),
        !Ef(x))
      )
        this.state = qe.EMPTY;
      else {
        const E = n.getTileRangeForExtentAndZ(x, this.sourceZ_);
        for (let w = E.minX; w <= E.maxX; w++)
          for (let v = E.minY; v <= E.maxY; v++) {
            const y = c(this.sourceZ_, w, v, a);
            y && this.sourceTiles_.push(y);
          }
        this.sourceTiles_.length === 0 && (this.state = qe.EMPTY);
      }
    }
    getImage() {
      return this.canvas_;
    }
    reproject_() {
      const e = [];
      if (
        (this.sourceTiles_.forEach((n) => {
          n &&
            n.getState() == qe.LOADED &&
            e.push({
              extent: this.sourceTileGrid_.getTileCoordExtent(n.tileCoord),
              image: n.getImage(),
            });
        }),
        (this.sourceTiles_.length = 0),
        e.length === 0)
      )
        this.state = qe.ERROR;
      else {
        const n = this.wrappedTileCoord_[0],
          r = this.targetTileGrid_.getTileSize(n),
          i = typeof r == "number" ? r : r[0],
          o = typeof r == "number" ? r : r[1],
          s = this.targetTileGrid_.getResolution(n),
          a = this.sourceTileGrid_.getResolution(this.sourceZ_),
          l = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);
        (this.canvas_ = F7(
          i,
          o,
          this.pixelRatio_,
          a,
          this.sourceTileGrid_.getExtent(),
          s,
          l,
          this.triangulation_,
          e,
          this.gutter_,
          this.renderEdges_,
          this.interpolate
        )),
          (this.state = qe.LOADED);
      }
      this.changed();
    }
    load() {
      if (this.state == qe.IDLE) {
        (this.state = qe.LOADING), this.changed();
        let e = 0;
        (this.sourcesListenerKeys_ = []),
          this.sourceTiles_.forEach((n) => {
            const r = n.getState();
            if (r == qe.IDLE || r == qe.LOADING) {
              e++;
              const i = ft(
                n,
                it.CHANGE,
                function (o) {
                  const s = n.getState();
                  (s == qe.LOADED || s == qe.ERROR || s == qe.EMPTY) &&
                    (Wt(i),
                    e--,
                    e === 0 && (this.unlistenSources_(), this.reproject_()));
                },
                this
              );
              this.sourcesListenerKeys_.push(i);
            }
          }),
          e === 0
            ? setTimeout(this.reproject_.bind(this), 0)
            : this.sourceTiles_.forEach(function (n, r, i) {
                n.getState() == qe.IDLE && n.load();
              });
      }
    }
    unlistenSources_() {
      this.sourcesListenerKeys_.forEach(Wt), (this.sourcesListenerKeys_ = null);
    }
    release() {
      this.canvas_ &&
        (Cd(this.canvas_.getContext("2d")),
        Is.push(this.canvas_),
        (this.canvas_ = null)),
        super.release();
    }
  }
  class B7 {
    constructor(e) {
      (this.highWaterMark = e !== void 0 ? e : 2048),
        (this.count_ = 0),
        (this.entries_ = {}),
        (this.oldest_ = null),
        (this.newest_ = null);
    }
    canExpireCache() {
      return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;
    }
    expireCache(e) {
      for (; this.canExpireCache(); ) this.pop();
    }
    clear() {
      (this.count_ = 0),
        (this.entries_ = {}),
        (this.oldest_ = null),
        (this.newest_ = null);
    }
    containsKey(e) {
      return this.entries_.hasOwnProperty(e);
    }
    forEach(e) {
      let n = this.oldest_;
      for (; n; ) e(n.value_, n.key_, this), (n = n.newer);
    }
    get(e, n) {
      const r = this.entries_[e];
      return (
        ut(
          r !== void 0,
          "Tried to get a value for a key that does not exist in the cache"
        ),
        r === this.newest_ ||
          (r === this.oldest_
            ? ((this.oldest_ = this.oldest_.newer), (this.oldest_.older = null))
            : ((r.newer.older = r.older), (r.older.newer = r.newer)),
          (r.newer = null),
          (r.older = this.newest_),
          (this.newest_.newer = r),
          (this.newest_ = r)),
        r.value_
      );
    }
    remove(e) {
      const n = this.entries_[e];
      return (
        ut(
          n !== void 0,
          "Tried to get a value for a key that does not exist in the cache"
        ),
        n === this.newest_
          ? ((this.newest_ = n.older),
            this.newest_ && (this.newest_.newer = null))
          : n === this.oldest_
          ? ((this.oldest_ = n.newer),
            this.oldest_ && (this.oldest_.older = null))
          : ((n.newer.older = n.older), (n.older.newer = n.newer)),
        delete this.entries_[e],
        --this.count_,
        n.value_
      );
    }
    getCount() {
      return this.count_;
    }
    getKeys() {
      const e = new Array(this.count_);
      let n = 0,
        r;
      for (r = this.newest_; r; r = r.older) e[n++] = r.key_;
      return e;
    }
    getValues() {
      const e = new Array(this.count_);
      let n = 0,
        r;
      for (r = this.newest_; r; r = r.older) e[n++] = r.value_;
      return e;
    }
    peekLast() {
      return this.oldest_.value_;
    }
    peekLastKey() {
      return this.oldest_.key_;
    }
    peekFirstKey() {
      return this.newest_.key_;
    }
    peek(e) {
      var n;
      return (n = this.entries_[e]) == null ? void 0 : n.value_;
    }
    pop() {
      const e = this.oldest_;
      return (
        delete this.entries_[e.key_],
        e.newer && (e.newer.older = null),
        (this.oldest_ = e.newer),
        this.oldest_ || (this.newest_ = null),
        --this.count_,
        e.value_
      );
    }
    replace(e, n) {
      this.get(e), (this.entries_[e].value_ = n);
    }
    set(e, n) {
      ut(
        !(e in this.entries_),
        "Tried to set a value for a key that is used already"
      );
      const r = { key_: e, newer: null, older: this.newest_, value_: n };
      this.newest_ ? (this.newest_.newer = r) : (this.oldest_ = r),
        (this.newest_ = r),
        (this.entries_[e] = r),
        ++this.count_;
    }
    setSize(e) {
      this.highWaterMark = e;
    }
  }
  function gb(t, e, n, r) {
    return r !== void 0 ? ((r[0] = t), (r[1] = e), (r[2] = n), r) : [t, e, n];
  }
  function _d(t, e, n) {
    return t + "/" + e + "/" + n;
  }
  function bw(t) {
    return _d(t[0], t[1], t[2]);
  }
  function N7(t) {
    return t.split("/").map(Number);
  }
  function H7(t) {
    return (t[1] << t[0]) + t[2];
  }
  function W7(t, e) {
    const n = t[0],
      r = t[1],
      i = t[2];
    if (e.getMinZoom() > n || n > e.getMaxZoom()) return !1;
    const o = e.getFullTileRange(n);
    return o ? o.containsXY(r, i) : !0;
  }
  class yw extends B7 {
    clear() {
      for (; this.getCount() > 0; ) this.pop().release();
      super.clear();
    }
    expireCache(e) {
      for (; this.canExpireCache() && !(this.peekLast().getKey() in e); )
        this.pop().release();
    }
    pruneExceptNewestZ() {
      if (this.getCount() === 0) return;
      const e = this.peekFirstKey(),
        r = N7(e)[0];
      this.forEach((i) => {
        i.tileCoord[0] !== r && (this.remove(bw(i.tileCoord)), i.release());
      });
    }
  }
  const Ph = {
    TILELOADSTART: "tileloadstart",
    TILELOADEND: "tileloadend",
    TILELOADERROR: "tileloaderror",
  };
  class xw extends Nr {
    constructor(e) {
      super(),
        (this.projection = dr(e.projection)),
        (this.attributions_ = pb(e.attributions)),
        (this.attributionsCollapsible_ =
          e.attributionsCollapsible !== void 0
            ? e.attributionsCollapsible
            : !0),
        (this.loading = !1),
        (this.state_ = e.state !== void 0 ? e.state : "ready"),
        (this.wrapX_ = e.wrapX !== void 0 ? e.wrapX : !1),
        (this.interpolate_ = !!e.interpolate),
        (this.viewResolver = null),
        (this.viewRejector = null);
      const n = this;
      this.viewPromise_ = new Promise(function (r, i) {
        (n.viewResolver = r), (n.viewRejector = i);
      });
    }
    getAttributions() {
      return this.attributions_;
    }
    getAttributionsCollapsible() {
      return this.attributionsCollapsible_;
    }
    getProjection() {
      return this.projection;
    }
    getResolutions(e) {
      return null;
    }
    getView() {
      return this.viewPromise_;
    }
    getState() {
      return this.state_;
    }
    getWrapX() {
      return this.wrapX_;
    }
    getInterpolate() {
      return this.interpolate_;
    }
    refresh() {
      this.changed();
    }
    setAttributions(e) {
      (this.attributions_ = pb(e)), this.changed();
    }
    setState(e) {
      (this.state_ = e), this.changed();
    }
  }
  function pb(t) {
    return t
      ? Array.isArray(t)
        ? function (e) {
            return t;
          }
        : typeof t == "function"
        ? t
        : function (e) {
            return [t];
          }
      : null;
  }
  class Ap {
    constructor(e, n, r, i) {
      (this.minX = e), (this.maxX = n), (this.minY = r), (this.maxY = i);
    }
    contains(e) {
      return this.containsXY(e[1], e[2]);
    }
    containsTileRange(e) {
      return (
        this.minX <= e.minX &&
        e.maxX <= this.maxX &&
        this.minY <= e.minY &&
        e.maxY <= this.maxY
      );
    }
    containsXY(e, n) {
      return (
        this.minX <= e && e <= this.maxX && this.minY <= n && n <= this.maxY
      );
    }
    equals(e) {
      return (
        this.minX == e.minX &&
        this.minY == e.minY &&
        this.maxX == e.maxX &&
        this.maxY == e.maxY
      );
    }
    extend(e) {
      e.minX < this.minX && (this.minX = e.minX),
        e.maxX > this.maxX && (this.maxX = e.maxX),
        e.minY < this.minY && (this.minY = e.minY),
        e.maxY > this.maxY && (this.maxY = e.maxY);
    }
    getHeight() {
      return this.maxY - this.minY + 1;
    }
    getSize() {
      return [this.getWidth(), this.getHeight()];
    }
    getWidth() {
      return this.maxX - this.minX + 1;
    }
    intersects(e) {
      return (
        this.minX <= e.maxX &&
        this.maxX >= e.minX &&
        this.minY <= e.maxY &&
        this.maxY >= e.minY
      );
    }
  }
  function as(t, e, n, r, i) {
    return i !== void 0
      ? ((i.minX = t), (i.maxX = e), (i.minY = n), (i.maxY = r), i)
      : new Ap(t, e, n, r);
  }
  const ls = [0, 0, 0],
    _i = 5;
  class j7 {
    constructor(e) {
      (this.minZoom = e.minZoom !== void 0 ? e.minZoom : 0),
        (this.resolutions_ = e.resolutions),
        ut(
          cH(this.resolutions_, (i, o) => o - i, !0),
          "`resolutions` must be sorted in descending order"
        );
      let n;
      if (!e.origins) {
        for (let i = 0, o = this.resolutions_.length - 1; i < o; ++i)
          if (!n) n = this.resolutions_[i] / this.resolutions_[i + 1];
          else if (this.resolutions_[i] / this.resolutions_[i + 1] !== n) {
            n = void 0;
            break;
          }
      }
      (this.zoomFactor_ = n),
        (this.maxZoom = this.resolutions_.length - 1),
        (this.origin_ = e.origin !== void 0 ? e.origin : null),
        (this.origins_ = null),
        e.origins !== void 0 &&
          ((this.origins_ = e.origins),
          ut(
            this.origins_.length == this.resolutions_.length,
            "Number of `origins` and `resolutions` must be equal"
          ));
      const r = e.extent;
      r !== void 0 && !this.origin_ && !this.origins_ && (this.origin_ = es(r)),
        ut(
          (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),
          "Either `origin` or `origins` must be configured, never both"
        ),
        (this.tileSizes_ = null),
        e.tileSizes !== void 0 &&
          ((this.tileSizes_ = e.tileSizes),
          ut(
            this.tileSizes_.length == this.resolutions_.length,
            "Number of `tileSizes` and `resolutions` must be equal"
          )),
        (this.tileSize_ =
          e.tileSize !== void 0 ? e.tileSize : this.tileSizes_ ? null : up),
        ut(
          (!this.tileSize_ && this.tileSizes_) ||
            (this.tileSize_ && !this.tileSizes_),
          "Either `tileSize` or `tileSizes` must be configured, never both"
        ),
        (this.extent_ = r !== void 0 ? r : null),
        (this.fullTileRanges_ = null),
        (this.tmpSize_ = [0, 0]),
        (this.tmpExtent_ = [0, 0, 0, 0]),
        e.sizes !== void 0
          ? (this.fullTileRanges_ = e.sizes.map((i, o) => {
              const s = new Ap(
                Math.min(0, i[0]),
                Math.max(i[0] - 1, -1),
                Math.min(0, i[1]),
                Math.max(i[1] - 1, -1)
              );
              if (r) {
                const a = this.getTileRangeForExtentAndZ(r, o);
                (s.minX = Math.max(a.minX, s.minX)),
                  (s.maxX = Math.min(a.maxX, s.maxX)),
                  (s.minY = Math.max(a.minY, s.minY)),
                  (s.maxY = Math.min(a.maxY, s.maxY));
              }
              return s;
            }))
          : r && this.calculateTileRanges_(r);
    }
    forEachTileCoord(e, n, r) {
      const i = this.getTileRangeForExtentAndZ(e, n);
      for (let o = i.minX, s = i.maxX; o <= s; ++o)
        for (let a = i.minY, l = i.maxY; a <= l; ++a) r([n, o, a]);
    }
    forEachTileCoordParentTileRange(e, n, r, i) {
      let o,
        s,
        a,
        l = null,
        c = e[0] - 1;
      for (
        this.zoomFactor_ === 2
          ? ((s = e[1]), (a = e[2]))
          : (l = this.getTileCoordExtent(e, i));
        c >= this.minZoom;

      ) {
        if (
          (s !== void 0 && a !== void 0
            ? ((s = Math.floor(s / 2)),
              (a = Math.floor(a / 2)),
              (o = as(s, s, a, a, r)))
            : (o = this.getTileRangeForExtentAndZ(l, c, r)),
          n(c, o))
        )
          return !0;
        --c;
      }
      return !1;
    }
    getExtent() {
      return this.extent_;
    }
    getMaxZoom() {
      return this.maxZoom;
    }
    getMinZoom() {
      return this.minZoom;
    }
    getOrigin(e) {
      return this.origin_ ? this.origin_ : this.origins_[e];
    }
    getResolution(e) {
      return this.resolutions_[e];
    }
    getResolutions() {
      return this.resolutions_;
    }
    getTileCoordChildTileRange(e, n, r) {
      if (e[0] < this.maxZoom) {
        if (this.zoomFactor_ === 2) {
          const o = e[1] * 2,
            s = e[2] * 2;
          return as(o, o + 1, s, s + 1, n);
        }
        const i = this.getTileCoordExtent(e, r || this.tmpExtent_);
        return this.getTileRangeForExtentAndZ(i, e[0] + 1, n);
      }
      return null;
    }
    getTileRangeForTileCoordAndZ(e, n, r) {
      if (n > this.maxZoom || n < this.minZoom) return null;
      const i = e[0],
        o = e[1],
        s = e[2];
      if (n === i) return as(o, s, o, s, r);
      if (this.zoomFactor_) {
        const l = Math.pow(this.zoomFactor_, n - i),
          c = Math.floor(o * l),
          u = Math.floor(s * l);
        if (n < i) return as(c, c, u, u, r);
        const d = Math.floor(l * (o + 1)) - 1,
          h = Math.floor(l * (s + 1)) - 1;
        return as(c, d, u, h, r);
      }
      const a = this.getTileCoordExtent(e, this.tmpExtent_);
      return this.getTileRangeForExtentAndZ(a, n, r);
    }
    getTileRangeForExtentAndZ(e, n, r) {
      this.getTileCoordForXYAndZ_(e[0], e[3], n, !1, ls);
      const i = ls[1],
        o = ls[2];
      this.getTileCoordForXYAndZ_(e[2], e[1], n, !0, ls);
      const s = ls[1],
        a = ls[2];
      return as(i, s, o, a, r);
    }
    getTileCoordCenter(e) {
      const n = this.getOrigin(e[0]),
        r = this.getResolution(e[0]),
        i = Kn(this.getTileSize(e[0]), this.tmpSize_);
      return [n[0] + (e[1] + 0.5) * i[0] * r, n[1] - (e[2] + 0.5) * i[1] * r];
    }
    getTileCoordExtent(e, n) {
      const r = this.getOrigin(e[0]),
        i = this.getResolution(e[0]),
        o = Kn(this.getTileSize(e[0]), this.tmpSize_),
        s = r[0] + e[1] * o[0] * i,
        a = r[1] - (e[2] + 1) * o[1] * i,
        l = s + o[0] * i,
        c = a + o[1] * i;
      return Yi(s, a, l, c, n);
    }
    getTileCoordForCoordAndResolution(e, n, r) {
      return this.getTileCoordForXYAndResolution_(e[0], e[1], n, !1, r);
    }
    getTileCoordForXYAndResolution_(e, n, r, i, o) {
      const s = this.getZForResolution(r),
        a = r / this.getResolution(s),
        l = this.getOrigin(s),
        c = Kn(this.getTileSize(s), this.tmpSize_);
      let u = (a * (e - l[0])) / r / c[0],
        d = (a * (l[1] - n)) / r / c[1];
      return (
        i
          ? ((u = Cc(u, _i) - 1), (d = Cc(d, _i) - 1))
          : ((u = xc(u, _i)), (d = xc(d, _i))),
        gb(s, u, d, o)
      );
    }
    getTileCoordForXYAndZ_(e, n, r, i, o) {
      const s = this.getOrigin(r),
        a = this.getResolution(r),
        l = Kn(this.getTileSize(r), this.tmpSize_);
      let c = (e - s[0]) / a / l[0],
        u = (s[1] - n) / a / l[1];
      return (
        i
          ? ((c = Cc(c, _i) - 1), (u = Cc(u, _i) - 1))
          : ((c = xc(c, _i)), (u = xc(u, _i))),
        gb(r, c, u, o)
      );
    }
    getTileCoordForCoordAndZ(e, n, r) {
      return this.getTileCoordForXYAndZ_(e[0], e[1], n, !1, r);
    }
    getTileCoordResolution(e) {
      return this.resolutions_[e[0]];
    }
    getTileSize(e) {
      return this.tileSize_ ? this.tileSize_ : this.tileSizes_[e];
    }
    getFullTileRange(e) {
      return this.fullTileRanges_
        ? this.fullTileRanges_[e]
        : this.extent_
        ? this.getTileRangeForExtentAndZ(this.extent_, e)
        : null;
    }
    getZForResolution(e, n) {
      const r = tp(this.resolutions_, e, n || 0);
      return on(r, this.minZoom, this.maxZoom);
    }
    tileCoordIntersectsViewport(e, n) {
      return ow(n, 0, n.length, 2, this.getTileCoordExtent(e));
    }
    calculateTileRanges_(e) {
      const n = this.resolutions_.length,
        r = new Array(n);
      for (let i = this.minZoom; i < n; ++i)
        r[i] = this.getTileRangeForExtentAndZ(e, i);
      this.fullTileRanges_ = r;
    }
  }
  const Cw = j7;
  function _w(t) {
    let e = t.getDefaultTileGrid();
    return e || ((e = X7(t)), t.setDefaultTileGrid(e)), e;
  }
  function U7(t, e, n) {
    const r = e[0],
      i = t.getTileCoordCenter(e),
      o = kp(n);
    if (!fd(o, i)) {
      const s = Dt(o),
        a = Math.ceil((o[0] - i[0]) / s);
      return (i[0] += s * a), t.getTileCoordForCoordAndZ(i, r);
    }
    return e;
  }
  function V7(t, e, n, r) {
    r = r !== void 0 ? r : "top-left";
    const i = ww(t, e, n);
    return new Cw({ extent: t, origin: CH(t, r), resolutions: i, tileSize: n });
  }
  function G7(t) {
    const e = t || {},
      n = e.extent || dr("EPSG:3857").getExtent(),
      r = {
        extent: n,
        minZoom: e.minZoom,
        tileSize: e.tileSize,
        resolutions: ww(n, e.maxZoom, e.tileSize, e.maxResolution),
      };
    return new Cw(r);
  }
  function ww(t, e, n, r) {
    (e = e !== void 0 ? e : $H), (n = Kn(n !== void 0 ? n : up));
    const i = Yn(t),
      o = Dt(t);
    r = r > 0 ? r : Math.max(o / n[0], i / n[1]);
    const s = e + 1,
      a = new Array(s);
    for (let l = 0; l < s; ++l) a[l] = r / Math.pow(2, l);
    return a;
  }
  function X7(t, e, n, r) {
    const i = kp(t);
    return V7(i, e, n, r);
  }
  function kp(t) {
    t = dr(t);
    let e = t.getExtent();
    if (!e) {
      const n = (180 * gl.degrees) / t.getMetersPerUnit();
      e = Yi(-n, -n, n, n);
    }
    return e;
  }
  class K7 extends xw {
    constructor(e) {
      super({
        attributions: e.attributions,
        attributionsCollapsible: e.attributionsCollapsible,
        projection: e.projection,
        state: e.state,
        wrapX: e.wrapX,
        interpolate: e.interpolate,
      }),
        this.on,
        this.once,
        this.un,
        (this.opaque_ = e.opaque !== void 0 ? e.opaque : !1),
        (this.tilePixelRatio_ =
          e.tilePixelRatio !== void 0 ? e.tilePixelRatio : 1),
        (this.tileGrid = e.tileGrid !== void 0 ? e.tileGrid : null);
      const n = [256, 256];
      this.tileGrid &&
        Kn(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), n),
        (this.tileCache = new yw(e.cacheSize || 0)),
        (this.tmpSize = [0, 0]),
        (this.key_ = e.key || ""),
        (this.tileOptions = {
          transition: e.transition,
          interpolate: e.interpolate,
        }),
        (this.zDirection = e.zDirection ? e.zDirection : 0);
    }
    canExpireCache() {
      return this.tileCache.canExpireCache();
    }
    expireCache(e, n) {
      const r = this.getTileCacheForProjection(e);
      r && r.expireCache(n);
    }
    forEachLoadedTile(e, n, r, i) {
      const o = this.getTileCacheForProjection(e);
      if (!o) return !1;
      let s = !0,
        a,
        l,
        c;
      for (let u = r.minX; u <= r.maxX; ++u)
        for (let d = r.minY; d <= r.maxY; ++d)
          (l = _d(n, u, d)),
            (c = !1),
            o.containsKey(l) &&
              ((a = o.get(l)),
              (c = a.getState() === qe.LOADED),
              c && (c = i(a) !== !1)),
            c || (s = !1);
      return s;
    }
    getGutterForProjection(e) {
      return 0;
    }
    getKey() {
      return this.key_;
    }
    setKey(e) {
      this.key_ !== e && ((this.key_ = e), this.changed());
    }
    getOpaque(e) {
      return this.opaque_;
    }
    getResolutions(e) {
      const n = e ? this.getTileGridForProjection(e) : this.tileGrid;
      return n ? n.getResolutions() : null;
    }
    getTile(e, n, r, i, o) {
      return dt();
    }
    getTileGrid() {
      return this.tileGrid;
    }
    getTileGridForProjection(e) {
      return this.tileGrid ? this.tileGrid : _w(e);
    }
    getTileCacheForProjection(e) {
      const n = this.getProjection();
      return (
        ut(
          n === null || fs(n, e),
          "A VectorTile source can only be rendered if it has a projection compatible with the view projection."
        ),
        this.tileCache
      );
    }
    getTilePixelRatio(e) {
      return this.tilePixelRatio_;
    }
    getTilePixelSize(e, n, r) {
      const i = this.getTileGridForProjection(r),
        o = this.getTilePixelRatio(n),
        s = Kn(i.getTileSize(e), this.tmpSize);
      return o == 1 ? s : E7(s, o, this.tmpSize);
    }
    getTileCoordForTileUrlFunction(e, n) {
      n = n !== void 0 ? n : this.getProjection();
      const r = this.getTileGridForProjection(n);
      return (
        this.getWrapX() && n.isGlobal() && (e = U7(r, e, n)),
        W7(e, r) ? e : null
      );
    }
    clear() {
      this.tileCache.clear();
    }
    refresh() {
      this.clear(), super.refresh();
    }
    updateCacheSize(e, n) {
      const r = this.getTileCacheForProjection(n);
      e > r.highWaterMark && (r.highWaterMark = e);
    }
    useTile(e, n, r, i) {}
  }
  class Y7 extends fi {
    constructor(e, n) {
      super(e), (this.tile = n);
    }
  }
  function q7(t, e) {
    const n = /\{z\}/g,
      r = /\{x\}/g,
      i = /\{y\}/g,
      o = /\{-y\}/g;
    return function (s, a, l) {
      if (s)
        return t
          .replace(n, s[0].toString())
          .replace(r, s[1].toString())
          .replace(i, s[2].toString())
          .replace(o, function () {
            const c = s[0],
              u = e.getFullTileRange(c);
            if (!u)
              throw new Error(
                "The {-y} placeholder requires a tile grid with extent"
              );
            return (u.getHeight() - s[2] - 1).toString();
          });
    };
  }
  function Z7(t, e) {
    const n = t.length,
      r = new Array(n);
    for (let i = 0; i < n; ++i) r[i] = q7(t[i], e);
    return J7(r);
  }
  function J7(t) {
    return t.length === 1
      ? t[0]
      : function (e, n, r) {
          if (!e) return;
          const i = H7(e),
            o = As(i, t.length);
          return t[o](e, n, r);
        };
  }
  function Q7(t) {
    const e = [];
    let n = /\{([a-z])-([a-z])\}/.exec(t);
    if (n) {
      const r = n[1].charCodeAt(0),
        i = n[2].charCodeAt(0);
      let o;
      for (o = r; o <= i; ++o) e.push(t.replace(n[0], String.fromCharCode(o)));
      return e;
    }
    if (((n = /\{(\d+)-(\d+)\}/.exec(t)), n)) {
      const r = parseInt(n[2], 10);
      for (let i = parseInt(n[1], 10); i <= r; i++)
        e.push(t.replace(n[0], i.toString()));
      return e;
    }
    return e.push(t), e;
  }
  class Ip extends K7 {
    constructor(e) {
      super({
        attributions: e.attributions,
        cacheSize: e.cacheSize,
        opaque: e.opaque,
        projection: e.projection,
        state: e.state,
        tileGrid: e.tileGrid,
        tilePixelRatio: e.tilePixelRatio,
        wrapX: e.wrapX,
        transition: e.transition,
        interpolate: e.interpolate,
        key: e.key,
        attributionsCollapsible: e.attributionsCollapsible,
        zDirection: e.zDirection,
      }),
        (this.generateTileUrlFunction_ =
          this.tileUrlFunction === Ip.prototype.tileUrlFunction),
        (this.tileLoadFunction = e.tileLoadFunction),
        e.tileUrlFunction && (this.tileUrlFunction = e.tileUrlFunction),
        (this.urls = null),
        e.urls ? this.setUrls(e.urls) : e.url && this.setUrl(e.url),
        (this.tileLoadingKeys_ = {});
    }
    getTileLoadFunction() {
      return this.tileLoadFunction;
    }
    getTileUrlFunction() {
      return Object.getPrototypeOf(this).tileUrlFunction ===
        this.tileUrlFunction
        ? this.tileUrlFunction.bind(this)
        : this.tileUrlFunction;
    }
    getUrls() {
      return this.urls;
    }
    handleTileChange(e) {
      const n = e.target,
        r = xt(n),
        i = n.getState();
      let o;
      i == qe.LOADING
        ? ((this.tileLoadingKeys_[r] = !0), (o = Ph.TILELOADSTART))
        : r in this.tileLoadingKeys_ &&
          (delete this.tileLoadingKeys_[r],
          (o =
            i == qe.ERROR
              ? Ph.TILELOADERROR
              : i == qe.LOADED
              ? Ph.TILELOADEND
              : void 0)),
        o != null && this.dispatchEvent(new Y7(o, n));
    }
    setTileLoadFunction(e) {
      this.tileCache.clear(), (this.tileLoadFunction = e), this.changed();
    }
    setTileUrlFunction(e, n) {
      (this.tileUrlFunction = e),
        this.tileCache.pruneExceptNewestZ(),
        typeof n < "u" ? this.setKey(n) : this.changed();
    }
    setUrl(e) {
      const n = Q7(e);
      (this.urls = n), this.setUrls(n);
    }
    setUrls(e) {
      this.urls = e;
      const n = e.join(`
`);
      this.generateTileUrlFunction_
        ? this.setTileUrlFunction(Z7(e, this.tileGrid), n)
        : this.setKey(n);
    }
    tileUrlFunction(e, n, r) {}
    useTile(e, n, r) {
      const i = _d(e, n, r);
      this.tileCache.containsKey(i) && this.tileCache.get(i);
    }
  }
  class e9 extends Ip {
    constructor(e) {
      super({
        attributions: e.attributions,
        cacheSize: e.cacheSize,
        opaque: e.opaque,
        projection: e.projection,
        state: e.state,
        tileGrid: e.tileGrid,
        tileLoadFunction: e.tileLoadFunction ? e.tileLoadFunction : t9,
        tilePixelRatio: e.tilePixelRatio,
        tileUrlFunction: e.tileUrlFunction,
        url: e.url,
        urls: e.urls,
        wrapX: e.wrapX,
        transition: e.transition,
        interpolate: e.interpolate !== void 0 ? e.interpolate : !0,
        key: e.key,
        attributionsCollapsible: e.attributionsCollapsible,
        zDirection: e.zDirection,
      }),
        (this.crossOrigin = e.crossOrigin !== void 0 ? e.crossOrigin : null),
        (this.tileClass = e.tileClass !== void 0 ? e.tileClass : vw),
        (this.tileCacheForProjection = {}),
        (this.tileGridForProjection = {}),
        (this.reprojectionErrorThreshold_ = e.reprojectionErrorThreshold),
        (this.renderReprojectionEdges_ = !1);
    }
    canExpireCache() {
      if (this.tileCache.canExpireCache()) return !0;
      for (const e in this.tileCacheForProjection)
        if (this.tileCacheForProjection[e].canExpireCache()) return !0;
      return !1;
    }
    expireCache(e, n) {
      const r = this.getTileCacheForProjection(e);
      this.tileCache.expireCache(this.tileCache == r ? n : {});
      for (const i in this.tileCacheForProjection) {
        const o = this.tileCacheForProjection[i];
        o.expireCache(o == r ? n : {});
      }
    }
    getGutterForProjection(e) {
      return this.getProjection() && e && !fs(this.getProjection(), e)
        ? 0
        : this.getGutter();
    }
    getGutter() {
      return 0;
    }
    getKey() {
      let e = super.getKey();
      return this.getInterpolate() || (e += ":disable-interpolation"), e;
    }
    getOpaque(e) {
      return this.getProjection() && e && !fs(this.getProjection(), e)
        ? !1
        : super.getOpaque(e);
    }
    getTileGridForProjection(e) {
      const n = this.getProjection();
      if (this.tileGrid && (!n || fs(n, e))) return this.tileGrid;
      const r = xt(e);
      return (
        r in this.tileGridForProjection ||
          (this.tileGridForProjection[r] = _w(e)),
        this.tileGridForProjection[r]
      );
    }
    getTileCacheForProjection(e) {
      const n = this.getProjection();
      if (!n || fs(n, e)) return this.tileCache;
      const r = xt(e);
      return (
        r in this.tileCacheForProjection ||
          (this.tileCacheForProjection[r] = new yw(
            this.tileCache.highWaterMark
          )),
        this.tileCacheForProjection[r]
      );
    }
    createTile_(e, n, r, i, o, s) {
      const a = [e, n, r],
        l = this.getTileCoordForTileUrlFunction(a, o),
        c = l ? this.tileUrlFunction(l, i, o) : void 0,
        u = new this.tileClass(
          a,
          c !== void 0 ? qe.IDLE : qe.EMPTY,
          c !== void 0 ? c : "",
          this.crossOrigin,
          this.tileLoadFunction,
          this.tileOptions
        );
      return (
        (u.key = s),
        u.addEventListener(it.CHANGE, this.handleTileChange.bind(this)),
        u
      );
    }
    getTile(e, n, r, i, o) {
      const s = this.getProjection();
      if (!s || !o || fs(s, o)) return this.getTileInternal(e, n, r, i, s || o);
      const a = this.getTileCacheForProjection(o),
        l = [e, n, r];
      let c;
      const u = bw(l);
      a.containsKey(u) && (c = a.get(u));
      const d = this.getKey();
      if (c && c.key == d) return c;
      const h = this.getTileGridForProjection(s),
        g = this.getTileGridForProjection(o),
        f = this.getTileCoordForTileUrlFunction(l, o),
        p = new Df(
          s,
          h,
          o,
          g,
          l,
          f,
          this.getTilePixelRatio(i),
          this.getGutter(),
          (b, m, _, R) => this.getTileInternal(b, m, _, R, s),
          this.reprojectionErrorThreshold_,
          this.renderReprojectionEdges_,
          this.tileOptions
        );
      return (
        (p.key = d),
        c
          ? ((p.interimTile = c), p.refreshInterimChain(), a.replace(u, p))
          : a.set(u, p),
        p
      );
    }
    getTileInternal(e, n, r, i, o) {
      let s = null;
      const a = _d(e, n, r),
        l = this.getKey();
      if (!this.tileCache.containsKey(a))
        (s = this.createTile_(e, n, r, i, o, l)), this.tileCache.set(a, s);
      else if (((s = this.tileCache.get(a)), s.key != l)) {
        const c = s;
        (s = this.createTile_(e, n, r, i, o, l)),
          c.getState() == qe.IDLE
            ? (s.interimTile = c.interimTile)
            : (s.interimTile = c),
          s.refreshInterimChain(),
          this.tileCache.replace(a, s);
      }
      return s;
    }
    setRenderReprojectionEdges(e) {
      if (this.renderReprojectionEdges_ != e) {
        this.renderReprojectionEdges_ = e;
        for (const n in this.tileCacheForProjection)
          this.tileCacheForProjection[n].clear();
        this.changed();
      }
    }
    setTileGridForProjection(e, n) {
      const r = dr(e);
      if (r) {
        const i = xt(r);
        i in this.tileGridForProjection || (this.tileGridForProjection[i] = n);
      }
    }
    clear() {
      super.clear();
      for (const e in this.tileCacheForProjection)
        this.tileCacheForProjection[e].clear();
    }
  }
  function t9(t, e) {
    t.getImage().src = e;
  }
  class n9 extends e9 {
    constructor(e) {
      e = e || {};
      const n = e.projection !== void 0 ? e.projection : "EPSG:3857",
        r =
          e.tileGrid !== void 0
            ? e.tileGrid
            : G7({
                extent: kp(n),
                maxResolution: e.maxResolution,
                maxZoom: e.maxZoom,
                minZoom: e.minZoom,
                tileSize: e.tileSize,
              });
      super({
        attributions: e.attributions,
        cacheSize: e.cacheSize,
        crossOrigin: e.crossOrigin,
        interpolate: e.interpolate,
        opaque: e.opaque,
        projection: n,
        reprojectionErrorThreshold: e.reprojectionErrorThreshold,
        tileGrid: r,
        tileLoadFunction: e.tileLoadFunction,
        tilePixelRatio: e.tilePixelRatio,
        tileUrlFunction: e.tileUrlFunction,
        url: e.url,
        urls: e.urls,
        wrapX: e.wrapX !== void 0 ? e.wrapX : !0,
        transition: e.transition,
        attributionsCollapsible: e.attributionsCollapsible,
        zDirection: e.zDirection,
      }),
        (this.gutter_ = e.gutter !== void 0 ? e.gutter : 0);
    }
    getGutter() {
      return this.gutter_;
    }
  }
  const r9 =
    '&#169; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors.';
  class i9 extends n9 {
    constructor(e) {
      e = e || {};
      let n;
      e.attributions !== void 0 ? (n = e.attributions) : (n = [r9]);
      const r = e.crossOrigin !== void 0 ? e.crossOrigin : "anonymous",
        i =
          e.url !== void 0
            ? e.url
            : "https://tile.openstreetmap.org/{z}/{x}/{y}.png";
      super({
        attributions: n,
        attributionsCollapsible: !1,
        cacheSize: e.cacheSize,
        crossOrigin: r,
        interpolate: e.interpolate,
        maxZoom: e.maxZoom !== void 0 ? e.maxZoom : 19,
        opaque: e.opaque !== void 0 ? e.opaque : !0,
        reprojectionErrorThreshold: e.reprojectionErrorThreshold,
        tileLoadFunction: e.tileLoadFunction,
        transition: e.transition,
        url: i,
        wrapX: e.wrapX,
        zDirection: e.zDirection,
      });
    }
  }
  const o9 = i9,
    Rc = {
      PRELOAD: "preload",
      USE_INTERIM_TILES_ON_ERROR: "useInterimTilesOnError",
    };
  class s9 extends yd {
    constructor(e) {
      e = e || {};
      const n = Object.assign({}, e);
      delete n.preload,
        delete n.useInterimTilesOnError,
        super(n),
        this.on,
        this.once,
        this.un,
        this.setPreload(e.preload !== void 0 ? e.preload : 0),
        this.setUseInterimTilesOnError(
          e.useInterimTilesOnError !== void 0 ? e.useInterimTilesOnError : !0
        );
    }
    getPreload() {
      return this.get(Rc.PRELOAD);
    }
    setPreload(e) {
      this.set(Rc.PRELOAD, e);
    }
    getUseInterimTilesOnError() {
      return this.get(Rc.USE_INTERIM_TILES_ON_ERROR);
    }
    setUseInterimTilesOnError(e) {
      this.set(Rc.USE_INTERIM_TILES_ON_ERROR, e);
    }
    getData(e) {
      return super.getData(e);
    }
  }
  class a9 extends Wl {
    constructor(e) {
      super(),
        (this.ready = !0),
        (this.boundHandleImageChange_ = this.handleImageChange_.bind(this)),
        (this.layer_ = e),
        (this.declutterExecutorGroup = null);
    }
    getFeatures(e) {
      return dt();
    }
    getData(e) {
      return null;
    }
    prepareFrame(e) {
      return dt();
    }
    renderFrame(e, n) {
      return dt();
    }
    loadedTileCallback(e, n, r) {
      e[n] || (e[n] = {}), (e[n][r.tileCoord.toString()] = r);
    }
    createLoadedTileFinder(e, n, r) {
      return (i, o) => {
        const s = this.loadedTileCallback.bind(this, r, i);
        return e.forEachLoadedTile(n, i, o, s);
      };
    }
    forEachFeatureAtCoordinate(e, n, r, i, o) {}
    getLayer() {
      return this.layer_;
    }
    handleFontsChanged() {}
    handleImageChange_(e) {
      const n = e.target;
      (n.getState() === $t.LOADED || n.getState() === $t.ERROR) &&
        this.renderIfReadyAndVisible();
    }
    loadImage(e) {
      let n = e.getState();
      return (
        n != $t.LOADED &&
          n != $t.ERROR &&
          e.addEventListener(it.CHANGE, this.boundHandleImageChange_),
        n == $t.IDLE && (e.load(), (n = e.getState())),
        n == $t.LOADED
      );
    }
    renderIfReadyAndVisible() {
      const e = this.getLayer();
      e && e.getVisible() && e.getSourceState() === "ready" && e.changed();
    }
    disposeInternal() {
      delete this.layer_, super.disposeInternal();
    }
  }
  const mb = [];
  let ms = null;
  function l9() {
    ms = On(1, 1, void 0, { willReadFrequently: !0 });
  }
  class Sw extends a9 {
    constructor(e) {
      super(e),
        (this.container = null),
        this.renderedResolution,
        (this.tempTransform = vr()),
        (this.pixelTransform = vr()),
        (this.inversePixelTransform = vr()),
        (this.context = null),
        (this.containerReused = !1),
        (this.pixelContext_ = null),
        (this.frameState = null);
    }
    getImageData(e, n, r) {
      ms || l9(), ms.clearRect(0, 0, 1, 1);
      let i;
      try {
        ms.drawImage(e, n, r, 1, 1, 0, 0, 1, 1),
          (i = ms.getImageData(0, 0, 1, 1).data);
      } catch {
        return (ms = null), null;
      }
      return i;
    }
    getBackground(e) {
      let r = this.getLayer().getBackground();
      return (
        typeof r == "function" && (r = r(e.viewState.resolution)), r || void 0
      );
    }
    useContainer(e, n, r) {
      const i = this.getLayer().getClassName();
      let o, s;
      if (
        e &&
        e.className === i &&
        (!r ||
          (e &&
            e.style.backgroundColor &&
            no(du(e.style.backgroundColor), du(r))))
      ) {
        const a = e.firstElementChild;
        a instanceof HTMLCanvasElement && (s = a.getContext("2d"));
      }
      if (
        (s && s.canvas.style.transform === n
          ? ((this.container = e),
            (this.context = s),
            (this.containerReused = !0))
          : this.containerReused
          ? ((this.container = null),
            (this.context = null),
            (this.containerReused = !1))
          : this.container && (this.container.style.backgroundColor = null),
        !this.container)
      ) {
        (o = document.createElement("div")), (o.className = i);
        let a = o.style;
        (a.position = "absolute"),
          (a.width = "100%"),
          (a.height = "100%"),
          (s = On());
        const l = s.canvas;
        o.appendChild(l),
          (a = l.style),
          (a.position = "absolute"),
          (a.left = "0"),
          (a.transformOrigin = "top left"),
          (this.container = o),
          (this.context = s);
      }
      !this.containerReused &&
        r &&
        !this.container.style.backgroundColor &&
        (this.container.style.backgroundColor = r);
    }
    clipUnrotated(e, n, r) {
      const i = es(r),
        o = vd(r),
        s = md(r),
        a = pd(r);
      fn(n.coordinateToPixelTransform, i),
        fn(n.coordinateToPixelTransform, o),
        fn(n.coordinateToPixelTransform, s),
        fn(n.coordinateToPixelTransform, a);
      const l = this.inversePixelTransform;
      fn(l, i),
        fn(l, o),
        fn(l, s),
        fn(l, a),
        e.save(),
        e.beginPath(),
        e.moveTo(Math.round(i[0]), Math.round(i[1])),
        e.lineTo(Math.round(o[0]), Math.round(o[1])),
        e.lineTo(Math.round(s[0]), Math.round(s[1])),
        e.lineTo(Math.round(a[0]), Math.round(a[1])),
        e.clip();
    }
    dispatchRenderEvent_(e, n, r) {
      const i = this.getLayer();
      if (i.hasListener(e)) {
        const o = new sw(e, this.inversePixelTransform, r, n);
        i.dispatchEvent(o);
      }
    }
    preRender(e, n) {
      (this.frameState = n), this.dispatchRenderEvent_(Dr.PRERENDER, e, n);
    }
    postRender(e, n) {
      this.dispatchRenderEvent_(Dr.POSTRENDER, e, n);
    }
    getRenderTransform(e, n, r, i, o, s, a) {
      const l = o / 2,
        c = s / 2,
        u = i / n,
        d = -u,
        h = -e[0] + a,
        g = -e[1];
      return oi(this.tempTransform, l, c, u, d, -r, h, g);
    }
    disposeInternal() {
      delete this.frameState, super.disposeInternal();
    }
  }
  class c9 extends Sw {
    constructor(e) {
      super(e),
        (this.extentChanged = !0),
        (this.renderedExtent_ = null),
        this.renderedPixelRatio,
        (this.renderedProjection = null),
        this.renderedRevision,
        (this.renderedTiles = []),
        (this.newTiles_ = !1),
        (this.tmpExtent = ur()),
        (this.tmpTileRange_ = new Ap(0, 0, 0, 0));
    }
    isDrawableTile(e) {
      const n = this.getLayer(),
        r = e.getState(),
        i = n.getUseInterimTilesOnError();
      return r == qe.LOADED || r == qe.EMPTY || (r == qe.ERROR && !i);
    }
    getTile(e, n, r, i) {
      const o = i.pixelRatio,
        s = i.viewState.projection,
        a = this.getLayer();
      let c = a.getSource().getTile(e, n, r, o, s);
      return (
        c.getState() == qe.ERROR &&
          a.getUseInterimTilesOnError() &&
          a.getPreload() > 0 &&
          (this.newTiles_ = !0),
        this.isDrawableTile(c) || (c = c.getInterimTile()),
        c
      );
    }
    getData(e) {
      const n = this.frameState;
      if (!n) return null;
      const r = this.getLayer(),
        i = fn(n.pixelToCoordinateTransform, e.slice()),
        o = r.getExtent();
      if (o && !fd(o, i)) return null;
      const s = n.pixelRatio,
        a = n.viewState.projection,
        l = n.viewState,
        c = r.getRenderSource(),
        u = c.getTileGridForProjection(l.projection),
        d = c.getTilePixelRatio(n.pixelRatio);
      for (
        let h = u.getZForResolution(l.resolution);
        h >= u.getMinZoom();
        --h
      ) {
        const g = u.getTileCoordForCoordAndZ(i, h),
          f = c.getTile(h, g[1], g[2], s, a);
        if (
          !(f instanceof vw || f instanceof Df) ||
          (f instanceof Df && f.getState() === qe.EMPTY)
        )
          return null;
        if (f.getState() !== qe.LOADED) continue;
        const p = u.getOrigin(h),
          b = Kn(u.getTileSize(h)),
          m = u.getResolution(h),
          _ = Math.floor(d * ((i[0] - p[0]) / m - g[1] * b[0])),
          R = Math.floor(d * ((p[1] - i[1]) / m - g[2] * b[1])),
          S = Math.round(d * c.getGutterForProjection(l.projection));
        return this.getImageData(f.getImage(), _ + S, R + S);
      }
      return null;
    }
    loadedTileCallback(e, n, r) {
      return this.isDrawableTile(r) ? super.loadedTileCallback(e, n, r) : !1;
    }
    prepareFrame(e) {
      return !!this.getLayer().getSource();
    }
    renderFrame(e, n) {
      const r = e.layerStatesArray[e.layerIndex],
        i = e.viewState,
        o = i.projection,
        s = i.resolution,
        a = i.center,
        l = i.rotation,
        c = e.pixelRatio,
        u = this.getLayer(),
        d = u.getSource(),
        h = d.getRevision(),
        g = d.getTileGridForProjection(o),
        f = g.getZForResolution(s, d.zDirection),
        p = g.getResolution(f);
      let b = e.extent;
      const m = e.viewState.resolution,
        _ = d.getTilePixelRatio(c),
        R = Math.round((Dt(b) / m) * c),
        S = Math.round((Yn(b) / m) * c),
        x = r.extent && To(r.extent);
      x && (b = Ua(b, To(r.extent)));
      const E = (p * R) / 2 / _,
        w = (p * S) / 2 / _,
        v = [a[0] - E, a[1] - w, a[0] + E, a[1] + w],
        y = g.getTileRangeForExtentAndZ(b, f),
        T = {};
      T[f] = {};
      const A = this.createLoadedTileFinder(d, o, T),
        I = this.tmpExtent,
        L = this.tmpTileRange_;
      this.newTiles_ = !1;
      const j = l ? Tf(i.center, m, l, e.size) : void 0;
      for (let ee = y.minX; ee <= y.maxX; ++ee)
        for (let ue = y.minY; ue <= y.maxY; ++ue) {
          if (l && !g.tileCoordIntersectsViewport([f, ee, ue], j)) continue;
          const K = this.getTile(f, ee, ue, e);
          if (this.isDrawableTile(K)) {
            const pe = xt(this);
            if (K.getState() == qe.LOADED) {
              T[f][K.tileCoord.toString()] = K;
              let re = K.inTransition(pe);
              re && r.opacity !== 1 && (K.endTransition(pe), (re = !1)),
                !this.newTiles_ &&
                  (re || !this.renderedTiles.includes(K)) &&
                  (this.newTiles_ = !0);
            }
            if (K.getAlpha(pe, e.time) === 1) continue;
          }
          const _e = g.getTileCoordChildTileRange(K.tileCoord, L, I);
          let ie = !1;
          _e && (ie = A(f + 1, _e)),
            ie || g.forEachTileCoordParentTileRange(K.tileCoord, A, L, I);
        }
      const k = ((p / s) * c) / _;
      oi(
        this.pixelTransform,
        e.size[0] / 2,
        e.size[1] / 2,
        1 / c,
        1 / c,
        l,
        -R / 2,
        -S / 2
      );
      const O = I_(this.pixelTransform);
      this.useContainer(n, O, this.getBackground(e));
      const D = this.context,
        Y = D.canvas;
      ip(this.inversePixelTransform, this.pixelTransform),
        oi(this.tempTransform, R / 2, S / 2, k, k, 0, -R / 2, -S / 2),
        Y.width != R || Y.height != S
          ? ((Y.width = R), (Y.height = S))
          : this.containerReused || D.clearRect(0, 0, R, S),
        x && this.clipUnrotated(D, e, x),
        d.getInterpolate() || (D.imageSmoothingEnabled = !1),
        this.preRender(D, e),
        (this.renderedTiles.length = 0);
      let se = Object.keys(T).map(Number);
      se.sort(Xi);
      let de, fe, z;
      r.opacity === 1 &&
      (!this.containerReused || d.getOpaque(e.viewState.projection))
        ? (se = se.reverse())
        : ((de = []), (fe = []));
      for (let ee = se.length - 1; ee >= 0; --ee) {
        const ue = se[ee],
          K = d.getTilePixelSize(ue, c, o),
          ie = g.getResolution(ue) / p,
          pe = K[0] * ie * k,
          re = K[1] * ie * k,
          ge = g.getTileCoordForCoordAndZ(es(v), ue),
          ke = g.getTileCoordExtent(ge),
          Me = fn(this.tempTransform, [
            (_ * (ke[0] - v[0])) / p,
            (_ * (v[3] - ke[3])) / p,
          ]),
          P = _ * d.getGutterForProjection(o),
          $ = T[ue];
        for (const H in $) {
          const ae = $[H],
            le = ae.tileCoord,
            he = ge[1] - le[1],
            Z = Math.round(Me[0] - (he - 1) * pe),
            W = ge[2] - le[2],
            Q = Math.round(Me[1] - (W - 1) * re),
            J = Math.round(Me[0] - he * pe),
            G = Math.round(Me[1] - W * re),
            X = Z - J,
            V = Q - G,
            me = f === ue,
            we = me && ae.getAlpha(xt(this), e.time) !== 1;
          let Pe = !1;
          if (!we)
            if (de) {
              z = [J, G, J + X, G, J + X, G + V, J, G + V];
              for (let ze = 0, Ne = de.length; ze < Ne; ++ze)
                if (f !== ue && ue < fe[ze]) {
                  const Fe = de[ze];
                  Bn([J, G, J + X, G + V], [Fe[0], Fe[3], Fe[4], Fe[7]]) &&
                    (Pe || (D.save(), (Pe = !0)),
                    D.beginPath(),
                    D.moveTo(z[0], z[1]),
                    D.lineTo(z[2], z[3]),
                    D.lineTo(z[4], z[5]),
                    D.lineTo(z[6], z[7]),
                    D.moveTo(Fe[6], Fe[7]),
                    D.lineTo(Fe[4], Fe[5]),
                    D.lineTo(Fe[2], Fe[3]),
                    D.lineTo(Fe[0], Fe[1]),
                    D.clip());
                }
              de.push(z), fe.push(ue);
            } else D.clearRect(J, G, X, V);
          this.drawTileImage(ae, e, J, G, X, V, P, me),
            de && !we
              ? (Pe && D.restore(), this.renderedTiles.unshift(ae))
              : this.renderedTiles.push(ae),
            this.updateUsedTiles(e.usedTiles, d, ae);
        }
      }
      return (
        (this.renderedRevision = h),
        (this.renderedResolution = p),
        (this.extentChanged =
          !this.renderedExtent_ || !hl(this.renderedExtent_, v)),
        (this.renderedExtent_ = v),
        (this.renderedPixelRatio = c),
        (this.renderedProjection = o),
        this.manageTilePyramid(e, d, g, c, o, b, f, u.getPreload()),
        this.scheduleExpireCache(e, d),
        this.postRender(D, e),
        r.extent && D.restore(),
        (D.imageSmoothingEnabled = !0),
        O !== Y.style.transform && (Y.style.transform = O),
        this.container
      );
    }
    drawTileImage(e, n, r, i, o, s, a, l) {
      const c = this.getTileImage(e);
      if (!c) return;
      const u = xt(this),
        d = n.layerStatesArray[n.layerIndex],
        h = d.opacity * (l ? e.getAlpha(u, n.time) : 1),
        g = h !== this.context.globalAlpha;
      g && (this.context.save(), (this.context.globalAlpha = h)),
        this.context.drawImage(
          c,
          a,
          a,
          c.width - 2 * a,
          c.height - 2 * a,
          r,
          i,
          o,
          s
        ),
        g && this.context.restore(),
        h !== d.opacity ? (n.animate = !0) : l && e.endTransition(u);
    }
    getImage() {
      const e = this.context;
      return e ? e.canvas : null;
    }
    getTileImage(e) {
      return e.getImage();
    }
    scheduleExpireCache(e, n) {
      if (n.canExpireCache()) {
        const r = function (i, o, s) {
          const a = xt(i);
          a in s.usedTiles &&
            i.expireCache(s.viewState.projection, s.usedTiles[a]);
        }.bind(null, n);
        e.postRenderFunctions.push(r);
      }
    }
    updateUsedTiles(e, n, r) {
      const i = xt(n);
      i in e || (e[i] = {}), (e[i][r.getKey()] = !0);
    }
    manageTilePyramid(e, n, r, i, o, s, a, l, c) {
      const u = xt(n);
      u in e.wantedTiles || (e.wantedTiles[u] = {});
      const d = e.wantedTiles[u],
        h = e.tileQueue,
        g = r.getMinZoom(),
        f = e.viewState.rotation,
        p = f
          ? Tf(e.viewState.center, e.viewState.resolution, f, e.size)
          : void 0;
      let b = 0,
        m,
        _,
        R,
        S,
        x,
        E;
      for (E = g; E <= a; ++E)
        for (
          _ = r.getTileRangeForExtentAndZ(s, E, _),
            R = r.getResolution(E),
            S = _.minX;
          S <= _.maxX;
          ++S
        )
          for (x = _.minY; x <= _.maxY; ++x)
            (f && !r.tileCoordIntersectsViewport([E, S, x], p)) ||
              (a - E <= l
                ? (++b,
                  (m = n.getTile(E, S, x, i, o)),
                  m.getState() == qe.IDLE &&
                    ((d[m.getKey()] = !0),
                    h.isKeyQueued(m.getKey()) ||
                      h.enqueue([m, u, r.getTileCoordCenter(m.tileCoord), R])),
                  c !== void 0 && c(m))
                : n.useTile(E, S, x, o));
      n.updateCacheSize(b, o);
    }
  }
  class u9 extends s9 {
    constructor(e) {
      super(e);
    }
    createRenderer() {
      return new c9(this);
    }
  }
  const d9 = u9;
  class Op extends Nr {
    constructor(e) {
      if (
        (super(),
        this.on,
        this.once,
        this.un,
        (this.id_ = void 0),
        (this.geometryName_ = "geometry"),
        (this.style_ = null),
        (this.styleFunction_ = void 0),
        (this.geometryChangeKey_ = null),
        this.addChangeListener(this.geometryName_, this.handleGeometryChanged_),
        e)
      )
        if (typeof e.getSimplifiedGeometry == "function") {
          const n = e;
          this.setGeometry(n);
        } else {
          const n = e;
          this.setProperties(n);
        }
    }
    clone() {
      const e = new Op(this.hasProperties() ? this.getProperties() : null);
      e.setGeometryName(this.getGeometryName());
      const n = this.getGeometry();
      n && e.setGeometry(n.clone());
      const r = this.getStyle();
      return r && e.setStyle(r), e;
    }
    getGeometry() {
      return this.get(this.geometryName_);
    }
    getId() {
      return this.id_;
    }
    getGeometryName() {
      return this.geometryName_;
    }
    getStyle() {
      return this.style_;
    }
    getStyleFunction() {
      return this.styleFunction_;
    }
    handleGeometryChange_() {
      this.changed();
    }
    handleGeometryChanged_() {
      this.geometryChangeKey_ &&
        (Wt(this.geometryChangeKey_), (this.geometryChangeKey_ = null));
      const e = this.getGeometry();
      e &&
        (this.geometryChangeKey_ = ft(
          e,
          it.CHANGE,
          this.handleGeometryChange_,
          this
        )),
        this.changed();
    }
    setGeometry(e) {
      this.set(this.geometryName_, e);
    }
    setStyle(e) {
      (this.style_ = e),
        (this.styleFunction_ = e ? h9(e) : void 0),
        this.changed();
    }
    setId(e) {
      (this.id_ = e), this.changed();
    }
    setGeometryName(e) {
      this.removeChangeListener(
        this.geometryName_,
        this.handleGeometryChanged_
      ),
        (this.geometryName_ = e),
        this.addChangeListener(this.geometryName_, this.handleGeometryChanged_),
        this.handleGeometryChanged_();
    }
  }
  function h9(t) {
    if (typeof t == "function") return t;
    let e;
    return (
      Array.isArray(t)
        ? (e = t)
        : (ut(
            typeof t.getZIndex == "function",
            "Expected an `ol/style/Style` or an array of `ol/style/Style.js`"
          ),
          (e = [t])),
      function () {
        return e;
      }
    );
  }
  const f9 = Op;
  class wd {
    constructor(e) {
      (this.opacity_ = e.opacity),
        (this.rotateWithView_ = e.rotateWithView),
        (this.rotation_ = e.rotation),
        (this.scale_ = e.scale),
        (this.scaleArray_ = Kn(e.scale)),
        (this.displacement_ = e.displacement),
        (this.declutterMode_ = e.declutterMode);
    }
    clone() {
      const e = this.getScale();
      return new wd({
        opacity: this.getOpacity(),
        scale: Array.isArray(e) ? e.slice() : e,
        rotation: this.getRotation(),
        rotateWithView: this.getRotateWithView(),
        displacement: this.getDisplacement().slice(),
        declutterMode: this.getDeclutterMode(),
      });
    }
    getOpacity() {
      return this.opacity_;
    }
    getRotateWithView() {
      return this.rotateWithView_;
    }
    getRotation() {
      return this.rotation_;
    }
    getScale() {
      return this.scale_;
    }
    getScaleArray() {
      return this.scaleArray_;
    }
    getDisplacement() {
      return this.displacement_;
    }
    getDeclutterMode() {
      return this.declutterMode_;
    }
    getAnchor() {
      return dt();
    }
    getImage(e) {
      return dt();
    }
    getHitDetectionImage() {
      return dt();
    }
    getPixelRatio(e) {
      return 1;
    }
    getImageState() {
      return dt();
    }
    getImageSize() {
      return dt();
    }
    getOrigin() {
      return dt();
    }
    getSize() {
      return dt();
    }
    setDisplacement(e) {
      this.displacement_ = e;
    }
    setOpacity(e) {
      this.opacity_ = e;
    }
    setRotateWithView(e) {
      this.rotateWithView_ = e;
    }
    setRotation(e) {
      this.rotation_ = e;
    }
    setScale(e) {
      (this.scale_ = e), (this.scaleArray_ = Kn(e));
    }
    listenImageChange(e) {
      dt();
    }
    load() {
      dt();
    }
    unlistenImageChange(e) {
      dt();
    }
  }
  function Mr(t) {
    return Array.isArray(t) ? W_(t) : t;
  }
  class Sd extends wd {
    constructor(e) {
      const n = e.rotateWithView !== void 0 ? e.rotateWithView : !1;
      super({
        opacity: 1,
        rotateWithView: n,
        rotation: e.rotation !== void 0 ? e.rotation : 0,
        scale: e.scale !== void 0 ? e.scale : 1,
        displacement: e.displacement !== void 0 ? e.displacement : [0, 0],
        declutterMode: e.declutterMode,
      }),
        this.canvases_,
        (this.hitDetectionCanvas_ = null),
        (this.fill_ = e.fill !== void 0 ? e.fill : null),
        (this.origin_ = [0, 0]),
        (this.points_ = e.points),
        (this.radius_ = e.radius !== void 0 ? e.radius : e.radius1),
        (this.radius2_ = e.radius2),
        (this.angle_ = e.angle !== void 0 ? e.angle : 0),
        (this.stroke_ = e.stroke !== void 0 ? e.stroke : null),
        this.size_,
        this.renderOptions_,
        this.render();
    }
    clone() {
      const e = this.getScale(),
        n = new Sd({
          fill: this.getFill() ? this.getFill().clone() : void 0,
          points: this.getPoints(),
          radius: this.getRadius(),
          radius2: this.getRadius2(),
          angle: this.getAngle(),
          stroke: this.getStroke() ? this.getStroke().clone() : void 0,
          rotation: this.getRotation(),
          rotateWithView: this.getRotateWithView(),
          scale: Array.isArray(e) ? e.slice() : e,
          displacement: this.getDisplacement().slice(),
          declutterMode: this.getDeclutterMode(),
        });
      return n.setOpacity(this.getOpacity()), n;
    }
    getAnchor() {
      const e = this.size_,
        n = this.getDisplacement(),
        r = this.getScaleArray();
      return [e[0] / 2 - n[0] / r[0], e[1] / 2 + n[1] / r[1]];
    }
    getAngle() {
      return this.angle_;
    }
    getFill() {
      return this.fill_;
    }
    setFill(e) {
      (this.fill_ = e), this.render();
    }
    getHitDetectionImage() {
      return (
        this.hitDetectionCanvas_ ||
          (this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(
            this.renderOptions_
          )),
        this.hitDetectionCanvas_
      );
    }
    getImage(e) {
      let n = this.canvases_[e];
      if (!n) {
        const r = this.renderOptions_,
          i = On(r.size * e, r.size * e);
        this.draw_(r, i, e), (n = i.canvas), (this.canvases_[e] = n);
      }
      return n;
    }
    getPixelRatio(e) {
      return e;
    }
    getImageSize() {
      return this.size_;
    }
    getImageState() {
      return $t.LOADED;
    }
    getOrigin() {
      return this.origin_;
    }
    getPoints() {
      return this.points_;
    }
    getRadius() {
      return this.radius_;
    }
    getRadius2() {
      return this.radius2_;
    }
    getSize() {
      return this.size_;
    }
    getStroke() {
      return this.stroke_;
    }
    setStroke(e) {
      (this.stroke_ = e), this.render();
    }
    listenImageChange(e) {}
    load() {}
    unlistenImageChange(e) {}
    calculateLineJoinSize_(e, n, r) {
      if (n === 0 || this.points_ === 1 / 0 || (e !== "bevel" && e !== "miter"))
        return n;
      let i = this.radius_,
        o = this.radius2_ === void 0 ? i : this.radius2_;
      if (i < o) {
        const E = i;
        (i = o), (o = E);
      }
      const s = this.radius2_ === void 0 ? this.points_ : this.points_ * 2,
        a = (2 * Math.PI) / s,
        l = o * Math.sin(a),
        c = Math.sqrt(o * o - l * l),
        u = i - c,
        d = Math.sqrt(l * l + u * u),
        h = d / l;
      if (e === "miter" && h <= r) return h * n;
      const g = n / 2 / h,
        f = (n / 2) * (u / d),
        b = Math.sqrt((i + g) * (i + g) + f * f) - i;
      if (this.radius2_ === void 0 || e === "bevel") return b * 2;
      const m = i * Math.sin(a),
        _ = Math.sqrt(i * i - m * m),
        R = o - _,
        x = Math.sqrt(m * m + R * R) / m;
      if (x <= r) {
        const E = (x * n) / 2 - o - i;
        return 2 * Math.max(b, E);
      }
      return b * 2;
    }
    createRenderOptions() {
      let e = Gs,
        n = Xs,
        r = 0,
        i = null,
        o = 0,
        s,
        a = 0;
      this.stroke_ &&
        ((s = Mr(this.stroke_.getColor() ?? bl)),
        (a = this.stroke_.getWidth() ?? xl),
        (i = this.stroke_.getLineDash()),
        (o = this.stroke_.getLineDashOffset() ?? 0),
        (n = this.stroke_.getLineJoin() ?? Xs),
        (e = this.stroke_.getLineCap() ?? Gs),
        (r = this.stroke_.getMiterLimit() ?? vl));
      const l = this.calculateLineJoinSize_(n, a, r),
        c = Math.max(this.radius_, this.radius2_ || 0),
        u = Math.ceil(2 * c + l);
      return {
        strokeStyle: s,
        strokeWidth: a,
        size: u,
        lineCap: e,
        lineDash: i,
        lineDashOffset: o,
        lineJoin: n,
        miterLimit: r,
      };
    }
    render() {
      this.renderOptions_ = this.createRenderOptions();
      const e = this.renderOptions_.size;
      (this.canvases_ = {}),
        (this.hitDetectionCanvas_ = null),
        (this.size_ = [e, e]);
    }
    draw_(e, n, r) {
      if (
        (n.scale(r, r),
        n.translate(e.size / 2, e.size / 2),
        this.createPath_(n),
        this.fill_)
      ) {
        let i = this.fill_.getColor();
        i === null && (i = Fn), (n.fillStyle = Mr(i)), n.fill();
      }
      e.strokeStyle &&
        ((n.strokeStyle = e.strokeStyle),
        (n.lineWidth = e.strokeWidth),
        e.lineDash &&
          (n.setLineDash(e.lineDash), (n.lineDashOffset = e.lineDashOffset)),
        (n.lineCap = e.lineCap),
        (n.lineJoin = e.lineJoin),
        (n.miterLimit = e.miterLimit),
        n.stroke());
    }
    createHitDetectionCanvas_(e) {
      let n;
      if (this.fill_) {
        let r = this.fill_.getColor(),
          i = 0;
        typeof r == "string" && (r = du(r)),
          r === null
            ? (i = 1)
            : Array.isArray(r) && (i = r.length === 4 ? r[3] : 1),
          i === 0 &&
            ((n = On(e.size, e.size)), this.drawHitDetectionCanvas_(e, n));
      }
      return n ? n.canvas : this.getImage(1);
    }
    createPath_(e) {
      let n = this.points_;
      const r = this.radius_;
      if (n === 1 / 0) e.arc(0, 0, r, 0, 2 * Math.PI);
      else {
        const i = this.radius2_ === void 0 ? r : this.radius2_;
        this.radius2_ !== void 0 && (n *= 2);
        const o = this.angle_ - Math.PI / 2,
          s = (2 * Math.PI) / n;
        for (let a = 0; a < n; a++) {
          const l = o + a * s,
            c = a % 2 === 0 ? r : i;
          e.lineTo(c * Math.cos(l), c * Math.sin(l));
        }
        e.closePath();
      }
    }
    drawHitDetectionCanvas_(e, n) {
      n.translate(e.size / 2, e.size / 2),
        this.createPath_(n),
        (n.fillStyle = Fn),
        n.fill(),
        e.strokeStyle &&
          ((n.strokeStyle = e.strokeStyle),
          (n.lineWidth = e.strokeWidth),
          e.lineDash &&
            (n.setLineDash(e.lineDash), (n.lineDashOffset = e.lineDashOffset)),
          (n.lineJoin = e.lineJoin),
          (n.miterLimit = e.miterLimit),
          n.stroke());
    }
  }
  class Mp extends Sd {
    constructor(e) {
      (e = e || { radius: 5 }),
        super({
          points: 1 / 0,
          fill: e.fill,
          radius: e.radius,
          stroke: e.stroke,
          scale: e.scale !== void 0 ? e.scale : 1,
          rotation: e.rotation !== void 0 ? e.rotation : 0,
          rotateWithView: e.rotateWithView !== void 0 ? e.rotateWithView : !1,
          displacement: e.displacement !== void 0 ? e.displacement : [0, 0],
          declutterMode: e.declutterMode,
        });
    }
    clone() {
      const e = this.getScale(),
        n = new Mp({
          fill: this.getFill() ? this.getFill().clone() : void 0,
          stroke: this.getStroke() ? this.getStroke().clone() : void 0,
          radius: this.getRadius(),
          scale: Array.isArray(e) ? e.slice() : e,
          rotation: this.getRotation(),
          rotateWithView: this.getRotateWithView(),
          displacement: this.getDisplacement().slice(),
          declutterMode: this.getDeclutterMode(),
        });
      return n.setOpacity(this.getOpacity()), n;
    }
    setRadius(e) {
      (this.radius_ = e), this.render();
    }
  }
  const Lp = Mp;
  class aa {
    constructor(e) {
      (e = e || {}), (this.color_ = e.color !== void 0 ? e.color : null);
    }
    clone() {
      const e = this.getColor();
      return new aa({ color: Array.isArray(e) ? e.slice() : e || void 0 });
    }
    getColor() {
      return this.color_;
    }
    setColor(e) {
      this.color_ = e;
    }
  }
  let wa = null;
  class g9 extends hd {
    constructor(e, n, r, i, o) {
      super(),
        (this.hitDetectionImage_ = null),
        (this.image_ = e),
        (this.crossOrigin_ = r),
        (this.canvas_ = {}),
        (this.color_ = o),
        (this.imageState_ = i === void 0 ? $t.IDLE : i),
        (this.size_ = e && e.width && e.height ? [e.width, e.height] : null),
        (this.src_ = n),
        this.tainted_;
    }
    initializeImage_() {
      (this.image_ = new Image()),
        this.crossOrigin_ !== null &&
          (this.image_.crossOrigin = this.crossOrigin_);
    }
    isTainted_() {
      if (this.tainted_ === void 0 && this.imageState_ === $t.LOADED) {
        wa || (wa = On(1, 1, void 0, { willReadFrequently: !0 })),
          wa.drawImage(this.image_, 0, 0);
        try {
          wa.getImageData(0, 0, 1, 1), (this.tainted_ = !1);
        } catch {
          (wa = null), (this.tainted_ = !0);
        }
      }
      return this.tainted_ === !0;
    }
    dispatchChangeEvent_() {
      this.dispatchEvent(it.CHANGE);
    }
    handleImageError_() {
      (this.imageState_ = $t.ERROR), this.dispatchChangeEvent_();
    }
    handleImageLoad_() {
      (this.imageState_ = $t.LOADED),
        (this.size_ = [this.image_.width, this.image_.height]),
        this.dispatchChangeEvent_();
    }
    getImage(e) {
      return (
        this.image_ || this.initializeImage_(),
        this.replaceColor_(e),
        this.canvas_[e] ? this.canvas_[e] : this.image_
      );
    }
    getPixelRatio(e) {
      return this.replaceColor_(e), this.canvas_[e] ? e : 1;
    }
    getImageState() {
      return this.imageState_;
    }
    getHitDetectionImage() {
      if ((this.image_ || this.initializeImage_(), !this.hitDetectionImage_))
        if (this.isTainted_()) {
          const e = this.size_[0],
            n = this.size_[1],
            r = On(e, n);
          r.fillRect(0, 0, e, n), (this.hitDetectionImage_ = r.canvas);
        } else this.hitDetectionImage_ = this.image_;
      return this.hitDetectionImage_;
    }
    getSize() {
      return this.size_;
    }
    getSrc() {
      return this.src_;
    }
    load() {
      if (this.imageState_ === $t.IDLE) {
        this.image_ || this.initializeImage_(), (this.imageState_ = $t.LOADING);
        try {
          this.src_ !== void 0 && (this.image_.src = this.src_);
        } catch {
          this.handleImageError_();
        }
        this.image_ instanceof HTMLImageElement &&
          I7(this.image_, this.src_)
            .then((e) => {
              (this.image_ = e), this.handleImageLoad_();
            })
            .catch(this.handleImageError_.bind(this));
      }
    }
    replaceColor_(e) {
      if (!this.color_ || this.canvas_[e] || this.imageState_ !== $t.LOADED)
        return;
      const n = this.image_,
        r = document.createElement("canvas");
      (r.width = Math.ceil(n.width * e)), (r.height = Math.ceil(n.height * e));
      const i = r.getContext("2d");
      i.scale(e, e),
        i.drawImage(n, 0, 0),
        (i.globalCompositeOperation = "multiply"),
        (i.fillStyle = N_(this.color_)),
        i.fillRect(0, 0, r.width / e, r.height / e),
        (i.globalCompositeOperation = "destination-in"),
        i.drawImage(n, 0, 0),
        (this.canvas_[e] = r);
    }
  }
  function p9(t, e, n, r, i) {
    let o = e === void 0 ? void 0 : hu.get(e, n, i);
    return (
      o ||
        ((o = new g9(
          t,
          t instanceof HTMLImageElement ? t.src || void 0 : e,
          n,
          r,
          i
        )),
        hu.set(e, n, i, o)),
      o
    );
  }
  function vb(t, e, n, r) {
    return n !== void 0 && r !== void 0
      ? [n / t, r / e]
      : n !== void 0
      ? n / t
      : r !== void 0
      ? r / e
      : 1;
  }
  class Ed extends wd {
    constructor(e) {
      e = e || {};
      const n = e.opacity !== void 0 ? e.opacity : 1,
        r = e.rotation !== void 0 ? e.rotation : 0,
        i = e.scale !== void 0 ? e.scale : 1,
        o = e.rotateWithView !== void 0 ? e.rotateWithView : !1;
      super({
        opacity: n,
        rotation: r,
        scale: i,
        displacement: e.displacement !== void 0 ? e.displacement : [0, 0],
        rotateWithView: o,
        declutterMode: e.declutterMode,
      }),
        (this.anchor_ = e.anchor !== void 0 ? e.anchor : [0.5, 0.5]),
        (this.normalizedAnchor_ = null),
        (this.anchorOrigin_ =
          e.anchorOrigin !== void 0 ? e.anchorOrigin : "top-left"),
        (this.anchorXUnits_ =
          e.anchorXUnits !== void 0 ? e.anchorXUnits : "fraction"),
        (this.anchorYUnits_ =
          e.anchorYUnits !== void 0 ? e.anchorYUnits : "fraction"),
        (this.crossOrigin_ = e.crossOrigin !== void 0 ? e.crossOrigin : null);
      const s = e.img !== void 0 ? e.img : null;
      let a = e.src;
      ut(
        !(a !== void 0 && s),
        "`image` and `src` cannot be provided at the same time"
      ),
        (a === void 0 || a.length === 0) && s && (a = s.src || xt(s)),
        ut(
          a !== void 0 && a.length > 0,
          "A defined and non-empty `src` or `image` must be provided"
        ),
        ut(
          !((e.width !== void 0 || e.height !== void 0) && e.scale !== void 0),
          "`width` or `height` cannot be provided together with `scale`"
        );
      let l;
      if (
        (e.src !== void 0
          ? (l = $t.IDLE)
          : s !== void 0 &&
            (s instanceof HTMLImageElement
              ? s.complete
                ? (l = s.src ? $t.LOADED : $t.IDLE)
                : (l = $t.LOADING)
              : (l = $t.LOADED)),
        (this.color_ = e.color !== void 0 ? du(e.color) : null),
        (this.iconImage_ = p9(s, a, this.crossOrigin_, l, this.color_)),
        (this.offset_ = e.offset !== void 0 ? e.offset : [0, 0]),
        (this.offsetOrigin_ =
          e.offsetOrigin !== void 0 ? e.offsetOrigin : "top-left"),
        (this.origin_ = null),
        (this.size_ = e.size !== void 0 ? e.size : null),
        e.width !== void 0 || e.height !== void 0)
      ) {
        let c, u;
        if (e.size) [c, u] = e.size;
        else {
          const d = this.getImage(1);
          if (d.width && d.height) (c = d.width), (u = d.height);
          else if (d instanceof HTMLImageElement) {
            this.initialOptions_ = e;
            const h = () => {
              if ((this.unlistenImageChange(h), !this.initialOptions_)) return;
              const g = this.iconImage_.getSize();
              this.setScale(vb(g[0], g[1], e.width, e.height));
            };
            this.listenImageChange(h);
            return;
          }
        }
        c !== void 0 && this.setScale(vb(c, u, e.width, e.height));
      }
    }
    clone() {
      let e, n, r;
      return (
        this.initialOptions_
          ? ((n = this.initialOptions_.width),
            (r = this.initialOptions_.height))
          : ((e = this.getScale()), (e = Array.isArray(e) ? e.slice() : e)),
        new Ed({
          anchor: this.anchor_.slice(),
          anchorOrigin: this.anchorOrigin_,
          anchorXUnits: this.anchorXUnits_,
          anchorYUnits: this.anchorYUnits_,
          color:
            this.color_ && this.color_.slice
              ? this.color_.slice()
              : this.color_ || void 0,
          crossOrigin: this.crossOrigin_,
          offset: this.offset_.slice(),
          offsetOrigin: this.offsetOrigin_,
          opacity: this.getOpacity(),
          rotateWithView: this.getRotateWithView(),
          rotation: this.getRotation(),
          scale: e,
          width: n,
          height: r,
          size: this.size_ !== null ? this.size_.slice() : void 0,
          src: this.getSrc(),
          displacement: this.getDisplacement().slice(),
          declutterMode: this.getDeclutterMode(),
        })
      );
    }
    getAnchor() {
      let e = this.normalizedAnchor_;
      if (!e) {
        e = this.anchor_;
        const i = this.getSize();
        if (
          this.anchorXUnits_ == "fraction" ||
          this.anchorYUnits_ == "fraction"
        ) {
          if (!i) return null;
          (e = this.anchor_.slice()),
            this.anchorXUnits_ == "fraction" && (e[0] *= i[0]),
            this.anchorYUnits_ == "fraction" && (e[1] *= i[1]);
        }
        if (this.anchorOrigin_ != "top-left") {
          if (!i) return null;
          e === this.anchor_ && (e = this.anchor_.slice()),
            (this.anchorOrigin_ == "top-right" ||
              this.anchorOrigin_ == "bottom-right") &&
              (e[0] = -e[0] + i[0]),
            (this.anchorOrigin_ == "bottom-left" ||
              this.anchorOrigin_ == "bottom-right") &&
              (e[1] = -e[1] + i[1]);
        }
        this.normalizedAnchor_ = e;
      }
      const n = this.getDisplacement(),
        r = this.getScaleArray();
      return [e[0] - n[0] / r[0], e[1] + n[1] / r[1]];
    }
    setAnchor(e) {
      (this.anchor_ = e), (this.normalizedAnchor_ = null);
    }
    getColor() {
      return this.color_;
    }
    getImage(e) {
      return this.iconImage_.getImage(e);
    }
    getPixelRatio(e) {
      return this.iconImage_.getPixelRatio(e);
    }
    getImageSize() {
      return this.iconImage_.getSize();
    }
    getImageState() {
      return this.iconImage_.getImageState();
    }
    getHitDetectionImage() {
      return this.iconImage_.getHitDetectionImage();
    }
    getOrigin() {
      if (this.origin_) return this.origin_;
      let e = this.offset_;
      if (this.offsetOrigin_ != "top-left") {
        const n = this.getSize(),
          r = this.iconImage_.getSize();
        if (!n || !r) return null;
        (e = e.slice()),
          (this.offsetOrigin_ == "top-right" ||
            this.offsetOrigin_ == "bottom-right") &&
            (e[0] = r[0] - n[0] - e[0]),
          (this.offsetOrigin_ == "bottom-left" ||
            this.offsetOrigin_ == "bottom-right") &&
            (e[1] = r[1] - n[1] - e[1]);
      }
      return (this.origin_ = e), this.origin_;
    }
    getSrc() {
      return this.iconImage_.getSrc();
    }
    getSize() {
      return this.size_ ? this.size_ : this.iconImage_.getSize();
    }
    getWidth() {
      const e = this.getScaleArray();
      if (this.size_) return this.size_[0] * e[0];
      if (this.iconImage_.getImageState() == $t.LOADED)
        return this.iconImage_.getSize()[0] * e[0];
    }
    getHeight() {
      const e = this.getScaleArray();
      if (this.size_) return this.size_[1] * e[1];
      if (this.iconImage_.getImageState() == $t.LOADED)
        return this.iconImage_.getSize()[1] * e[1];
    }
    setScale(e) {
      delete this.initialOptions_, super.setScale(e);
    }
    listenImageChange(e) {
      this.iconImage_.addEventListener(it.CHANGE, e);
    }
    load() {
      this.iconImage_.load();
    }
    unlistenImageChange(e) {
      this.iconImage_.removeEventListener(it.CHANGE, e);
    }
  }
  class $p {
    constructor(e) {
      (e = e || {}),
        (this.color_ = e.color !== void 0 ? e.color : null),
        (this.lineCap_ = e.lineCap),
        (this.lineDash_ = e.lineDash !== void 0 ? e.lineDash : null),
        (this.lineDashOffset_ = e.lineDashOffset),
        (this.lineJoin_ = e.lineJoin),
        (this.miterLimit_ = e.miterLimit),
        (this.width_ = e.width);
    }
    clone() {
      const e = this.getColor();
      return new $p({
        color: Array.isArray(e) ? e.slice() : e || void 0,
        lineCap: this.getLineCap(),
        lineDash: this.getLineDash() ? this.getLineDash().slice() : void 0,
        lineDashOffset: this.getLineDashOffset(),
        lineJoin: this.getLineJoin(),
        miterLimit: this.getMiterLimit(),
        width: this.getWidth(),
      });
    }
    getColor() {
      return this.color_;
    }
    getLineCap() {
      return this.lineCap_;
    }
    getLineDash() {
      return this.lineDash_;
    }
    getLineDashOffset() {
      return this.lineDashOffset_;
    }
    getLineJoin() {
      return this.lineJoin_;
    }
    getMiterLimit() {
      return this.miterLimit_;
    }
    getWidth() {
      return this.width_;
    }
    setColor(e) {
      this.color_ = e;
    }
    setLineCap(e) {
      this.lineCap_ = e;
    }
    setLineDash(e) {
      this.lineDash_ = e;
    }
    setLineDashOffset(e) {
      this.lineDashOffset_ = e;
    }
    setLineJoin(e) {
      this.lineJoin_ = e;
    }
    setMiterLimit(e) {
      this.miterLimit_ = e;
    }
    setWidth(e) {
      this.width_ = e;
    }
  }
  const Dp = $p;
  class Rd {
    constructor(e) {
      (e = e || {}),
        (this.geometry_ = null),
        (this.geometryFunction_ = bb),
        e.geometry !== void 0 && this.setGeometry(e.geometry),
        (this.fill_ = e.fill !== void 0 ? e.fill : null),
        (this.image_ = e.image !== void 0 ? e.image : null),
        (this.renderer_ = e.renderer !== void 0 ? e.renderer : null),
        (this.hitDetectionRenderer_ =
          e.hitDetectionRenderer !== void 0 ? e.hitDetectionRenderer : null),
        (this.stroke_ = e.stroke !== void 0 ? e.stroke : null),
        (this.text_ = e.text !== void 0 ? e.text : null),
        (this.zIndex_ = e.zIndex);
    }
    clone() {
      let e = this.getGeometry();
      return (
        e && typeof e == "object" && (e = e.clone()),
        new Rd({
          geometry: e ?? void 0,
          fill: this.getFill() ? this.getFill().clone() : void 0,
          image: this.getImage() ? this.getImage().clone() : void 0,
          renderer: this.getRenderer() ?? void 0,
          stroke: this.getStroke() ? this.getStroke().clone() : void 0,
          text: this.getText() ? this.getText().clone() : void 0,
          zIndex: this.getZIndex(),
        })
      );
    }
    getRenderer() {
      return this.renderer_;
    }
    setRenderer(e) {
      this.renderer_ = e;
    }
    setHitDetectionRenderer(e) {
      this.hitDetectionRenderer_ = e;
    }
    getHitDetectionRenderer() {
      return this.hitDetectionRenderer_;
    }
    getGeometry() {
      return this.geometry_;
    }
    getGeometryFunction() {
      return this.geometryFunction_;
    }
    getFill() {
      return this.fill_;
    }
    setFill(e) {
      this.fill_ = e;
    }
    getImage() {
      return this.image_;
    }
    setImage(e) {
      this.image_ = e;
    }
    getStroke() {
      return this.stroke_;
    }
    setStroke(e) {
      this.stroke_ = e;
    }
    getText() {
      return this.text_;
    }
    setText(e) {
      this.text_ = e;
    }
    getZIndex() {
      return this.zIndex_;
    }
    setGeometry(e) {
      typeof e == "function"
        ? (this.geometryFunction_ = e)
        : typeof e == "string"
        ? (this.geometryFunction_ = function (n) {
            return n.get(e);
          })
        : e
        ? e !== void 0 &&
          (this.geometryFunction_ = function () {
            return e;
          })
        : (this.geometryFunction_ = bb),
        (this.geometry_ = e);
    }
    setZIndex(e) {
      this.zIndex_ = e;
    }
  }
  function m9(t) {
    let e;
    if (typeof t == "function") e = t;
    else {
      let n;
      Array.isArray(t)
        ? (n = t)
        : (ut(
            typeof t.getZIndex == "function",
            "Expected an `Style` or an array of `Style`"
          ),
          (n = [t])),
        (e = function () {
          return n;
        });
    }
    return e;
  }
  let Ah = null;
  function v9(t, e) {
    if (!Ah) {
      const n = new aa({ color: "rgba(255,255,255,0.4)" }),
        r = new Dp({ color: "#3399CC", width: 1.25 });
      Ah = [
        new Rd({
          image: new Lp({ fill: n, stroke: r, radius: 5 }),
          fill: n,
          stroke: r,
        }),
      ];
    }
    return Ah;
  }
  function bb(t) {
    return t.getGeometry();
  }
  const Va = Rd,
    b9 = "#333";
  class zp {
    constructor(e) {
      (e = e || {}),
        (this.font_ = e.font),
        (this.rotation_ = e.rotation),
        (this.rotateWithView_ = e.rotateWithView),
        (this.scale_ = e.scale),
        (this.scaleArray_ = Kn(e.scale !== void 0 ? e.scale : 1)),
        (this.text_ = e.text),
        (this.textAlign_ = e.textAlign),
        (this.justify_ = e.justify),
        (this.repeat_ = e.repeat),
        (this.textBaseline_ = e.textBaseline),
        (this.fill_ = e.fill !== void 0 ? e.fill : new aa({ color: b9 })),
        (this.maxAngle_ = e.maxAngle !== void 0 ? e.maxAngle : Math.PI / 4),
        (this.placement_ = e.placement !== void 0 ? e.placement : "point"),
        (this.overflow_ = !!e.overflow),
        (this.stroke_ = e.stroke !== void 0 ? e.stroke : null),
        (this.offsetX_ = e.offsetX !== void 0 ? e.offsetX : 0),
        (this.offsetY_ = e.offsetY !== void 0 ? e.offsetY : 0),
        (this.backgroundFill_ = e.backgroundFill ? e.backgroundFill : null),
        (this.backgroundStroke_ = e.backgroundStroke
          ? e.backgroundStroke
          : null),
        (this.padding_ = e.padding === void 0 ? null : e.padding);
    }
    clone() {
      const e = this.getScale();
      return new zp({
        font: this.getFont(),
        placement: this.getPlacement(),
        repeat: this.getRepeat(),
        maxAngle: this.getMaxAngle(),
        overflow: this.getOverflow(),
        rotation: this.getRotation(),
        rotateWithView: this.getRotateWithView(),
        scale: Array.isArray(e) ? e.slice() : e,
        text: this.getText(),
        textAlign: this.getTextAlign(),
        justify: this.getJustify(),
        textBaseline: this.getTextBaseline(),
        fill: this.getFill() ? this.getFill().clone() : void 0,
        stroke: this.getStroke() ? this.getStroke().clone() : void 0,
        offsetX: this.getOffsetX(),
        offsetY: this.getOffsetY(),
        backgroundFill: this.getBackgroundFill()
          ? this.getBackgroundFill().clone()
          : void 0,
        backgroundStroke: this.getBackgroundStroke()
          ? this.getBackgroundStroke().clone()
          : void 0,
        padding: this.getPadding() || void 0,
      });
    }
    getOverflow() {
      return this.overflow_;
    }
    getFont() {
      return this.font_;
    }
    getMaxAngle() {
      return this.maxAngle_;
    }
    getPlacement() {
      return this.placement_;
    }
    getRepeat() {
      return this.repeat_;
    }
    getOffsetX() {
      return this.offsetX_;
    }
    getOffsetY() {
      return this.offsetY_;
    }
    getFill() {
      return this.fill_;
    }
    getRotateWithView() {
      return this.rotateWithView_;
    }
    getRotation() {
      return this.rotation_;
    }
    getScale() {
      return this.scale_;
    }
    getScaleArray() {
      return this.scaleArray_;
    }
    getStroke() {
      return this.stroke_;
    }
    getText() {
      return this.text_;
    }
    getTextAlign() {
      return this.textAlign_;
    }
    getJustify() {
      return this.justify_;
    }
    getTextBaseline() {
      return this.textBaseline_;
    }
    getBackgroundFill() {
      return this.backgroundFill_;
    }
    getBackgroundStroke() {
      return this.backgroundStroke_;
    }
    getPadding() {
      return this.padding_;
    }
    setOverflow(e) {
      this.overflow_ = e;
    }
    setFont(e) {
      this.font_ = e;
    }
    setMaxAngle(e) {
      this.maxAngle_ = e;
    }
    setOffsetX(e) {
      this.offsetX_ = e;
    }
    setOffsetY(e) {
      this.offsetY_ = e;
    }
    setPlacement(e) {
      this.placement_ = e;
    }
    setRepeat(e) {
      this.repeat_ = e;
    }
    setRotateWithView(e) {
      this.rotateWithView_ = e;
    }
    setFill(e) {
      this.fill_ = e;
    }
    setRotation(e) {
      this.rotation_ = e;
    }
    setScale(e) {
      (this.scale_ = e), (this.scaleArray_ = Kn(e !== void 0 ? e : 1));
    }
    setStroke(e) {
      this.stroke_ = e;
    }
    setText(e) {
      this.text_ = e;
    }
    setTextAlign(e) {
      this.textAlign_ = e;
    }
    setJustify(e) {
      this.justify_ = e;
    }
    setTextBaseline(e) {
      this.textBaseline_ = e;
    }
    setBackgroundFill(e) {
      this.backgroundFill_ = e;
    }
    setBackgroundStroke(e) {
      this.backgroundStroke_ = e;
    }
    setPadding(e) {
      this.padding_ = e;
    }
  }
  function y9(t, e, n, r, i) {
    Ew(t, e, n || 0, r || t.length - 1, i || x9);
  }
  function Ew(t, e, n, r, i) {
    for (; r > n; ) {
      if (r - n > 600) {
        var o = r - n + 1,
          s = e - n + 1,
          a = Math.log(o),
          l = 0.5 * Math.exp((2 * a) / 3),
          c = 0.5 * Math.sqrt((a * l * (o - l)) / o) * (s - o / 2 < 0 ? -1 : 1),
          u = Math.max(n, Math.floor(e - (s * l) / o + c)),
          d = Math.min(r, Math.floor(e + ((o - s) * l) / o + c));
        Ew(t, e, u, d, i);
      }
      var h = t[e],
        g = n,
        f = r;
      for (Sa(t, n, e), i(t[r], h) > 0 && Sa(t, n, r); g < f; ) {
        for (Sa(t, g, f), g++, f--; i(t[g], h) < 0; ) g++;
        for (; i(t[f], h) > 0; ) f--;
      }
      i(t[n], h) === 0 ? Sa(t, n, f) : (f++, Sa(t, f, r)),
        f <= e && (n = f + 1),
        e <= f && (r = f - 1);
    }
  }
  function Sa(t, e, n) {
    var r = t[e];
    (t[e] = t[n]), (t[n] = r);
  }
  function x9(t, e) {
    return t < e ? -1 : t > e ? 1 : 0;
  }
  let Rw = class {
    constructor(e = 9) {
      (this._maxEntries = Math.max(4, e)),
        (this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4))),
        this.clear();
    }
    all() {
      return this._all(this.data, []);
    }
    search(e) {
      let n = this.data;
      const r = [];
      if (!Pc(e, n)) return r;
      const i = this.toBBox,
        o = [];
      for (; n; ) {
        for (let s = 0; s < n.children.length; s++) {
          const a = n.children[s],
            l = n.leaf ? i(a) : a;
          Pc(e, l) &&
            (n.leaf ? r.push(a) : Ih(e, l) ? this._all(a, r) : o.push(a));
        }
        n = o.pop();
      }
      return r;
    }
    collides(e) {
      let n = this.data;
      if (!Pc(e, n)) return !1;
      const r = [];
      for (; n; ) {
        for (let i = 0; i < n.children.length; i++) {
          const o = n.children[i],
            s = n.leaf ? this.toBBox(o) : o;
          if (Pc(e, s)) {
            if (n.leaf || Ih(e, s)) return !0;
            r.push(o);
          }
        }
        n = r.pop();
      }
      return !1;
    }
    load(e) {
      if (!(e && e.length)) return this;
      if (e.length < this._minEntries) {
        for (let r = 0; r < e.length; r++) this.insert(e[r]);
        return this;
      }
      let n = this._build(e.slice(), 0, e.length - 1, 0);
      if (!this.data.children.length) this.data = n;
      else if (this.data.height === n.height) this._splitRoot(this.data, n);
      else {
        if (this.data.height < n.height) {
          const r = this.data;
          (this.data = n), (n = r);
        }
        this._insert(n, this.data.height - n.height - 1, !0);
      }
      return this;
    }
    insert(e) {
      return e && this._insert(e, this.data.height - 1), this;
    }
    clear() {
      return (this.data = vs([])), this;
    }
    remove(e, n) {
      if (!e) return this;
      let r = this.data;
      const i = this.toBBox(e),
        o = [],
        s = [];
      let a, l, c;
      for (; r || o.length; ) {
        if (
          (r || ((r = o.pop()), (l = o[o.length - 1]), (a = s.pop()), (c = !0)),
          r.leaf)
        ) {
          const u = C9(e, r.children, n);
          if (u !== -1)
            return r.children.splice(u, 1), o.push(r), this._condense(o), this;
        }
        !c && !r.leaf && Ih(r, i)
          ? (o.push(r), s.push(a), (a = 0), (l = r), (r = r.children[0]))
          : l
          ? (a++, (r = l.children[a]), (c = !1))
          : (r = null);
      }
      return this;
    }
    toBBox(e) {
      return e;
    }
    compareMinX(e, n) {
      return e.minX - n.minX;
    }
    compareMinY(e, n) {
      return e.minY - n.minY;
    }
    toJSON() {
      return this.data;
    }
    fromJSON(e) {
      return (this.data = e), this;
    }
    _all(e, n) {
      const r = [];
      for (; e; )
        e.leaf ? n.push(...e.children) : r.push(...e.children), (e = r.pop());
      return n;
    }
    _build(e, n, r, i) {
      const o = r - n + 1;
      let s = this._maxEntries,
        a;
      if (o <= s) return (a = vs(e.slice(n, r + 1))), cs(a, this.toBBox), a;
      i ||
        ((i = Math.ceil(Math.log(o) / Math.log(s))),
        (s = Math.ceil(o / Math.pow(s, i - 1)))),
        (a = vs([])),
        (a.leaf = !1),
        (a.height = i);
      const l = Math.ceil(o / s),
        c = l * Math.ceil(Math.sqrt(s));
      yb(e, n, r, c, this.compareMinX);
      for (let u = n; u <= r; u += c) {
        const d = Math.min(u + c - 1, r);
        yb(e, u, d, l, this.compareMinY);
        for (let h = u; h <= d; h += l) {
          const g = Math.min(h + l - 1, d);
          a.children.push(this._build(e, h, g, i - 1));
        }
      }
      return cs(a, this.toBBox), a;
    }
    _chooseSubtree(e, n, r, i) {
      for (; i.push(n), !(n.leaf || i.length - 1 === r); ) {
        let o = 1 / 0,
          s = 1 / 0,
          a;
        for (let l = 0; l < n.children.length; l++) {
          const c = n.children[l],
            u = kh(c),
            d = S9(e, c) - u;
          d < s
            ? ((s = d), (o = u < o ? u : o), (a = c))
            : d === s && u < o && ((o = u), (a = c));
        }
        n = a || n.children[0];
      }
      return n;
    }
    _insert(e, n, r) {
      const i = r ? e : this.toBBox(e),
        o = [],
        s = this._chooseSubtree(i, this.data, n, o);
      for (
        s.children.push(e), ka(s, i);
        n >= 0 && o[n].children.length > this._maxEntries;

      )
        this._split(o, n), n--;
      this._adjustParentBBoxes(i, o, n);
    }
    _split(e, n) {
      const r = e[n],
        i = r.children.length,
        o = this._minEntries;
      this._chooseSplitAxis(r, o, i);
      const s = this._chooseSplitIndex(r, o, i),
        a = vs(r.children.splice(s, r.children.length - s));
      (a.height = r.height),
        (a.leaf = r.leaf),
        cs(r, this.toBBox),
        cs(a, this.toBBox),
        n ? e[n - 1].children.push(a) : this._splitRoot(r, a);
    }
    _splitRoot(e, n) {
      (this.data = vs([e, n])),
        (this.data.height = e.height + 1),
        (this.data.leaf = !1),
        cs(this.data, this.toBBox);
    }
    _chooseSplitIndex(e, n, r) {
      let i,
        o = 1 / 0,
        s = 1 / 0;
      for (let a = n; a <= r - n; a++) {
        const l = Aa(e, 0, a, this.toBBox),
          c = Aa(e, a, r, this.toBBox),
          u = E9(l, c),
          d = kh(l) + kh(c);
        u < o
          ? ((o = u), (i = a), (s = d < s ? d : s))
          : u === o && d < s && ((s = d), (i = a));
      }
      return i || r - n;
    }
    _chooseSplitAxis(e, n, r) {
      const i = e.leaf ? this.compareMinX : _9,
        o = e.leaf ? this.compareMinY : w9,
        s = this._allDistMargin(e, n, r, i),
        a = this._allDistMargin(e, n, r, o);
      s < a && e.children.sort(i);
    }
    _allDistMargin(e, n, r, i) {
      e.children.sort(i);
      const o = this.toBBox,
        s = Aa(e, 0, n, o),
        a = Aa(e, r - n, r, o);
      let l = Tc(s) + Tc(a);
      for (let c = n; c < r - n; c++) {
        const u = e.children[c];
        ka(s, e.leaf ? o(u) : u), (l += Tc(s));
      }
      for (let c = r - n - 1; c >= n; c--) {
        const u = e.children[c];
        ka(a, e.leaf ? o(u) : u), (l += Tc(a));
      }
      return l;
    }
    _adjustParentBBoxes(e, n, r) {
      for (let i = r; i >= 0; i--) ka(n[i], e);
    }
    _condense(e) {
      for (let n = e.length - 1, r; n >= 0; n--)
        e[n].children.length === 0
          ? n > 0
            ? ((r = e[n - 1].children), r.splice(r.indexOf(e[n]), 1))
            : this.clear()
          : cs(e[n], this.toBBox);
    }
  };
  function C9(t, e, n) {
    if (!n) return e.indexOf(t);
    for (let r = 0; r < e.length; r++) if (n(t, e[r])) return r;
    return -1;
  }
  function cs(t, e) {
    Aa(t, 0, t.children.length, e, t);
  }
  function Aa(t, e, n, r, i) {
    i || (i = vs(null)),
      (i.minX = 1 / 0),
      (i.minY = 1 / 0),
      (i.maxX = -1 / 0),
      (i.maxY = -1 / 0);
    for (let o = e; o < n; o++) {
      const s = t.children[o];
      ka(i, t.leaf ? r(s) : s);
    }
    return i;
  }
  function ka(t, e) {
    return (
      (t.minX = Math.min(t.minX, e.minX)),
      (t.minY = Math.min(t.minY, e.minY)),
      (t.maxX = Math.max(t.maxX, e.maxX)),
      (t.maxY = Math.max(t.maxY, e.maxY)),
      t
    );
  }
  function _9(t, e) {
    return t.minX - e.minX;
  }
  function w9(t, e) {
    return t.minY - e.minY;
  }
  function kh(t) {
    return (t.maxX - t.minX) * (t.maxY - t.minY);
  }
  function Tc(t) {
    return t.maxX - t.minX + (t.maxY - t.minY);
  }
  function S9(t, e) {
    return (
      (Math.max(e.maxX, t.maxX) - Math.min(e.minX, t.minX)) *
      (Math.max(e.maxY, t.maxY) - Math.min(e.minY, t.minY))
    );
  }
  function E9(t, e) {
    const n = Math.max(t.minX, e.minX),
      r = Math.max(t.minY, e.minY),
      i = Math.min(t.maxX, e.maxX),
      o = Math.min(t.maxY, e.maxY);
    return Math.max(0, i - n) * Math.max(0, o - r);
  }
  function Ih(t, e) {
    return (
      t.minX <= e.minX &&
      t.minY <= e.minY &&
      e.maxX <= t.maxX &&
      e.maxY <= t.maxY
    );
  }
  function Pc(t, e) {
    return (
      e.minX <= t.maxX &&
      e.minY <= t.maxY &&
      e.maxX >= t.minX &&
      e.maxY >= t.minY
    );
  }
  function vs(t) {
    return {
      children: t,
      height: 1,
      leaf: !0,
      minX: 1 / 0,
      minY: 1 / 0,
      maxX: -1 / 0,
      maxY: -1 / 0,
    };
  }
  function yb(t, e, n, r, i) {
    const o = [e, n];
    for (; o.length; ) {
      if (((n = o.pop()), (e = o.pop()), n - e <= r)) continue;
      const s = e + Math.ceil((n - e) / r / 2) * r;
      y9(t, s, e, n, i), o.push(e, s, s, n);
    }
  }
  class xb {
    constructor(e) {
      (this.rbush_ = new Rw(e)), (this.items_ = {});
    }
    insert(e, n) {
      const r = { minX: e[0], minY: e[1], maxX: e[2], maxY: e[3], value: n };
      this.rbush_.insert(r), (this.items_[xt(n)] = r);
    }
    load(e, n) {
      const r = new Array(n.length);
      for (let i = 0, o = n.length; i < o; i++) {
        const s = e[i],
          a = n[i],
          l = { minX: s[0], minY: s[1], maxX: s[2], maxY: s[3], value: a };
        (r[i] = l), (this.items_[xt(a)] = l);
      }
      this.rbush_.load(r);
    }
    remove(e) {
      const n = xt(e),
        r = this.items_[n];
      return delete this.items_[n], this.rbush_.remove(r) !== null;
    }
    update(e, n) {
      const r = this.items_[xt(n)],
        i = [r.minX, r.minY, r.maxX, r.maxY];
      hl(i, e) || (this.remove(n), this.insert(e, n));
    }
    getAll() {
      return this.rbush_.all().map(function (n) {
        return n.value;
      });
    }
    getInExtent(e) {
      const n = { minX: e[0], minY: e[1], maxX: e[2], maxY: e[3] };
      return this.rbush_.search(n).map(function (i) {
        return i.value;
      });
    }
    forEach(e) {
      return this.forEach_(this.getAll(), e);
    }
    forEachInExtent(e, n) {
      return this.forEach_(this.getInExtent(e), n);
    }
    forEach_(e, n) {
      let r;
      for (let i = 0, o = e.length; i < o; i++)
        if (((r = n(e[i])), r)) return r;
      return r;
    }
    isEmpty() {
      return Vs(this.items_);
    }
    clear() {
      this.rbush_.clear(), (this.items_ = {});
    }
    getExtent(e) {
      const n = this.rbush_.toJSON();
      return Yi(n.minX, n.minY, n.maxX, n.maxY, e);
    }
    concat(e) {
      this.rbush_.load(e.rbush_.all());
      for (const n in e.items_) this.items_[n] = e.items_[n];
    }
  }
  function Cb(t, e, n, r, i, o, s) {
    let a, l;
    const c = (n - e) / r;
    if (c === 1) a = e;
    else if (c === 2) (a = e), (l = i);
    else if (c !== 0) {
      let u = t[e],
        d = t[e + 1],
        h = 0;
      const g = [0];
      for (let b = e + r; b < n; b += r) {
        const m = t[b],
          _ = t[b + 1];
        (h += Math.sqrt((m - u) * (m - u) + (_ - d) * (_ - d))),
          g.push(h),
          (u = m),
          (d = _);
      }
      const f = i * h,
        p = aH(g, f);
      p < 0
        ? ((l = (f - g[-p - 2]) / (g[-p - 1] - g[-p - 2])),
          (a = e + (-p - 2) * r))
        : (a = e + p * r);
    }
    (s = s > 1 ? s : 2), (o = o || new Array(s));
    for (let u = 0; u < s; ++u)
      o[u] =
        a === void 0
          ? NaN
          : l === void 0
          ? t[a + u]
          : er(t[a + u], t[a + r + u], l);
    return o;
  }
  function R9(t, e, n, r) {
    let i = t[e],
      o = t[e + 1],
      s = 0;
    for (let a = e + r; a < n; a += r) {
      const l = t[a],
        c = t[a + 1];
      (s += Math.sqrt((l - i) * (l - i) + (c - o) * (c - o))), (i = l), (o = c);
    }
    return s;
  }
  function T9(t, e, n, r) {
    const i = [];
    let o = ur();
    for (let s = 0, a = n.length; s < a; ++s) {
      const l = n[s];
      (o = sp(t, e, l[0], r)),
        i.push((o[0] + o[2]) / 2, (o[1] + o[3]) / 2),
        (e = l[l.length - 1]);
    }
    return i;
  }
  const _b = vr();
  class Qn {
    constructor(e, n, r, i, o, s) {
      this.styleFunction,
        this.extent_,
        (this.id_ = s),
        (this.type_ = e),
        (this.flatCoordinates_ = n),
        (this.flatInteriorPoints_ = null),
        (this.flatMidpoints_ = null),
        (this.ends_ = r),
        (this.properties_ = o),
        this.squaredTolerance_,
        (this.stride_ = i),
        this.simplifiedGeometry_;
    }
    get(e) {
      return this.properties_[e];
    }
    getExtent() {
      return (
        this.extent_ ||
          (this.extent_ =
            this.type_ === "Point"
              ? $_(this.flatCoordinates_)
              : sp(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2)),
        this.extent_
      );
    }
    getFlatInteriorPoint() {
      if (!this.flatInteriorPoints_) {
        const e = zo(this.getExtent());
        this.flatInteriorPoints_ = _p(
          this.flatCoordinates_,
          0,
          this.ends_,
          2,
          e,
          0
        );
      }
      return this.flatInteriorPoints_;
    }
    getFlatInteriorPoints() {
      if (!this.flatInteriorPoints_) {
        const e = SW(this.flatCoordinates_, this.ends_),
          n = T9(this.flatCoordinates_, 0, e, 2);
        this.flatInteriorPoints_ = yW(this.flatCoordinates_, 0, e, 2, n);
      }
      return this.flatInteriorPoints_;
    }
    getFlatMidpoint() {
      return (
        this.flatMidpoints_ ||
          (this.flatMidpoints_ = Cb(
            this.flatCoordinates_,
            0,
            this.flatCoordinates_.length,
            2,
            0.5
          )),
        this.flatMidpoints_
      );
    }
    getFlatMidpoints() {
      if (!this.flatMidpoints_) {
        this.flatMidpoints_ = [];
        const e = this.flatCoordinates_;
        let n = 0;
        const r = this.ends_;
        for (let i = 0, o = r.length; i < o; ++i) {
          const s = r[i],
            a = Cb(e, n, s, 2, 0.5);
          np(this.flatMidpoints_, a), (n = s);
        }
      }
      return this.flatMidpoints_;
    }
    getId() {
      return this.id_;
    }
    getOrientedFlatCoordinates() {
      return this.flatCoordinates_;
    }
    getGeometry() {
      return this;
    }
    getSimplifiedGeometry(e) {
      return this;
    }
    simplifyTransformed(e, n) {
      return this;
    }
    getProperties() {
      return this.properties_;
    }
    getPropertiesInternal() {
      return this.properties_;
    }
    getStride() {
      return this.stride_;
    }
    getStyleFunction() {
      return this.styleFunction;
    }
    getType() {
      return this.type_;
    }
    transform(e) {
      e = dr(e);
      const n = e.getExtent(),
        r = e.getWorldExtent();
      if (n && r) {
        const i = Yn(r) / Yn(n);
        oi(_b, r[0], r[3], i, -i, 0, 0, 0),
          Wi(
            this.flatCoordinates_,
            0,
            this.flatCoordinates_.length,
            2,
            _b,
            this.flatCoordinates_
          );
      }
    }
    applyTransform(e) {
      e(this.flatCoordinates_, this.flatCoordinates_, this.stride_);
    }
    clone() {
      return new Qn(
        this.type_,
        this.flatCoordinates_.slice(),
        this.ends_.slice(),
        this.stride_,
        Object.assign({}, this.properties_),
        this.id_
      );
    }
    getEnds() {
      return this.ends_;
    }
    enableSimplifyTransformed() {
      return (
        (this.simplifyTransformed = R_((e, n) => {
          if (e === this.squaredTolerance_) return this.simplifiedGeometry_;
          (this.simplifiedGeometry_ = this.clone()),
            n && this.simplifiedGeometry_.applyTransform(n);
          const r = this.simplifiedGeometry_.getFlatCoordinates();
          let i;
          switch (this.type_) {
            case "LineString":
              (r.length = xp(
                r,
                0,
                this.simplifiedGeometry_.flatCoordinates_.length,
                this.simplifiedGeometry_.stride_,
                e,
                r,
                0
              )),
                (i = [r.length]);
              break;
            case "MultiLineString":
              (i = []),
                (r.length = pW(
                  r,
                  0,
                  this.simplifiedGeometry_.ends_,
                  this.simplifiedGeometry_.stride_,
                  e,
                  r,
                  0,
                  i
                ));
              break;
            case "Polygon":
              (i = []),
                (r.length = tw(
                  r,
                  0,
                  this.simplifiedGeometry_.ends_,
                  this.simplifiedGeometry_.stride_,
                  Math.sqrt(e),
                  r,
                  0,
                  i
                ));
              break;
          }
          return (
            i &&
              (this.simplifiedGeometry_ = new Qn(
                this.type_,
                r,
                i,
                2,
                this.properties_,
                this.id_
              )),
            (this.squaredTolerance_ = e),
            this.simplifiedGeometry_
          );
        })),
        this
      );
    }
  }
  Qn.prototype.getFlatCoordinates = Qn.prototype.getOrientedFlatCoordinates;
  const gr = {
    ADDFEATURE: "addfeature",
    CHANGEFEATURE: "changefeature",
    CLEAR: "clear",
    REMOVEFEATURE: "removefeature",
    FEATURESLOADSTART: "featuresloadstart",
    FEATURESLOADEND: "featuresloadend",
    FEATURESLOADERROR: "featuresloaderror",
  };
  function P9(t, e) {
    return [[-1 / 0, -1 / 0, 1 / 0, 1 / 0]];
  }
  let A9 = !1;
  function k9(t, e, n, r, i, o, s) {
    const a = new XMLHttpRequest();
    a.open("GET", typeof t == "function" ? t(n, r, i) : t, !0),
      e.getType() == "arraybuffer" && (a.responseType = "arraybuffer"),
      (a.withCredentials = A9),
      (a.onload = function (l) {
        if (!a.status || (a.status >= 200 && a.status < 300)) {
          const c = e.getType();
          let u;
          c == "json"
            ? (u = JSON.parse(a.responseText))
            : c == "text"
            ? (u = a.responseText)
            : c == "xml"
            ? ((u = a.responseXML),
              u ||
                (u = new DOMParser().parseFromString(
                  a.responseText,
                  "application/xml"
                )))
            : c == "arraybuffer" && (u = a.response),
            u
              ? o(
                  e.readFeatures(u, { extent: n, featureProjection: i }),
                  e.readProjection(u)
                )
              : s();
        } else s();
      }),
      (a.onerror = s),
      a.send();
  }
  function wb(t, e) {
    return function (n, r, i, o, s) {
      const a = this;
      k9(
        t,
        e,
        n,
        r,
        i,
        function (l, c) {
          a.addFeatures(l), o !== void 0 && o(l);
        },
        s || Us
      );
    };
  }
  class wi extends fi {
    constructor(e, n, r) {
      super(e), (this.feature = n), (this.features = r);
    }
  }
  class I9 extends xw {
    constructor(e) {
      (e = e || {}),
        super({
          attributions: e.attributions,
          interpolate: !0,
          projection: void 0,
          state: "ready",
          wrapX: e.wrapX !== void 0 ? e.wrapX : !0,
        }),
        this.on,
        this.once,
        this.un,
        (this.loader_ = Us),
        (this.format_ = e.format),
        (this.overlaps_ = e.overlaps === void 0 ? !0 : e.overlaps),
        (this.url_ = e.url),
        e.loader !== void 0
          ? (this.loader_ = e.loader)
          : this.url_ !== void 0 &&
            (ut(this.format_, "`format` must be set when `url` is set"),
            (this.loader_ = wb(this.url_, this.format_))),
        (this.strategy_ = e.strategy !== void 0 ? e.strategy : P9);
      const n = e.useSpatialIndex !== void 0 ? e.useSpatialIndex : !0;
      (this.featuresRtree_ = n ? new xb() : null),
        (this.loadedExtentsRtree_ = new xb()),
        (this.loadingExtentsCount_ = 0),
        (this.nullGeometryFeatures_ = {}),
        (this.idIndex_ = {}),
        (this.uidIndex_ = {}),
        (this.featureChangeKeys_ = {}),
        (this.featuresCollection_ = null);
      let r, i;
      Array.isArray(e.features)
        ? (i = e.features)
        : e.features && ((r = e.features), (i = r.getArray())),
        !n && r === void 0 && (r = new Or(i)),
        i !== void 0 && this.addFeaturesInternal(i),
        r !== void 0 && this.bindFeaturesCollection_(r);
    }
    addFeature(e) {
      this.addFeatureInternal(e), this.changed();
    }
    addFeatureInternal(e) {
      const n = xt(e);
      if (!this.addToIndex_(n, e)) {
        this.featuresCollection_ && this.featuresCollection_.remove(e);
        return;
      }
      this.setupChangeEvents_(n, e);
      const r = e.getGeometry();
      if (r) {
        const i = r.getExtent();
        this.featuresRtree_ && this.featuresRtree_.insert(i, e);
      } else this.nullGeometryFeatures_[n] = e;
      this.dispatchEvent(new wi(gr.ADDFEATURE, e));
    }
    setupChangeEvents_(e, n) {
      n instanceof Qn ||
        (this.featureChangeKeys_[e] = [
          ft(n, it.CHANGE, this.handleFeatureChange_, this),
          ft(n, js.PROPERTYCHANGE, this.handleFeatureChange_, this),
        ]);
    }
    addToIndex_(e, n) {
      let r = !0;
      if (n.getId() !== void 0) {
        const i = String(n.getId());
        if (!(i in this.idIndex_)) this.idIndex_[i] = n;
        else if (n instanceof Qn) {
          const o = this.idIndex_[i];
          o instanceof Qn
            ? Array.isArray(o)
              ? o.push(n)
              : (this.idIndex_[i] = [o, n])
            : (r = !1);
        } else r = !1;
      }
      return (
        r &&
          (ut(
            !(e in this.uidIndex_),
            "The passed `feature` was already added to the source"
          ),
          (this.uidIndex_[e] = n)),
        r
      );
    }
    addFeatures(e) {
      this.addFeaturesInternal(e), this.changed();
    }
    addFeaturesInternal(e) {
      const n = [],
        r = [],
        i = [];
      for (let o = 0, s = e.length; o < s; o++) {
        const a = e[o],
          l = xt(a);
        this.addToIndex_(l, a) && r.push(a);
      }
      for (let o = 0, s = r.length; o < s; o++) {
        const a = r[o],
          l = xt(a);
        this.setupChangeEvents_(l, a);
        const c = a.getGeometry();
        if (c) {
          const u = c.getExtent();
          n.push(u), i.push(a);
        } else this.nullGeometryFeatures_[l] = a;
      }
      if (
        (this.featuresRtree_ && this.featuresRtree_.load(n, i),
        this.hasListener(gr.ADDFEATURE))
      )
        for (let o = 0, s = r.length; o < s; o++)
          this.dispatchEvent(new wi(gr.ADDFEATURE, r[o]));
    }
    bindFeaturesCollection_(e) {
      let n = !1;
      this.addEventListener(gr.ADDFEATURE, function (r) {
        n || ((n = !0), e.push(r.feature), (n = !1));
      }),
        this.addEventListener(gr.REMOVEFEATURE, function (r) {
          n || ((n = !0), e.remove(r.feature), (n = !1));
        }),
        e.addEventListener(zn.ADD, (r) => {
          n || ((n = !0), this.addFeature(r.element), (n = !1));
        }),
        e.addEventListener(zn.REMOVE, (r) => {
          n || ((n = !0), this.removeFeature(r.element), (n = !1));
        }),
        (this.featuresCollection_ = e);
    }
    clear(e) {
      if (e) {
        for (const r in this.featureChangeKeys_)
          this.featureChangeKeys_[r].forEach(Wt);
        this.featuresCollection_ ||
          ((this.featureChangeKeys_ = {}),
          (this.idIndex_ = {}),
          (this.uidIndex_ = {}));
      } else if (this.featuresRtree_) {
        const r = (i) => {
          this.removeFeatureInternal(i);
        };
        this.featuresRtree_.forEach(r);
        for (const i in this.nullGeometryFeatures_)
          this.removeFeatureInternal(this.nullGeometryFeatures_[i]);
      }
      this.featuresCollection_ && this.featuresCollection_.clear(),
        this.featuresRtree_ && this.featuresRtree_.clear(),
        (this.nullGeometryFeatures_ = {});
      const n = new wi(gr.CLEAR);
      this.dispatchEvent(n), this.changed();
    }
    forEachFeature(e) {
      if (this.featuresRtree_) return this.featuresRtree_.forEach(e);
      this.featuresCollection_ && this.featuresCollection_.forEach(e);
    }
    forEachFeatureAtCoordinateDirect(e, n) {
      const r = [e[0], e[1], e[0], e[1]];
      return this.forEachFeatureInExtent(r, function (i) {
        const o = i.getGeometry();
        if (o instanceof Qn || o.intersectsCoordinate(e)) return n(i);
      });
    }
    forEachFeatureInExtent(e, n) {
      if (this.featuresRtree_) return this.featuresRtree_.forEachInExtent(e, n);
      this.featuresCollection_ && this.featuresCollection_.forEach(n);
    }
    forEachFeatureIntersectingExtent(e, n) {
      return this.forEachFeatureInExtent(e, function (r) {
        const i = r.getGeometry();
        if (i instanceof Qn || i.intersectsExtent(e)) {
          const o = n(r);
          if (o) return o;
        }
      });
    }
    getFeaturesCollection() {
      return this.featuresCollection_;
    }
    getFeatures() {
      let e;
      return (
        this.featuresCollection_
          ? (e = this.featuresCollection_.getArray().slice(0))
          : this.featuresRtree_ &&
            ((e = this.featuresRtree_.getAll()),
            Vs(this.nullGeometryFeatures_) ||
              np(e, Object.values(this.nullGeometryFeatures_))),
        e
      );
    }
    getFeaturesAtCoordinate(e) {
      const n = [];
      return (
        this.forEachFeatureAtCoordinateDirect(e, function (r) {
          n.push(r);
        }),
        n
      );
    }
    getFeaturesInExtent(e, n) {
      if (this.featuresRtree_) {
        if (!(n && n.canWrapX() && this.getWrapX()))
          return this.featuresRtree_.getInExtent(e);
        const i = SH(e, n);
        return [].concat(...i.map((o) => this.featuresRtree_.getInExtent(o)));
      }
      return this.featuresCollection_
        ? this.featuresCollection_.getArray().slice(0)
        : [];
    }
    getClosestFeatureToCoordinate(e, n) {
      const r = e[0],
        i = e[1];
      let o = null;
      const s = [NaN, NaN];
      let a = 1 / 0;
      const l = [-1 / 0, -1 / 0, 1 / 0, 1 / 0];
      return (
        (n = n || dl),
        this.featuresRtree_.forEachInExtent(l, function (c) {
          if (n(c)) {
            const u = c.getGeometry(),
              d = a;
            if (
              ((a = u instanceof Qn ? 0 : u.closestPointXY(r, i, s, a)), a < d)
            ) {
              o = c;
              const h = Math.sqrt(a);
              (l[0] = r - h), (l[1] = i - h), (l[2] = r + h), (l[3] = i + h);
            }
          }
        }),
        o
      );
    }
    getExtent(e) {
      return this.featuresRtree_.getExtent(e);
    }
    getFeatureById(e) {
      const n = this.idIndex_[e.toString()];
      return n !== void 0 ? n : null;
    }
    getFeatureByUid(e) {
      const n = this.uidIndex_[e];
      return n !== void 0 ? n : null;
    }
    getFormat() {
      return this.format_;
    }
    getOverlaps() {
      return this.overlaps_;
    }
    getUrl() {
      return this.url_;
    }
    handleFeatureChange_(e) {
      const n = e.target,
        r = xt(n),
        i = n.getGeometry();
      if (!i)
        r in this.nullGeometryFeatures_ ||
          (this.featuresRtree_ && this.featuresRtree_.remove(n),
          (this.nullGeometryFeatures_[r] = n));
      else {
        const s = i.getExtent();
        r in this.nullGeometryFeatures_
          ? (delete this.nullGeometryFeatures_[r],
            this.featuresRtree_ && this.featuresRtree_.insert(s, n))
          : this.featuresRtree_ && this.featuresRtree_.update(s, n);
      }
      const o = n.getId();
      if (o !== void 0) {
        const s = o.toString();
        this.idIndex_[s] !== n &&
          (this.removeFromIdIndex_(n), (this.idIndex_[s] = n));
      } else this.removeFromIdIndex_(n), (this.uidIndex_[r] = n);
      this.changed(), this.dispatchEvent(new wi(gr.CHANGEFEATURE, n));
    }
    hasFeature(e) {
      const n = e.getId();
      return n !== void 0 ? n in this.idIndex_ : xt(e) in this.uidIndex_;
    }
    isEmpty() {
      return this.featuresRtree_
        ? this.featuresRtree_.isEmpty() && Vs(this.nullGeometryFeatures_)
        : this.featuresCollection_
        ? this.featuresCollection_.getLength() === 0
        : !0;
    }
    loadFeatures(e, n, r) {
      const i = this.loadedExtentsRtree_,
        o = this.strategy_(e, n, r);
      for (let s = 0, a = o.length; s < a; ++s) {
        const l = o[s];
        i.forEachInExtent(l, function (u) {
          return bs(u.extent, l);
        }) ||
          (++this.loadingExtentsCount_,
          this.dispatchEvent(new wi(gr.FEATURESLOADSTART)),
          this.loader_.call(
            this,
            l,
            n,
            r,
            (u) => {
              --this.loadingExtentsCount_,
                this.dispatchEvent(new wi(gr.FEATURESLOADEND, void 0, u));
            },
            () => {
              --this.loadingExtentsCount_,
                this.dispatchEvent(new wi(gr.FEATURESLOADERROR));
            }
          ),
          i.insert(l, { extent: l.slice() }));
      }
      this.loading =
        this.loader_.length < 4 ? !1 : this.loadingExtentsCount_ > 0;
    }
    refresh() {
      this.clear(!0), this.loadedExtentsRtree_.clear(), super.refresh();
    }
    removeLoadedExtent(e) {
      const n = this.loadedExtentsRtree_;
      let r;
      n.forEachInExtent(e, function (i) {
        if (hl(i.extent, e)) return (r = i), !0;
      }),
        r && n.remove(r);
    }
    removeFeature(e) {
      if (!e) return;
      const n = xt(e);
      n in this.nullGeometryFeatures_
        ? delete this.nullGeometryFeatures_[n]
        : this.featuresRtree_ && this.featuresRtree_.remove(e),
        this.removeFeatureInternal(e) && this.changed();
    }
    removeFeatureInternal(e) {
      const n = xt(e),
        r = this.featureChangeKeys_[n];
      if (!r) return;
      r.forEach(Wt), delete this.featureChangeKeys_[n];
      const i = e.getId();
      return (
        i !== void 0 && delete this.idIndex_[i.toString()],
        delete this.uidIndex_[n],
        this.dispatchEvent(new wi(gr.REMOVEFEATURE, e)),
        e
      );
    }
    removeFromIdIndex_(e) {
      let n = !1;
      for (const r in this.idIndex_) {
        const i = this.idIndex_[r];
        if (e instanceof Qn && Array.isArray(i) && i.includes(e))
          i.splice(i.indexOf(e), 1);
        else if (this.idIndex_[r] === e) {
          delete this.idIndex_[r], (n = !0);
          break;
        }
      }
      return n;
    }
    setLoader(e) {
      this.loader_ = e;
    }
    setUrl(e) {
      ut(this.format_, "`format` must be set when `url` is set"),
        (this.url_ = e),
        this.setLoader(wb(e, this.format_));
    }
  }
  let la = 0;
  const ca = 0,
    qt = 1 << la++,
    je = 1 << la++,
    mr = 1 << la++,
    Sn = 1 << la++,
    qi = 1 << la++,
    $n = Math.pow(2, la) - 1,
    Tw = {
      [qt]: "boolean",
      [je]: "number",
      [mr]: "string",
      [Sn]: "color",
      [qi]: "number[]",
    },
    O9 = Object.keys(Tw).map(Number).sort(Xi);
  function Pn(t) {
    const e = [];
    for (const n of O9) M9(t, n) && e.push(Tw[n]);
    return e.length === 0
      ? "untyped"
      : e.length < 3
      ? e.join(" or ")
      : e.slice(0, -1).join(", ") + ", or " + e[e.length - 1];
  }
  function M9(t, e) {
    return (t & e) === e;
  }
  function zr(t, e) {
    return !!(t & e);
  }
  function Td(t, e) {
    return t === e;
  }
  class zi {
    constructor(e, n) {
      (this.type = e), (this.value = n);
    }
  }
  class L9 {
    constructor(e, n, ...r) {
      (this.type = e), (this.operator = n), (this.args = r);
    }
  }
  function Pw() {
    return {
      variables: new Set(),
      properties: new Set(),
      featureId: !1,
      style: {},
    };
  }
  function $9(t) {
    switch (t) {
      case "string":
        return mr;
      case "color":
        return Sn;
      case "number":
        return je;
      case "boolean":
        return qt;
      case "number[]":
        return qi;
      default:
        throw new Error(`Unrecognized type hint: ${t}`);
    }
  }
  function St(t, e, n) {
    switch (typeof t) {
      case "boolean":
        return new zi(qt, t);
      case "number":
        return new zi(je, t);
      case "string": {
        let i = mr;
        return MH(t) && (i |= Sn), Td(i & n, ca) || (i &= n), new zi(i, t);
      }
    }
    if (!Array.isArray(t))
      throw new Error("Expression must be an array or a primitive value");
    if (t.length === 0) throw new Error("Empty expression");
    if (typeof t[0] == "string") return G9(t, e, n);
    for (const i of t)
      if (typeof i != "number") throw new Error("Expected an array of numbers");
    let r = qi;
    return (
      (t.length === 3 || t.length === 4) && (r |= Sn),
      n && (r &= n),
      new zi(r, t)
    );
  }
  const Ee = {
      Get: "get",
      Var: "var",
      Concat: "concat",
      GeometryType: "geometry-type",
      Any: "any",
      All: "all",
      Not: "!",
      Resolution: "resolution",
      Zoom: "zoom",
      Time: "time",
      Equal: "==",
      NotEqual: "!=",
      GreaterThan: ">",
      GreaterThanOrEqualTo: ">=",
      LessThan: "<",
      LessThanOrEqualTo: "<=",
      Multiply: "*",
      Divide: "/",
      Add: "+",
      Subtract: "-",
      Clamp: "clamp",
      Mod: "%",
      Pow: "^",
      Abs: "abs",
      Floor: "floor",
      Ceil: "ceil",
      Round: "round",
      Sin: "sin",
      Cos: "cos",
      Atan: "atan",
      Sqrt: "sqrt",
      Match: "match",
      Between: "between",
      Interpolate: "interpolate",
      Case: "case",
      In: "in",
      Number: "number",
      String: "string",
      Array: "array",
      Color: "color",
      Id: "id",
      Band: "band",
      Palette: "palette",
    },
    D9 = {
      [Ee.Get]: tt(([t, e]) => (e !== void 0 ? $9(e.value) : $n), ot(1, 2), z9),
      [Ee.Var]: tt(([t]) => t.type, ot(1, 1), F9),
      [Ee.Id]: tt(je | mr, Ea, B9),
      [Ee.Concat]: tt(mr, ot(2, 1 / 0), yt($n)),
      [Ee.GeometryType]: tt(mr, Ea),
      [Ee.Resolution]: tt(je, Ea),
      [Ee.Zoom]: tt(je, Ea),
      [Ee.Time]: tt(je, Ea),
      [Ee.Any]: tt(qt, ot(2, 1 / 0), yt(qt)),
      [Ee.All]: tt(qt, ot(2, 1 / 0), yt(qt)),
      [Ee.Not]: tt(qt, ot(1, 1), yt(qt)),
      [Ee.Equal]: tt(qt, ot(2, 2), yt($n), mo),
      [Ee.NotEqual]: tt(qt, ot(2, 2), yt($n), mo),
      [Ee.GreaterThan]: tt(qt, ot(2, 2), yt($n), mo),
      [Ee.GreaterThanOrEqualTo]: tt(qt, ot(2, 2), yt($n), mo),
      [Ee.LessThan]: tt(qt, ot(2, 2), yt($n), mo),
      [Ee.LessThanOrEqualTo]: tt(qt, ot(2, 2), yt($n), mo),
      [Ee.Multiply]: tt(
        (t) => {
          let e = je | Sn;
          for (let n = 0; n < t.length; n++) e &= t[n].type;
          return e;
        },
        ot(2, 1 / 0),
        yt(je | Sn),
        mo
      ),
      [Ee.Divide]: tt(je, ot(2, 2), yt(je)),
      [Ee.Add]: tt(je, ot(2, 1 / 0), yt(je)),
      [Ee.Subtract]: tt(je, ot(2, 2), yt(je)),
      [Ee.Clamp]: tt(je, ot(3, 3), yt(je)),
      [Ee.Mod]: tt(je, ot(2, 2), yt(je)),
      [Ee.Pow]: tt(je, ot(2, 2), yt(je)),
      [Ee.Abs]: tt(je, ot(1, 1), yt(je)),
      [Ee.Floor]: tt(je, ot(1, 1), yt(je)),
      [Ee.Ceil]: tt(je, ot(1, 1), yt(je)),
      [Ee.Round]: tt(je, ot(1, 1), yt(je)),
      [Ee.Sin]: tt(je, ot(1, 1), yt(je)),
      [Ee.Cos]: tt(je, ot(1, 1), yt(je)),
      [Ee.Atan]: tt(je, ot(1, 2), yt(je)),
      [Ee.Sqrt]: tt(je, ot(1, 1), yt(je)),
      [Ee.Match]: tt(
        (t) => {
          let e = $n;
          for (let n = 2; n < t.length; n += 2) e &= t[n].type;
          return (e &= t[t.length - 1].type), e;
        },
        ot(4, 1 / 0),
        Sb,
        H9
      ),
      [Ee.Between]: tt(qt, ot(3, 3), yt(je)),
      [Ee.Interpolate]: tt(
        (t) => {
          let e = Sn | je;
          for (let n = 3; n < t.length; n += 2) e &= t[n].type;
          return e;
        },
        ot(6, 1 / 0),
        Sb,
        W9
      ),
      [Ee.Case]: tt(
        (t) => {
          let e = $n;
          for (let n = 1; n < t.length; n += 2) e &= t[n].type;
          return (e &= t[t.length - 1].type), e;
        },
        ot(3, 1 / 0),
        N9,
        j9
      ),
      [Ee.In]: tt(qt, ot(2, 2), U9),
      [Ee.Number]: tt(je, ot(1, 1 / 0), yt($n)),
      [Ee.String]: tt(mr, ot(1, 1 / 0), yt($n)),
      [Ee.Array]: tt(
        (t) => (t.length === 3 || t.length === 4 ? qi | Sn : qi),
        ot(1, 1 / 0),
        yt(je)
      ),
      [Ee.Color]: tt(Sn, ot(3, 4), yt(je)),
      [Ee.Band]: tt(je, ot(1, 3), yt(je)),
      [Ee.Palette]: tt(Sn, ot(2, 2), V9),
    };
  function z9(t, e) {
    const n = St(t[1], e);
    if (!(n instanceof zi))
      throw new Error("Expected a literal argument for get operation");
    if (typeof n.value != "string")
      throw new Error("Expected a string argument for get operation");
    if ((e.properties.add(n.value), t.length === 3)) {
      const r = St(t[2], e);
      return [n, r];
    }
    return [n];
  }
  function F9(t, e, n, r) {
    const i = t[1];
    if (typeof i != "string")
      throw new Error("Expected a string argument for var operation");
    if (
      (e.variables.add(i),
      !("variables" in e.style) || e.style.variables[i] === void 0)
    )
      return [new zi($n, i)];
    const o = e.style.variables[i],
      s = St(o, e);
    if (((s.value = i), r && !zr(r, s.type)))
      throw new Error(
        `The variable ${i} has type ${Pn(
          s.type
        )} but the following type was expected: ${Pn(r)}`
      );
    return [s];
  }
  function B9(t, e) {
    e.featureId = !0;
  }
  function Ea(t, e) {
    const n = t[0];
    if (t.length !== 1)
      throw new Error(`Expected no arguments for ${n} operation`);
    return [];
  }
  function ot(t, e) {
    return function (n, r) {
      const i = n[0],
        o = n.length - 1;
      if (t === e) {
        if (o !== t) {
          const s = t === 1 ? "" : "s";
          throw new Error(`Expected ${t} argument${s} for ${i}, got ${o}`);
        }
      } else if (o < t || o > e) {
        const s = e === 1 / 0 ? `${t} or more` : `${t} to ${e}`;
        throw new Error(`Expected ${s} arguments for ${i}, got ${o}`);
      }
    };
  }
  function yt(t) {
    return function (e, n) {
      const r = e[0],
        i = e.length - 1,
        o = new Array(i);
      for (let s = 0; s < i; ++s) {
        const a = St(e[s + 1], n);
        if (!zr(t, a.type)) {
          const l = Pn(t),
            c = Pn(a.type);
          throw new Error(
            `Unexpected type for argument ${s} of ${r} operation, got ${l} but expected ${c}`
          );
        }
        (a.type &= t), (o[s] = a);
      }
      return o;
    };
  }
  function mo(t, e, n) {
    const r = t[0],
      i = t.length - 1;
    let o = $n;
    for (let a = 0; a < n.length; ++a) o &= n[a].type;
    if (o === ca)
      throw new Error(
        `No common type could be found for arguments of ${r} operation`
      );
    const s = new Array(i);
    for (let a = 0; a < i; ++a) s[a] = St(t[a + 1], e, o);
    return s;
  }
  function N9(t, e) {
    const n = t[0],
      r = t.length - 1;
    if (r % 2 === 0)
      throw new Error(
        `An odd amount of arguments was expected for operation ${n}, got ${JSON.stringify(
          r
        )} instead`
      );
  }
  function Sb(t, e) {
    const n = t[0],
      r = t.length - 1;
    if (r % 2 === 1)
      throw new Error(
        `An even amount of arguments was expected for operation ${n}, got ${JSON.stringify(
          r
        )} instead`
      );
  }
  function H9(t, e, n, r) {
    const i = t.length - 1;
    let s = St(t[1], e).type;
    const a = St(t[t.length - 1], e);
    let l = r !== void 0 ? r & a.type : a.type;
    const c = new Array(i - 2);
    for (let d = 0; d < i - 2; d += 2) {
      const h = St(t[d + 2], e),
        g = St(t[d + 3], e);
      (s &= h.type), (l &= g.type), (c[d] = h), (c[d + 1] = g);
    }
    const u = mr | je | qt;
    if (!zr(u, s))
      throw new Error(
        `Expected an input of type ${Pn(
          u
        )} for the interpolate operation, got ${Pn(s)} instead`
      );
    if (Td(l, ca))
      throw new Error(
        "Could not find a common output type for the following match operation: " +
          JSON.stringify(t)
      );
    for (let d = 0; d < i - 2; d += 2) {
      const h = St(t[d + 2], e, s),
        g = St(t[d + 3], e, l);
      (c[d] = h), (c[d + 1] = g);
    }
    return [St(t[1], e, s), ...c, St(t[t.length - 1], e, l)];
  }
  function W9(t, e, n, r) {
    const i = t[1];
    let o;
    switch (i[0]) {
      case "linear":
        o = 1;
        break;
      case "exponential":
        if (((o = i[1]), typeof o != "number"))
          throw new Error(
            `Expected a number base for exponential interpolation, got ${JSON.stringify(
              o
            )} instead`
          );
        break;
      default:
        o = null;
    }
    if (!o) throw new Error(`Invalid interpolation type: ${JSON.stringify(i)}`);
    o = St(o, e);
    let s = St(t[2], e);
    if (!zr(je, s.type))
      throw new Error(
        `Expected an input of type number for the interpolate operation, got ${Pn(
          s.type
        )} instead`
      );
    s = St(t[2], e, je);
    const a = new Array(t.length - 3);
    for (let l = 0; l < a.length; l += 2) {
      let c = St(t[l + 3], e);
      if (!zr(je, c.type))
        throw new Error(
          `Expected all stop input values in the interpolate operation to be of type number, got ${Pn(
            c.type
          )} at position ${l + 2} instead`
        );
      let u = St(t[l + 4], e);
      if (!zr(je | Sn, u.type))
        throw new Error(
          `Expected all stop output values in the interpolate operation to be a number or color, got ${Pn(
            u.type
          )} at position ${l + 3} instead`
        );
      (c = St(t[l + 3], e, je)),
        (u = St(t[l + 4], e, je | Sn)),
        (a[l] = c),
        (a[l + 1] = u);
    }
    return [o, s, ...a];
  }
  function j9(t, e, n, r) {
    const i = St(t[t.length - 1], e);
    let o = r !== void 0 ? r & i.type : i.type;
    const s = new Array(t.length - 1);
    for (let a = 0; a < s.length - 1; a += 2) {
      const l = St(t[a + 1], e),
        c = St(t[a + 2], e);
      if (!zr(qt, l.type))
        throw new Error(
          `Expected all conditions in the case operation to be of type boolean, got ${Pn(
            l.type
          )} at position ${a} instead`
        );
      (o &= c.type), (s[a] = l), (s[a + 1] = c);
    }
    if (Td(o, ca))
      throw new Error(
        "Could not find a common output type for the following case operation: " +
          JSON.stringify(t)
      );
    for (let a = 0; a < s.length - 1; a += 2) s[a + 1] = St(t[a + 2], e, o);
    return (s[s.length - 1] = St(t[t.length - 1], e, o)), s;
  }
  function U9(t, e) {
    let n = t[2];
    if (!Array.isArray(n))
      throw new Error(
        'The "in" operator was provided a literal value which was not an array as second argument.'
      );
    if (typeof n[0] == "string") {
      if (n[0] !== "literal")
        throw new Error(
          'For the "in" operator, a string array should be wrapped in a "literal" operator to disambiguate from expressions.'
        );
      if (!Array.isArray(n[1]))
        throw new Error(
          'The "in" operator was provided a literal value which was not an array as second argument.'
        );
      n = n[1];
    }
    let r = mr | je;
    const i = new Array(n.length);
    for (let s = 0; s < i.length; s++) {
      const a = St(n[s], e);
      (r &= a.type), (i[s] = a);
    }
    if (Td(r, ca))
      throw new Error(
        "Could not find a common type for the following in operation: " +
          JSON.stringify(t)
      );
    return [St(t[1], e, r), ...i];
  }
  function V9(t, e) {
    const n = St(t[1], e, je);
    if (n.type !== je)
      throw new Error(
        `The first argument of palette must be an number, got ${Pn(
          n.type
        )} instead`
      );
    const r = t[2];
    if (!Array.isArray(r))
      throw new Error("The second argument of palette must be an array");
    const i = new Array(r.length);
    for (let o = 0; o < i.length; o++) {
      const s = St(r[o], e, Sn);
      if (!(s instanceof zi))
        throw new Error(
          `The palette color at index ${o} must be a literal value`
        );
      if (!zr(s.type, Sn))
        throw new Error(
          `The palette color at index ${o} should be of type color, got ${Pn(
            s.type
          )} instead`
        );
      i[o] = s;
    }
    return [n, ...i];
  }
  function tt(t, ...e) {
    return function (n, r, i) {
      const o = n[0];
      let s = [];
      for (let l = 0; l < e.length; l++) s = e[l](n, r, s, i) || s;
      let a = typeof t == "function" ? t(s) : t;
      if (i !== void 0) {
        if (!zr(a, i))
          throw new Error(
            `The following expression was expected to return ${Pn(
              i
            )}, but returns ${Pn(a)} instead: ${JSON.stringify(n)}`
          );
        a &= i;
      }
      if (a === ca)
        throw new Error(
          `No matching type was found for the following expression: ${JSON.stringify(
            n
          )}`
        );
      return new L9(a, o, ...s);
    };
  }
  function G9(t, e, n) {
    const r = t[0],
      i = D9[r];
    if (!i) throw new Error(`Unknown operator: ${r}`);
    return i(t, e, n);
  }
  function Aw() {
    return { variables: {}, properties: {}, resolution: NaN, featureId: null };
  }
  function ro(t, e, n) {
    const r = St(t, n);
    if (!zr(e, r.type)) {
      const i = Pn(e),
        o = Pn(r.type);
      throw new Error(`Expected expression to be of type ${i}, got ${o}`);
    }
    return si(r);
  }
  function si(t, e) {
    if (t instanceof zi) {
      if (t.type === Sn && typeof t.value == "string") {
        const r = cp(t.value);
        return function () {
          return r;
        };
      }
      return function () {
        return t.value;
      };
    }
    const n = t.operator;
    switch (n) {
      case Ee.Number:
      case Ee.String:
        return X9(t);
      case Ee.Get:
      case Ee.Var:
        return K9(t);
      case Ee.Id:
        return (r) => r.featureId;
      case Ee.Concat: {
        const r = t.args.map((i) => si(i));
        return (i) => "".concat(...r.map((o) => o(i).toString()));
      }
      case Ee.Resolution:
        return (r) => r.resolution;
      case Ee.Any:
      case Ee.All:
      case Ee.Not:
        return q9(t);
      case Ee.Equal:
      case Ee.NotEqual:
      case Ee.LessThan:
      case Ee.LessThanOrEqualTo:
      case Ee.GreaterThan:
      case Ee.GreaterThanOrEqualTo:
        return Y9(t);
      case Ee.Multiply:
      case Ee.Divide:
      case Ee.Add:
      case Ee.Subtract:
      case Ee.Clamp:
      case Ee.Mod:
      case Ee.Pow:
      case Ee.Abs:
      case Ee.Floor:
      case Ee.Ceil:
      case Ee.Round:
      case Ee.Sin:
      case Ee.Cos:
      case Ee.Atan:
      case Ee.Sqrt:
        return Z9(t);
      case Ee.Match:
        return J9(t);
      case Ee.Interpolate:
        return Q9(t);
      default:
        throw new Error(`Unsupported operator ${n}`);
    }
  }
  function X9(t, e) {
    const n = t.operator,
      r = t.args.length,
      i = new Array(r);
    for (let o = 0; o < r; ++o) i[o] = si(t.args[o]);
    switch (n) {
      case Ee.Number:
      case Ee.String:
        return (o) => {
          for (let s = 0; s < r; ++s) {
            const a = i[s](o);
            if (typeof a === n) return a;
          }
          throw new Error(`Expected one of the values to be a ${n}`);
        };
      default:
        throw new Error(`Unsupported assertion operator ${n}`);
    }
  }
  function K9(t, e) {
    const r = t.args[0].value;
    switch (t.operator) {
      case Ee.Get:
        return (i) => i.properties[r];
      case Ee.Var:
        return (i) => i.variables[r];
      default:
        throw new Error(`Unsupported accessor operator ${t.operator}`);
    }
  }
  function Y9(t, e) {
    const n = t.operator,
      r = si(t.args[0]),
      i = si(t.args[1]);
    switch (n) {
      case Ee.Equal:
        return (o) => r(o) === i(o);
      case Ee.NotEqual:
        return (o) => r(o) !== i(o);
      case Ee.LessThan:
        return (o) => r(o) < i(o);
      case Ee.LessThanOrEqualTo:
        return (o) => r(o) <= i(o);
      case Ee.GreaterThan:
        return (o) => r(o) > i(o);
      case Ee.GreaterThanOrEqualTo:
        return (o) => r(o) >= i(o);
      default:
        throw new Error(`Unsupported comparison operator ${n}`);
    }
  }
  function q9(t, e) {
    const n = t.operator,
      r = t.args.length,
      i = new Array(r);
    for (let o = 0; o < r; ++o) i[o] = si(t.args[o]);
    switch (n) {
      case Ee.Any:
        return (o) => {
          for (let s = 0; s < r; ++s) if (i[s](o)) return !0;
          return !1;
        };
      case Ee.All:
        return (o) => {
          for (let s = 0; s < r; ++s) if (!i[s](o)) return !1;
          return !0;
        };
      case Ee.Not:
        return (o) => !i[0](o);
      default:
        throw new Error(`Unsupported logical operator ${n}`);
    }
  }
  function Z9(t, e) {
    const n = t.operator,
      r = t.args.length,
      i = new Array(r);
    for (let o = 0; o < r; ++o) i[o] = si(t.args[o]);
    switch (n) {
      case Ee.Multiply:
        return (o) => {
          let s = 1;
          for (let a = 0; a < r; ++a) s *= i[a](o);
          return s;
        };
      case Ee.Divide:
        return (o) => i[0](o) / i[1](o);
      case Ee.Add:
        return (o) => {
          let s = 0;
          for (let a = 0; a < r; ++a) s += i[a](o);
          return s;
        };
      case Ee.Subtract:
        return (o) => i[0](o) - i[1](o);
      case Ee.Clamp:
        return (o) => {
          const s = i[0](o),
            a = i[1](o);
          if (s < a) return a;
          const l = i[2](o);
          return s > l ? l : s;
        };
      case Ee.Mod:
        return (o) => i[0](o) % i[1](o);
      case Ee.Pow:
        return (o) => Math.pow(i[0](o), i[1](o));
      case Ee.Abs:
        return (o) => Math.abs(i[0](o));
      case Ee.Floor:
        return (o) => Math.floor(i[0](o));
      case Ee.Ceil:
        return (o) => Math.ceil(i[0](o));
      case Ee.Round:
        return (o) => Math.round(i[0](o));
      case Ee.Sin:
        return (o) => Math.sin(i[0](o));
      case Ee.Cos:
        return (o) => Math.cos(i[0](o));
      case Ee.Atan:
        return r === 2
          ? (o) => Math.atan2(i[0](o), i[1](o))
          : (o) => Math.atan(i[0](o));
      case Ee.Sqrt:
        return (o) => Math.sqrt(i[0](o));
      default:
        throw new Error(`Unsupported numeric operator ${n}`);
    }
  }
  function J9(t, e) {
    const n = t.args.length,
      r = new Array(n);
    for (let i = 0; i < n; ++i) r[i] = si(t.args[i]);
    return (i) => {
      const o = r[0](i);
      for (let s = 1; s < n; s += 2) if (o === r[s](i)) return r[s + 1](i);
      return r[n - 1](i);
    };
  }
  function Q9(t, e) {
    const n = t.args.length,
      r = new Array(n);
    for (let i = 0; i < n; ++i) r[i] = si(t.args[i]);
    return (i) => {
      const o = r[0](i),
        s = r[1](i);
      let a, l;
      for (let c = 2; c < n; c += 2) {
        const u = r[c](i);
        let d = r[c + 1](i);
        const h = Array.isArray(d);
        if ((h && (d = IH(d)), u >= s))
          return c === 2 ? d : h ? ej(o, s, a, l, u, d) : Ia(o, s, a, l, u, d);
        (a = u), (l = d);
      }
      return l;
    };
  }
  function Ia(t, e, n, r, i, o) {
    const s = i - n;
    if (s === 0) return r;
    const a = e - n,
      l = t === 1 ? a / s : (Math.pow(t, a) - 1) / (Math.pow(t, s) - 1);
    return r + l * (o - r);
  }
  function ej(t, e, n, r, i, o) {
    if (i - n === 0) return r;
    const a = Wv(r),
      l = Wv(o);
    let c = l[2] - a[2];
    c > 180 ? (c -= 360) : c < -180 && (c += 360);
    const u = [
      Ia(t, e, n, a[0], i, l[0]),
      Ia(t, e, n, a[1], i, l[1]),
      a[2] + Ia(t, e, n, 0, i, c),
      Ia(t, e, n, r[3], i, o[3]),
    ];
    return H_(OH(u));
  }
  function tj(t) {
    return !0;
  }
  function nj(t) {
    const e = Pw(),
      n = rj(t, e),
      r = Aw();
    return function (i, o) {
      if (
        ((r.properties = i.getPropertiesInternal()),
        (r.resolution = o),
        e.featureId)
      ) {
        const s = i.getId();
        s !== void 0 ? (r.featureId = s) : (r.featureId = null);
      }
      return n(r);
    };
  }
  function Eb(t) {
    const e = Pw(),
      n = t.length,
      r = new Array(n);
    for (let s = 0; s < n; ++s) r[s] = zf(t[s], e);
    const i = Aw(),
      o = new Array(n);
    return function (s, a) {
      if (
        ((i.properties = s.getPropertiesInternal()),
        (i.resolution = a),
        e.featureId)
      ) {
        const c = s.getId();
        c !== void 0 ? (i.featureId = c) : (i.featureId = null);
      }
      let l = 0;
      for (let c = 0; c < n; ++c) {
        const u = r[c](i);
        u && ((o[l] = u), (l += 1));
      }
      return (o.length = l), o;
    };
  }
  function rj(t, e) {
    const n = t.length,
      r = new Array(n);
    for (let i = 0; i < n; ++i) {
      const o = t[i],
        s = "filter" in o ? ro(o.filter, qt, e) : tj;
      let a;
      if (Array.isArray(o.style)) {
        const l = o.style.length;
        a = new Array(l);
        for (let c = 0; c < l; ++c) a[c] = zf(o.style[c], e);
      } else a = [zf(o.style, e)];
      r[i] = { filter: s, styles: a };
    }
    return function (i) {
      const o = [];
      let s = !1;
      for (let a = 0; a < n; ++a) {
        const l = r[a].filter;
        if (l(i) && !(t[a].else && s)) {
          s = !0;
          for (const c of r[a].styles) {
            const u = c(i);
            u && o.push(u);
          }
        }
      }
      return o;
    };
  }
  function zf(t, e) {
    const n = Cl(t, "", e),
      r = _l(t, "", e),
      i = ij(t, e),
      o = oj(t, e),
      s = Nn(t, "z-index", e);
    if (!n && !r && !i && !o && !Vs(t))
      throw new Error(
        "No fill, stroke, point, or text symbolizer properties in style: " +
          JSON.stringify(t)
      );
    const a = new Va();
    return function (l) {
      let c = !0;
      if (n) {
        const u = n(l);
        u && (c = !1), a.setFill(u);
      }
      if (r) {
        const u = r(l);
        u && (c = !1), a.setStroke(u);
      }
      if (i) {
        const u = i(l);
        u && (c = !1), a.setText(u);
      }
      if (o) {
        const u = o(l);
        u && (c = !1), a.setImage(u);
      }
      return s && a.setZIndex(s(l)), c ? null : a;
    };
  }
  function Cl(t, e, n) {
    const r = kw(t, e + "fill-color", n);
    if (!r) return null;
    const i = new aa();
    return function (o) {
      const s = r(o);
      return s === "none" ? null : (i.setColor(s), i);
    };
  }
  function _l(t, e, n) {
    const r = Nn(t, e + "stroke-width", n),
      i = kw(t, e + "stroke-color", n);
    if (!r && !i) return null;
    const o = Di(t, e + "stroke-line-cap", n),
      s = Di(t, e + "stroke-line-join", n),
      a = Iw(t, e + "stroke-line-dash", n),
      l = Nn(t, e + "stroke-line-dash-offset", n),
      c = Nn(t, e + "stroke-miter-limit", n),
      u = new Dp();
    return function (d) {
      if (i) {
        const h = i(d);
        if (h === "none") return null;
        u.setColor(h);
      }
      if ((r && u.setWidth(r(d)), o)) {
        const h = o(d);
        if (h !== "butt" && h !== "round" && h !== "square")
          throw new Error("Expected butt, round, or square line cap");
        u.setLineCap(h);
      }
      if (s) {
        const h = s(d);
        if (h !== "bevel" && h !== "round" && h !== "miter")
          throw new Error("Expected bevel, round, or miter line join");
        u.setLineJoin(h);
      }
      return (
        a && u.setLineDash(a(d)),
        l && u.setLineDashOffset(l(d)),
        c && u.setMiterLimit(c(d)),
        u
      );
    };
  }
  function ij(t, e) {
    const n = "text-",
      r = Di(t, n + "value", e);
    if (!r) return null;
    const i = Cl(t, n, e),
      o = Cl(t, n + "background-", e),
      s = _l(t, n, e),
      a = _l(t, n + "background-", e),
      l = Di(t, n + "font", e),
      c = Nn(t, n + "max-angle", e),
      u = Nn(t, n + "offset-x", e),
      d = Nn(t, n + "offset-y", e),
      h = wl(t, n + "overflow", e),
      g = Di(t, n + "placement", e),
      f = Nn(t, n + "repeat", e),
      p = Pd(t, n + "scale", e),
      b = wl(t, n + "rotate-with-view", e),
      m = Nn(t, n + "rotation", e),
      _ = Di(t, n + "align", e),
      R = Di(t, n + "justify", e),
      S = Di(t, n + "baseline", e),
      x = Iw(t, n + "padding", e),
      E = new zp({});
    return function (w) {
      if (
        (E.setText(r(w)),
        i && E.setFill(i(w)),
        o && E.setBackgroundFill(o(w)),
        s && E.setStroke(s(w)),
        a && E.setBackgroundStroke(a(w)),
        l && E.setFont(l(w)),
        c && E.setMaxAngle(c(w)),
        u && E.setOffsetX(u(w)),
        d && E.setOffsetY(d(w)),
        h && E.setOverflow(h(w)),
        g)
      ) {
        const v = g(w);
        if (v !== "point" && v !== "line")
          throw new Error("Expected point or line for text-placement");
        E.setPlacement(v);
      }
      if (
        (f && E.setRepeat(f(w)),
        p && E.setScale(p(w)),
        b && E.setRotateWithView(b(w)),
        m && E.setRotation(m(w)),
        _)
      ) {
        const v = _(w);
        if (
          v !== "left" &&
          v !== "center" &&
          v !== "right" &&
          v !== "end" &&
          v !== "start"
        )
          throw new Error(
            "Expected left, right, center, start, or end for text-align"
          );
        E.setTextAlign(v);
      }
      if (R) {
        const v = R(w);
        if (v !== "left" && v !== "right" && v !== "center")
          throw new Error("Expected left, right, or center for text-justify");
        E.setJustify(v);
      }
      if (S) {
        const v = S(w);
        if (
          v !== "bottom" &&
          v !== "top" &&
          v !== "middle" &&
          v !== "alphabetic" &&
          v !== "hanging"
        )
          throw new Error(
            "Expected bottom, top, middle, alphabetic, or hanging for text-baseline"
          );
        E.setTextBaseline(v);
      }
      return x && E.setPadding(x(w)), E;
    };
  }
  function oj(t, e) {
    return "icon-src" in t
      ? sj(t, e)
      : "shape-points" in t
      ? aj(t, e)
      : "circle-radius" in t
      ? lj(t, e)
      : null;
  }
  function sj(t, e) {
    const n = "icon-",
      r = n + "src",
      i = Ow(t[r], r),
      o = xu(t, n + "anchor", e),
      s = Pd(t, n + "scale", e),
      a = Nn(t, n + "opacity", e),
      l = xu(t, n + "displacement", e),
      c = Nn(t, n + "rotation", e),
      u = wl(t, n + "rotate-with-view", e),
      d = Rb(t, n + "anchor-origin"),
      h = Tb(t, n + "anchor-x-units"),
      g = Tb(t, n + "anchor-y-units"),
      f = hj(t, n + "color"),
      p = uj(t, n + "cross-origin"),
      b = dj(t, n + "offset"),
      m = Rb(t, n + "offset-origin"),
      _ = Cs(t, n + "width"),
      R = Cs(t, n + "height"),
      S = cj(t, n + "size"),
      x = Fp(t, n + "declutter"),
      E = new Ed({
        src: i,
        anchorOrigin: d,
        anchorXUnits: h,
        anchorYUnits: g,
        color: f,
        crossOrigin: p,
        offset: b,
        offsetOrigin: m,
        height: R,
        width: _,
        size: S,
        declutterMode: x,
      });
    return function (w) {
      return (
        a && E.setOpacity(a(w)),
        l && E.setDisplacement(l(w)),
        c && E.setRotation(c(w)),
        u && E.setRotateWithView(u(w)),
        s && E.setScale(s(w)),
        o && E.setAnchor(o(w)),
        E
      );
    };
  }
  function aj(t, e) {
    const n = "shape-",
      r = n + "points",
      i = Mw(t[r], r),
      o = Cl(t, n, e),
      s = _l(t, n, e),
      a = Pd(t, n + "scale", e),
      l = xu(t, n + "displacement", e),
      c = Nn(t, n + "rotation", e),
      u = wl(t, n + "rotate-with-view", e),
      d = Cs(t, n + "radius"),
      h = Cs(t, n + "radius1"),
      g = Cs(t, n + "radius2"),
      f = Cs(t, n + "angle"),
      p = Fp(t, n + "declutter-mode"),
      b = new Sd({
        points: i,
        radius: d,
        radius1: h,
        radius2: g,
        angle: f,
        declutterMode: p,
      });
    return function (m) {
      return (
        o && b.setFill(o(m)),
        s && b.setStroke(s(m)),
        l && b.setDisplacement(l(m)),
        c && b.setRotation(c(m)),
        u && b.setRotateWithView(u(m)),
        a && b.setScale(a(m)),
        b
      );
    };
  }
  function lj(t, e) {
    const n = "circle-",
      r = Cl(t, n, e),
      i = _l(t, n, e),
      o = Nn(t, n + "radius", e),
      s = Pd(t, n + "scale", e),
      a = xu(t, n + "displacement", e),
      l = Nn(t, n + "rotation", e),
      c = wl(t, n + "rotate-with-view", e),
      u = Fp(t, n + "declutter-mode"),
      d = new Lp({ radius: 5, declutterMode: u });
    return function (h) {
      return (
        o && d.setRadius(o(h)),
        r && d.setFill(r(h)),
        i && d.setStroke(i(h)),
        a && d.setDisplacement(a(h)),
        l && d.setRotation(l(h)),
        c && d.setRotateWithView(c(h)),
        s && d.setScale(s(h)),
        d
      );
    };
  }
  function Nn(t, e, n) {
    if (!(e in t)) return;
    const r = ro(t[e], je, n);
    return function (i) {
      return Mw(r(i), e);
    };
  }
  function Di(t, e, n) {
    if (!(e in t)) return null;
    const r = ro(t[e], mr, n);
    return function (i) {
      return Ow(r(i), e);
    };
  }
  function wl(t, e, n) {
    if (!(e in t)) return null;
    const r = ro(t[e], qt, n);
    return function (i) {
      const o = r(i);
      if (typeof o != "boolean") throw new Error(`Expected a boolean for ${e}`);
      return o;
    };
  }
  function kw(t, e, n) {
    if (!(e in t)) return null;
    const r = ro(t[e], Sn | mr, n);
    return function (i) {
      return Lw(r(i), e);
    };
  }
  function Iw(t, e, n) {
    if (!(e in t)) return null;
    const r = ro(t[e], qi, n);
    return function (i) {
      return Gl(r(i), e);
    };
  }
  function xu(t, e, n) {
    if (!(e in t)) return null;
    const r = ro(t[e], qi, n);
    return function (i) {
      const o = Gl(r(i), e);
      if (o.length !== 2) throw new Error(`Expected two numbers for ${e}`);
      return o;
    };
  }
  function Pd(t, e, n) {
    if (!(e in t)) return null;
    const r = ro(t[e], qi | je, n);
    return function (i) {
      return fj(r(i), e);
    };
  }
  function Cs(t, e) {
    const n = t[e];
    if (n !== void 0) {
      if (typeof n != "number") throw new Error(`Expected a number for ${e}`);
      return n;
    }
  }
  function cj(t, e) {
    const n = t[e];
    if (n !== void 0) {
      if (typeof n == "number") return Kn(n);
      if (!Array.isArray(n))
        throw new Error(`Expected a number or size array for ${e}`);
      if (n.length !== 2 || typeof n[0] != "number" || typeof n[1] != "number")
        throw new Error(`Expected a number or size array for ${e}`);
      return n;
    }
  }
  function uj(t, e) {
    const n = t[e];
    if (n !== void 0) {
      if (typeof n != "string") throw new Error(`Expected a string for ${e}`);
      return n;
    }
  }
  function Rb(t, e) {
    const n = t[e];
    if (n !== void 0) {
      if (
        n !== "bottom-left" &&
        n !== "bottom-right" &&
        n !== "top-left" &&
        n !== "top-right"
      )
        throw new Error(
          `Expected bottom-left, bottom-right, top-left, or top-right for ${e}`
        );
      return n;
    }
  }
  function Tb(t, e) {
    const n = t[e];
    if (n !== void 0) {
      if (n !== "pixels" && n !== "fraction")
        throw new Error(`Expected pixels or fraction for ${e}`);
      return n;
    }
  }
  function dj(t, e) {
    const n = t[e];
    if (n !== void 0) return Gl(n, e);
  }
  function Fp(t, e) {
    const n = t[e];
    if (n !== void 0) {
      if (typeof n != "string") throw new Error(`Expected a string for ${e}`);
      if (n !== "declutter" && n !== "obstacle" && n !== "none")
        throw new Error(`Expected declutter, obstacle, or none for ${e}`);
      return n;
    }
  }
  function hj(t, e) {
    const n = t[e];
    if (n !== void 0) return Lw(n, e);
  }
  function Gl(t, e) {
    if (!Array.isArray(t)) throw new Error(`Expected an array for ${e}`);
    const n = t.length;
    for (let r = 0; r < n; ++r)
      if (typeof t[r] != "number")
        throw new Error(`Expected an array of numbers for ${e}`);
    return t;
  }
  function Ow(t, e) {
    if (typeof t != "string") throw new Error(`Expected a string for ${e}`);
    return t;
  }
  function Mw(t, e) {
    if (typeof t != "number") throw new Error(`Expected a number for ${e}`);
    return t;
  }
  function Lw(t, e) {
    if (typeof t == "string") return t;
    const n = Gl(t, e),
      r = n.length;
    if (r < 3 || r > 4)
      throw new Error(`Expected a color with 3 or 4 values for ${e}`);
    return n;
  }
  function fj(t, e) {
    if (typeof t == "number") return t;
    const n = Gl(t, e);
    if (n.length !== 2)
      throw new Error(`Expected an array of two numbers for ${e}`);
    return n;
  }
  const Pb = { RENDER_ORDER: "renderOrder" };
  class gj extends yd {
    constructor(e) {
      e = e || {};
      const n = Object.assign({}, e);
      delete n.style,
        delete n.renderBuffer,
        delete n.updateWhileAnimating,
        delete n.updateWhileInteracting,
        super(n),
        (this.declutter_ = e.declutter !== void 0 ? e.declutter : !1),
        (this.renderBuffer_ = e.renderBuffer !== void 0 ? e.renderBuffer : 100),
        (this.style_ = null),
        (this.styleFunction_ = void 0),
        this.setStyle(e.style),
        (this.updateWhileAnimating_ =
          e.updateWhileAnimating !== void 0 ? e.updateWhileAnimating : !1),
        (this.updateWhileInteracting_ =
          e.updateWhileInteracting !== void 0 ? e.updateWhileInteracting : !1);
    }
    getDeclutter() {
      return this.declutter_;
    }
    getFeatures(e) {
      return super.getFeatures(e);
    }
    getRenderBuffer() {
      return this.renderBuffer_;
    }
    getRenderOrder() {
      return this.get(Pb.RENDER_ORDER);
    }
    getStyle() {
      return this.style_;
    }
    getStyleFunction() {
      return this.styleFunction_;
    }
    getUpdateWhileAnimating() {
      return this.updateWhileAnimating_;
    }
    getUpdateWhileInteracting() {
      return this.updateWhileInteracting_;
    }
    renderDeclutter(e) {
      e.declutterTree || (e.declutterTree = new Rw(9)),
        this.getRenderer().renderDeclutter(e);
    }
    setRenderOrder(e) {
      this.set(Pb.RENDER_ORDER, e);
    }
    setStyle(e) {
      (this.style_ = pj(e)),
        (this.styleFunction_ = e === null ? void 0 : m9(this.style_)),
        this.changed();
    }
  }
  function pj(t) {
    if (t === void 0) return v9;
    if (!t) return null;
    if (typeof t == "function" || t instanceof Va) return t;
    if (!Array.isArray(t)) return Eb([t]);
    if (t.length === 0) return [];
    const e = t.length,
      n = t[0];
    if (n instanceof Va) {
      const i = new Array(e);
      for (let o = 0; o < e; ++o) {
        const s = t[o];
        if (!(s instanceof Va))
          throw new Error("Expected a list of style instances");
        i[o] = s;
      }
      return i;
    }
    if ("style" in n) {
      const i = new Array(e);
      for (let o = 0; o < e; ++o) {
        const s = t[o];
        if (!("style" in s))
          throw new Error("Expected a list of rules with a style property");
        i[o] = s;
      }
      return nj(i);
    }
    return Eb(t);
  }
  const Xe = {
      BEGIN_GEOMETRY: 0,
      BEGIN_PATH: 1,
      CIRCLE: 2,
      CLOSE_PATH: 3,
      CUSTOM: 4,
      DRAW_CHARS: 5,
      DRAW_IMAGE: 6,
      END_GEOMETRY: 7,
      FILL: 8,
      MOVE_TO_LINE_TO: 9,
      SET_FILL_STYLE: 10,
      SET_STROKE_STYLE: 11,
      STROKE: 12,
    },
    Ac = [Xe.FILL],
    Fi = [Xe.STROKE],
    ko = [Xe.BEGIN_PATH],
    Ab = [Xe.CLOSE_PATH];
  class $w {
    drawCustom(e, n, r, i) {}
    drawGeometry(e) {}
    setStyle(e) {}
    drawCircle(e, n) {}
    drawFeature(e, n) {}
    drawGeometryCollection(e, n) {}
    drawLineString(e, n) {}
    drawMultiLineString(e, n) {}
    drawMultiPoint(e, n) {}
    drawMultiPolygon(e, n) {}
    drawPoint(e, n) {}
    drawPolygon(e, n) {}
    drawText(e, n) {}
    setFillStrokeStyle(e, n) {}
    setImageStyle(e, n) {}
    setTextStyle(e, n) {}
  }
  class Xl extends $w {
    constructor(e, n, r, i) {
      super(),
        (this.tolerance = e),
        (this.maxExtent = n),
        (this.pixelRatio = i),
        (this.maxLineWidth = 0),
        (this.resolution = r),
        (this.beginGeometryInstruction1_ = null),
        (this.beginGeometryInstruction2_ = null),
        (this.bufferedMaxExtent_ = null),
        (this.instructions = []),
        (this.coordinates = []),
        (this.tmpCoordinate_ = []),
        (this.hitDetectionInstructions = []),
        (this.state = {});
    }
    applyPixelRatio(e) {
      const n = this.pixelRatio;
      return n == 1
        ? e
        : e.map(function (r) {
            return r * n;
          });
    }
    appendFlatPointCoordinates(e, n) {
      const r = this.getBufferedMaxExtent(),
        i = this.tmpCoordinate_,
        o = this.coordinates;
      let s = o.length;
      for (let a = 0, l = e.length; a < l; a += n)
        (i[0] = e[a]),
          (i[1] = e[a + 1]),
          fd(r, i) && ((o[s++] = i[0]), (o[s++] = i[1]));
      return s;
    }
    appendFlatLineCoordinates(e, n, r, i, o, s) {
      const a = this.coordinates;
      let l = a.length;
      const c = this.getBufferedMaxExtent();
      s && (n += i);
      let u = e[n],
        d = e[n + 1];
      const h = this.tmpCoordinate_;
      let g = !0,
        f,
        p,
        b;
      for (f = n + i; f < r; f += i)
        (h[0] = e[f]),
          (h[1] = e[f + 1]),
          (b = Sf(c, h)),
          b !== p
            ? (g && ((a[l++] = u), (a[l++] = d), (g = !1)),
              (a[l++] = h[0]),
              (a[l++] = h[1]))
            : b === hn.INTERSECTING
            ? ((a[l++] = h[0]), (a[l++] = h[1]), (g = !1))
            : (g = !0),
          (u = h[0]),
          (d = h[1]),
          (p = b);
      return ((o && g) || f === n + i) && ((a[l++] = u), (a[l++] = d)), l;
    }
    drawCustomCoordinates_(e, n, r, i, o) {
      for (let s = 0, a = r.length; s < a; ++s) {
        const l = r[s],
          c = this.appendFlatLineCoordinates(e, n, l, i, !1, !1);
        o.push(c), (n = l);
      }
      return n;
    }
    drawCustom(e, n, r, i) {
      this.beginGeometry(e, n);
      const o = e.getType(),
        s = e.getStride(),
        a = this.coordinates.length;
      let l, c, u, d, h;
      switch (o) {
        case "MultiPolygon":
          (l = e.getOrientedFlatCoordinates()), (d = []);
          const g = e.getEndss();
          h = 0;
          for (let f = 0, p = g.length; f < p; ++f) {
            const b = [];
            (h = this.drawCustomCoordinates_(l, h, g[f], s, b)), d.push(b);
          }
          this.instructions.push([Xe.CUSTOM, a, d, e, r, nb]),
            this.hitDetectionInstructions.push([
              Xe.CUSTOM,
              a,
              d,
              e,
              i || r,
              nb,
            ]);
          break;
        case "Polygon":
        case "MultiLineString":
          (u = []),
            (l =
              o == "Polygon"
                ? e.getOrientedFlatCoordinates()
                : e.getFlatCoordinates()),
            (h = this.drawCustomCoordinates_(l, 0, e.getEnds(), s, u)),
            this.instructions.push([Xe.CUSTOM, a, u, e, r, mu]),
            this.hitDetectionInstructions.push([
              Xe.CUSTOM,
              a,
              u,
              e,
              i || r,
              mu,
            ]);
          break;
        case "LineString":
        case "Circle":
          (l = e.getFlatCoordinates()),
            (c = this.appendFlatLineCoordinates(l, 0, l.length, s, !1, !1)),
            this.instructions.push([Xe.CUSTOM, a, c, e, r, xs]),
            this.hitDetectionInstructions.push([
              Xe.CUSTOM,
              a,
              c,
              e,
              i || r,
              xs,
            ]);
          break;
        case "MultiPoint":
          (l = e.getFlatCoordinates()),
            (c = this.appendFlatPointCoordinates(l, s)),
            c > a &&
              (this.instructions.push([Xe.CUSTOM, a, c, e, r, xs]),
              this.hitDetectionInstructions.push([
                Xe.CUSTOM,
                a,
                c,
                e,
                i || r,
                xs,
              ]));
          break;
        case "Point":
          (l = e.getFlatCoordinates()),
            this.coordinates.push(l[0], l[1]),
            (c = this.coordinates.length),
            this.instructions.push([Xe.CUSTOM, a, c, e, r]),
            this.hitDetectionInstructions.push([Xe.CUSTOM, a, c, e, i || r]);
          break;
      }
      this.endGeometry(n);
    }
    beginGeometry(e, n) {
      (this.beginGeometryInstruction1_ = [Xe.BEGIN_GEOMETRY, n, 0, e]),
        this.instructions.push(this.beginGeometryInstruction1_),
        (this.beginGeometryInstruction2_ = [Xe.BEGIN_GEOMETRY, n, 0, e]),
        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);
    }
    finish() {
      return {
        instructions: this.instructions,
        hitDetectionInstructions: this.hitDetectionInstructions,
        coordinates: this.coordinates,
      };
    }
    reverseHitDetectionInstructions() {
      const e = this.hitDetectionInstructions;
      e.reverse();
      let n;
      const r = e.length;
      let i,
        o,
        s = -1;
      for (n = 0; n < r; ++n)
        (i = e[n]),
          (o = i[0]),
          o == Xe.END_GEOMETRY
            ? (s = n)
            : o == Xe.BEGIN_GEOMETRY &&
              ((i[2] = n), lH(this.hitDetectionInstructions, s, n), (s = -1));
    }
    setFillStrokeStyle(e, n) {
      const r = this.state;
      if (e) {
        const i = e.getColor();
        r.fillStyle = Mr(i || Fn);
      } else r.fillStyle = void 0;
      if (n) {
        const i = n.getColor();
        r.strokeStyle = Mr(i || bl);
        const o = n.getLineCap();
        r.lineCap = o !== void 0 ? o : Gs;
        const s = n.getLineDash();
        r.lineDash = s ? s.slice() : Qr;
        const a = n.getLineDashOffset();
        r.lineDashOffset = a || ei;
        const l = n.getLineJoin();
        r.lineJoin = l !== void 0 ? l : Xs;
        const c = n.getWidth();
        r.lineWidth = c !== void 0 ? c : xl;
        const u = n.getMiterLimit();
        (r.miterLimit = u !== void 0 ? u : vl),
          r.lineWidth > this.maxLineWidth &&
            ((this.maxLineWidth = r.lineWidth),
            (this.bufferedMaxExtent_ = null));
      } else
        (r.strokeStyle = void 0),
          (r.lineCap = void 0),
          (r.lineDash = null),
          (r.lineDashOffset = void 0),
          (r.lineJoin = void 0),
          (r.lineWidth = void 0),
          (r.miterLimit = void 0);
    }
    createFill(e) {
      const n = e.fillStyle,
        r = [Xe.SET_FILL_STYLE, n];
      return typeof n != "string" && r.push(!0), r;
    }
    applyStroke(e) {
      this.instructions.push(this.createStroke(e));
    }
    createStroke(e) {
      return [
        Xe.SET_STROKE_STYLE,
        e.strokeStyle,
        e.lineWidth * this.pixelRatio,
        e.lineCap,
        e.lineJoin,
        e.miterLimit,
        this.applyPixelRatio(e.lineDash),
        e.lineDashOffset * this.pixelRatio,
      ];
    }
    updateFillStyle(e, n) {
      const r = e.fillStyle;
      (typeof r != "string" || e.currentFillStyle != r) &&
        (r !== void 0 && this.instructions.push(n.call(this, e)),
        (e.currentFillStyle = r));
    }
    updateStrokeStyle(e, n) {
      const r = e.strokeStyle,
        i = e.lineCap,
        o = e.lineDash,
        s = e.lineDashOffset,
        a = e.lineJoin,
        l = e.lineWidth,
        c = e.miterLimit;
      (e.currentStrokeStyle != r ||
        e.currentLineCap != i ||
        (o != e.currentLineDash && !no(e.currentLineDash, o)) ||
        e.currentLineDashOffset != s ||
        e.currentLineJoin != a ||
        e.currentLineWidth != l ||
        e.currentMiterLimit != c) &&
        (r !== void 0 && n.call(this, e),
        (e.currentStrokeStyle = r),
        (e.currentLineCap = i),
        (e.currentLineDash = o),
        (e.currentLineDashOffset = s),
        (e.currentLineJoin = a),
        (e.currentLineWidth = l),
        (e.currentMiterLimit = c));
    }
    endGeometry(e) {
      (this.beginGeometryInstruction1_[2] = this.instructions.length),
        (this.beginGeometryInstruction1_ = null),
        (this.beginGeometryInstruction2_[2] =
          this.hitDetectionInstructions.length),
        (this.beginGeometryInstruction2_ = null);
      const n = [Xe.END_GEOMETRY, e];
      this.instructions.push(n), this.hitDetectionInstructions.push(n);
    }
    getBufferedMaxExtent() {
      if (
        !this.bufferedMaxExtent_ &&
        ((this.bufferedMaxExtent_ = O_(this.maxExtent)), this.maxLineWidth > 0)
      ) {
        const e = (this.resolution * (this.maxLineWidth + 1)) / 2;
        op(this.bufferedMaxExtent_, e, this.bufferedMaxExtent_);
      }
      return this.bufferedMaxExtent_;
    }
  }
  class mj extends Xl {
    constructor(e, n, r, i) {
      super(e, n, r, i),
        (this.hitDetectionImage_ = null),
        (this.image_ = null),
        (this.imagePixelRatio_ = void 0),
        (this.anchorX_ = void 0),
        (this.anchorY_ = void 0),
        (this.height_ = void 0),
        (this.opacity_ = void 0),
        (this.originX_ = void 0),
        (this.originY_ = void 0),
        (this.rotateWithView_ = void 0),
        (this.rotation_ = void 0),
        (this.scale_ = void 0),
        (this.width_ = void 0),
        (this.declutterMode_ = void 0),
        (this.declutterImageWithText_ = void 0);
    }
    drawPoint(e, n) {
      if (!this.image_) return;
      this.beginGeometry(e, n);
      const r = e.getFlatCoordinates(),
        i = e.getStride(),
        o = this.coordinates.length,
        s = this.appendFlatPointCoordinates(r, i);
      this.instructions.push([
        Xe.DRAW_IMAGE,
        o,
        s,
        this.image_,
        this.anchorX_ * this.imagePixelRatio_,
        this.anchorY_ * this.imagePixelRatio_,
        Math.ceil(this.height_ * this.imagePixelRatio_),
        this.opacity_,
        this.originX_ * this.imagePixelRatio_,
        this.originY_ * this.imagePixelRatio_,
        this.rotateWithView_,
        this.rotation_,
        [
          (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,
          (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,
        ],
        Math.ceil(this.width_ * this.imagePixelRatio_),
        this.declutterMode_,
        this.declutterImageWithText_,
      ]),
        this.hitDetectionInstructions.push([
          Xe.DRAW_IMAGE,
          o,
          s,
          this.hitDetectionImage_,
          this.anchorX_,
          this.anchorY_,
          this.height_,
          1,
          this.originX_,
          this.originY_,
          this.rotateWithView_,
          this.rotation_,
          this.scale_,
          this.width_,
          this.declutterMode_,
          this.declutterImageWithText_,
        ]),
        this.endGeometry(n);
    }
    drawMultiPoint(e, n) {
      if (!this.image_) return;
      this.beginGeometry(e, n);
      const r = e.getFlatCoordinates(),
        i = e.getStride(),
        o = this.coordinates.length,
        s = this.appendFlatPointCoordinates(r, i);
      this.instructions.push([
        Xe.DRAW_IMAGE,
        o,
        s,
        this.image_,
        this.anchorX_ * this.imagePixelRatio_,
        this.anchorY_ * this.imagePixelRatio_,
        Math.ceil(this.height_ * this.imagePixelRatio_),
        this.opacity_,
        this.originX_ * this.imagePixelRatio_,
        this.originY_ * this.imagePixelRatio_,
        this.rotateWithView_,
        this.rotation_,
        [
          (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,
          (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,
        ],
        Math.ceil(this.width_ * this.imagePixelRatio_),
        this.declutterMode_,
        this.declutterImageWithText_,
      ]),
        this.hitDetectionInstructions.push([
          Xe.DRAW_IMAGE,
          o,
          s,
          this.hitDetectionImage_,
          this.anchorX_,
          this.anchorY_,
          this.height_,
          1,
          this.originX_,
          this.originY_,
          this.rotateWithView_,
          this.rotation_,
          this.scale_,
          this.width_,
          this.declutterMode_,
          this.declutterImageWithText_,
        ]),
        this.endGeometry(n);
    }
    finish() {
      return (
        this.reverseHitDetectionInstructions(),
        (this.anchorX_ = void 0),
        (this.anchorY_ = void 0),
        (this.hitDetectionImage_ = null),
        (this.image_ = null),
        (this.imagePixelRatio_ = void 0),
        (this.height_ = void 0),
        (this.scale_ = void 0),
        (this.opacity_ = void 0),
        (this.originX_ = void 0),
        (this.originY_ = void 0),
        (this.rotateWithView_ = void 0),
        (this.rotation_ = void 0),
        (this.width_ = void 0),
        super.finish()
      );
    }
    setImageStyle(e, n) {
      const r = e.getAnchor(),
        i = e.getSize(),
        o = e.getOrigin();
      (this.imagePixelRatio_ = e.getPixelRatio(this.pixelRatio)),
        (this.anchorX_ = r[0]),
        (this.anchorY_ = r[1]),
        (this.hitDetectionImage_ = e.getHitDetectionImage()),
        (this.image_ = e.getImage(this.pixelRatio)),
        (this.height_ = i[1]),
        (this.opacity_ = e.getOpacity()),
        (this.originX_ = o[0]),
        (this.originY_ = o[1]),
        (this.rotateWithView_ = e.getRotateWithView()),
        (this.rotation_ = e.getRotation()),
        (this.scale_ = e.getScaleArray()),
        (this.width_ = i[0]),
        (this.declutterMode_ = e.getDeclutterMode()),
        (this.declutterImageWithText_ = n);
    }
  }
  const vj = mj;
  class bj extends Xl {
    constructor(e, n, r, i) {
      super(e, n, r, i);
    }
    drawFlatCoordinates_(e, n, r, i) {
      const o = this.coordinates.length,
        s = this.appendFlatLineCoordinates(e, n, r, i, !1, !1),
        a = [Xe.MOVE_TO_LINE_TO, o, s];
      return (
        this.instructions.push(a), this.hitDetectionInstructions.push(a), r
      );
    }
    drawLineString(e, n) {
      const r = this.state,
        i = r.strokeStyle,
        o = r.lineWidth;
      if (i === void 0 || o === void 0) return;
      this.updateStrokeStyle(r, this.applyStroke),
        this.beginGeometry(e, n),
        this.hitDetectionInstructions.push(
          [
            Xe.SET_STROKE_STYLE,
            r.strokeStyle,
            r.lineWidth,
            r.lineCap,
            r.lineJoin,
            r.miterLimit,
            Qr,
            ei,
          ],
          ko
        );
      const s = e.getFlatCoordinates(),
        a = e.getStride();
      this.drawFlatCoordinates_(s, 0, s.length, a),
        this.hitDetectionInstructions.push(Fi),
        this.endGeometry(n);
    }
    drawMultiLineString(e, n) {
      const r = this.state,
        i = r.strokeStyle,
        o = r.lineWidth;
      if (i === void 0 || o === void 0) return;
      this.updateStrokeStyle(r, this.applyStroke),
        this.beginGeometry(e, n),
        this.hitDetectionInstructions.push(
          [
            Xe.SET_STROKE_STYLE,
            r.strokeStyle,
            r.lineWidth,
            r.lineCap,
            r.lineJoin,
            r.miterLimit,
            Qr,
            ei,
          ],
          ko
        );
      const s = e.getEnds(),
        a = e.getFlatCoordinates(),
        l = e.getStride();
      let c = 0;
      for (let u = 0, d = s.length; u < d; ++u)
        c = this.drawFlatCoordinates_(a, c, s[u], l);
      this.hitDetectionInstructions.push(Fi), this.endGeometry(n);
    }
    finish() {
      const e = this.state;
      return (
        e.lastStroke != null &&
          e.lastStroke != this.coordinates.length &&
          this.instructions.push(Fi),
        this.reverseHitDetectionInstructions(),
        (this.state = null),
        super.finish()
      );
    }
    applyStroke(e) {
      e.lastStroke != null &&
        e.lastStroke != this.coordinates.length &&
        (this.instructions.push(Fi), (e.lastStroke = this.coordinates.length)),
        (e.lastStroke = 0),
        super.applyStroke(e),
        this.instructions.push(ko);
    }
  }
  const yj = bj;
  class xj extends Xl {
    constructor(e, n, r, i) {
      super(e, n, r, i);
    }
    drawFlatCoordinatess_(e, n, r, i) {
      const o = this.state,
        s = o.fillStyle !== void 0,
        a = o.strokeStyle !== void 0,
        l = r.length;
      this.instructions.push(ko), this.hitDetectionInstructions.push(ko);
      for (let c = 0; c < l; ++c) {
        const u = r[c],
          d = this.coordinates.length,
          h = this.appendFlatLineCoordinates(e, n, u, i, !0, !a),
          g = [Xe.MOVE_TO_LINE_TO, d, h];
        this.instructions.push(g),
          this.hitDetectionInstructions.push(g),
          a &&
            (this.instructions.push(Ab),
            this.hitDetectionInstructions.push(Ab)),
          (n = u);
      }
      return (
        s &&
          (this.instructions.push(Ac), this.hitDetectionInstructions.push(Ac)),
        a &&
          (this.instructions.push(Fi), this.hitDetectionInstructions.push(Fi)),
        n
      );
    }
    drawCircle(e, n) {
      const r = this.state,
        i = r.fillStyle,
        o = r.strokeStyle;
      if (i === void 0 && o === void 0) return;
      this.setFillStrokeStyles_(),
        this.beginGeometry(e, n),
        r.fillStyle !== void 0 &&
          this.hitDetectionInstructions.push([Xe.SET_FILL_STYLE, Fn]),
        r.strokeStyle !== void 0 &&
          this.hitDetectionInstructions.push([
            Xe.SET_STROKE_STYLE,
            r.strokeStyle,
            r.lineWidth,
            r.lineCap,
            r.lineJoin,
            r.miterLimit,
            Qr,
            ei,
          ]);
      const s = e.getFlatCoordinates(),
        a = e.getStride(),
        l = this.coordinates.length;
      this.appendFlatLineCoordinates(s, 0, s.length, a, !1, !1);
      const c = [Xe.CIRCLE, l];
      this.instructions.push(ko, c),
        this.hitDetectionInstructions.push(ko, c),
        r.fillStyle !== void 0 &&
          (this.instructions.push(Ac), this.hitDetectionInstructions.push(Ac)),
        r.strokeStyle !== void 0 &&
          (this.instructions.push(Fi), this.hitDetectionInstructions.push(Fi)),
        this.endGeometry(n);
    }
    drawPolygon(e, n) {
      const r = this.state,
        i = r.fillStyle,
        o = r.strokeStyle;
      if (i === void 0 && o === void 0) return;
      this.setFillStrokeStyles_(),
        this.beginGeometry(e, n),
        r.fillStyle !== void 0 &&
          this.hitDetectionInstructions.push([Xe.SET_FILL_STYLE, Fn]),
        r.strokeStyle !== void 0 &&
          this.hitDetectionInstructions.push([
            Xe.SET_STROKE_STYLE,
            r.strokeStyle,
            r.lineWidth,
            r.lineCap,
            r.lineJoin,
            r.miterLimit,
            Qr,
            ei,
          ]);
      const s = e.getEnds(),
        a = e.getOrientedFlatCoordinates(),
        l = e.getStride();
      this.drawFlatCoordinatess_(a, 0, s, l), this.endGeometry(n);
    }
    drawMultiPolygon(e, n) {
      const r = this.state,
        i = r.fillStyle,
        o = r.strokeStyle;
      if (i === void 0 && o === void 0) return;
      this.setFillStrokeStyles_(),
        this.beginGeometry(e, n),
        r.fillStyle !== void 0 &&
          this.hitDetectionInstructions.push([Xe.SET_FILL_STYLE, Fn]),
        r.strokeStyle !== void 0 &&
          this.hitDetectionInstructions.push([
            Xe.SET_STROKE_STYLE,
            r.strokeStyle,
            r.lineWidth,
            r.lineCap,
            r.lineJoin,
            r.miterLimit,
            Qr,
            ei,
          ]);
      const s = e.getEndss(),
        a = e.getOrientedFlatCoordinates(),
        l = e.getStride();
      let c = 0;
      for (let u = 0, d = s.length; u < d; ++u)
        c = this.drawFlatCoordinatess_(a, c, s[u], l);
      this.endGeometry(n);
    }
    finish() {
      this.reverseHitDetectionInstructions(), (this.state = null);
      const e = this.tolerance;
      if (e !== 0) {
        const n = this.coordinates;
        for (let r = 0, i = n.length; r < i; ++r) n[r] = bo(n[r], e);
      }
      return super.finish();
    }
    setFillStrokeStyles_() {
      const e = this.state;
      e.fillStyle !== void 0 && this.updateFillStyle(e, this.createFill),
        e.strokeStyle !== void 0 && this.updateStrokeStyle(e, this.applyStroke);
    }
  }
  const kb = xj;
  function Cj(t, e, n, r, i) {
    const o = [];
    let s = n,
      a = 0,
      l = e.slice(n, 2);
    for (; a < t && s + i < r; ) {
      const [c, u] = l.slice(-2),
        d = e[s + i],
        h = e[s + i + 1],
        g = Math.sqrt((d - c) * (d - c) + (h - u) * (h - u));
      if (((a += g), a >= t)) {
        const f = (t - a + g) / g,
          p = er(c, d, f),
          b = er(u, h, f);
        l.push(p, b), o.push(l), (l = [p, b]), a == t && (s += i), (a = 0);
      } else if (a < t) l.push(e[s + i], e[s + i + 1]), (s += i);
      else {
        const f = g - a,
          p = er(c, d, f / g),
          b = er(u, h, f / g);
        l.push(p, b), o.push(l), (l = [p, b]), (a = 0), (s += i);
      }
    }
    return a > 0 && o.push(l), o;
  }
  function _j(t, e, n, r, i) {
    let o = n,
      s = n,
      a = 0,
      l = 0,
      c = n,
      u,
      d,
      h,
      g,
      f,
      p,
      b,
      m,
      _,
      R;
    for (d = n; d < r; d += i) {
      const S = e[d],
        x = e[d + 1];
      f !== void 0 &&
        ((_ = S - f),
        (R = x - p),
        (g = Math.sqrt(_ * _ + R * R)),
        b !== void 0 &&
          ((l += h),
          (u = Math.acos((b * _ + m * R) / (h * g))),
          u > t &&
            (l > a && ((a = l), (o = c), (s = d)), (l = 0), (c = d - i))),
        (h = g),
        (b = _),
        (m = R)),
        (f = S),
        (p = x);
    }
    return (l += g), l > a ? [c, d] : [o, s];
  }
  const Cu = {
    left: 0,
    center: 0.5,
    right: 1,
    top: 0,
    middle: 0.5,
    hanging: 0.2,
    alphabetic: 0.8,
    ideographic: 0.8,
    bottom: 1,
  };
  class wj extends Xl {
    constructor(e, n, r, i) {
      super(e, n, r, i),
        (this.labels_ = null),
        (this.text_ = ""),
        (this.textOffsetX_ = 0),
        (this.textOffsetY_ = 0),
        (this.textRotateWithView_ = void 0),
        (this.textRotation_ = 0),
        (this.textFillState_ = null),
        (this.fillStates = {}),
        (this.fillStates[Fn] = { fillStyle: Fn }),
        (this.textStrokeState_ = null),
        (this.strokeStates = {}),
        (this.textState_ = {}),
        (this.textStates = {}),
        (this.textKey_ = ""),
        (this.fillKey_ = ""),
        (this.strokeKey_ = ""),
        (this.declutterImageWithText_ = void 0);
    }
    finish() {
      const e = super.finish();
      return (
        (e.textStates = this.textStates),
        (e.fillStates = this.fillStates),
        (e.strokeStates = this.strokeStates),
        e
      );
    }
    drawText(e, n) {
      const r = this.textFillState_,
        i = this.textStrokeState_,
        o = this.textState_;
      if (this.text_ === "" || !o || (!r && !i)) return;
      const s = this.coordinates;
      let a = s.length;
      const l = e.getType();
      let c = null,
        u = e.getStride();
      if (
        o.placement === "line" &&
        (l == "LineString" ||
          l == "MultiLineString" ||
          l == "Polygon" ||
          l == "MultiPolygon")
      ) {
        if (!Bn(this.getBufferedMaxExtent(), e.getExtent())) return;
        let d;
        if (((c = e.getFlatCoordinates()), l == "LineString")) d = [c.length];
        else if (l == "MultiLineString") d = e.getEnds();
        else if (l == "Polygon") d = e.getEnds().slice(0, 1);
        else if (l == "MultiPolygon") {
          const p = e.getEndss();
          d = [];
          for (let b = 0, m = p.length; b < m; ++b) d.push(p[b][0]);
        }
        this.beginGeometry(e, n);
        const h = o.repeat,
          g = h ? void 0 : o.textAlign;
        let f = 0;
        for (let p = 0, b = d.length; p < b; ++p) {
          let m;
          h
            ? (m = Cj(h * this.resolution, c, f, d[p], u))
            : (m = [c.slice(f, d[p])]);
          for (let _ = 0, R = m.length; _ < R; ++_) {
            const S = m[_];
            let x = 0,
              E = S.length;
            if (g == null) {
              const v = _j(o.maxAngle, S, 0, S.length, 2);
              (x = v[0]), (E = v[1]);
            }
            for (let v = x; v < E; v += u) s.push(S[v], S[v + 1]);
            const w = s.length;
            (f = d[p]), this.drawChars_(a, w), (a = w);
          }
        }
        this.endGeometry(n);
      } else {
        let d = o.overflow ? null : [];
        switch (l) {
          case "Point":
          case "MultiPoint":
            c = e.getFlatCoordinates();
            break;
          case "LineString":
            c = e.getFlatMidpoint();
            break;
          case "Circle":
            c = e.getCenter();
            break;
          case "MultiLineString":
            (c = e.getFlatMidpoints()), (u = 2);
            break;
          case "Polygon":
            (c = e.getFlatInteriorPoint()),
              o.overflow || d.push(c[2] / this.resolution),
              (u = 3);
            break;
          case "MultiPolygon":
            const m = e.getFlatInteriorPoints();
            c = [];
            for (let _ = 0, R = m.length; _ < R; _ += 3)
              o.overflow || d.push(m[_ + 2] / this.resolution),
                c.push(m[_], m[_ + 1]);
            if (c.length === 0) return;
            u = 2;
            break;
        }
        const h = this.appendFlatPointCoordinates(c, u);
        if (h === a) return;
        if (d && (h - a) / 2 !== c.length / u) {
          let m = a / 2;
          d = d.filter((_, R) => {
            const S =
              s[(m + R) * 2] === c[R * u] &&
              s[(m + R) * 2 + 1] === c[R * u + 1];
            return S || --m, S;
          });
        }
        this.saveTextStates_(),
          (o.backgroundFill || o.backgroundStroke) &&
            (this.setFillStrokeStyle(o.backgroundFill, o.backgroundStroke),
            o.backgroundFill &&
              this.updateFillStyle(this.state, this.createFill),
            o.backgroundStroke &&
              (this.updateStrokeStyle(this.state, this.applyStroke),
              this.hitDetectionInstructions.push(
                this.createStroke(this.state)
              ))),
          this.beginGeometry(e, n);
        let g = o.padding;
        if (g != Ao && (o.scale[0] < 0 || o.scale[1] < 0)) {
          let m = o.padding[0],
            _ = o.padding[1],
            R = o.padding[2],
            S = o.padding[3];
          o.scale[0] < 0 && ((_ = -_), (S = -S)),
            o.scale[1] < 0 && ((m = -m), (R = -R)),
            (g = [m, _, R, S]);
        }
        const f = this.pixelRatio;
        this.instructions.push([
          Xe.DRAW_IMAGE,
          a,
          h,
          null,
          NaN,
          NaN,
          NaN,
          1,
          0,
          0,
          this.textRotateWithView_,
          this.textRotation_,
          [1, 1],
          NaN,
          void 0,
          this.declutterImageWithText_,
          g == Ao
            ? Ao
            : g.map(function (m) {
                return m * f;
              }),
          !!o.backgroundFill,
          !!o.backgroundStroke,
          this.text_,
          this.textKey_,
          this.strokeKey_,
          this.fillKey_,
          this.textOffsetX_,
          this.textOffsetY_,
          d,
        ]);
        const p = 1 / f,
          b = this.state.fillStyle;
        o.backgroundFill &&
          ((this.state.fillStyle = Fn),
          this.hitDetectionInstructions.push(this.createFill(this.state))),
          this.hitDetectionInstructions.push([
            Xe.DRAW_IMAGE,
            a,
            h,
            null,
            NaN,
            NaN,
            NaN,
            1,
            0,
            0,
            this.textRotateWithView_,
            this.textRotation_,
            [p, p],
            NaN,
            void 0,
            this.declutterImageWithText_,
            g,
            !!o.backgroundFill,
            !!o.backgroundStroke,
            this.text_,
            this.textKey_,
            this.strokeKey_,
            this.fillKey_ ? Fn : this.fillKey_,
            this.textOffsetX_,
            this.textOffsetY_,
            d,
          ]),
          o.backgroundFill &&
            ((this.state.fillStyle = b),
            this.hitDetectionInstructions.push(this.createFill(this.state))),
          this.endGeometry(n);
      }
    }
    saveTextStates_() {
      const e = this.textStrokeState_,
        n = this.textState_,
        r = this.textFillState_,
        i = this.strokeKey_;
      e &&
        (i in this.strokeStates ||
          (this.strokeStates[i] = {
            strokeStyle: e.strokeStyle,
            lineCap: e.lineCap,
            lineDashOffset: e.lineDashOffset,
            lineWidth: e.lineWidth,
            lineJoin: e.lineJoin,
            miterLimit: e.miterLimit,
            lineDash: e.lineDash,
          }));
      const o = this.textKey_;
      o in this.textStates ||
        (this.textStates[o] = {
          font: n.font,
          textAlign: n.textAlign || yl,
          justify: n.justify,
          textBaseline: n.textBaseline || vu,
          scale: n.scale,
        });
      const s = this.fillKey_;
      r &&
        (s in this.fillStates ||
          (this.fillStates[s] = { fillStyle: r.fillStyle }));
    }
    drawChars_(e, n) {
      const r = this.textStrokeState_,
        i = this.textState_,
        o = this.strokeKey_,
        s = this.textKey_,
        a = this.fillKey_;
      this.saveTextStates_();
      const l = this.pixelRatio,
        c = Cu[i.textBaseline],
        u = this.textOffsetY_ * l,
        d = this.text_,
        h = r ? (r.lineWidth * Math.abs(i.scale[0])) / 2 : 0;
      this.instructions.push([
        Xe.DRAW_CHARS,
        e,
        n,
        c,
        i.overflow,
        a,
        i.maxAngle,
        l,
        u,
        o,
        h * l,
        d,
        s,
        1,
      ]),
        this.hitDetectionInstructions.push([
          Xe.DRAW_CHARS,
          e,
          n,
          c,
          i.overflow,
          a && Fn,
          i.maxAngle,
          l,
          u,
          o,
          h * l,
          d,
          s,
          1 / l,
        ]);
    }
    setTextStyle(e, n) {
      let r, i, o;
      if (!e) this.text_ = "";
      else {
        const s = e.getFill();
        s
          ? ((i = this.textFillState_),
            i || ((i = {}), (this.textFillState_ = i)),
            (i.fillStyle = Mr(s.getColor() || Fn)))
          : ((i = null), (this.textFillState_ = i));
        const a = e.getStroke();
        if (!a) (o = null), (this.textStrokeState_ = o);
        else {
          (o = this.textStrokeState_),
            o || ((o = {}), (this.textStrokeState_ = o));
          const f = a.getLineDash(),
            p = a.getLineDashOffset(),
            b = a.getWidth(),
            m = a.getMiterLimit();
          (o.lineCap = a.getLineCap() || Gs),
            (o.lineDash = f ? f.slice() : Qr),
            (o.lineDashOffset = p === void 0 ? ei : p),
            (o.lineJoin = a.getLineJoin() || Xs),
            (o.lineWidth = b === void 0 ? xl : b),
            (o.miterLimit = m === void 0 ? vl : m),
            (o.strokeStyle = Mr(a.getColor() || bl));
        }
        r = this.textState_;
        const l = e.getFont() || lw;
        DW(l);
        const c = e.getScaleArray();
        (r.overflow = e.getOverflow()),
          (r.font = l),
          (r.maxAngle = e.getMaxAngle()),
          (r.placement = e.getPlacement()),
          (r.textAlign = e.getTextAlign()),
          (r.repeat = e.getRepeat()),
          (r.justify = e.getJustify()),
          (r.textBaseline = e.getTextBaseline() || vu),
          (r.backgroundFill = e.getBackgroundFill()),
          (r.backgroundStroke = e.getBackgroundStroke()),
          (r.padding = e.getPadding() || Ao),
          (r.scale = c === void 0 ? [1, 1] : c);
        const u = e.getOffsetX(),
          d = e.getOffsetY(),
          h = e.getRotateWithView(),
          g = e.getRotation();
        (this.text_ = e.getText() || ""),
          (this.textOffsetX_ = u === void 0 ? 0 : u),
          (this.textOffsetY_ = d === void 0 ? 0 : d),
          (this.textRotateWithView_ = h === void 0 ? !1 : h),
          (this.textRotation_ = g === void 0 ? 0 : g),
          (this.strokeKey_ = o
            ? (typeof o.strokeStyle == "string"
                ? o.strokeStyle
                : xt(o.strokeStyle)) +
              o.lineCap +
              o.lineDashOffset +
              "|" +
              o.lineWidth +
              o.lineJoin +
              o.miterLimit +
              "[" +
              o.lineDash.join() +
              "]"
            : ""),
          (this.textKey_ =
            r.font +
            r.scale +
            (r.textAlign || "?") +
            (r.repeat || "?") +
            (r.justify || "?") +
            (r.textBaseline || "?")),
          (this.fillKey_ = i
            ? typeof i.fillStyle == "string"
              ? i.fillStyle
              : "|" + xt(i.fillStyle)
            : "");
      }
      this.declutterImageWithText_ = n;
    }
  }
  const Sj = {
    Circle: kb,
    Default: Xl,
    Image: vj,
    LineString: yj,
    Polygon: kb,
    Text: wj,
  };
  class Ib {
    constructor(e, n, r, i) {
      (this.tolerance_ = e),
        (this.maxExtent_ = n),
        (this.pixelRatio_ = i),
        (this.resolution_ = r),
        (this.buildersByZIndex_ = {});
    }
    finish() {
      const e = {};
      for (const n in this.buildersByZIndex_) {
        e[n] = e[n] || {};
        const r = this.buildersByZIndex_[n];
        for (const i in r) {
          const o = r[i].finish();
          e[n][i] = o;
        }
      }
      return e;
    }
    getBuilder(e, n) {
      const r = e !== void 0 ? e.toString() : "0";
      let i = this.buildersByZIndex_[r];
      i === void 0 && ((i = {}), (this.buildersByZIndex_[r] = i));
      let o = i[n];
      if (o === void 0) {
        const s = Sj[n];
        (o = new s(
          this.tolerance_,
          this.maxExtent_,
          this.resolution_,
          this.pixelRatio_
        )),
          (i[n] = o);
      }
      return o;
    }
  }
  function Ej(t, e, n, r, i, o, s, a, l, c, u, d) {
    let h = t[e],
      g = t[e + 1],
      f = 0,
      p = 0,
      b = 0,
      m = 0;
    function _() {
      (f = h),
        (p = g),
        (e += r),
        (h = t[e]),
        (g = t[e + 1]),
        (m += b),
        (b = Math.sqrt((h - f) * (h - f) + (g - p) * (g - p)));
    }
    do _();
    while (e < n - r && m + b < o);
    let R = b === 0 ? 0 : (o - m) / b;
    const S = er(f, h, R),
      x = er(p, g, R),
      E = e - r,
      w = m,
      v = o + a * l(c, i, u);
    for (; e < n - r && m + b < v; ) _();
    R = b === 0 ? 0 : (v - m) / b;
    const y = er(f, h, R),
      T = er(p, g, R);
    let A;
    if (d) {
      const O = [S, x, y, T];
      Z_(O, 0, 4, 2, d, O, O), (A = O[0] > O[2]);
    } else A = S > y;
    const I = Math.PI,
      L = [],
      j = E + r === e;
    (e = E), (b = 0), (m = w), (h = t[e]), (g = t[e + 1]);
    let k;
    if (j) {
      _(), (k = Math.atan2(g - p, h - f)), A && (k += k > 0 ? -I : I);
      const O = (y + S) / 2,
        D = (T + x) / 2;
      return (L[0] = [O, D, (v - o) / 2, k, i]), L;
    }
    i = i.replace(/\n/g, " ");
    for (let O = 0, D = i.length; O < D; ) {
      _();
      let Y = Math.atan2(g - p, h - f);
      if ((A && (Y += Y > 0 ? -I : I), k !== void 0)) {
        let ue = Y - k;
        if (((ue += ue > I ? -2 * I : ue < -I ? 2 * I : 0), Math.abs(ue) > s))
          return null;
      }
      k = Y;
      const se = O;
      let de = 0;
      for (; O < D; ++O) {
        const ue = A ? D - O - 1 : O,
          K = a * l(c, i[ue], u);
        if (e + r < n && m + b < o + de + K / 2) break;
        de += K;
      }
      if (O === se) continue;
      const fe = A ? i.substring(D - se, D - O) : i.substring(se, O);
      R = b === 0 ? 0 : (o + de / 2 - m) / b;
      const z = er(f, h, R),
        ee = er(p, g, R);
      L.push([z, ee, de / 2, Y, fe]), (o += de);
    }
    return L;
  }
  const us = ur(),
    Si = [],
    jr = [],
    Ur = [],
    Ei = [];
  function Ob(t) {
    return t[3].declutterBox;
  }
  const Mb = new RegExp("[֑-ࣿיִ-﷿ﹰ-ﻼࠀ-࿿-]");
  function Oh(t, e) {
    return (
      e === "start"
        ? (e = Mb.test(t) ? "right" : "left")
        : e === "end" && (e = Mb.test(t) ? "left" : "right"),
      Cu[e]
    );
  }
  function Rj(t, e, n) {
    return (
      n > 0 &&
        t.push(
          `
`,
          ""
        ),
      t.push(e, ""),
      t
    );
  }
  class Tj {
    constructor(e, n, r, i) {
      (this.overlaps = r),
        (this.pixelRatio = n),
        (this.resolution = e),
        this.alignFill_,
        (this.instructions = i.instructions),
        (this.coordinates = i.coordinates),
        (this.coordinateCache_ = {}),
        (this.renderedTransform_ = vr()),
        (this.hitDetectionInstructions = i.hitDetectionInstructions),
        (this.pixelCoordinates_ = null),
        (this.viewRotation_ = 0),
        (this.fillStates = i.fillStates || {}),
        (this.strokeStates = i.strokeStates || {}),
        (this.textStates = i.textStates || {}),
        (this.widths_ = {}),
        (this.labels_ = {});
    }
    createLabel(e, n, r, i) {
      const o = e + n + r + i;
      if (this.labels_[o]) return this.labels_[o];
      const s = i ? this.strokeStates[i] : null,
        a = r ? this.fillStates[r] : null,
        l = this.textStates[n],
        c = this.pixelRatio,
        u = [l.scale[0] * c, l.scale[1] * c],
        d = Array.isArray(e),
        h = l.justify
          ? Cu[l.justify]
          : Oh(Array.isArray(e) ? e[0] : e, l.textAlign || yl),
        g = i && s.lineWidth ? s.lineWidth : 0,
        f = d
          ? e
          : e
              .split(
                `
`
              )
              .reduce(Rj, []),
        {
          width: p,
          height: b,
          widths: m,
          heights: _,
          lineWidths: R,
        } = FW(l, f),
        S = p + g,
        x = [],
        E = (S + 2) * u[0],
        w = (b + g) * u[1],
        v = {
          width: E < 0 ? Math.floor(E) : Math.ceil(E),
          height: w < 0 ? Math.floor(w) : Math.ceil(w),
          contextInstructions: x,
        };
      (u[0] != 1 || u[1] != 1) && x.push("scale", u),
        i &&
          (x.push("strokeStyle", s.strokeStyle),
          x.push("lineWidth", g),
          x.push("lineCap", s.lineCap),
          x.push("lineJoin", s.lineJoin),
          x.push("miterLimit", s.miterLimit),
          x.push("setLineDash", [s.lineDash]),
          x.push("lineDashOffset", s.lineDashOffset)),
        r && x.push("fillStyle", a.fillStyle),
        x.push("textBaseline", "middle"),
        x.push("textAlign", "center");
      const y = 0.5 - h;
      let T = h * S + y * g;
      const A = [],
        I = [];
      let L = 0,
        j = 0,
        k = 0,
        O = 0,
        D;
      for (let Y = 0, se = f.length; Y < se; Y += 2) {
        const de = f[Y];
        if (
          de ===
          `
`
        ) {
          (j += L), (L = 0), (T = h * S + y * g), ++O;
          continue;
        }
        const fe = f[Y + 1] || l.font;
        fe !== D &&
          (i && A.push("font", fe), r && I.push("font", fe), (D = fe)),
          (L = Math.max(L, _[k]));
        const z = [de, T + y * m[k] + h * (m[k] - R[O]), 0.5 * (g + L) + j];
        (T += m[k]),
          i && A.push("strokeText", z),
          r && I.push("fillText", z),
          ++k;
      }
      return (
        Array.prototype.push.apply(x, A),
        Array.prototype.push.apply(x, I),
        (this.labels_[o] = v),
        v
      );
    }
    replayTextBackground_(e, n, r, i, o, s, a) {
      e.beginPath(),
        e.moveTo.apply(e, n),
        e.lineTo.apply(e, r),
        e.lineTo.apply(e, i),
        e.lineTo.apply(e, o),
        e.lineTo.apply(e, n),
        s && ((this.alignFill_ = s[2]), this.fill_(e)),
        a && (this.setStrokeStyle_(e, a), e.stroke());
    }
    calculateImageOrLabelDimensions_(
      e,
      n,
      r,
      i,
      o,
      s,
      a,
      l,
      c,
      u,
      d,
      h,
      g,
      f,
      p,
      b
    ) {
      (a *= h[0]), (l *= h[1]);
      let m = r - a,
        _ = i - l;
      const R = o + c > e ? e - c : o,
        S = s + u > n ? n - u : s,
        x = f[3] + R * h[0] + f[1],
        E = f[0] + S * h[1] + f[2],
        w = m - f[3],
        v = _ - f[0];
      (p || d !== 0) &&
        ((Si[0] = w),
        (Ei[0] = w),
        (Si[1] = v),
        (jr[1] = v),
        (jr[0] = w + x),
        (Ur[0] = jr[0]),
        (Ur[1] = v + E),
        (Ei[1] = Ur[1]));
      let y;
      return (
        d !== 0
          ? ((y = oi(vr(), r, i, 1, 1, d, -r, -i)),
            fn(y, Si),
            fn(y, jr),
            fn(y, Ur),
            fn(y, Ei),
            Yi(
              Math.min(Si[0], jr[0], Ur[0], Ei[0]),
              Math.min(Si[1], jr[1], Ur[1], Ei[1]),
              Math.max(Si[0], jr[0], Ur[0], Ei[0]),
              Math.max(Si[1], jr[1], Ur[1], Ei[1]),
              us
            ))
          : Yi(
              Math.min(w, w + x),
              Math.min(v, v + E),
              Math.max(w, w + x),
              Math.max(v, v + E),
              us
            ),
        g && ((m = Math.round(m)), (_ = Math.round(_))),
        {
          drawImageX: m,
          drawImageY: _,
          drawImageW: R,
          drawImageH: S,
          originX: c,
          originY: u,
          declutterBox: {
            minX: us[0],
            minY: us[1],
            maxX: us[2],
            maxY: us[3],
            value: b,
          },
          canvasTransform: y,
          scale: h,
        }
      );
    }
    replayImageOrLabel_(e, n, r, i, o, s, a) {
      const l = !!(s || a),
        c = i.declutterBox,
        u = e.canvas,
        d = a ? (a[2] * i.scale[0]) / 2 : 0;
      return (
        c.minX - d <= u.width / n &&
          c.maxX + d >= 0 &&
          c.minY - d <= u.height / n &&
          c.maxY + d >= 0 &&
          (l && this.replayTextBackground_(e, Si, jr, Ur, Ei, s, a),
          BW(
            e,
            i.canvasTransform,
            o,
            r,
            i.originX,
            i.originY,
            i.drawImageW,
            i.drawImageH,
            i.drawImageX,
            i.drawImageY,
            i.scale
          )),
        !0
      );
    }
    fill_(e) {
      if (this.alignFill_) {
        const n = fn(this.renderedTransform_, [0, 0]),
          r = 512 * this.pixelRatio;
        e.save(), e.translate(n[0] % r, n[1] % r), e.rotate(this.viewRotation_);
      }
      e.fill(), this.alignFill_ && e.restore();
    }
    setStrokeStyle_(e, n) {
      (e.strokeStyle = n[1]),
        (e.lineWidth = n[2]),
        (e.lineCap = n[3]),
        (e.lineJoin = n[4]),
        (e.miterLimit = n[5]),
        (e.lineDashOffset = n[7]),
        e.setLineDash(n[6]);
    }
    drawLabelWithPointPlacement_(e, n, r, i) {
      const o = this.textStates[n],
        s = this.createLabel(e, n, i, r),
        a = this.strokeStates[r],
        l = this.pixelRatio,
        c = Oh(Array.isArray(e) ? e[0] : e, o.textAlign || yl),
        u = Cu[o.textBaseline || vu],
        d = a && a.lineWidth ? a.lineWidth : 0,
        h = s.width / l - 2 * o.scale[0],
        g = c * h + 2 * (0.5 - c) * d,
        f = (u * s.height) / l + 2 * (0.5 - u) * d;
      return { label: s, anchorX: g, anchorY: f };
    }
    execute_(e, n, r, i, o, s, a, l) {
      let c;
      this.pixelCoordinates_ && no(r, this.renderedTransform_)
        ? (c = this.pixelCoordinates_)
        : (this.pixelCoordinates_ || (this.pixelCoordinates_ = []),
          (c = Wi(
            this.coordinates,
            0,
            this.coordinates.length,
            2,
            r,
            this.pixelCoordinates_
          )),
          mH(this.renderedTransform_, r));
      let u = 0;
      const d = i.length;
      let h = 0,
        g,
        f,
        p,
        b,
        m,
        _,
        R,
        S,
        x,
        E,
        w,
        v,
        y = 0,
        T = 0,
        A = null,
        I = null;
      const L = this.coordinateCache_,
        j = this.viewRotation_,
        k = Math.round(Math.atan2(-r[1], r[0]) * 1e12) / 1e12,
        O = {
          context: e,
          pixelRatio: this.pixelRatio,
          resolution: this.resolution,
          rotation: j,
        },
        D = this.instructions != i || this.overlaps ? 0 : 200;
      let Y, se, de, fe;
      for (; u < d; ) {
        const z = i[u];
        switch (z[0]) {
          case Xe.BEGIN_GEOMETRY:
            (Y = z[1]),
              (fe = z[3]),
              Y.getGeometry()
                ? a !== void 0 && !Bn(a, fe.getExtent())
                  ? (u = z[2] + 1)
                  : ++u
                : (u = z[2]);
            break;
          case Xe.BEGIN_PATH:
            y > D && (this.fill_(e), (y = 0)),
              T > D && (e.stroke(), (T = 0)),
              !y && !T && (e.beginPath(), (b = NaN), (m = NaN)),
              ++u;
            break;
          case Xe.CIRCLE:
            h = z[1];
            const ue = c[h],
              K = c[h + 1],
              _e = c[h + 2],
              ie = c[h + 3],
              pe = _e - ue,
              re = ie - K,
              ge = Math.sqrt(pe * pe + re * re);
            e.moveTo(ue + ge, K), e.arc(ue, K, ge, 0, 2 * Math.PI, !0), ++u;
            break;
          case Xe.CLOSE_PATH:
            e.closePath(), ++u;
            break;
          case Xe.CUSTOM:
            (h = z[1]), (g = z[2]);
            const ke = z[3],
              Me = z[4],
              P = z.length == 6 ? z[5] : void 0;
            (O.geometry = ke), (O.feature = Y), u in L || (L[u] = []);
            const $ = L[u];
            P
              ? P(c, h, g, 2, $)
              : (($[0] = c[h]), ($[1] = c[h + 1]), ($.length = 2)),
              Me($, O),
              ++u;
            break;
          case Xe.DRAW_IMAGE:
            (h = z[1]), (g = z[2]), (S = z[3]), (f = z[4]), (p = z[5]);
            let H = z[6];
            const ae = z[7],
              le = z[8],
              he = z[9],
              Z = z[10];
            let W = z[11];
            const Q = z[12];
            let J = z[13];
            const G = z[14],
              X = z[15];
            if (!S && z.length >= 20) {
              (x = z[19]), (E = z[20]), (w = z[21]), (v = z[22]);
              const Ft = this.drawLabelWithPointPlacement_(x, E, w, v);
              (S = Ft.label), (z[3] = S);
              const Vn = z[23];
              (f = (Ft.anchorX - Vn) * this.pixelRatio), (z[4] = f);
              const dn = z[24];
              (p = (Ft.anchorY - dn) * this.pixelRatio),
                (z[5] = p),
                (H = S.height),
                (z[6] = H),
                (J = S.width),
                (z[13] = J);
            }
            let V;
            z.length > 25 && (V = z[25]);
            let me, we, Pe;
            z.length > 17
              ? ((me = z[16]), (we = z[17]), (Pe = z[18]))
              : ((me = Ao), (we = !1), (Pe = !1)),
              Z && k ? (W += j) : !Z && !k && (W -= j);
            let ze = 0;
            for (; h < g; h += 2) {
              if (V && V[ze++] < J / this.pixelRatio) continue;
              const Ft = this.calculateImageOrLabelDimensions_(
                  S.width,
                  S.height,
                  c[h],
                  c[h + 1],
                  J,
                  H,
                  f,
                  p,
                  le,
                  he,
                  W,
                  Q,
                  o,
                  me,
                  we || Pe,
                  Y
                ),
                Vn = [e, n, S, Ft, ae, we ? A : null, Pe ? I : null];
              if (l) {
                if (G === "none") continue;
                if (G === "obstacle") {
                  l.insert(Ft.declutterBox);
                  continue;
                } else {
                  let dn, bn;
                  if (X) {
                    const tn = g - h;
                    if (!X[tn]) {
                      X[tn] = Vn;
                      continue;
                    }
                    if (
                      ((dn = X[tn]),
                      delete X[tn],
                      (bn = Ob(dn)),
                      l.collides(bn))
                    )
                      continue;
                  }
                  if (l.collides(Ft.declutterBox)) continue;
                  dn &&
                    (l.insert(bn), this.replayImageOrLabel_.apply(this, dn)),
                    l.insert(Ft.declutterBox);
                }
              }
              this.replayImageOrLabel_.apply(this, Vn);
            }
            ++u;
            break;
          case Xe.DRAW_CHARS:
            const Ne = z[1],
              Fe = z[2],
              Qe = z[3],
              It = z[4];
            v = z[5];
            const rt = z[6],
              ln = z[7],
              ve = z[8];
            w = z[9];
            const Le = z[10];
            (x = z[11]), (E = z[12]);
            const Re = [z[13], z[13]],
              st = this.textStates[E],
              bt = st.font,
              Rt = [st.scale[0] * ln, st.scale[1] * ln];
            let Kt;
            bt in this.widths_
              ? (Kt = this.widths_[bt])
              : ((Kt = {}), (this.widths_[bt] = Kt));
            const _t = R9(c, Ne, Fe, 2),
              en = Math.abs(Rt[0]) * lb(bt, x, Kt);
            if (It || en <= _t) {
              const Ft = this.textStates[E].textAlign,
                Vn = (_t - en) * Oh(x, Ft),
                dn = Ej(
                  c,
                  Ne,
                  Fe,
                  2,
                  x,
                  Vn,
                  rt,
                  Math.abs(Rt[0]),
                  lb,
                  bt,
                  Kt,
                  k ? 0 : this.viewRotation_
                );
              e: if (dn) {
                const bn = [];
                let tn, gi, pi, pn, cn;
                if (w)
                  for (tn = 0, gi = dn.length; tn < gi; ++tn) {
                    (cn = dn[tn]),
                      (pi = cn[4]),
                      (pn = this.createLabel(pi, E, "", w)),
                      (f = cn[2] + (Rt[0] < 0 ? -Le : Le)),
                      (p =
                        Qe * pn.height +
                        ((0.5 - Qe) * 2 * Le * Rt[1]) / Rt[0] -
                        ve);
                    const oe = this.calculateImageOrLabelDimensions_(
                      pn.width,
                      pn.height,
                      cn[0],
                      cn[1],
                      pn.width,
                      pn.height,
                      f,
                      p,
                      0,
                      0,
                      cn[3],
                      Re,
                      !1,
                      Ao,
                      !1,
                      Y
                    );
                    if (l && l.collides(oe.declutterBox)) break e;
                    bn.push([e, n, pn, oe, 1, null, null]);
                  }
                if (v)
                  for (tn = 0, gi = dn.length; tn < gi; ++tn) {
                    (cn = dn[tn]),
                      (pi = cn[4]),
                      (pn = this.createLabel(pi, E, v, "")),
                      (f = cn[2]),
                      (p = Qe * pn.height - ve);
                    const oe = this.calculateImageOrLabelDimensions_(
                      pn.width,
                      pn.height,
                      cn[0],
                      cn[1],
                      pn.width,
                      pn.height,
                      f,
                      p,
                      0,
                      0,
                      cn[3],
                      Re,
                      !1,
                      Ao,
                      !1,
                      Y
                    );
                    if (l && l.collides(oe.declutterBox)) break e;
                    bn.push([e, n, pn, oe, 1, null, null]);
                  }
                l && l.load(bn.map(Ob));
                for (let oe = 0, Ce = bn.length; oe < Ce; ++oe)
                  this.replayImageOrLabel_.apply(this, bn[oe]);
              }
            }
            ++u;
            break;
          case Xe.END_GEOMETRY:
            if (s !== void 0) {
              Y = z[1];
              const Ft = s(Y, fe);
              if (Ft) return Ft;
            }
            ++u;
            break;
          case Xe.FILL:
            D ? y++ : this.fill_(e), ++u;
            break;
          case Xe.MOVE_TO_LINE_TO:
            for (
              h = z[1],
                g = z[2],
                se = c[h],
                de = c[h + 1],
                _ = (se + 0.5) | 0,
                R = (de + 0.5) | 0,
                (_ !== b || R !== m) && (e.moveTo(se, de), (b = _), (m = R)),
                h += 2;
              h < g;
              h += 2
            )
              (se = c[h]),
                (de = c[h + 1]),
                (_ = (se + 0.5) | 0),
                (R = (de + 0.5) | 0),
                (h == g - 2 || _ !== b || R !== m) &&
                  (e.lineTo(se, de), (b = _), (m = R));
            ++u;
            break;
          case Xe.SET_FILL_STYLE:
            (A = z),
              (this.alignFill_ = z[2]),
              y && (this.fill_(e), (y = 0), T && (e.stroke(), (T = 0))),
              (e.fillStyle = z[1]),
              ++u;
            break;
          case Xe.SET_STROKE_STYLE:
            (I = z),
              T && (e.stroke(), (T = 0)),
              this.setStrokeStyle_(e, z),
              ++u;
            break;
          case Xe.STROKE:
            D ? T++ : e.stroke(), ++u;
            break;
          default:
            ++u;
            break;
        }
      }
      y && this.fill_(e), T && e.stroke();
    }
    execute(e, n, r, i, o, s) {
      (this.viewRotation_ = i),
        this.execute_(e, n, r, this.instructions, o, void 0, void 0, s);
    }
    executeHitDetection(e, n, r, i, o) {
      return (
        (this.viewRotation_ = r),
        this.execute_(e, 1, n, this.hitDetectionInstructions, !0, i, o)
      );
    }
  }
  const Mh = ["Polygon", "Circle", "LineString", "Image", "Text", "Default"];
  class Lb {
    constructor(e, n, r, i, o, s) {
      (this.maxExtent_ = e),
        (this.overlaps_ = i),
        (this.pixelRatio_ = r),
        (this.resolution_ = n),
        (this.renderBuffer_ = s),
        (this.executorsByZIndex_ = {}),
        (this.hitDetectionContext_ = null),
        (this.hitDetectionTransform_ = vr()),
        this.createExecutors_(o);
    }
    clip(e, n) {
      const r = this.getClipCoords(n);
      e.beginPath(),
        e.moveTo(r[0], r[1]),
        e.lineTo(r[2], r[3]),
        e.lineTo(r[4], r[5]),
        e.lineTo(r[6], r[7]),
        e.clip();
    }
    createExecutors_(e) {
      for (const n in e) {
        let r = this.executorsByZIndex_[n];
        r === void 0 && ((r = {}), (this.executorsByZIndex_[n] = r));
        const i = e[n];
        for (const o in i) {
          const s = i[o];
          r[o] = new Tj(this.resolution_, this.pixelRatio_, this.overlaps_, s);
        }
      }
    }
    hasExecutors(e) {
      for (const n in this.executorsByZIndex_) {
        const r = this.executorsByZIndex_[n];
        for (let i = 0, o = e.length; i < o; ++i) if (e[i] in r) return !0;
      }
      return !1;
    }
    forEachFeatureAtCoordinate(e, n, r, i, o, s) {
      i = Math.round(i);
      const a = i * 2 + 1,
        l = oi(
          this.hitDetectionTransform_,
          i + 0.5,
          i + 0.5,
          1 / n,
          -1 / n,
          -r,
          -e[0],
          -e[1]
        ),
        c = !this.hitDetectionContext_;
      c &&
        (this.hitDetectionContext_ = On(a, a, void 0, {
          willReadFrequently: !0,
        }));
      const u = this.hitDetectionContext_;
      u.canvas.width !== a || u.canvas.height !== a
        ? ((u.canvas.width = a), (u.canvas.height = a))
        : c || u.clearRect(0, 0, a, a);
      let d;
      this.renderBuffer_ !== void 0 &&
        ((d = ur()), ja(d, e), op(d, n * (this.renderBuffer_ + i), d));
      const h = Pj(i);
      let g;
      function f(x, E) {
        const w = u.getImageData(0, 0, a, a).data;
        for (let v = 0, y = h.length; v < y; v++)
          if (w[h[v]] > 0) {
            if (!s || (g !== "Image" && g !== "Text") || s.includes(x)) {
              const T = (h[v] - 3) / 4,
                A = i - (T % a),
                I = i - ((T / a) | 0),
                L = o(x, E, A * A + I * I);
              if (L) return L;
            }
            u.clearRect(0, 0, a, a);
            break;
          }
      }
      const p = Object.keys(this.executorsByZIndex_).map(Number);
      p.sort(Xi);
      let b, m, _, R, S;
      for (b = p.length - 1; b >= 0; --b) {
        const x = p[b].toString();
        for (_ = this.executorsByZIndex_[x], m = Mh.length - 1; m >= 0; --m)
          if (
            ((g = Mh[m]),
            (R = _[g]),
            R !== void 0 && ((S = R.executeHitDetection(u, l, r, f, d)), S))
          )
            return S;
      }
    }
    getClipCoords(e) {
      const n = this.maxExtent_;
      if (!n) return null;
      const r = n[0],
        i = n[1],
        o = n[2],
        s = n[3],
        a = [r, i, r, s, o, s, o, i];
      return Wi(a, 0, 8, 2, e, a), a;
    }
    isEmpty() {
      return Vs(this.executorsByZIndex_);
    }
    execute(e, n, r, i, o, s, a) {
      const l = Object.keys(this.executorsByZIndex_).map(Number);
      l.sort(Xi), this.maxExtent_ && (e.save(), this.clip(e, r)), (s = s || Mh);
      let c, u, d, h, g, f;
      for (a && l.reverse(), c = 0, u = l.length; c < u; ++c) {
        const p = l[c].toString();
        for (g = this.executorsByZIndex_[p], d = 0, h = s.length; d < h; ++d) {
          const b = s[d];
          (f = g[b]), f !== void 0 && f.execute(e, n, r, i, o, a);
        }
      }
      this.maxExtent_ && e.restore();
    }
  }
  const Lh = {};
  function Pj(t) {
    if (Lh[t] !== void 0) return Lh[t];
    const e = t * 2 + 1,
      n = t * t,
      r = new Array(n + 1);
    for (let o = 0; o <= t; ++o)
      for (let s = 0; s <= t; ++s) {
        const a = o * o + s * s;
        if (a > n) break;
        let l = r[a];
        l || ((l = []), (r[a] = l)),
          l.push(((t + o) * e + (t + s)) * 4 + 3),
          o > 0 && l.push(((t - o) * e + (t + s)) * 4 + 3),
          s > 0 &&
            (l.push(((t + o) * e + (t - s)) * 4 + 3),
            o > 0 && l.push(((t - o) * e + (t - s)) * 4 + 3));
      }
    const i = [];
    for (let o = 0, s = r.length; o < s; ++o) r[o] && i.push(...r[o]);
    return (Lh[t] = i), i;
  }
  class Aj extends $w {
    constructor(e, n, r, i, o, s, a) {
      super(),
        (this.context_ = e),
        (this.pixelRatio_ = n),
        (this.extent_ = r),
        (this.transform_ = i),
        (this.transformRotation_ = i ? lp(Math.atan2(i[1], i[0]), 10) : 0),
        (this.viewRotation_ = o),
        (this.squaredTolerance_ = s),
        (this.userTransform_ = a),
        (this.contextFillState_ = null),
        (this.contextStrokeState_ = null),
        (this.contextTextState_ = null),
        (this.fillState_ = null),
        (this.strokeState_ = null),
        (this.image_ = null),
        (this.imageAnchorX_ = 0),
        (this.imageAnchorY_ = 0),
        (this.imageHeight_ = 0),
        (this.imageOpacity_ = 0),
        (this.imageOriginX_ = 0),
        (this.imageOriginY_ = 0),
        (this.imageRotateWithView_ = !1),
        (this.imageRotation_ = 0),
        (this.imageScale_ = [0, 0]),
        (this.imageWidth_ = 0),
        (this.text_ = ""),
        (this.textOffsetX_ = 0),
        (this.textOffsetY_ = 0),
        (this.textRotateWithView_ = !1),
        (this.textRotation_ = 0),
        (this.textScale_ = [0, 0]),
        (this.textFillState_ = null),
        (this.textStrokeState_ = null),
        (this.textState_ = null),
        (this.pixelCoordinates_ = []),
        (this.tmpLocalTransform_ = vr());
    }
    drawImages_(e, n, r, i) {
      if (!this.image_) return;
      const o = Wi(e, n, r, i, this.transform_, this.pixelCoordinates_),
        s = this.context_,
        a = this.tmpLocalTransform_,
        l = s.globalAlpha;
      this.imageOpacity_ != 1 && (s.globalAlpha = l * this.imageOpacity_);
      let c = this.imageRotation_;
      this.transformRotation_ === 0 && (c -= this.viewRotation_),
        this.imageRotateWithView_ && (c += this.viewRotation_);
      for (let u = 0, d = o.length; u < d; u += 2) {
        const h = o[u] - this.imageAnchorX_,
          g = o[u + 1] - this.imageAnchorY_;
        if (c !== 0 || this.imageScale_[0] != 1 || this.imageScale_[1] != 1) {
          const f = h + this.imageAnchorX_,
            p = g + this.imageAnchorY_;
          oi(a, f, p, 1, 1, c, -f, -p),
            s.save(),
            s.transform.apply(s, a),
            s.translate(f, p),
            s.scale(this.imageScale_[0], this.imageScale_[1]),
            s.drawImage(
              this.image_,
              this.imageOriginX_,
              this.imageOriginY_,
              this.imageWidth_,
              this.imageHeight_,
              -this.imageAnchorX_,
              -this.imageAnchorY_,
              this.imageWidth_,
              this.imageHeight_
            ),
            s.restore();
        } else
          s.drawImage(
            this.image_,
            this.imageOriginX_,
            this.imageOriginY_,
            this.imageWidth_,
            this.imageHeight_,
            h,
            g,
            this.imageWidth_,
            this.imageHeight_
          );
      }
      this.imageOpacity_ != 1 && (s.globalAlpha = l);
    }
    drawText_(e, n, r, i) {
      if (!this.textState_ || this.text_ === "") return;
      this.textFillState_ && this.setContextFillState_(this.textFillState_),
        this.textStrokeState_ &&
          this.setContextStrokeState_(this.textStrokeState_),
        this.setContextTextState_(this.textState_);
      const o = Wi(e, n, r, i, this.transform_, this.pixelCoordinates_),
        s = this.context_;
      let a = this.textRotation_;
      for (
        this.transformRotation_ === 0 && (a -= this.viewRotation_),
          this.textRotateWithView_ && (a += this.viewRotation_);
        n < r;
        n += i
      ) {
        const l = o[n] + this.textOffsetX_,
          c = o[n + 1] + this.textOffsetY_;
        a !== 0 || this.textScale_[0] != 1 || this.textScale_[1] != 1
          ? (s.save(),
            s.translate(l - this.textOffsetX_, c - this.textOffsetY_),
            s.rotate(a),
            s.translate(this.textOffsetX_, this.textOffsetY_),
            s.scale(this.textScale_[0], this.textScale_[1]),
            this.textStrokeState_ && s.strokeText(this.text_, 0, 0),
            this.textFillState_ && s.fillText(this.text_, 0, 0),
            s.restore())
          : (this.textStrokeState_ && s.strokeText(this.text_, l, c),
            this.textFillState_ && s.fillText(this.text_, l, c));
      }
    }
    moveToLineTo_(e, n, r, i, o) {
      const s = this.context_,
        a = Wi(e, n, r, i, this.transform_, this.pixelCoordinates_);
      s.moveTo(a[0], a[1]);
      let l = a.length;
      o && (l -= 2);
      for (let c = 2; c < l; c += 2) s.lineTo(a[c], a[c + 1]);
      return o && s.closePath(), r;
    }
    drawRings_(e, n, r, i) {
      for (let o = 0, s = r.length; o < s; ++o)
        n = this.moveToLineTo_(e, n, r[o], i, !0);
      return n;
    }
    drawCircle(e) {
      if (
        (this.squaredTolerance_ &&
          (e = e.simplifyTransformed(
            this.squaredTolerance_,
            this.userTransform_
          )),
        !!Bn(this.extent_, e.getExtent()))
      ) {
        if (this.fillState_ || this.strokeState_) {
          this.fillState_ && this.setContextFillState_(this.fillState_),
            this.strokeState_ && this.setContextStrokeState_(this.strokeState_);
          const n = uW(e, this.transform_, this.pixelCoordinates_),
            r = n[2] - n[0],
            i = n[3] - n[1],
            o = Math.sqrt(r * r + i * i),
            s = this.context_;
          s.beginPath(),
            s.arc(n[0], n[1], o, 0, 2 * Math.PI),
            this.fillState_ && s.fill(),
            this.strokeState_ && s.stroke();
        }
        this.text_ !== "" && this.drawText_(e.getCenter(), 0, 2, 2);
      }
    }
    setStyle(e) {
      this.setFillStrokeStyle(e.getFill(), e.getStroke()),
        this.setImageStyle(e.getImage()),
        this.setTextStyle(e.getText());
    }
    setTransform(e) {
      this.transform_ = e;
    }
    drawGeometry(e) {
      switch (e.getType()) {
        case "Point":
          this.drawPoint(e);
          break;
        case "LineString":
          this.drawLineString(e);
          break;
        case "Polygon":
          this.drawPolygon(e);
          break;
        case "MultiPoint":
          this.drawMultiPoint(e);
          break;
        case "MultiLineString":
          this.drawMultiLineString(e);
          break;
        case "MultiPolygon":
          this.drawMultiPolygon(e);
          break;
        case "GeometryCollection":
          this.drawGeometryCollection(e);
          break;
        case "Circle":
          this.drawCircle(e);
          break;
      }
    }
    drawFeature(e, n) {
      const r = n.getGeometryFunction()(e);
      r && (this.setStyle(n), this.drawGeometry(r));
    }
    drawGeometryCollection(e) {
      const n = e.getGeometriesArray();
      for (let r = 0, i = n.length; r < i; ++r) this.drawGeometry(n[r]);
    }
    drawPoint(e) {
      this.squaredTolerance_ &&
        (e = e.simplifyTransformed(
          this.squaredTolerance_,
          this.userTransform_
        ));
      const n = e.getFlatCoordinates(),
        r = e.getStride();
      this.image_ && this.drawImages_(n, 0, n.length, r),
        this.text_ !== "" && this.drawText_(n, 0, n.length, r);
    }
    drawMultiPoint(e) {
      this.squaredTolerance_ &&
        (e = e.simplifyTransformed(
          this.squaredTolerance_,
          this.userTransform_
        ));
      const n = e.getFlatCoordinates(),
        r = e.getStride();
      this.image_ && this.drawImages_(n, 0, n.length, r),
        this.text_ !== "" && this.drawText_(n, 0, n.length, r);
    }
    drawLineString(e) {
      if (
        (this.squaredTolerance_ &&
          (e = e.simplifyTransformed(
            this.squaredTolerance_,
            this.userTransform_
          )),
        !!Bn(this.extent_, e.getExtent()))
      ) {
        if (this.strokeState_) {
          this.setContextStrokeState_(this.strokeState_);
          const n = this.context_,
            r = e.getFlatCoordinates();
          n.beginPath(),
            this.moveToLineTo_(r, 0, r.length, e.getStride(), !1),
            n.stroke();
        }
        if (this.text_ !== "") {
          const n = e.getFlatMidpoint();
          this.drawText_(n, 0, 2, 2);
        }
      }
    }
    drawMultiLineString(e) {
      this.squaredTolerance_ &&
        (e = e.simplifyTransformed(
          this.squaredTolerance_,
          this.userTransform_
        ));
      const n = e.getExtent();
      if (Bn(this.extent_, n)) {
        if (this.strokeState_) {
          this.setContextStrokeState_(this.strokeState_);
          const r = this.context_,
            i = e.getFlatCoordinates();
          let o = 0;
          const s = e.getEnds(),
            a = e.getStride();
          r.beginPath();
          for (let l = 0, c = s.length; l < c; ++l)
            o = this.moveToLineTo_(i, o, s[l], a, !1);
          r.stroke();
        }
        if (this.text_ !== "") {
          const r = e.getFlatMidpoints();
          this.drawText_(r, 0, r.length, 2);
        }
      }
    }
    drawPolygon(e) {
      if (
        (this.squaredTolerance_ &&
          (e = e.simplifyTransformed(
            this.squaredTolerance_,
            this.userTransform_
          )),
        !!Bn(this.extent_, e.getExtent()))
      ) {
        if (this.strokeState_ || this.fillState_) {
          this.fillState_ && this.setContextFillState_(this.fillState_),
            this.strokeState_ && this.setContextStrokeState_(this.strokeState_);
          const n = this.context_;
          n.beginPath(),
            this.drawRings_(
              e.getOrientedFlatCoordinates(),
              0,
              e.getEnds(),
              e.getStride()
            ),
            this.fillState_ && n.fill(),
            this.strokeState_ && n.stroke();
        }
        if (this.text_ !== "") {
          const n = e.getFlatInteriorPoint();
          this.drawText_(n, 0, 2, 2);
        }
      }
    }
    drawMultiPolygon(e) {
      if (
        (this.squaredTolerance_ &&
          (e = e.simplifyTransformed(
            this.squaredTolerance_,
            this.userTransform_
          )),
        !!Bn(this.extent_, e.getExtent()))
      ) {
        if (this.strokeState_ || this.fillState_) {
          this.fillState_ && this.setContextFillState_(this.fillState_),
            this.strokeState_ && this.setContextStrokeState_(this.strokeState_);
          const n = this.context_,
            r = e.getOrientedFlatCoordinates();
          let i = 0;
          const o = e.getEndss(),
            s = e.getStride();
          n.beginPath();
          for (let a = 0, l = o.length; a < l; ++a) {
            const c = o[a];
            i = this.drawRings_(r, i, c, s);
          }
          this.fillState_ && n.fill(), this.strokeState_ && n.stroke();
        }
        if (this.text_ !== "") {
          const n = e.getFlatInteriorPoints();
          this.drawText_(n, 0, n.length, 2);
        }
      }
    }
    setContextFillState_(e) {
      const n = this.context_,
        r = this.contextFillState_;
      r
        ? r.fillStyle != e.fillStyle &&
          ((r.fillStyle = e.fillStyle), (n.fillStyle = e.fillStyle))
        : ((n.fillStyle = e.fillStyle),
          (this.contextFillState_ = { fillStyle: e.fillStyle }));
    }
    setContextStrokeState_(e) {
      const n = this.context_,
        r = this.contextStrokeState_;
      r
        ? (r.lineCap != e.lineCap &&
            ((r.lineCap = e.lineCap), (n.lineCap = e.lineCap)),
          no(r.lineDash, e.lineDash) ||
            n.setLineDash((r.lineDash = e.lineDash)),
          r.lineDashOffset != e.lineDashOffset &&
            ((r.lineDashOffset = e.lineDashOffset),
            (n.lineDashOffset = e.lineDashOffset)),
          r.lineJoin != e.lineJoin &&
            ((r.lineJoin = e.lineJoin), (n.lineJoin = e.lineJoin)),
          r.lineWidth != e.lineWidth &&
            ((r.lineWidth = e.lineWidth), (n.lineWidth = e.lineWidth)),
          r.miterLimit != e.miterLimit &&
            ((r.miterLimit = e.miterLimit), (n.miterLimit = e.miterLimit)),
          r.strokeStyle != e.strokeStyle &&
            ((r.strokeStyle = e.strokeStyle), (n.strokeStyle = e.strokeStyle)))
        : ((n.lineCap = e.lineCap),
          n.setLineDash(e.lineDash),
          (n.lineDashOffset = e.lineDashOffset),
          (n.lineJoin = e.lineJoin),
          (n.lineWidth = e.lineWidth),
          (n.miterLimit = e.miterLimit),
          (n.strokeStyle = e.strokeStyle),
          (this.contextStrokeState_ = {
            lineCap: e.lineCap,
            lineDash: e.lineDash,
            lineDashOffset: e.lineDashOffset,
            lineJoin: e.lineJoin,
            lineWidth: e.lineWidth,
            miterLimit: e.miterLimit,
            strokeStyle: e.strokeStyle,
          }));
    }
    setContextTextState_(e) {
      const n = this.context_,
        r = this.contextTextState_,
        i = e.textAlign ? e.textAlign : yl;
      r
        ? (r.font != e.font && ((r.font = e.font), (n.font = e.font)),
          r.textAlign != i && ((r.textAlign = i), (n.textAlign = i)),
          r.textBaseline != e.textBaseline &&
            ((r.textBaseline = e.textBaseline),
            (n.textBaseline = e.textBaseline)))
        : ((n.font = e.font),
          (n.textAlign = i),
          (n.textBaseline = e.textBaseline),
          (this.contextTextState_ = {
            font: e.font,
            textAlign: i,
            textBaseline: e.textBaseline,
          }));
    }
    setFillStrokeStyle(e, n) {
      if (!e) this.fillState_ = null;
      else {
        const r = e.getColor();
        this.fillState_ = { fillStyle: Mr(r || Fn) };
      }
      if (!n) this.strokeState_ = null;
      else {
        const r = n.getColor(),
          i = n.getLineCap(),
          o = n.getLineDash(),
          s = n.getLineDashOffset(),
          a = n.getLineJoin(),
          l = n.getWidth(),
          c = n.getMiterLimit(),
          u = o || Qr;
        this.strokeState_ = {
          lineCap: i !== void 0 ? i : Gs,
          lineDash:
            this.pixelRatio_ === 1 ? u : u.map((d) => d * this.pixelRatio_),
          lineDashOffset: (s || ei) * this.pixelRatio_,
          lineJoin: a !== void 0 ? a : Xs,
          lineWidth: (l !== void 0 ? l : xl) * this.pixelRatio_,
          miterLimit: c !== void 0 ? c : vl,
          strokeStyle: Mr(r || bl),
        };
      }
    }
    setImageStyle(e) {
      let n;
      if (!e || !(n = e.getSize())) {
        this.image_ = null;
        return;
      }
      const r = e.getPixelRatio(this.pixelRatio_),
        i = e.getAnchor(),
        o = e.getOrigin();
      (this.image_ = e.getImage(this.pixelRatio_)),
        (this.imageAnchorX_ = i[0] * r),
        (this.imageAnchorY_ = i[1] * r),
        (this.imageHeight_ = n[1] * r),
        (this.imageOpacity_ = e.getOpacity()),
        (this.imageOriginX_ = o[0]),
        (this.imageOriginY_ = o[1]),
        (this.imageRotateWithView_ = e.getRotateWithView()),
        (this.imageRotation_ = e.getRotation());
      const s = e.getScaleArray();
      (this.imageScale_ = [
        (s[0] * this.pixelRatio_) / r,
        (s[1] * this.pixelRatio_) / r,
      ]),
        (this.imageWidth_ = n[0] * r);
    }
    setTextStyle(e) {
      if (!e) this.text_ = "";
      else {
        const n = e.getFill();
        if (!n) this.textFillState_ = null;
        else {
          const g = n.getColor();
          this.textFillState_ = { fillStyle: Mr(g || Fn) };
        }
        const r = e.getStroke();
        if (!r) this.textStrokeState_ = null;
        else {
          const g = r.getColor(),
            f = r.getLineCap(),
            p = r.getLineDash(),
            b = r.getLineDashOffset(),
            m = r.getLineJoin(),
            _ = r.getWidth(),
            R = r.getMiterLimit();
          this.textStrokeState_ = {
            lineCap: f !== void 0 ? f : Gs,
            lineDash: p || Qr,
            lineDashOffset: b || ei,
            lineJoin: m !== void 0 ? m : Xs,
            lineWidth: _ !== void 0 ? _ : xl,
            miterLimit: R !== void 0 ? R : vl,
            strokeStyle: Mr(g || bl),
          };
        }
        const i = e.getFont(),
          o = e.getOffsetX(),
          s = e.getOffsetY(),
          a = e.getRotateWithView(),
          l = e.getRotation(),
          c = e.getScaleArray(),
          u = e.getText(),
          d = e.getTextAlign(),
          h = e.getTextBaseline();
        (this.textState_ = {
          font: i !== void 0 ? i : lw,
          textAlign: d !== void 0 ? d : yl,
          textBaseline: h !== void 0 ? h : vu,
        }),
          (this.text_ =
            u !== void 0
              ? Array.isArray(u)
                ? u.reduce((g, f, p) => (g += p % 2 ? " " : f), "")
                : u
              : ""),
          (this.textOffsetX_ = o !== void 0 ? this.pixelRatio_ * o : 0),
          (this.textOffsetY_ = s !== void 0 ? this.pixelRatio_ * s : 0),
          (this.textRotateWithView_ = a !== void 0 ? a : !1),
          (this.textRotation_ = l !== void 0 ? l : 0),
          (this.textScale_ = [
            this.pixelRatio_ * c[0],
            this.pixelRatio_ * c[1],
          ]);
      }
    }
  }
  const kr = 0.5;
  function kj(t, e, n, r, i, o, s) {
    const a = t[0] * kr,
      l = t[1] * kr,
      c = On(a, l);
    c.imageSmoothingEnabled = !1;
    const u = c.canvas,
      d = new Aj(c, kr, i, null, s),
      h = n.length,
      g = Math.floor((256 * 256 * 256 - 1) / h),
      f = {};
    for (let b = 1; b <= h; ++b) {
      const m = n[b - 1],
        _ = m.getStyleFunction() || r;
      if (!_) continue;
      let R = _(m, o);
      if (!R) continue;
      Array.isArray(R) || (R = [R]);
      const x = (b * g).toString(16).padStart(7, "#00000");
      for (let E = 0, w = R.length; E < w; ++E) {
        const v = R[E],
          y = v.getGeometryFunction()(m);
        if (!y || !Bn(i, y.getExtent())) continue;
        const T = v.clone(),
          A = T.getFill();
        A && A.setColor(x);
        const I = T.getStroke();
        I && (I.setColor(x), I.setLineDash(null)), T.setText(void 0);
        const L = v.getImage();
        if (L) {
          const D = L.getImageSize();
          if (!D) continue;
          const Y = On(D[0], D[1], void 0, { alpha: !1 }),
            se = Y.canvas;
          (Y.fillStyle = x),
            Y.fillRect(0, 0, se.width, se.height),
            T.setImage(
              new Ed({
                img: se,
                anchor: L.getAnchor(),
                anchorXUnits: "pixels",
                anchorYUnits: "pixels",
                offset: L.getOrigin(),
                opacity: 1,
                size: L.getSize(),
                scale: L.getScale(),
                rotation: L.getRotation(),
                rotateWithView: L.getRotateWithView(),
              })
            );
        }
        const j = T.getZIndex() || 0;
        let k = f[j];
        k ||
          ((k = {}),
          (f[j] = k),
          (k.Polygon = []),
          (k.Circle = []),
          (k.LineString = []),
          (k.Point = []));
        const O = y.getType();
        if (O === "GeometryCollection") {
          const D = y.getGeometriesArrayRecursive();
          for (let Y = 0, se = D.length; Y < se; ++Y) {
            const de = D[Y];
            k[de.getType().replace("Multi", "")].push(de, T);
          }
        } else k[O.replace("Multi", "")].push(y, T);
      }
    }
    const p = Object.keys(f).map(Number).sort(Xi);
    for (let b = 0, m = p.length; b < m; ++b) {
      const _ = f[p[b]];
      for (const R in _) {
        const S = _[R];
        for (let x = 0, E = S.length; x < E; x += 2) {
          d.setStyle(S[x + 1]);
          for (let w = 0, v = e.length; w < v; ++w)
            d.setTransform(e[w]), d.drawGeometry(S[x]);
        }
      }
    }
    return c.getImageData(0, 0, u.width, u.height);
  }
  function Ij(t, e, n) {
    const r = [];
    if (n) {
      const i = Math.floor(Math.round(t[0]) * kr),
        o = Math.floor(Math.round(t[1]) * kr),
        s = (on(i, 0, n.width - 1) + on(o, 0, n.height - 1) * n.width) * 4,
        a = n.data[s],
        l = n.data[s + 1],
        u = n.data[s + 2] + 256 * (l + 256 * a),
        d = Math.floor((256 * 256 * 256 - 1) / e.length);
      u && u % d === 0 && r.push(e[u / d - 1]);
    }
    return r;
  }
  const Oj = 0.5,
    Dw = {
      Point: Hj,
      LineString: Fj,
      Polygon: jj,
      MultiPoint: Wj,
      MultiLineString: Bj,
      MultiPolygon: Nj,
      GeometryCollection: zj,
      Circle: $j,
    };
  function Mj(t, e) {
    return parseInt(xt(t), 10) - parseInt(xt(e), 10);
  }
  function Lj(t, e) {
    const n = Ff(t, e);
    return n * n;
  }
  function Ff(t, e) {
    return (Oj * t) / e;
  }
  function $j(t, e, n, r, i) {
    const o = n.getFill(),
      s = n.getStroke();
    if (o || s) {
      const l = t.getBuilder(n.getZIndex(), "Circle");
      l.setFillStrokeStyle(o, s), l.drawCircle(e, r);
    }
    const a = n.getText();
    if (a && a.getText()) {
      const l = (i || t).getBuilder(n.getZIndex(), "Text");
      l.setTextStyle(a), l.drawText(e, r);
    }
  }
  function $b(t, e, n, r, i, o, s) {
    let a = !1;
    const l = n.getImage();
    if (l) {
      const c = l.getImageState();
      c == $t.LOADED || c == $t.ERROR
        ? l.unlistenImageChange(i)
        : (c == $t.IDLE && l.load(), l.listenImageChange(i), (a = !0));
    }
    return Dj(t, e, n, r, o, s), a;
  }
  function Dj(t, e, n, r, i, o) {
    const s = n.getGeometryFunction()(e);
    if (!s) return;
    const a = s.simplifyTransformed(r, i);
    if (n.getRenderer()) zw(t, a, n, e);
    else {
      const c = Dw[a.getType()];
      c(t, a, n, e, o);
    }
  }
  function zw(t, e, n, r) {
    if (e.getType() == "GeometryCollection") {
      const o = e.getGeometries();
      for (let s = 0, a = o.length; s < a; ++s) zw(t, o[s], n, r);
      return;
    }
    t.getBuilder(n.getZIndex(), "Default").drawCustom(
      e,
      r,
      n.getRenderer(),
      n.getHitDetectionRenderer()
    );
  }
  function zj(t, e, n, r, i) {
    const o = e.getGeometriesArray();
    let s, a;
    for (s = 0, a = o.length; s < a; ++s) {
      const l = Dw[o[s].getType()];
      l(t, o[s], n, r, i);
    }
  }
  function Fj(t, e, n, r, i) {
    const o = n.getStroke();
    if (o) {
      const a = t.getBuilder(n.getZIndex(), "LineString");
      a.setFillStrokeStyle(null, o), a.drawLineString(e, r);
    }
    const s = n.getText();
    if (s && s.getText()) {
      const a = (i || t).getBuilder(n.getZIndex(), "Text");
      a.setTextStyle(s), a.drawText(e, r);
    }
  }
  function Bj(t, e, n, r, i) {
    const o = n.getStroke();
    if (o) {
      const a = t.getBuilder(n.getZIndex(), "LineString");
      a.setFillStrokeStyle(null, o), a.drawMultiLineString(e, r);
    }
    const s = n.getText();
    if (s && s.getText()) {
      const a = (i || t).getBuilder(n.getZIndex(), "Text");
      a.setTextStyle(s), a.drawText(e, r);
    }
  }
  function Nj(t, e, n, r, i) {
    const o = n.getFill(),
      s = n.getStroke();
    if (s || o) {
      const l = t.getBuilder(n.getZIndex(), "Polygon");
      l.setFillStrokeStyle(o, s), l.drawMultiPolygon(e, r);
    }
    const a = n.getText();
    if (a && a.getText()) {
      const l = (i || t).getBuilder(n.getZIndex(), "Text");
      l.setTextStyle(a), l.drawText(e, r);
    }
  }
  function Hj(t, e, n, r, i) {
    const o = n.getImage(),
      s = n.getText();
    let a;
    if (o) {
      if (o.getImageState() != $t.LOADED) return;
      let l = t;
      if (i) {
        const u = o.getDeclutterMode();
        if (u !== "none")
          if (((l = i), u === "obstacle")) {
            const d = t.getBuilder(n.getZIndex(), "Image");
            d.setImageStyle(o, a), d.drawPoint(e, r);
          } else s && s.getText() && (a = {});
      }
      const c = l.getBuilder(n.getZIndex(), "Image");
      c.setImageStyle(o, a), c.drawPoint(e, r);
    }
    if (s && s.getText()) {
      let l = t;
      i && (l = i);
      const c = l.getBuilder(n.getZIndex(), "Text");
      c.setTextStyle(s, a), c.drawText(e, r);
    }
  }
  function Wj(t, e, n, r, i) {
    const o = n.getImage(),
      s = n.getText();
    let a;
    if (o) {
      if (o.getImageState() != $t.LOADED) return;
      let l = t;
      if (i) {
        const u = o.getDeclutterMode();
        if (u !== "none")
          if (((l = i), u === "obstacle")) {
            const d = t.getBuilder(n.getZIndex(), "Image");
            d.setImageStyle(o, a), d.drawMultiPoint(e, r);
          } else s && s.getText() && (a = {});
      }
      const c = l.getBuilder(n.getZIndex(), "Image");
      c.setImageStyle(o, a), c.drawMultiPoint(e, r);
    }
    if (s && s.getText()) {
      let l = t;
      i && (l = i);
      const c = l.getBuilder(n.getZIndex(), "Text");
      c.setTextStyle(s, a), c.drawText(e, r);
    }
  }
  function jj(t, e, n, r, i) {
    const o = n.getFill(),
      s = n.getStroke();
    if (o || s) {
      const l = t.getBuilder(n.getZIndex(), "Polygon");
      l.setFillStrokeStyle(o, s), l.drawPolygon(e, r);
    }
    const a = n.getText();
    if (a && a.getText()) {
      const l = (i || t).getBuilder(n.getZIndex(), "Text");
      l.setTextStyle(a), l.drawText(e, r);
    }
  }
  class Uj extends Sw {
    constructor(e) {
      super(e),
        (this.boundHandleStyleImageChange_ =
          this.handleStyleImageChange_.bind(this)),
        this.animatingOrInteracting_,
        (this.hitDetectionImageData_ = null),
        (this.renderedFeatures_ = null),
        (this.renderedRevision_ = -1),
        (this.renderedResolution_ = NaN),
        (this.renderedExtent_ = ur()),
        (this.wrappedRenderedExtent_ = ur()),
        this.renderedRotation_,
        (this.renderedCenter_ = null),
        (this.renderedProjection_ = null),
        (this.renderedRenderOrder_ = null),
        (this.replayGroup_ = null),
        (this.replayGroupChanged = !0),
        (this.declutterExecutorGroup = null),
        (this.clipping = !0),
        (this.compositionContext_ = null),
        (this.opacity_ = 1);
    }
    renderWorlds(e, n, r) {
      const i = n.extent,
        o = n.viewState,
        s = o.center,
        a = o.resolution,
        l = o.projection,
        c = o.rotation,
        u = l.getExtent(),
        d = this.getLayer().getSource(),
        h = n.pixelRatio,
        g = n.viewHints,
        f = !(g[Cn.ANIMATING] || g[Cn.INTERACTING]),
        p = this.compositionContext_,
        b = Math.round(n.size[0] * h),
        m = Math.round(n.size[1] * h),
        _ = d.getWrapX() && l.canWrapX(),
        R = _ ? Dt(u) : null,
        S = _ ? Math.ceil((i[2] - u[2]) / R) + 1 : 1;
      let x = _ ? Math.floor((i[0] - u[0]) / R) : 0;
      do {
        const E = this.getRenderTransform(s, a, c, h, b, m, x * R);
        e.execute(p, 1, E, c, f, void 0, r);
      } while (++x < S);
    }
    setupCompositionContext_() {
      if (this.opacity_ !== 1) {
        const e = On(this.context.canvas.width, this.context.canvas.height, mb);
        this.compositionContext_ = e;
      } else this.compositionContext_ = this.context;
    }
    releaseCompositionContext_() {
      if (this.opacity_ !== 1) {
        const e = this.context.globalAlpha;
        (this.context.globalAlpha = this.opacity_),
          this.context.drawImage(this.compositionContext_.canvas, 0, 0),
          (this.context.globalAlpha = e),
          Cd(this.compositionContext_),
          mb.push(this.compositionContext_.canvas),
          (this.compositionContext_ = null);
      }
    }
    renderDeclutter(e) {
      this.declutterExecutorGroup &&
        (this.setupCompositionContext_(),
        this.renderWorlds(this.declutterExecutorGroup, e, e.declutterTree),
        this.releaseCompositionContext_());
    }
    renderFrame(e, n) {
      const r = e.pixelRatio,
        i = e.layerStatesArray[e.layerIndex];
      vH(this.pixelTransform, 1 / r, 1 / r),
        ip(this.inversePixelTransform, this.pixelTransform);
      const o = I_(this.pixelTransform);
      this.useContainer(n, o, this.getBackground(e));
      const s = this.context,
        a = s.canvas,
        l = this.replayGroup_,
        c = this.declutterExecutorGroup;
      let u = (l && !l.isEmpty()) || (c && !c.isEmpty());
      if (
        !u &&
        !(
          this.getLayer().hasListener(Dr.PRERENDER) ||
          this.getLayer().hasListener(Dr.POSTRENDER)
        )
      )
        return null;
      const d = Math.round(e.size[0] * r),
        h = Math.round(e.size[1] * r);
      a.width != d || a.height != h
        ? ((a.width = d),
          (a.height = h),
          a.style.transform !== o && (a.style.transform = o))
        : this.containerReused || s.clearRect(0, 0, d, h),
        this.preRender(s, e);
      const g = e.viewState;
      g.projection,
        (this.opacity_ = i.opacity),
        this.setupCompositionContext_();
      let f = !1;
      if (u && i.extent && this.clipping) {
        const p = To(i.extent);
        (u = Bn(p, e.extent)),
          (f = u && !bs(p, e.extent)),
          f && this.clipUnrotated(this.compositionContext_, e, p);
      }
      return (
        u && this.renderWorlds(l, e),
        f && this.compositionContext_.restore(),
        this.releaseCompositionContext_(),
        this.postRender(s, e),
        this.renderedRotation_ !== g.rotation &&
          ((this.renderedRotation_ = g.rotation),
          (this.hitDetectionImageData_ = null)),
        this.container
      );
    }
    getFeatures(e) {
      return new Promise((n) => {
        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {
          const r = [this.context.canvas.width, this.context.canvas.height];
          fn(this.pixelTransform, r);
          const i = this.renderedCenter_,
            o = this.renderedResolution_,
            s = this.renderedRotation_,
            a = this.renderedProjection_,
            l = this.wrappedRenderedExtent_,
            c = this.getLayer(),
            u = [],
            d = r[0] * kr,
            h = r[1] * kr;
          u.push(this.getRenderTransform(i, o, s, kr, d, h, 0).slice());
          const g = c.getSource(),
            f = a.getExtent();
          if (g.getWrapX() && a.canWrapX() && !bs(f, l)) {
            let p = l[0];
            const b = Dt(f);
            let m = 0,
              _;
            for (; p < f[0]; )
              --m,
                (_ = b * m),
                u.push(this.getRenderTransform(i, o, s, kr, d, h, _).slice()),
                (p += b);
            for (m = 0, p = l[2]; p > f[2]; )
              ++m,
                (_ = b * m),
                u.push(this.getRenderTransform(i, o, s, kr, d, h, _).slice()),
                (p -= b);
          }
          this.hitDetectionImageData_ = kj(
            r,
            u,
            this.renderedFeatures_,
            c.getStyleFunction(),
            l,
            o,
            s
          );
        }
        n(Ij(e, this.renderedFeatures_, this.hitDetectionImageData_));
      });
    }
    forEachFeatureAtCoordinate(e, n, r, i, o) {
      if (!this.replayGroup_) return;
      const s = n.viewState.resolution,
        a = n.viewState.rotation,
        l = this.getLayer(),
        c = {},
        u = function (g, f, p) {
          const b = xt(g),
            m = c[b];
          if (m) {
            if (m !== !0 && p < m.distanceSq) {
              if (p === 0)
                return (c[b] = !0), o.splice(o.lastIndexOf(m), 1), i(g, l, f);
              (m.geometry = f), (m.distanceSq = p);
            }
          } else {
            if (p === 0) return (c[b] = !0), i(g, l, f);
            o.push(
              (c[b] = {
                feature: g,
                layer: l,
                geometry: f,
                distanceSq: p,
                callback: i,
              })
            );
          }
        };
      let d;
      const h = [this.replayGroup_];
      return (
        this.declutterExecutorGroup && h.push(this.declutterExecutorGroup),
        h.some(
          (g) =>
            (d = g.forEachFeatureAtCoordinate(
              e,
              s,
              a,
              r,
              u,
              g === this.declutterExecutorGroup && n.declutterTree
                ? n.declutterTree.all().map((f) => f.value)
                : null
            ))
        ),
        d
      );
    }
    handleFontsChanged() {
      const e = this.getLayer();
      e.getVisible() && this.replayGroup_ && e.changed();
    }
    handleStyleImageChange_(e) {
      this.renderIfReadyAndVisible();
    }
    prepareFrame(e) {
      const n = this.getLayer(),
        r = n.getSource();
      if (!r) return !1;
      const i = e.viewHints[Cn.ANIMATING],
        o = e.viewHints[Cn.INTERACTING],
        s = n.getUpdateWhileAnimating(),
        a = n.getUpdateWhileInteracting();
      if ((this.ready && !s && i) || (!a && o))
        return (this.animatingOrInteracting_ = !0), !0;
      this.animatingOrInteracting_ = !1;
      const l = e.extent,
        c = e.viewState,
        u = c.projection,
        d = c.resolution,
        h = e.pixelRatio,
        g = n.getRevision(),
        f = n.getRenderBuffer();
      let p = n.getRenderOrder();
      p === void 0 && (p = Mj);
      const b = c.center.slice(),
        m = op(l, f * d),
        _ = m.slice(),
        R = [m.slice()],
        S = u.getExtent();
      if (r.getWrapX() && u.canWrapX() && !bs(S, e.extent)) {
        const k = Dt(S),
          O = Math.max(Dt(m) / 2, k);
        (m[0] = S[0] - O), (m[2] = S[2] + O), V_(b, u);
        const D = F_(R[0], u);
        D[0] < S[0] && D[2] < S[2]
          ? R.push([D[0] + k, D[1], D[2] + k, D[3]])
          : D[0] > S[0] &&
            D[2] > S[2] &&
            R.push([D[0] - k, D[1], D[2] - k, D[3]]);
      }
      if (
        this.ready &&
        this.renderedResolution_ == d &&
        this.renderedRevision_ == g &&
        this.renderedRenderOrder_ == p &&
        bs(this.wrappedRenderedExtent_, m)
      )
        return (
          no(this.renderedExtent_, _) ||
            ((this.hitDetectionImageData_ = null), (this.renderedExtent_ = _)),
          (this.renderedCenter_ = b),
          (this.replayGroupChanged = !1),
          !0
        );
      this.replayGroup_ = null;
      const x = new Ib(Ff(d, h), m, d, h);
      let E;
      this.getLayer().getDeclutter() && (E = new Ib(Ff(d, h), m, d, h));
      let w;
      for (let k = 0, O = R.length; k < O; ++k) r.loadFeatures(R[k], d, u);
      const v = Lj(d, h);
      let y = !0;
      const T = (k) => {
          let O;
          const D = k.getStyleFunction() || n.getStyleFunction();
          if ((D && (O = D(k, d)), O)) {
            const Y = this.renderFeature(k, v, O, x, w, E);
            y = y && !Y;
          }
        },
        A = Y_(m),
        I = r.getFeaturesInExtent(A);
      p && I.sort(p);
      for (let k = 0, O = I.length; k < O; ++k) T(I[k]);
      (this.renderedFeatures_ = I), (this.ready = y);
      const L = x.finish(),
        j = new Lb(m, d, h, r.getOverlaps(), L, n.getRenderBuffer());
      return (
        E &&
          (this.declutterExecutorGroup = new Lb(
            m,
            d,
            h,
            r.getOverlaps(),
            E.finish(),
            n.getRenderBuffer()
          )),
        (this.renderedResolution_ = d),
        (this.renderedRevision_ = g),
        (this.renderedRenderOrder_ = p),
        (this.renderedExtent_ = _),
        (this.wrappedRenderedExtent_ = m),
        (this.renderedCenter_ = b),
        (this.renderedProjection_ = u),
        (this.replayGroup_ = j),
        (this.hitDetectionImageData_ = null),
        (this.replayGroupChanged = !0),
        !0
      );
    }
    renderFeature(e, n, r, i, o, s) {
      if (!r) return !1;
      let a = !1;
      if (Array.isArray(r))
        for (let l = 0, c = r.length; l < c; ++l)
          a = $b(i, e, r[l], n, this.boundHandleStyleImageChange_, o, s) || a;
      else a = $b(i, e, r, n, this.boundHandleStyleImageChange_, o, s);
      return a;
    }
  }
  class Vj extends gj {
    constructor(e) {
      super(e);
    }
    createRenderer() {
      return new Uj(this);
    }
  }
  const Gj = Vj,
    Xj = (t, e) => {
      const n = t.__vccOpts || t;
      for (const [r, i] of e) n[r] = i;
      return n;
    },
    Kj = {
      __name: "Options",
      setup(t) {
        const e = Zs(),
          n = Ve("axios"),
          r = nd(),
          i = qn(),
          {
            isBasic: o,
            isPro: s,
            isUltimate: a,
            theme: l,
            withNotification: c,
            withDebuggerOutput: u,
            showTinder: d,
            showBumble: h,
            showOkCupid: g,
            showLovoo: f,
            showBadoo: p,
            showPoF: b,
            showZoosk: m,
            longitude: _,
            latitude: R,
            minMaxSwipeTime: S,
            enableAutomaticPageReload: x,
            reloadPageBetweenSwipes: E,
            enableDelayAfterPageReload: w,
            delayBetweenAfterPageReload: v,
            enableRandomUsageSimulation: y,
            randomUsageSimulation: T,
            enableBreak: A,
            breakBetweenSwipes: I,
            breakDuration: L,
            loginEmail: j,
            loginPassword: k,
          } = _r(i),
          O = { 5: "5", 10: "10", 15: "15", 20: "20" },
          D = { 50: "50", 150: "150", 250: "250", 350: "350" },
          Y = { 50: "50", 150: "150", 250: "250", 350: "350" },
          se = {
            60: "60",
            720: "720",
            1440: "1440",
            2160: "2160",
            2880: "2880",
          },
          de = { 2: "2", 8: "8" },
          fe = function () {
            e.push({ name: "settings" });
          },
          z = async function () {
            await wt.storage.local.set({
              longitude: _.value,
              latitude: R.value,
            }),
              Lt("sent: auto-swiper-message-backgroundjs-spoof-location"),
              wt.runtime.sendMessage({
                action: "auto-swiper-message-backgroundjs-spoof-location",
              });
          },
          ee = async ({
            file: X,
            data: V,
            headers: me,
            withCredentials: we,
            action: Pe,
            onFinish: ze,
            onError: Ne,
            onProgress: Fe,
          }) => {
            const Qe = new FormData();
            V &&
              Object.keys(V).forEach((rt) => {
                Qe.append(rt, V[rt]);
              });
            const It = new FileReader();
            It.addEventListener("load", async (rt) => {
              let ln = JSON.parse(It.result);
              await QC(i, ln), r.success(wt.i18n.getMessage("IMPORT_FINISHED"));
            }),
              It.readAsText(X.file);
          },
          ue = async function () {
            let X = await e_(i, Xg);
            const V = new Blob([JSON.stringify(X)], {
              type: "text/json;charset=utf-8",
            });
            wf.saveAs(V, "auto-swiper-export.json");
          },
          K = async function () {
            await sB(n, i, r);
          },
          _e = async function () {
            await t_(n, i, r);
          },
          ie = function () {
            (i.isBasic = !0),
              (i.isPro = !1),
              (i.isUltimate = !1),
              (i.theme = "dark"),
              (i.withNotification = !0),
              (i.withDebuggerOutput = !1),
              (i.showTinder = !0),
              (i.showBumble = !0),
              (i.showOkCupid = !0),
              (i.showLovoo = !0),
              (i.showBadoo = !0),
              (i.showPoF = !0),
              (i.showZoosk = !0),
              (i.longitude = null),
              (i.latitude = null),
              (i.minMaxSwipeTime = [1, 10]),
              (i.enableAutomaticPageReload = !1),
              (i.reloadPageBetweenSwipes = [50, 250]),
              (i.enableDelayAfterPageReload = !1),
              (i.delayBetweenAfterPageReload = [60, 720]),
              (i.enableRandomUsageSimulation = !1),
              (i.randomUsageSimulation = [2, 8]),
              (i.enableBreak = !1),
              (i.breakBetweenSwipes = [50, 250]),
              (i.breakDuration = [60, 720]),
              (i.enableMaxSwipesFilter = !1),
              (i.maxSwipesFilter = [100, 350]),
              (i.maxSwipesRandomNumber = 0),
              (i.enableLeftSwipesPercentageFilter = !1),
              (i.leftSwipePercentages = [25, 55]),
              (i.enableAgeFilter = !0),
              (i.minMaxAge = [25, 55]),
              (i.enableDistanceFilter = !0),
              (i.maxDistance = 50),
              (i.skipEmptyDistance = !1),
              (i.extendedDistance = !1),
              (i.enableMinPicturesFilter = !1),
              (i.minPictures = 2),
              (i.minMaxSwipeTime = [2.5, 4.5]),
              (i.bannedWords = U(["ig:", "insta", "sc:", "snap", "onlyfans"])),
              (i.preferredWords = U([])),
              (i.requiredWords = U([])),
              (i.noEmptyDescription = !1),
              (i.onlyVerifyedProfiles = !1),
              (i.onlyRecentlyActive = !1),
              e.push({ name: "settings" });
          },
          pe = async function () {
            await wt.storage.local.set({ withDebuggerOutput: u.value }),
              await JC();
          },
          re = function () {
            (_.value = null),
              (R.value = null),
              (le.value = [8.0143191, 46.8508667]),
              W.value.getView().setCenter(go(le.value)),
              W.value.getView().setZoom(he.value),
              G.removeFeature(Q),
              (ke.value = ""),
              z(),
              setTimeout(() => {
                z();
              }, 1e3);
          },
          ge = U(!1),
          ke = U(""),
          Me = U(""),
          P = U([]),
          $ = async () => {
            let X = [];
            if (ke.value && ke.value.length > 4) {
              if (ke.value === Me.value) return;
              Lt("cityValueLast: ", Me.value),
                Lt("cityValue: ", ke.value),
                (Me.value = ke.value),
                (ge.value = !0);
              const V = {
                method: "GET",
                url: oB,
                params: { query: ke.value },
                headers: { Authorization: "Bearer " + i.loginToken },
              };
              try {
                let we = (await n.request(V)).data;
                if (we.locations)
                  for (const Pe of we.locations)
                    X.push({
                      label: Pe.name + " (" + Pe.country_name + ")",
                      value: Pe.name + " (" + Pe.country_name + ")",
                    });
                ge.value = !1;
              } catch (me) {
                Lt(me),
                  toast.warning(wt.i18n.getMessage("ERROR_LOGIN_REQUEST")),
                  (ge.value = !1);
              }
            }
            P.value = X;
          },
          H = ce(() => (Lt(ge.value), ge.value === !1 && $(), P.value)),
          ae = async (X) => {
            Lt("onSelectCity: ", X);
            const V = {
              method: "GET",
              url: iB,
              params: { query: X },
              headers: { Authorization: "Bearer " + i.loginToken },
            };
            try {
              let we = (await n.request(V)).data,
                Pe = parseFloat(we.location.longitude),
                ze = parseFloat(we.location.latitude);
              const Ne = aB(Pe, ze, 1500);
              we.location &&
                ((_.value = Ne.longitude), (R.value = Ne.latitude)),
                W.value.getView().setZoom(12);
            } catch (me) {
              Lt(me), toast.warning(wt.i18n.getMessage("ERROR_LOGIN_REQUEST"));
            }
          },
          le = U([8.0143191, 46.8508667]);
        _.value && R.value && (le.value = [_.value, R.value]);
        const he = U(4),
          Z = U(null),
          W = U(null),
          Q = new f9({ geometry: new Nc(go([_.value, R.value])) }),
          J = new Va({
            image: new Lp({
              radius: 9,
              fill: new aa({ color: "red" }),
              stroke: new Dp({ color: "black", width: 4 }),
            }),
          });
        Q.setStyle([J]);
        const G = new I9({ features: [Q] });
        return (
          (_.value === null || _.value === 0) &&
            (R.value === null || R.value === 0) &&
            G.removeFeature(Q),
          Vt(async () => {
            (W.value = new P7({
              target: Z.value,
              layers: [new d9({ source: new o9() }), new Gj({ source: G })],
              view: new Ar({
                zoom: he.value,
                center: go(le.value),
                constrainResolution: !0,
              }),
            })),
              W.value.on("click", function (X) {
                let V = pp(X.coordinate, "EPSG:3857", "EPSG:4326");
                (_.value = V[0]), (R.value = V[1]), z();
              });
          }),
          Et(_, async (X, V) => {
            X &&
              ((le.value = [_.value, R.value]),
              W.value.getView().setCenter(go(le.value)),
              Q.setGeometry(new Nc(go([_.value, R.value]))),
              G.removeFeature(Q),
              G.addFeature(Q),
              z());
          }),
          Et(R, async (X, V) => {
            X &&
              ((le.value = [_.value, R.value]),
              W.value.getView().setCenter(go(le.value)),
              Q.setGeometry(new Nc(go([_.value, R.value]))),
              G.removeFeature(Q),
              G.addFeature(Q),
              z());
          }),
          (X, V) => {
            const me = Ju,
              we = Qo,
              Pe = hi,
              ze = Xn,
              Ne = Fl,
              Fe = zl,
              Qe = Jo,
              It = qu,
              rt = R$,
              ln = B6,
              ve = di,
              Le = NC;
            return (
              Ie(),
              nn(
                pt,
                null,
                [
                  F(
                    Le,
                    { style: { "max-height": "480px" } },
                    {
                      default: B(() => [
                        F(
                          ve,
                          { "label-placement": "top", column: 1 },
                          {
                            default: B(() => [
                              F(
                                Pe,
                                { label: X.$i18n("SITES") },
                                {
                                  default: B(() => [
                                    F(
                                      we,
                                      {
                                        "item-style": "display: flex;",
                                        align: "center",
                                      },
                                      {
                                        default: B(() => [
                                          F(
                                            me,
                                            {
                                              checked: N(d),
                                              "onUpdate:checked":
                                                V[0] ||
                                                (V[0] = (Re) =>
                                                  xe(d)
                                                    ? (d.value = Re)
                                                    : null),
                                              size: "small",
                                              label: "Tinder",
                                            },
                                            null,
                                            8,
                                            ["checked"]
                                          ),
                                          F(
                                            me,
                                            {
                                              checked: N(h),
                                              "onUpdate:checked":
                                                V[1] ||
                                                (V[1] = (Re) =>
                                                  xe(h)
                                                    ? (h.value = Re)
                                                    : null),
                                              size: "small",
                                              label: "Bumble",
                                            },
                                            null,
                                            8,
                                            ["checked"]
                                          ),
                                          F(
                                            me,
                                            {
                                              checked: N(g),
                                              "onUpdate:checked":
                                                V[2] ||
                                                (V[2] = (Re) =>
                                                  xe(g)
                                                    ? (g.value = Re)
                                                    : null),
                                              size: "small",
                                              label: "OkCupid",
                                            },
                                            null,
                                            8,
                                            ["checked"]
                                          ),
                                          F(
                                            me,
                                            {
                                              checked: N(f),
                                              "onUpdate:checked":
                                                V[3] ||
                                                (V[3] = (Re) =>
                                                  xe(f)
                                                    ? (f.value = Re)
                                                    : null),
                                              size: "small",
                                              label: "Lovoo",
                                            },
                                            null,
                                            8,
                                            ["checked"]
                                          ),
                                          F(
                                            me,
                                            {
                                              checked: N(p),
                                              "onUpdate:checked":
                                                V[4] ||
                                                (V[4] = (Re) =>
                                                  xe(p)
                                                    ? (p.value = Re)
                                                    : null),
                                              size: "small",
                                              label: "Badoo",
                                            },
                                            null,
                                            8,
                                            ["checked"]
                                          ),
                                          F(
                                            me,
                                            {
                                              checked: N(b),
                                              "onUpdate:checked":
                                                V[5] ||
                                                (V[5] = (Re) =>
                                                  xe(b)
                                                    ? (b.value = Re)
                                                    : null),
                                              size: "small",
                                              label: "PoF",
                                            },
                                            null,
                                            8,
                                            ["checked"]
                                          ),
                                          F(
                                            me,
                                            {
                                              checked: N(m),
                                              "onUpdate:checked":
                                                V[6] ||
                                                (V[6] = (Re) =>
                                                  xe(m)
                                                    ? (m.value = Re)
                                                    : null),
                                              size: "small",
                                              label: "Zoosk",
                                            },
                                            null,
                                            8,
                                            ["checked"]
                                          ),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                },
                                8,
                                ["label"]
                              ),
                              F(
                                Pe,
                                { label: X.$i18n("THEME") },
                                {
                                  default: B(() => [
                                    F(we, null, {
                                      default: B(() => [
                                        F(
                                          ze,
                                          {
                                            type: "primary",
                                            size: "small",
                                            onClick:
                                              V[7] ||
                                              (V[7] = (Re) =>
                                                (l.value = "dark")),
                                            dashed: N(l) === "light",
                                          },
                                          {
                                            default: B(() => [
                                              Se(be(X.$i18n("DARK")), 1),
                                            ]),
                                            _: 1,
                                          },
                                          8,
                                          ["dashed"]
                                        ),
                                        F(
                                          ze,
                                          {
                                            type: "primary",
                                            size: "small",
                                            onClick:
                                              V[8] ||
                                              (V[8] = (Re) =>
                                                (l.value = "light")),
                                            dashed: N(l) === "dark",
                                          },
                                          {
                                            default: B(() => [
                                              Se(be(X.$i18n("LIGHT")), 1),
                                            ]),
                                            _: 1,
                                          },
                                          8,
                                          ["dashed"]
                                        ),
                                      ]),
                                      _: 1,
                                    }),
                                  ]),
                                  _: 1,
                                },
                                8,
                                ["label"]
                              ),
                              F(
                                Pe,
                                { label: X.$i18n("BROWSER_NOTIFICATION") },
                                {
                                  default: B(() => [
                                    F(we, null, {
                                      default: B(() => [
                                        F(
                                          Ne,
                                          {
                                            value: N(c),
                                            "onUpdate:value":
                                              V[9] ||
                                              (V[9] = (Re) =>
                                                xe(c) ? (c.value = Re) : null),
                                            size: "small",
                                            style: { "margin-right": "10px" },
                                            "aria-label": X.$i18n(
                                              "BROWSER_NOTIFICATION"
                                            ),
                                          },
                                          null,
                                          8,
                                          ["value", "aria-label"]
                                        ),
                                      ]),
                                      _: 1,
                                    }),
                                  ]),
                                  _: 1,
                                },
                                8,
                                ["label"]
                              ),
                              N(o) || N(s) || N(a)
                                ? (Ie(),
                                  He(
                                    Pe,
                                    {
                                      key: 0,
                                      label: X.$i18n("MIN_MAX_SWIPE_TIME"),
                                    },
                                    {
                                      default: B(() => [
                                        F(
                                          Fe,
                                          {
                                            value: N(S),
                                            "onUpdate:value":
                                              V[10] ||
                                              (V[10] = (Re) =>
                                                xe(S) ? (S.value = Re) : null),
                                            marks: O,
                                            size: "small",
                                            range: "",
                                            min: 0.25,
                                            max: 25,
                                            step: 0.25,
                                            "aria-label":
                                              X.$i18n("MIN_MAX_SWIPE_TIME"),
                                          },
                                          null,
                                          8,
                                          ["value", "aria-label"]
                                        ),
                                      ]),
                                      _: 1,
                                    },
                                    8,
                                    ["label"]
                                  ))
                                : et("", !0),
                              N(s) || N(a)
                                ? (Ie(),
                                  He(
                                    Pe,
                                    { key: 1, label: X.$i18n("SWIPE_BREAK") },
                                    {
                                      default: B(() => [
                                        F(Qe, null, {
                                          default: B(() => [
                                            F(
                                              Ne,
                                              {
                                                value: N(A),
                                                "onUpdate:value":
                                                  V[11] ||
                                                  (V[11] = (Re) =>
                                                    xe(A)
                                                      ? (A.value = Re)
                                                      : null),
                                                size: "small",
                                                style: {
                                                  "margin-right": "10px",
                                                },
                                                "aria-label":
                                                  X.$i18n("ENABLE_SWIPE_BREAK"),
                                              },
                                              null,
                                              8,
                                              ["value", "aria-label"]
                                            ),
                                            F(
                                              Fe,
                                              {
                                                value: N(I),
                                                "onUpdate:value":
                                                  V[12] ||
                                                  (V[12] = (Re) =>
                                                    xe(I)
                                                      ? (I.value = Re)
                                                      : null),
                                                marks: D,
                                                size: "small",
                                                range: "",
                                                min: 25,
                                                max: 500,
                                                step: 25,
                                                disabled: !N(A),
                                                "aria-label": X.$i18n(
                                                  "BREAK_BETWEEN_SWIPES"
                                                ),
                                              },
                                              null,
                                              8,
                                              [
                                                "value",
                                                "disabled",
                                                "aria-label",
                                              ]
                                            ),
                                          ]),
                                          _: 1,
                                        }),
                                      ]),
                                      _: 1,
                                    },
                                    8,
                                    ["label"]
                                  ))
                                : et("", !0),
                              N(s) || N(a)
                                ? (Ie(),
                                  He(
                                    Pe,
                                    {
                                      key: 2,
                                      label: X.$i18n("BREAK_DURATION"),
                                    },
                                    {
                                      default: B(() => [
                                        F(Qe, null, {
                                          default: B(() => [
                                            F(
                                              Fe,
                                              {
                                                value: N(L),
                                                "onUpdate:value":
                                                  V[13] ||
                                                  (V[13] = (Re) =>
                                                    xe(L)
                                                      ? (L.value = Re)
                                                      : null),
                                                marks: se,
                                                size: "small",
                                                range: "",
                                                min: 5,
                                                max: 3e3,
                                                step: 5,
                                                disabled: !N(A),
                                                "aria-label":
                                                  X.$i18n("BREAK_DURATION"),
                                              },
                                              null,
                                              8,
                                              [
                                                "value",
                                                "disabled",
                                                "aria-label",
                                              ]
                                            ),
                                          ]),
                                          _: 1,
                                        }),
                                      ]),
                                      _: 1,
                                    },
                                    8,
                                    ["label"]
                                  ))
                                : et("", !0),
                              N(s) || N(a)
                                ? (Ie(),
                                  He(
                                    Pe,
                                    {
                                      key: 3,
                                      label: X.$i18n(
                                        "RELOAD_PAGE_BETWEEN_SWIPES"
                                      ),
                                    },
                                    {
                                      default: B(() => [
                                        F(Qe, null, {
                                          default: B(() => [
                                            F(
                                              Ne,
                                              {
                                                value: N(x),
                                                "onUpdate:value":
                                                  V[14] ||
                                                  (V[14] = (Re) =>
                                                    xe(x)
                                                      ? (x.value = Re)
                                                      : null),
                                                size: "small",
                                                style: {
                                                  "margin-right": "10px",
                                                },
                                                "aria-label": X.$i18n(
                                                  "ENABLE_RELOAD_PAGE_BETWEEN_SWIPES"
                                                ),
                                              },
                                              null,
                                              8,
                                              ["value", "aria-label"]
                                            ),
                                            F(
                                              Fe,
                                              {
                                                value: N(E),
                                                "onUpdate:value":
                                                  V[15] ||
                                                  (V[15] = (Re) =>
                                                    xe(E)
                                                      ? (E.value = Re)
                                                      : null),
                                                marks: Y,
                                                size: "small",
                                                range: "",
                                                min: 25,
                                                max: 500,
                                                step: 25,
                                                disabled: !N(x),
                                                "aria-label": X.$i18n(
                                                  "RELOAD_PAGE_BETWEEN_SWIPES"
                                                ),
                                              },
                                              null,
                                              8,
                                              [
                                                "value",
                                                "disabled",
                                                "aria-label",
                                              ]
                                            ),
                                          ]),
                                          _: 1,
                                        }),
                                      ]),
                                      _: 1,
                                    },
                                    8,
                                    ["label"]
                                  ))
                                : et("", !0),
                              N(s) || N(a)
                                ? (Ie(),
                                  He(
                                    Pe,
                                    {
                                      key: 4,
                                      label: X.$i18n("DELAY_AFTER_PAGE_RELOAD"),
                                    },
                                    {
                                      default: B(() => [
                                        F(Qe, null, {
                                          default: B(() => [
                                            F(
                                              Ne,
                                              {
                                                value: N(w),
                                                "onUpdate:value":
                                                  V[16] ||
                                                  (V[16] = (Re) =>
                                                    xe(w)
                                                      ? (w.value = Re)
                                                      : null),
                                                size: "small",
                                                style: {
                                                  "margin-right": "10px",
                                                },
                                                "aria-label": X.$i18n(
                                                  "ENABLE_DELAY_AFTER_PAGE_RELOAD"
                                                ),
                                              },
                                              null,
                                              8,
                                              ["value", "aria-label"]
                                            ),
                                            F(
                                              Fe,
                                              {
                                                value: N(v),
                                                "onUpdate:value":
                                                  V[17] ||
                                                  (V[17] = (Re) =>
                                                    xe(v)
                                                      ? (v.value = Re)
                                                      : null),
                                                marks: se,
                                                size: "small",
                                                range: "",
                                                min: 5,
                                                max: 3e3,
                                                step: 5,
                                                disabled: !N(w),
                                                "aria-label": X.$i18n(
                                                  "DELAY_AFTER_PAGE_RELOAD"
                                                ),
                                              },
                                              null,
                                              8,
                                              [
                                                "value",
                                                "disabled",
                                                "aria-label",
                                              ]
                                            ),
                                          ]),
                                          _: 1,
                                        }),
                                      ]),
                                      _: 1,
                                    },
                                    8,
                                    ["label"]
                                  ))
                                : et("", !0),
                              N(o) || N(s) || N(a)
                                ? (Ie(),
                                  He(
                                    Pe,
                                    {
                                      key: 5,
                                      label: X.$i18n("RANDOM_USAGE_SIMULATION"),
                                    },
                                    {
                                      default: B(() => [
                                        F(Qe, null, {
                                          default: B(() => [
                                            F(
                                              Ne,
                                              {
                                                value: N(y),
                                                "onUpdate:value":
                                                  V[18] ||
                                                  (V[18] = (Re) =>
                                                    xe(y)
                                                      ? (y.value = Re)
                                                      : null),
                                                size: "small",
                                                style: {
                                                  "margin-right": "10px",
                                                },
                                                "aria-label": X.$i18n(
                                                  "ENABLE_RANDOM_USAGE_SIMULATION"
                                                ),
                                              },
                                              null,
                                              8,
                                              ["value", "aria-label"]
                                            ),
                                            F(
                                              Fe,
                                              {
                                                value: N(T),
                                                "onUpdate:value":
                                                  V[19] ||
                                                  (V[19] = (Re) =>
                                                    xe(T)
                                                      ? (T.value = Re)
                                                      : null),
                                                marks: de,
                                                size: "small",
                                                range: "",
                                                min: 1,
                                                max: 10,
                                                step: 1,
                                                disabled: !N(y),
                                                "aria-label": X.$i18n(
                                                  "RANDOM_USAGE_SIMULATION"
                                                ),
                                              },
                                              null,
                                              8,
                                              [
                                                "value",
                                                "disabled",
                                                "aria-label",
                                              ]
                                            ),
                                          ]),
                                          _: 1,
                                        }),
                                      ]),
                                      _: 1,
                                    },
                                    8,
                                    ["label"]
                                  ))
                                : et("", !0),
                              N(s) || N(a)
                                ? (Ie(),
                                  He(
                                    Pe,
                                    { key: 6, label: X.$i18n("LOCATION") },
                                    {
                                      default: B(() => [
                                        F(
                                          we,
                                          { vertical: "" },
                                          {
                                            default: B(() => [
                                              At(
                                                "div",
                                                {
                                                  ref_key: "mapRoot",
                                                  ref: Z,
                                                  class: "map",
                                                },
                                                null,
                                                512
                                              ),
                                              F(Qe, null, {
                                                default: B(() => [
                                                  F(
                                                    It,
                                                    {
                                                      value: N(_),
                                                      "onUpdate:value":
                                                        V[20] ||
                                                        (V[20] = (Re) =>
                                                          xe(_)
                                                            ? (_.value = Re)
                                                            : null),
                                                      size: "small",
                                                      placeholder: "Longitude",
                                                      "aria-label":
                                                        X.$i18n("LONGITUDE"),
                                                    },
                                                    null,
                                                    8,
                                                    ["value", "aria-label"]
                                                  ),
                                                  F(
                                                    It,
                                                    {
                                                      value: N(R),
                                                      "onUpdate:value":
                                                        V[21] ||
                                                        (V[21] = (Re) =>
                                                          xe(R)
                                                            ? (R.value = Re)
                                                            : null),
                                                      size: "small",
                                                      placeholder: "Latitude",
                                                      "aria-label":
                                                        X.$i18n("LATITUDE"),
                                                    },
                                                    null,
                                                    8,
                                                    ["value", "aria-label"]
                                                  ),
                                                ]),
                                                _: 1,
                                              }),
                                              F(
                                                rt,
                                                {
                                                  value: ke.value,
                                                  "onUpdate:value":
                                                    V[22] ||
                                                    (V[22] = (Re) =>
                                                      (ke.value = Re)),
                                                  "input-props": {
                                                    autocomplete: "disabled",
                                                  },
                                                  options: H.value,
                                                  placeholder: X.$i18n("CITY"),
                                                  clearable: "",
                                                  "on-select": ae,
                                                },
                                                null,
                                                8,
                                                [
                                                  "value",
                                                  "options",
                                                  "placeholder",
                                                ]
                                              ),
                                              F(
                                                ze,
                                                { type: "error", onClick: re },
                                                {
                                                  default: B(() => [
                                                    Se(be(X.$i18n("UNSET")), 1),
                                                  ]),
                                                  _: 1,
                                                }
                                              ),
                                            ]),
                                            _: 1,
                                          }
                                        ),
                                      ]),
                                      _: 1,
                                    },
                                    8,
                                    ["label"]
                                  ))
                                : et("", !0),
                              F(
                                Pe,
                                {
                                  label:
                                    X.$i18n("IMPORT") + "/" + X.$i18n("EXPORT"),
                                },
                                {
                                  default: B(() => [
                                    F(we, null, {
                                      default: B(() => [
                                        N(s) || N(a)
                                          ? (Ie(),
                                            He(
                                              ln,
                                              {
                                                key: 0,
                                                ref: "upload",
                                                accept: ".json",
                                                "default-upload": !0,
                                                "custom-request": ee,
                                              },
                                              {
                                                default: B(() => [
                                                  F(
                                                    ze,
                                                    {
                                                      type: "warning",
                                                      size: "small",
                                                    },
                                                    {
                                                      default: B(() => [
                                                        Se(
                                                          be(X.$i18n("IMPORT")),
                                                          1
                                                        ),
                                                      ]),
                                                      _: 1,
                                                    }
                                                  ),
                                                ]),
                                                _: 1,
                                              },
                                              512
                                            ))
                                          : et("", !0),
                                        F(
                                          ze,
                                          {
                                            type: "primary",
                                            size: "small",
                                            onClick: ue,
                                          },
                                          {
                                            default: B(() => [
                                              Se(be(X.$i18n("EXPORT")), 1),
                                            ]),
                                            _: 1,
                                          }
                                        ),
                                      ]),
                                      _: 1,
                                    }),
                                  ]),
                                  _: 1,
                                },
                                8,
                                ["label"]
                              ),
                              F(
                                Pe,
                                { label: X.$i18n("CLOUD_SYNC") },
                                {
                                  default: B(() => [
                                    F(we, null, {
                                      default: B(() => [
                                        F(
                                          ze,
                                          {
                                            type: "warning",
                                            size: "small",
                                            onClick: K,
                                          },
                                          {
                                            default: B(() => [
                                              Se(be(X.$i18n("SAVE")), 1),
                                            ]),
                                            _: 1,
                                          }
                                        ),
                                        F(
                                          ze,
                                          {
                                            type: "primary",
                                            size: "small",
                                            onClick: _e,
                                          },
                                          {
                                            default: B(() => [
                                              Se(be(X.$i18n("LOAD")), 1),
                                            ]),
                                            _: 1,
                                          }
                                        ),
                                      ]),
                                      _: 1,
                                    }),
                                  ]),
                                  _: 1,
                                },
                                8,
                                ["label"]
                              ),
                              F(
                                Pe,
                                { label: X.$i18n("DEBUGGING_INFORMATION") },
                                {
                                  default: B(() => [
                                    F(we, null, {
                                      default: B(() => [
                                        F(
                                          Ne,
                                          {
                                            value: N(u),
                                            "onUpdate:value": [
                                              V[23] ||
                                                (V[23] = (Re) =>
                                                  xe(u)
                                                    ? (u.value = Re)
                                                    : null),
                                              pe,
                                            ],
                                            size: "small",
                                            style: { "margin-right": "10px" },
                                            "aria-label": X.$i18n(
                                              "DEBUGGING_INFORMATION"
                                            ),
                                          },
                                          null,
                                          8,
                                          ["value", "aria-label"]
                                        ),
                                      ]),
                                      _: 1,
                                    }),
                                  ]),
                                  _: 1,
                                },
                                8,
                                ["label"]
                              ),
                            ]),
                            _: 1,
                          }
                        ),
                      ]),
                      _: 1,
                    }
                  ),
                  F(
                    ve,
                    { "label-placement": "top", column: 1 },
                    {
                      default: B(() => [
                        F(Pe, null, {
                          default: B(() => [
                            F(we, null, {
                              default: B(() => [
                                F(
                                  ze,
                                  { size: "small", onClick: fe },
                                  {
                                    default: B(() => [
                                      Se(be(X.$i18n("BACK")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                                F(
                                  ze,
                                  { type: "error", size: "small", onClick: ie },
                                  {
                                    default: B(() => [
                                      Se(be(X.$i18n("RESET_SETTINGS")), 1),
                                    ]),
                                    _: 1,
                                  }
                                ),
                              ]),
                              _: 1,
                            }),
                          ]),
                          _: 1,
                        }),
                      ]),
                      _: 1,
                    }
                  ),
                ],
                64
              )
            );
          }
        );
      },
    },
    Yj = Xj(Kj, [["__scopeId", "data-v-6c5a5215"]]),
    Fw = V6(),
    qj = $N();
  Fw.use((t) => qj(t));
  const Fo = X2(hB);
  Fo.config.globalProperties.$i18n = wt.i18n.getMessage;
  Fo.use(Fw);
  const Zj = [
      { name: "settings", path: "/", component: UN },
      { name: "stats", path: "/stats", component: XN },
      { name: "subscription", path: "/subscription", component: iH },
      { name: "rate", path: "/rate", component: oH },
      { name: "progress", path: "/progress", component: sH },
      { name: "options", path: "/options", component: Yj },
    ],
    Jj = ZR({ history: fR(), routes: Zj });
  Fo.use(Jj);
  Fo.use(Fc, AN);
  Fo.provide("axios", Fo.config.globalProperties.axios);
  Fo.mount("#app");
});
export default Qj();
